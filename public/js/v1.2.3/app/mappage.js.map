{
  "version": 3,
  "sources": [
    "../lib/jquery-3.1.1.min.js",
    "init.js",
    "config/system_effect.js",
    "config/signature_type.js",
    "../lib/bootstrap.min.js",
    "../lib/bootbox.min.js",
    "../lib/localforage.min.js",
    "../lib/velocity.min.js",
    "../lib/velocity.ui.min.js",
    "../lib/jquery.mousewheel.min.js",
    "../lib/jquery.mCustomScrollbar.min.js",
    "../lib/validator.min.js",
    "../lib/jquery.easypiechart.min.js",
    "../lib/jquery.hoverIntent.minified.js",
    "../lib/bootstrap-confirmation.js",
    "../lib/bootstrap2-toggle.min.js",
    "util.js",
    "../lib/mustache.min.js",
    "render.js",
    "logging.js",
    "map/util.js",
    "../lib/requirejs/text.js",
    "text!img/logo.svg!strip",
    "../../../templates/modules/header.html!text",
    "../../../templates/modules/footer.html!text",
    "ui/dialog/notification.js",
    "ui/dialog/stats.js",
    "ui/dialog/map_info.js",
    "ui/dialog/account_settings.js",
    "ui/dialog/manual.js",
    "key.js",
    "ui/dialog/shortcuts.js",
    "ui/dialog/map_settings.js",
    "ui/dialog/system_effects.js",
    "ui/dialog/jump_info.js",
    "ui/dialog/delete_account.js",
    "../lib/jquery.lazylinepainter-1.5.1.min.js",
    "ui/logo.js",
    "ui/dialog/credit.js",
    "../lib/bootstrap-editable.min.js",
    "../lib/slidebars.js",
    "map/system.js",
    "../lib/dom.jsPlumb-1.7.6.js",
    "../lib/farahey-0.5.js",
    "map/magnetizing.js",
    "map/scrollbar.js",
    "../lib/jquery.dragToSelect.js",
    "../lib/select2.min.js",
    "map/contextmenu.js",
    "map/overlay.js",
    "map/local.js",
    "map/map.js",
    "counter.js",
    "ui/system_info.js",
    "../lib/raphael-min.js",
    "../lib/morris.min.js",
    "ui/system_graph.js",
    "ui/system_signature.js",
    "ui/system_route.js",
    "ui/system_killboard.js",
    "../lib/datatables/DataTables-1.10.12/js/jquery.dataTables.min.js",
    "../lib/datatables/Buttons-1.2.1/js/dataTables.buttons.min.js",
    "../lib/datatables/Buttons-1.2.1/js/buttons.html5.min.js",
    "../lib/datatables/Responsive-2.1.0/js/dataTables.responsive.min.js",
    "../lib/datatables/Select-1.2.0/js/dataTables.select.min.js",
    "module_map.js",
    "page.js",
    "map/worker.js",
    "ui/form_element.js",
    "mappage.js"
  ],
  "names": [],
  "mappingsrctraA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACTA;AACA;AACA;AACA;AACA;AACA;AACA,ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACPA;AACA;AACA;AACA;AACA,ACJA;AACA,ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA,ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxpEA;AACA,ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrnhpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvYA;AACA,ACDA;AACA,ACDA;AACA,ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxvsnbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClnotpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACntJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnrjpplwxkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3zrgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdlxrlevKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpwrp
  "file": "app/mappage.js",
  "sourcesContent": [
    "/*! jQuery v3.1.1 | (c) jQuery Foundation | jquery.org/license */\n!function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){\"use strict\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\"script\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\"3.1.1\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=r.isArray(d)))?(e?(e=!1,f=c&&r.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:\"jQuery\"+(q+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===r.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return(\"number\"===b||\"string\"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||\"[object Object]\"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,\"constructor\")&&b.constructor,\"function\"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?j[k.call(a)]||\"object\":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,\"ms-\").replace(u,v)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(s,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,\"string\"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if(\"string\"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),\"function\"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){j[\"[object \"+b+\"]\"]=b.toLowerCase()});function w(a){var b=!!a&&\"length\"in a&&a.length,c=r.type(a);return\"function\"!==c&&!r.isWindow(a)&&(\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",K=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",L=\"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",M=\"\\\\[\"+K+\"*(\"+L+\")(?:\"+K+\"*([*^$|!~]?=)\"+K+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+L+\"))|)\"+K+\"*\\\\]\",N=\":(\"+L+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+M+\")*)|.*)\\\\)|)\",O=new RegExp(K+\"+\",\"g\"),P=new RegExp(\"^\"+K+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+K+\"+$\",\"g\"),Q=new RegExp(\"^\"+K+\"*,\"+K+\"*\"),R=new RegExp(\"^\"+K+\"*([>+~]|\"+K+\")\"+K+\"*\"),S=new RegExp(\"=\"+K+\"*([^\\\\]'\\\"]*?)\"+K+\"*\\\\]\",\"g\"),T=new RegExp(N),U=new RegExp(\"^\"+L+\"$\"),V={ID:new RegExp(\"^#(\"+L+\")\"),CLASS:new RegExp(\"^\\\\.(\"+L+\")\"),TAG:new RegExp(\"^(\"+L+\"|[*])\"),ATTR:new RegExp(\"^\"+M),PSEUDO:new RegExp(\"^\"+N),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+K+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+K+\"*(?:([+-]|)\"+K+\"*(\\\\d+)|))\"+K+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+J+\")$\",\"i\"),needsContext:new RegExp(\"^\"+K+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+K+\"*((?:-\\\\d)?\\\\d*)\"+K+\"*\\\\)|)(?=[^-]|$)\",\"i\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\d$/i,Y=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,$=/[+~]/,_=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+K+\"?|(\"+K+\")|.)\",\"ig\"),aa=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ca=function(a,b){return b?\"\\0\"===a?\"\\ufffd\":a.slice(0,-1)+\"\\\\\"+a.charCodeAt(a.length-1).toString(16)+\" \":\"\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&(\"form\"in a||\"label\"in a)},{dir:\"parentNode\",next:\"legend\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(ba,ca):b.setAttribute(\"id\",k=u),o=g(a),h=o.length;while(h--)o[h]=\"#\"+k+\" \"+sa(o[h]);r=o.join(\",\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(P,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"fieldset\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return function(b){return\"form\"in b?b.parentNode&&b.disabled===!1?\"label\"in b?\"label\"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:\"label\"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\"HTML\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\"id\")===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\"undefined\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+K+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+K+\"*(?:value|\"+J+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){a.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+K+\"*[*^$|!~]?=\"),2!==a.querySelectorAll(\":enabled\").length&&q.push(\":enabled\",\":disabled\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\":disabled\").length&&q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"*\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",N)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\"\").replace(ba,ca)},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\"\").replace(_,aa),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+K+\")\"+a+\"(\"+K+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:!b||(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(O,\" \")+\" \").indexOf(c)>-1:\"|=\"===b&&(e===c||e.slice(0,c.length+1)===c+\"-\"))}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d=\"\";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&\"parentNode\"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(P,\"$1\"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m=\"function\"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&\"ID\"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"fieldset\"))}),ja(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){if(!c)return a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){if(!c&&\"input\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\":\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i,C=/^.[^:#\\[\\.,]*$/;function D(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):\"string\"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):C.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\"string\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(D(this,a||[],!1))},not:function(a){return this.pushStack(D(this,a||[],!0))},is:function(a){return!!D(this,\"string\"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var E,F=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,\"string\"==typeof a){if(e=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g=\"string\"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\"parentNode\")},parentsUntil:function(a,b,c){return y(a,\"parentNode\",c)},next:function(a){return J(a,\"nextSibling\")},prev:function(a){return J(a,\"previousSibling\")},nextAll:function(a){return y(a,\"nextSibling\")},prevAll:function(a){return y(a,\"previousSibling\")},nextUntil:function(a,b,c){return y(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return y(a,\"previousSibling\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/[^\\x20\\t\\r\\n\\f]+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\"string\"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\"string\"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[[\"notify\",\"progress\",r.Callbacks(\"memory\"),r.Callbacks(\"memory\"),2],[\"resolve\",\"done\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),1,\"rejected\"]],d=\"pending\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\"catch\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\"With\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError(\"Thenable self-resolution\");j=a&&(\"object\"==typeof a||\"function\"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,M,e),g(f,c,N,e)):(f++,j.call(a,g(f,c,M,e),g(f,c,N,e),g(f,c,M,c.notifyWith))):(d!==M&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\"With\"](this===f?void 0:this,arguments),this},f[b[0]+\"With\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(O(a,g.done(h(c)).resolve,g.reject),\"pending\"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)O(e[c],h(c),g.reject);return g.promise()}});var P=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&P.test(b.name)&&a.console.warn(\"jQuery.Deferred exception: \"+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var Q=r.Deferred();r.fn.ready=function(a){return Q.then(a)[\"catch\"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,holdReady:function(a){a?r.readyWait++:r.ready(!0)},ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener(\"DOMContentLoaded\",R),\n    a.removeEventListener(\"load\",R),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\"DOMContentLoaded\",R),a.addEventListener(\"load\",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},T=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function U(){this.expando=r.expando+U.uid++}U.uid=1,U.prototype={cache:function(a){var b=a[this.expando];return b||(b={},T(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\"string\"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&\"string\"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){r.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(K)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var V=new U,W=new U,X=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,Y=/[A-Z]/g;function Z(a){return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:a===+a+\"\"?+a:X.test(a)?JSON.parse(a):a)}function $(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(Y,\"-$&\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=Z(c)}catch(e){}W.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return W.hasData(a)||V.hasData(a)},data:function(a,b,c){return W.access(a,b,c)},removeData:function(a,b){W.remove(a,b)},_data:function(a,b,c){return V.access(a,b,c)},_removeData:function(a,b){V.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=W.get(f),1===f.nodeType&&!V.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=r.camelCase(d.slice(5)),$(f,d,e[d])));V.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){W.set(this,a)}):S(this,function(b){var c;if(f&&void 0===b){if(c=W.get(f,a),void 0!==c)return c;if(c=$(f,a),void 0!==c)return c}else this.each(function(){W.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks(\"once memory\").add(function(){V.remove(a,[b+\"queue\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=V.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var _=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,aa=new RegExp(\"^(?:([+-])=|)(\"+_+\")([a-z%]*)$\",\"i\"),ba=[\"Top\",\"Right\",\"Bottom\",\"Left\"],ca=function(a,b){return a=b||a,\"none\"===a.style.display||\"\"===a.style.display&&r.contains(a.ownerDocument,a)&&\"none\"===r.css(a,\"display\")},da=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function ea(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,\"\")},i=h(),j=c&&c[3]||(r.cssNumber[b]?\"\":\"px\"),k=(r.cssNumber[b]||\"px\"!==j&&+i)&&aa.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var fa={};function ga(a){var b,c=a.ownerDocument,d=a.nodeName,e=fa[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,\"display\"),b.parentNode.removeChild(b),\"none\"===e&&(e=\"block\"),fa[d]=e,e)}function ha(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?(\"none\"===c&&(e[f]=V.get(d,\"display\")||null,e[f]||(d.style.display=\"\")),\"\"===d.style.display&&ca(d)&&(e[f]=ga(d))):\"none\"!==c&&(e[f]=\"none\",V.set(d,\"display\",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ha(this,!0)},hide:function(){return ha(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){ca(this)?r(this).show():r(this).hide()})}});var ia=/^(?:checkbox|radio)$/i,ja=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i,ka=/^$|\\/(?:java|ecma)script/i,la={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};la.optgroup=la.option,la.tbody=la.tfoot=la.colgroup=la.caption=la.thead,la.th=la.td;function ma(a,b){var c;return c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[],void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function na(a,b){for(var c=0,d=a.length;c<d;c++)V.set(a[c],\"globalEval\",!b||V.get(b[c],\"globalEval\"))}var oa=/<|&#?\\w+;/;function pa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if(\"object\"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(oa.test(f)){g=g||l.appendChild(b.createElement(\"div\")),h=(ja.exec(f)||[\"\",\"\"])[1].toLowerCase(),i=la[h]||la._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=\"\"}else m.push(b.createTextNode(f));l.textContent=\"\",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=ma(l.appendChild(f),\"script\"),j&&na(g),c){k=0;while(f=g[k++])ka.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var qa=d.documentElement,ra=/^key/,sa=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ta=/^([^.]*)(?:\\.(.+)|)/;function ua(){return!0}function va(){return!1}function wa(){try{return d.activeElement}catch(a){}}function xa(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)xa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=va;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(qa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\"undefined\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\".\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)if(h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+o.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,\"handle events\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,\"events\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!(\"click\"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&(\"click\"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+\" \",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==wa()&&this.focus)return this.focus(),!1},delegateType:\"focusin\"},blur:{trigger:function(){if(this===wa()&&this.blur)return this.blur(),!1},delegateType:\"focusout\"},click:{trigger:function(){if(\"checkbox\"===this.type&&this.click&&r.nodeName(this,\"input\"))return this.click(),!1},_default:function(a){return r.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ua:va,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:va,isPropagationStopped:va,isImmediatePropagationStopped:va,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ua,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ua,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ua,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&ra.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&sa.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return xa(this,a,b,c,d)},one:function(a,b,c,d){return xa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\"function\"!=typeof b||(c=b,b=void 0),c===!1&&(c=va),this.each(function(){r.event.remove(this,a,c,b)})}});var ya=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,za=/<script|<style|<link/i,Aa=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ba=/^true\\/(.*)/,Ca=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function Da(a,b){return r.nodeName(a,\"table\")&&r.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a:a}function Ea(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function Fa(a){var b=Ba.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function Ga(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(V.hasData(a)&&(f=V.access(a),g=V.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}W.hasData(a)&&(h=W.access(a),i=r.extend({},h),W.set(b,i))}}function Ha(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&ia.test(a.type)?b.checked=a.checked:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}function Ia(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&\"string\"==typeof q&&!o.checkClone&&Aa.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ia(f,b,c,d)});if(m&&(e=pa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(ma(e,\"script\"),Ea),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,ma(j,\"script\"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Fa),l=0;l<i;l++)j=h[l],ka.test(j.type||\"\")&&!V.access(j,\"globalEval\")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Ca,\"\"),k))}return a}function Ja(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(ma(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&na(ma(d,\"script\")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(ya,\"<$1></$2>\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=ma(h),f=ma(a),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);if(b)if(c)for(f=f||ma(a),g=g||ma(h),d=0,e=f.length;d<e;d++)Ga(f[d],g[d]);else Ga(a,h);return g=ma(h,\"script\"),g.length>0&&na(g,!i&&ma(a,\"script\")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(T(c)){if(b=c[V.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[V.expando]=void 0}c[W.expando]&&(c[W.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ja(this,a,!0)},remove:function(a){return Ja(this,a)},text:function(a){return S(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.appendChild(a)}})},prepend:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(ma(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return S(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!za.test(a)&&!la[(ja.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(ma(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ia(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(ma(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var Ka=/^margin/,La=new RegExp(\"^(\"+_+\")(?!px)[a-z%]+$\",\"i\"),Ma=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText=\"box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",i.innerHTML=\"\",qa.appendChild(h);var b=a.getComputedStyle(i);c=\"1%\"!==b.top,g=\"2px\"===b.marginLeft,e=\"4px\"===b.width,i.style.marginRight=\"50%\",f=\"4px\"===b.marginRight,qa.removeChild(h),i=null}}var c,e,f,g,h=d.createElement(\"div\"),i=d.createElement(\"div\");i.style&&(i.style.backgroundClip=\"content-box\",i.cloneNode(!0).style.backgroundClip=\"\",o.clearCloneStyle=\"content-box\"===i.style.backgroundClip,h.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Na(a,b,c){var d,e,f,g,h=a.style;return c=c||Ma(a),c&&(g=c.getPropertyValue(b)||c[b],\"\"!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&La.test(g)&&Ka.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function Oa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Pa=/^(none|table(?!-c[ea]).+)/,Qa={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ra={letterSpacing:\"0\",fontWeight:\"400\"},Sa=[\"Webkit\",\"Moz\",\"ms\"],Ta=d.createElement(\"div\").style;function Ua(a){if(a in Ta)return a;var b=a[0].toUpperCase()+a.slice(1),c=Sa.length;while(c--)if(a=Sa[c]+b,a in Ta)return a}function Va(a,b,c){var d=aa.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\"px\"):b}function Wa(a,b,c,d,e){var f,g=0;for(f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0;f<4;f+=2)\"margin\"===c&&(g+=r.css(a,c+ba[f],!0,e)),d?(\"content\"===c&&(g-=r.css(a,\"padding\"+ba[f],!0,e)),\"margin\"!==c&&(g-=r.css(a,\"border\"+ba[f]+\"Width\",!0,e))):(g+=r.css(a,\"padding\"+ba[f],!0,e),\"padding\"!==c&&(g+=r.css(a,\"border\"+ba[f]+\"Width\",!0,e)));return g}function Xa(a,b,c){var d,e=!0,f=Ma(a),g=\"border-box\"===r.css(a,\"boxSizing\",!1,f);if(a.getClientRects().length&&(d=a.getBoundingClientRect()[b]),d<=0||null==d){if(d=Na(a,b,f),(d<0||null==d)&&(d=a.style[b]),La.test(d))return d;e=g&&(o.boxSizingReliable()||d===a.style[b]),d=parseFloat(d)||0}return d+Wa(a,b,c||(g?\"border\":\"content\"),e,f)+\"px\"}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Na(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=a.style;return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=aa.exec(c))&&e[1]&&(c=ea(a,b,e),f=\"number\"),null!=c&&c===c&&(\"number\"===f&&(c+=e&&e[3]||(r.cssNumber[h]?\"\":\"px\")),o.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b);return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Na(a,b,d)),\"normal\"===e&&b in Ra&&(e=Ra[b]),\"\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each([\"height\",\"width\"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Pa.test(r.css(a,\"display\"))||a.getClientRects().length&&a.getBoundingClientRect().width?Xa(a,b,d):da(a,Qa,function(){return Xa(a,b,d)})},set:function(a,c,d){var e,f=d&&Ma(a),g=d&&Wa(a,b,d,\"border-box\"===r.css(a,\"boxSizing\",!1,f),f);return g&&(e=aa.exec(c))&&\"px\"!==(e[3]||\"px\")&&(a.style[b]=c,c=r.css(a,b)),Va(a,c,g)}}}),r.cssHooks.marginLeft=Oa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Na(a,\"marginLeft\"))||a.getBoundingClientRect().left-da(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\"px\"}),r.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];d<4;d++)e[a+ba[d]+b]=f[d]||f[d-2]||f[0];return e}},Ka.test(a)||(r.cssHooks[a+b].set=Va)}),r.fn.extend({css:function(a,b){return S(this,function(a,b,c){var d,e,f={},g=0;if(r.isArray(b)){for(d=Ma(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function Ya(a,b,c,d,e){return new Ya.prototype.init(a,b,c,d,e)}r.Tween=Ya,Ya.prototype={constructor:Ya,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Ya.propHooks[this.prop];return a&&a.get?a.get(this):Ya.propHooks._default.get(this)},run:function(a){var b,c=Ya.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ya.propHooks._default.set(this),this}},Ya.prototype.init.prototype=Ya.prototype,Ya.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},Ya.propHooks.scrollTop=Ya.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\"swing\"},r.fx=Ya.prototype.init,r.fx.step={};var Za,$a,_a=/^(?:toggle|show|hide)$/,ab=/queueHooks$/;function bb(){$a&&(a.requestAnimationFrame(bb),r.fx.tick())}function cb(){return a.setTimeout(function(){Za=void 0}),Za=r.now()}function db(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ba[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function eb(a,b,c){for(var d,e=(hb.tweeners[b]||[]).concat(hb.tweeners[\"*\"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function fb(a,b,c){var d,e,f,g,h,i,j,k,l=\"width\"in b||\"height\"in b,m=this,n={},o=a.style,p=a.nodeType&&ca(a),q=V.get(a,\"fxshow\");c.queue||(g=r._queueHooks(a,\"fx\"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,\"fx\").length||g.empty.fire()})}));for(d in b)if(e=b[d],_a.test(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=V.get(a,\"display\")),k=r.css(a,\"display\"),\"none\"===k&&(j?k=j:(ha([a],!0),j=a.style.display||j,k=r.css(a,\"display\"),ha([a]))),(\"inline\"===k||\"inline-block\"===k&&null!=j)&&\"none\"===r.css(a,\"float\")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j=\"none\"===k?\"\":k)),o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?\"hidden\"in q&&(p=q.hidden):q=V.access(a,\"fxshow\",{display:j}),f&&(q.hidden=!p),p&&ha([a],!0),m.done(function(){p||ha([a]),V.remove(a,\"fxshow\");for(d in n)r.style(a,d,n[d])})),i=eb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function gb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],r.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function hb(a,b,c){var d,e,f=0,g=hb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Za||cb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:Za||cb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(gb(k,j.opts.specialEasing);f<g;f++)if(d=hb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,eb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}r.Animation=r.extend(hb,{tweeners:{\"*\":[function(a,b){var c=this.createTween(a,b);return ea(c.elem,a,aa.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=[\"*\"]):a=a.match(K);for(var c,d=0,e=a.length;d<e;d++)c=a[d],hb.tweeners[c]=hb.tweeners[c]||[],hb.tweeners[c].unshift(b)},prefilters:[fb],prefilter:function(a,b){b?hb.prefilters.unshift(a):hb.prefilters.push(a)}}),r.speed=function(a,b,c){var e=a&&\"object\"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off||d.hidden?e.duration=0:\"number\"!=typeof e.duration&&(e.duration in r.fx.speeds?e.duration=r.fx.speeds[e.duration]:e.duration=r.fx.speeds._default),null!=e.queue&&e.queue!==!0||(e.queue=\"fx\"),e.old=e.complete,e.complete=function(){r.isFunction(e.old)&&e.old.call(this),e.queue&&r.dequeue(this,e.queue)},e},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(ca).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=hb(this,r.extend({},a),f);(e||V.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=r.timers,g=V.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&ab.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=V.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(db(b,!0),a,d,e)}}),r.each({slideDown:db(\"show\"),slideUp:db(\"hide\"),slideToggle:db(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(Za=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),Za=void 0},r.fx.timer=function(a){r.timers.push(a),a()?r.fx.start():r.timers.pop()},r.fx.interval=13,r.fx.start=function(){$a||($a=a.requestAnimationFrame?a.requestAnimationFrame(bb):a.setInterval(r.fx.tick,r.fx.interval))},r.fx.stop=function(){a.cancelAnimationFrame?a.cancelAnimationFrame($a):a.clearInterval($a),$a=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||\"fx\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\"input\"),b=d.createElement(\"select\"),c=b.appendChild(d.createElement(\"option\"));a.type=\"checkbox\",o.checkOn=\"\"!==a.value,o.optSelected=c.selected,a=d.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",o.radioValue=\"t\"===a.value}();var ib,jb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return S(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\"undefined\"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?ib:void 0)),\n        void 0!==c?null===c?void r.removeAttr(a,b):e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\"\"),c):e&&\"get\"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&\"radio\"===b&&r.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(K);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),ib={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=jb[b]||r.find.attr;jb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=jb[g],jb[g]=e,e=null!=c(a,b,d)?g:null,jb[g]=f),e}});var kb=/^(?:input|select|textarea|button)$/i,lb=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return S(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,\"tabindex\");return b?parseInt(b,10):kb.test(a.nodeName)||lb.test(a.nodeName)&&a.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){r.propFix[this.toLowerCase()]=this});function mb(a){var b=a.match(K)||[];return b.join(\" \")}function nb(a){return a.getAttribute&&a.getAttribute(\"class\")||\"\"}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,nb(this)))});if(\"string\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\" \"+mb(e)+\" \"){g=0;while(f=b[g++])d.indexOf(\" \"+f+\" \")<0&&(d+=f+\" \");h=mb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,nb(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if(\"string\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\" \"+mb(e)+\" \"){g=0;while(f=b[g++])while(d.indexOf(\" \"+f+\" \")>-1)d=d.replace(\" \"+f+\" \",\" \");h=mb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,nb(this),b),b)}):this.each(function(){var b,d,e,f;if(\"string\"===c){d=0,e=r(this),f=a.match(K)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\"boolean\"!==c||(b=nb(this),b&&V.set(this,\"__className__\",b),this.setAttribute&&this.setAttribute(\"class\",b||a===!1?\"\":V.get(this,\"__className__\")||\"\"))})},hasClass:function(a){var b,c,d=0;b=\" \"+a+\" \";while(c=this[d++])if(1===c.nodeType&&(\" \"+mb(nb(c))+\" \").indexOf(b)>-1)return!0;return!1}});var ob=/\\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":r.isArray(e)&&(e=r.map(e,function(a){return null==a?\"\":a+\"\"})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(ob,\"\"):null==c?\"\":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,\"value\");return null!=b?b:mb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g=\"select-one\"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!r.nodeName(c.parentNode,\"optgroup\"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each([\"radio\",\"checkbox\"],function(){r.valHooks[this]={set:function(a,b){if(r.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})});var pb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,\"type\")?b.type:b,q=l.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!pb.test(p+r.event.triggered)&&(p.indexOf(\".\")>-1&&(q=p.split(\".\"),p=q.shift(),q.sort()),k=p.indexOf(\":\")<0&&\"on\"+p,b=b[r.expando]?b:new r.Event(p,\"object\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join(\".\"),b.rnamespace=b.namespace?new RegExp(\"(^|\\\\.)\"+q.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,pb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(V.get(h,\"events\")||{})[b.type]&&V.get(h,\"handle\"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&T(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!T(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin=\"onfocusin\"in a,o.focusin||r.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=V.access(d,b);e||d.addEventListener(a,c,!0),V.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=V.access(d,b)-1;e?V.access(d,b,e):(d.removeEventListener(a,c,!0),V.remove(d,b))}}});var qb=a.location,rb=r.now(),sb=/\\?/;r.parseXML=function(b){var c;if(!b||\"string\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\"text/xml\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\"parsererror\").length||r.error(\"Invalid XML: \"+b),c};var tb=/\\[\\]$/,ub=/\\r?\\n/g,vb=/^(?:submit|button|image|reset|file)$/i,wb=/^(?:input|select|textarea|keygen)/i;function xb(a,b,c,d){var e;if(r.isArray(b))r.each(b,function(b,e){c||tb.test(a)?d(a,e):xb(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==r.type(b))d(a,b);else for(e in b)xb(a+\"[\"+e+\"]\",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(null==c?\"\":c)};if(r.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)xb(c,a[c],b,e);return d.join(\"&\")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,\"elements\");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(\":disabled\")&&wb.test(this.nodeName)&&!vb.test(a)&&(this.checked||!ia.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:r.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(ub,\"\\r\\n\")}}):{name:b.name,value:c.replace(ub,\"\\r\\n\")}}).get()}});var yb=/%20/g,zb=/#.*$/,Ab=/([?&])_=[^&]*/,Bb=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Cb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Db=/^(?:GET|HEAD)$/,Eb=/^\\/\\//,Fb={},Gb={},Hb=\"*/\".concat(\"*\"),Ib=d.createElement(\"a\");Ib.href=qb.href;function Jb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(K)||[];if(r.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Kb(a,b,c,d){var e={},f=a===Gb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function Lb(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Mb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Nb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:qb.href,type:\"GET\",isLocal:Cb.test(qb.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Hb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Lb(Lb(a,r.ajaxSettings),b):Lb(r.ajaxSettings,a)},ajaxPrefilter:Jb(Fb),ajaxTransport:Jb(Gb),ajax:function(b,c){\"object\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks(\"once memory\"),u=o.statusCode||{},v={},w={},x=\"canceled\",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Bb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||qb.href)+\"\").replace(Eb,qb.protocol+\"//\"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||\"*\").toLowerCase().match(K)||[\"\"],null==o.crossDomain){j=d.createElement(\"a\");try{j.href=o.url,j.href=j.href,o.crossDomain=Ib.protocol+\"//\"+Ib.host!=j.protocol+\"//\"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&\"string\"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Kb(Fb,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger(\"ajaxStart\"),o.type=o.type.toUpperCase(),o.hasContent=!Db.test(o.type),f=o.url.replace(zb,\"\"),o.hasContent?o.data&&o.processData&&0===(o.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(o.data=o.data.replace(yb,\"+\")):(n=o.url.slice(f.length),o.data&&(f+=(sb.test(f)?\"&\":\"?\")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Ab,\"$1\"),n=(sb.test(f)?\"&\":\"?\")+\"_=\"+rb++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader(\"If-Modified-Since\",r.lastModified[f]),r.etag[f]&&y.setRequestHeader(\"If-None-Match\",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader(\"Content-Type\",o.contentType),y.setRequestHeader(\"Accept\",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+(\"*\"!==o.dataTypes[0]?\", \"+Hb+\"; q=0.01\":\"\"):o.accepts[\"*\"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x=\"abort\",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Kb(Gb,o,c,y)){if(y.readyState=1,l&&q.trigger(\"ajaxSend\",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort(\"timeout\")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,\"No Transport\");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||\"\",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Mb(o,y,d)),v=Nb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader(\"Last-Modified\"),w&&(r.lastModified[f]=w),w=y.getResponseHeader(\"etag\"),w&&(r.etag[f]=w)),204===b||\"HEAD\"===o.type?x=\"nocontent\":304===b?x=\"notmodified\":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x=\"error\",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+\"\",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?\"ajaxSuccess\":\"ajaxError\",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger(\"ajaxComplete\",[y,o]),--r.active||r.event.trigger(\"ajaxStop\")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,\"json\")},getScript:function(a,b){return r.get(a,void 0,b,\"script\")}}),r.each([\"get\",\"post\"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,\"throws\":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not(\"body\").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Ob={0:200,1223:204},Pb=r.ajaxSettings.xhr();o.cors=!!Pb&&\"withCredentials\"in Pb,o.ajax=Pb=!!Pb,r.ajaxTransport(function(b){var c,d;if(o.cors||Pb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\"abort\"===a?h.abort():\"error\"===a?\"number\"!=typeof h.status?f(0,\"error\"):f(h.status,h.statusText):f(Ob[h.status]||h.status,h.statusText,\"text\"!==(h.responseType||\"text\")||\"string\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\"error\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\"abort\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),r.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r(\"<script>\").prop({charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&f(\"error\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Qb=[],Rb=/(=)\\?(?=&|$)|\\?\\?/;r.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Qb.pop()||r.expando+\"_\"+rb++;return this[a]=!0,a}}),r.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Rb.test(b.url)?\"url\":\"string\"==typeof b.data&&0===(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Rb.test(b.data)&&\"data\");if(h||\"jsonp\"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Rb,\"$1\"+e):b.jsonp!==!1&&(b.url+=(sb.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||r.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Qb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument(\"\").body;return a.innerHTML=\"<form></form><form></form>\",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if(\"string\"!=typeof a)return[];\"boolean\"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(\"\"),e=b.createElement(\"base\"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=B.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=pa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(\" \");return h>-1&&(d=mb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&r.ajax({url:a,type:e||\"GET\",dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?r(\"<div>\").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length};function Sb(a){return r.isWindow(a)?a:9===a.nodeType&&a.defaultView}r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,\"position\"),l=r(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=r.css(a,\"top\"),i=r.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),d.width||d.height?(e=f.ownerDocument,c=Sb(e),b=e.documentElement,{top:d.top+c.pageYOffset-b.clientTop,left:d.left+c.pageXOffset-b.clientLeft}):d):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===r.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),r.nodeName(a[0],\"html\")||(d=a.offset()),d={top:d.top+r.css(a[0],\"borderTopWidth\",!0),left:d.left+r.css(a[0],\"borderLeftWidth\",!0)}),{top:b.top-d.top-r.css(c,\"marginTop\",!0),left:b.left-d.left-r.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\"static\"===r.css(a,\"position\"))a=a.offsetParent;return a||qa})}}),r.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,b){var c=\"pageYOffset\"===b;r.fn[a]=function(d){return S(this,function(a,d,e){var f=Sb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each([\"top\",\"left\"],function(a,b){r.cssHooks[b]=Oa(o.pixelPosition,function(a,c){if(c)return c=Na(a,b),La.test(c)?r(a).position()[b]+\"px\":c})}),r.each({Height:\"height\",Width:\"width\"},function(a,b){r.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||\"boolean\"!=typeof e),h=c||(e===!0||f===!0?\"margin\":\"border\");return S(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf(\"outer\")?b[\"inner\"+a]:b.document.documentElement[\"client\"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body[\"scroll\"+a],f[\"scroll\"+a],b.body[\"offset\"+a],f[\"offset\"+a],f[\"client\"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}}),r.parseJSON=JSON.parse,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return r});var Tb=a.jQuery,Ub=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Ub),b&&a.jQuery===r&&(a.jQuery=Tb),r},b||(a.jQuery=a.$=r),r});\n\n",
    "/**\n *  Init\n */\n\ndefine('app/init',['jquery'], function($) {\n\n    'use strict';\n\n    let Config = {\n        path: {\n            img: 'public/img/',                                             // path for images\n            // user API\n            getCaptcha: 'api/user/getCaptcha',                              // ajax URL - get captcha image\n            getServerStatus: 'api/user/getEveServerStatus',                 // ajax URL - get EVE-Online server status\n            getCookieCharacterData: 'api/user/getCookieCharacter',          // ajax URL - get character data from cookie\n            logIn: 'api/user/logIn',                                        // ajax URL - login\n            logout: 'api/user/logout',                                      // ajax URL - logout\n            deleteLog: 'api/user/deleteLog',                                // ajax URL - delete character log\n            openIngameWindow: 'api/user/openIngameWindow',                  // ajax URL - open inGame Window\n            saveUserConfig: 'api/user/saveAccount',                         // ajax URL - saves/update user account\n            deleteAccount: 'api/user/deleteAccount',                        // ajax URL - delete Account data\n            // access API\n            searchAccess: 'api/access/search',                              // ajax URL - search user/corporation/ally by name\n            // main config/map ping API\n            initMap: 'api/map/init',                                        // ajax URL - get static data\n            getAccessData: 'api/map/getAccessData',                         // ajax URL - get map access tokens (WebSocket)\n            updateMapData: 'api/map/updateData',                            // ajax URL - main map update trigger\n            updateUserData: 'api/map/updateUserData',                       // ajax URL - main map user data trigger\n            // map API\n            saveMap: 'api/map/save',                                        // ajax URL - save/update map\n            deleteMap: 'api/map/delete',                                    // ajax URL - delete map\n            importMap: 'api/map/import',                                    // ajax URL - import map\n            getMapConnectionData: 'api/map/getConnectionData',              // ajax URL - get connection data\n            // system API\n            searchSystem: 'api/system/search',                              // ajax URL - search system by name\n            saveSystem: 'api/system/save',                                  // ajax URL - saves system to map\n            deleteSystem: 'api/system/delete',                              // ajax URL - delete system from map\n            getSystemGraphData: 'api/system/graphData',                     // ajax URL - get all system graph data\n            getConstellationData: 'api/system/constellationData',           // ajax URL - get system constellation data\n            setDestination: 'api/system/setDestination',                    // ajax URL - set destination\n            // connection API\n            saveConnection: 'api/connection/save',                          // ajax URL - save new connection to map\n            deleteConnection: 'api/connection/delete',                      // ajax URL - delete connection from map\n            // signature API\n            getSignatures: 'api/signature/getAll',                          // ajax URL - get all signature data for system\n            saveSignatureData: 'api/signature/save',                        // ajax URL - save signature data for system\n            deleteSignatureData: 'api/signature/delete',                    // ajax URL - delete signature data for system\n            // route API\n            searchRoute: 'api/route/search',                                // ajax URL - search system routes\n            // stats API\n            getStatisticsData: 'api/statistic/getData',                     // ajax URL - get statistics data (activity log)\n            // GitHub API\n            gitHubReleases: 'api/github/releases'                           // ajax URL - get release info from GitHub\n        },\n        url: {\n            ccpImageServer: '//image.eveonline.com/',                       // CCP image Server\n            zKillboard: '//zkillboard.com/api/'                             // killboard api\n        },\n        breakpoints: [\n            { name: 'desktop', width: Infinity },\n            { name: 'tablet',  width: 1200 },\n            { name: 'fablet',  width: 780 },\n            { name: 'phone',   width: 480 }\n        ],\n        animationSpeed: {\n            splashOverlay: 300,                                             // \"splash\" loading overlay\n            headerLink: 100,                                                // links in head bar\n            mapOverlay: 200,                                                // show/hide duration for map overlays\n            mapOverlayLocal: 180,                                           // show/hide duration for map \"local\" overlay\n            mapMoveSystem: 180,                                             // system position has changed animation\n            mapDeleteSystem: 200,                                           // remove system from map\n            mapModule: 200,                                                 // show/hide of an map module\n            dialogEvents: 180                                               // dialog events /slide/show/...\n        },\n        syncStatus: {\n            type: 'ajax',\n            webSocket: {\n                status: 'closed',\n                class: 'txt-color-danger',\n                timestamp: undefined\n            },\n            sharedWorker: {\n                status: 'offline',                                          // SharedWorker status\n                class: 'txt-color-danger',\n                timestamp: undefined\n            },\n            ajax: {\n                status: 'enabled',\n                class: 'txt-color-success',\n                timestamp: undefined\n            }\n        },\n        performanceLogging: {\n            keyServerMapData: 'UPDATE_SERVER_MAP',                          // ajax request update map data\n            keyClientMapData: 'UPDATE_CLIENT_MAP',                          // update client map data\n            keyServerUserData: 'UPDATE_SERVER_USER_DATA',                   // ajax request update map user data\n            keyClientUserData: 'UPDATE_CLIENT_USER_DATA',                   // update client map user data\n        },\n        mapIcons: [                                                         // map tab-icons\n            {\n                class: 'fa-desktop',\n                label: 'desktop',\n                unicode: '&#xf108;'\n            },{\n                class: 'fa-bookmark',\n                label: 'bookmark',\n                unicode: '&#xf02e;'\n            },{\n                class: 'fa-cube',\n                label: 'cube',\n                unicode: '&#xf1b2;'\n            },{\n                class: 'fa-plane',\n                label: 'plane',\n                unicode: '&#xf072;'\n            },{\n                class: 'fa-globe',\n                label: 'globe',\n                unicode: '&#xf0ac;'\n            },{\n                class: 'fa-rocket',\n                label: 'rocket',\n                unicode: '&#xf135;'\n            },{\n                class: 'fa-life-ring',\n                label: 'life ring',\n                unicode: '&#xf1cd;'\n            },{\n                class: 'fa-heart',\n                label: 'heart',\n                unicode: '&#xf004;'\n            }\n        ],\n\n        classes: {\n            // log types\n            logTypes: {\n                info: {\n                    class: 'pf-log-info',\n                    label: 'info'\n                },\n                warning: {\n                    class: 'pf-log-warning',\n                    label: 'warning'\n                },\n                error: {\n                    class: 'pf-log-error',\n                    label: 'error'\n                }\n            },\n            // system effects\n            systemEffects: {\n\n                effect: {\n                    class: 'pf-system-effect',\n                    name: 'no effect'\n                },\n                magnetar: {\n                    class: 'pf-system-effect-magnetar',\n                    name: 'magnetar'\n                },\n                redGiant: {\n                    class: 'pf-system-effect-redgiant',\n                    name: 'red giant'\n                },\n                pulsar: {\n                    class: 'pf-system-effect-pulsar',\n                    name: 'pulsar'\n                },\n                wolfRayet: {\n                    class: 'pf-system-effect-wolfrayet',\n                    name: 'wolf rayet'\n                },\n                cataclysmic: {\n                    class: 'pf-system-effect-cataclysmic',\n                    name: 'cataclysmic'\n                },\n                blackHole: {\n                    class: 'pf-system-effect-blackhole',\n                    name: 'black hole'\n                }\n            },\n            // system security\n            systemSecurity: {\n                security: {\n                    class: 'pf-system-sec'\n                },\n                'SH': {\n                    class: 'pf-system-sec-unknown'\n                },\n                'H': {\n                    class: 'pf-system-sec-highSec'\n                },\n                'L': {\n                    class: 'pf-system-sec-lowSec'\n                },\n                '0.0': {\n                    class: 'pf-system-sec-nullSec'\n                },\n                'C6': {\n                    class: 'pf-system-sec-high'\n                },\n                'C5': {\n                    class: 'pf-system-sec-high'\n                },\n                'C4': {\n                    class: 'pf-system-sec-mid'\n                },\n                'C3': {\n                    class: 'pf-system-sec-mid'\n                },\n                'C2': {\n                    class: 'pf-system-sec-low'\n                },\n                'C1': {\n                    class: 'pf-system-sec-low'\n                }\n            },\n            // true sec\n            trueSec: {\n                '0.0': {\n                    class: 'pf-system-security-0-0'\n                },\n                '0.1': {\n                    class: 'pf-system-security-0-1'\n                },\n                '0.2': {\n                    class: 'pf-system-security-0-2'\n                },\n                '0.3': {\n                    class: 'pf-system-security-0-3'\n                },\n                '0.4': {\n                    class: 'pf-system-security-0-4'\n                },\n                '0.5': {\n                    class: 'pf-system-security-0-5'\n                },\n                '0.6': {\n                    class: 'pf-system-security-0-6'\n                },\n                '0.7': {\n                    class: 'pf-system-security-0-7'\n                },\n                '0.8': {\n                    class: 'pf-system-security-0-8'\n                },\n                '0.9': {\n                    class: 'pf-system-security-0-9'\n                },\n                '1.0': {\n                    class: 'pf-system-security-1-0'\n                }\n            },\n            // system info\n            systemInfo: {\n                rally: {\n                    class: 'pf-system-info-rally',\n                    label: 'rally point'\n                }\n            },\n            // easy-pie-charts\n            pieChart: {\n                class: 'pf-pie-chart',                                      // class for all pie charts\n                pieChartMapCounterClass: 'pf-pie-chart-map-timer'           // class for timer chart\n            }\n        },\n        // map scopes\n        defaultMapScope: 'wh',                                              // default scope for connection\n        // map connection types\n        connectionTypes: {\n            jumpbridge: {\n                cssClass: 'pf-map-connection-jumpbridge',\n                paintStyle: {\n                    dashstyle: '4 2 1 2'\n                }\n            },\n            stargate: {\n                cssClass: 'pf-map-connection-stargate',\n                paintStyle: {\n                    dashstyle: '0' // solid line\n                }\n            },\n            wh_eol: {\n                cssClass: 'pf-map-connection-wh-eol',\n                paintStyle: {\n                    dashstyle: '0' // solid line\n                }\n            },\n            wh_fresh: {\n                cssClass: 'pf-map-connection-wh-fresh',\n                paintStyle: {\n                    dashstyle: '0' // solid line\n                }\n            },\n            wh_reduced: {\n                cssClass: 'pf-map-connection-wh-reduced',\n                paintStyle: {\n                    dashstyle: '0' // solid line\n                }\n            },\n            wh_critical: {\n                cssClass: 'pf-map-connection-wh-critical',\n                paintStyle: {\n                    dashstyle: '0' // solid line\n                }\n            },\n            frigate: {\n                cssClass: 'pf-map-connection-frig',\n                paintStyle: {\n                    dashstyle: '0.99'\n                },\n                overlays:[\n                    ['Label',\n                        {\n                            label: 'frig',\n                            cssClass: ['pf-map-connection-overlay', 'frig'].join(' '),\n                            location: 0.6\n                        }]\n                ]\n            },\n            preserve_mass: {\n                cssClass: 'pf-map-connection-preserve-mass',\n                overlays:[\n                    ['Label',\n                        {\n                            label: '<i class=\"fa fa-fw fa-warning\"></i>&nbsp;save mass',\n                            cssClass: ['pf-map-connection-overlay', 'mass'].join(' '),\n                            location: 0.6\n                        }]\n                ]\n            }\n        },\n        // signature groups\n        signatureGroups: {\n            1: {\n                name: 'combat site', //*\n                label: 'Combat'\n            },\n            2: {\n                name: 'relic site', //*\n                label: 'Relic'\n            },\n            3: {\n                name: 'data site',\n                label: 'Data'\n            },\n            4: {\n                name: 'gas site',\n                label: 'Gas'\n            },\n            5: {\n                name: 'wormhole',\n                label: 'Wormhole'\n            },\n            6: {\n                name: 'ore site',\n                label: 'Ore'\n            },\n            7: {\n                name: 'ghost',\n                label: 'Ghost'\n            }\n        },\n        // frigate wormholes\n        frigateWormholes: {\n            1: {    // C1\n                1: 'E004 - C1',\n                2: 'L005 - C2',\n                3: 'Z006 - C3',\n                4: 'M001 - C4',\n                5: 'C008 - C5',\n                6: 'G008 - C6',\n                7: 'Q003 - 0.0',\n                8: 'A009 - (shattered)'\n            },\n            2: {    // C2\n                1: 'E004 - C1',\n                2: 'L005 - C2',\n                3: 'Z006 - C3',\n                4: 'M001 - C4',\n                5: 'C008 - C5',\n                6: 'G008 - C6',\n                7: 'Q003 - 0.0',\n                8: 'A009 - (shattered)'\n            },\n            3: {    // C3\n                1: 'E004 - C1',\n                2: 'L005 - C2',\n                3: 'Z006 - C3',\n                4: 'M001 - C4',\n                5: 'C008 - C5',\n                6: 'G008 - C6',\n                7: 'Q003 - 0.0',\n                8: 'A009 - (shattered)'\n            },\n            4: {    // C4\n                1: 'E004 - C1',\n                2: 'L005 - C2',\n                3: 'Z006 - C3',\n                4: 'M001 - C4',\n                5: 'C008 - C5',\n                6: 'G008 - C6',\n                7: 'Q003 - 0.0',\n                8: 'A009 - (shattered)'\n            },\n            5: {    // C5\n                1: 'E004 - C1',\n                2: 'L005 - C2',\n                3: 'Z006 - C3',\n                4: 'M001 - C4',\n                5: 'C008 - C5',\n                6: 'G008 - C6',\n                7: 'Q003 - 0.0',\n                8: 'A009 - (shattered)'\n            },\n            6: {    // C6\n                1: 'E004 - C1',\n                2: 'L005 - C2',\n                3: 'Z006 - C3',\n                4: 'M001 - C4',\n                5: 'C008 - C5',\n                6: 'G008 - C6',\n                7: 'Q003 - 0.0',\n                8: 'A009 - (shattered)'\n            },\n            13: {   // Shattered Wormholes (some of them are static)\n                1: 'E004 - C1',\n                2: 'L005 - C2',\n                3: 'Z006 - C3',\n                4: 'M001 - C4',\n                5: 'C008 - C5',\n                6: 'G008 - C6',\n                7: 'Q003 - 0.0',\n                8: 'A009 - (shattered)'\n            }\n        },\n        // incoming wormholes\n        incomingWormholes: {\n            1: 'K162 - C1/2/3 (unknown)',\n            2: 'K162 - C4/5 (dangerous)',\n            3: 'K162 - C6 (deadly)',\n            4: 'K162 - HS',\n            5: 'K162 - LS',\n            6: 'K162 - 0.0',\n            7: 'K162 - Thera'\n        }\n\n    };\n\n    return Config;\n});\n\n",
    "/**\n * Created by exodus4d on 06.07.2015.\n * static system effects\n */\n\n\ndefine('config/system_effect',[], function() {\n\n    'use strict';\n\n    // system effects\n    let systemEffects = {\n            wh: {\n                magnetar: {\n                    1: [\n                        {\n                            effect: 'Damage',\n                            value: '+30%'\n                        },{\n                            effect: 'Missile explosion radius',\n                            value: '+15%'\n                        },{\n                            effect: 'Drone Tracking',\n                            value: '-15%'\n                        },{\n                            effect: 'Targeting Range',\n                            value: '-15%'\n                        },{\n                            effect: 'Tracking Speed',\n                            value: '-15%'\n                        },{\n                            effect: 'Target Painter Strength',\n                            value: '-15%'\n                        }\n                    ],\n                        2: [\n                        {\n                            effect: 'Damage',\n                            value: '+44%'\n                        },{\n                            effect: 'Missile explosion radius',\n                            value: '+22%'\n                        },{\n                            effect: 'Drone Tracking',\n                            value: '-22%'\n                        },{\n                            effect: 'Targeting Range',\n                            value: '-22%'\n                        },{\n                            effect: 'Tracking Speed',\n                            value: '-22%'\n                        },{\n                            effect: 'Target Painter Strength',\n                            value: '-22%'\n                        }\n                    ],\n                        3: [\n                        {\n                            effect: 'Damage',\n                            value: '+58%'\n                        },{\n                            effect: 'Missile explosion radius',\n                            value: '+29%'\n                        },{\n                            effect: 'Drone Tracking',\n                            value: '-29%'\n                        },{\n                            effect: 'Targeting Range',\n                            value: '-29%'\n                        },{\n                            effect: 'Tracking Speed',\n                            value: '-29%'\n                        },{\n                            effect: 'Target Painter Strength',\n                            value: '-29%'\n                        }\n                    ],\n                        4: [\n                        {\n                            effect: 'Damage',\n                            value: '+72%'\n                        },{\n                            effect: 'Missile explosion radius',\n                            value: '+36%'\n                        },{\n                            effect: 'Drone Tracking',\n                            value: '-36%'\n                        },{\n                            effect: 'Targeting Range',\n                            value: '-36%'\n                        },{\n                            effect: 'Tracking Speed',\n                            value: '-36%'\n                        },{\n                            effect: 'Target Painter Strength',\n                            value: '-36%'\n                        }\n                    ],\n                        5: [\n                        {\n                            effect: 'Damage',\n                            value: '+86%'\n                        },{\n                            effect: 'Missile explosion radius',\n                            value: '+43%'\n                        },{\n                            effect: 'Drone Tracking',\n                            value: '-43%'\n                        },{\n                            effect: 'Targeting Range',\n                            value: '-43%'\n                        },{\n                            effect: 'Tracking Speed',\n                            value: '-43%'\n                        },{\n                            effect: 'Target Painter Strength',\n                            value: '-43%'\n                        }\n                    ],\n                        6: [\n                        {\n                            effect: 'Damage',\n                            value: '+100%'\n                        },{\n                            effect: 'Missile explosion radius',\n                            value: '+50%'\n                        },{\n                            effect: 'Drone Tracking',\n                            value: '-50%'\n                        },{\n                            effect: 'Targeting Range',\n                            value: '-50%'\n                        },{\n                            effect: 'Tracking Speed',\n                            value: '-50%'\n                        },{\n                            effect: 'Target Painter Strength',\n                            value: '-50%'\n                        }\n                    ]\n                },\n                redGiant: {\n                    1: [\n                        {\n                            effect: 'Heat Damage',\n                            value: '+15%'\n                        },{\n                            effect: 'Overload Bonus',\n                            value: '+30%'\n                        },{\n                            effect: 'Smart Bomb Range',\n                            value: '+30%'\n                        },{\n                            effect: 'Smart Bomb Damage',\n                            value: '+30%'\n                        },{\n                            effect: 'Bomb Damage',\n                            value: '+30%'\n                        }\n                    ],\n                        2: [\n                        {\n                            effect: 'Heat Damage',\n                            value: '+22%'\n                        },{\n                            effect: 'Overload Bonus',\n                            value: '+44%'\n                        },{\n                            effect: 'Smart Bomb Range',\n                            value: '+44%'\n                        },{\n                            effect: 'Smart Bomb Damage',\n                            value: '+44%'\n                        },{\n                            effect: 'Bomb Damage',\n                            value: '+44%'\n                        }\n                    ],\n                        3: [\n                        {\n                            effect: 'Heat Damage',\n                            value: '+29%'\n                        },{\n                            effect: 'Overload Bonus',\n                            value: '+58%'\n                        },{\n                            effect: 'Smart Bomb Range',\n                            value: '+58%'\n                        },{\n                            effect: 'Smart Bomb Damage',\n                            value: '+58%'\n                        },{\n                            effect: 'Bomb Damage',\n                            value: '+58%'\n                        }\n                    ],\n                        4: [\n                        {\n                            effect: 'Heat Damage',\n                            value: '+36%'\n                        },{\n                            effect: 'Overload Bonus',\n                            value: '+72%'\n                        },{\n                            effect: 'Smart Bomb Range',\n                            value: '+72%'\n                        },{\n                            effect: 'Smart Bomb Damage',\n                            value: '+72%'\n                        },{\n                            effect: 'Bomb Damage',\n                            value: '+72%'\n                        }\n                    ],\n                        5: [\n                        {\n                            effect: 'Heat Damage',\n                            value: '+43%'\n                        },{\n                            effect: 'Overload Bonus',\n                            value: '+86%'\n                        },{\n                            effect: 'Smart Bomb Range',\n                            value: '+86%'\n                        },{\n                            effect: 'Smart Bomb Damage',\n                            value: '+86%'\n                        },{\n                            effect: 'Bomb Damage',\n                            value: '+86%'\n                        }\n                    ],\n                        6: [\n                        {\n                            effect: 'Heat Damage',\n                            value: '+50%'\n                        },{\n                            effect: 'Overload Bonus',\n                            value: '+100%'\n                        },{\n                            effect: 'Smart Bomb Range',\n                            value: '+100%'\n                        },{\n                            effect: 'Smart Bomb Damage',\n                            value: '+100%'\n                        },{\n                            effect: 'Bomb Damage',\n                            value: '+100%'\n                        }\n                    ]\n                },\n                pulsar: {\n                    1: [\n                        {\n                            effect: 'Shield HP',\n                            value: '+30%'\n                        },{\n                            effect: 'Armor Resists',\n                            value: '-15%'\n                        },{\n                            effect: 'Capacitor recharge',\n                            value: '-15%'\n                        },{\n                            effect: 'Signature',\n                            value: '+30%'\n                        },{\n                            effect: 'NOS / Neut Drain Amount',\n                            value: '+30%'\n                        }\n                    ],\n                        2: [\n                        {\n                            effect: 'Shield HP',\n                            value: '+44%'\n                        },{\n                            effect: 'Armor Resists',\n                            value: '-22%'\n                        },{\n                            effect: 'Capacitor recharge',\n                            value: '-22%'\n                        },{\n                            effect: 'Signature',\n                            value: '+44%'\n                        },{\n                            effect: 'NOS / Neut Drain Amount',\n                            value: '+44%'\n                        }\n                    ],\n                        3: [\n                        {\n                            effect: 'Shield HP',\n                            value: '+58%'\n                        },{\n                            effect: 'Armor Resists',\n                            value: '-29%'\n                        },{\n                            effect: 'Capacitor recharge',\n                            value: '-29%'\n                        },{\n                            effect: 'Signature',\n                            value: '+58%'\n                        },{\n                            effect: 'NOS / Neut Drain Amount',\n                            value: '+58%'\n                        }\n                    ],\n                        4: [\n                        {\n                            effect: 'Shield HP',\n                            value: '+72%'\n                        },{\n                            effect: 'Armor Resists',\n                            value: '-36%'\n                        },{\n                            effect: 'Capacitor recharge',\n                            value: '-36%'\n                        },{\n                            effect: 'Signature',\n                            value: '+72%'\n                        },{\n                            effect: 'NOS / Neut Drain Amount',\n                            value: '+72%'\n                        }\n                    ],\n                        5: [\n                        {\n                            effect: 'Shield HP',\n                            value: '+86%'\n                        },{\n                            effect: 'Armor Resists',\n                            value: '-43%'\n                        },{\n                            effect: 'Capacitor recharge',\n                            value: '-43%'\n                        },{\n                            effect: 'Signature',\n                            value: '+86%'\n                        },{\n                            effect: 'NOS / Neut Drain Amount',\n                            value: '+86%'\n                        }\n                    ],\n                        6: [\n                        {\n                            effect: 'Shield HP',\n                            value: '+100%'\n                        },{\n                            effect: 'Armor Resists',\n                            value: '-50%'\n                        },{\n                            effect: 'Capacitor recharge',\n                            value: '-50%'\n                        },{\n                            effect: 'Signature',\n                            value: '+100%'\n                        },{\n                            effect: 'NOS / Neut Drain Amount',\n                            value: '+100%'\n                        }\n                    ]\n                },\n                wolfRayet: {\n                    1: [\n                        {\n                            effect: 'Armor HP',\n                            value: '+30%'\n                        },{\n                            effect: 'Shield Resist',\n                            value: '-15%'\n                        },{\n                            effect: 'Small Weapon Damage',\n                            value: '+60%'\n                        },{\n                            effect: 'Signature Size',\n                            value: '-15%'\n                        }\n                    ],\n                        2: [\n                        {\n                            effect: 'Armor HP',\n                            value: '+44%'\n                        },{\n                            effect: 'Shield Resist',\n                            value: '-22%'\n                        },{\n                            effect: 'Small Weapon Damage',\n                            value: '+88%'\n                        },{\n                            effect: 'Signature Size',\n                            value: '-22%'\n                        }\n                    ],\n                        3: [\n                        {\n                            effect: 'Armor HP',\n                            value: '+58%'\n                        },{\n                            effect: 'Shield Resist',\n                            value: '-29%'\n                        },{\n                            effect: 'Small Weapon Damage',\n                            value: '+116%'\n                        },{\n                            effect: 'Signature Size',\n                            value: '-29%'\n                        }\n                    ],\n                        4: [\n                        {\n                            effect: 'Armor HP',\n                            value: '+72%'\n                        },{\n                            effect: 'Shield Resist',\n                            value: '-36%'\n                        },{\n                            effect: 'Small Weapon Damage',\n                            value: '+144%'\n                        },{\n                            effect: 'Signature Size',\n                            value: '-36%'\n                        }\n                    ],\n                        5: [\n                        {\n                            effect: 'Armor HP',\n                            value: '+86%'\n                        },{\n                            effect: 'Shield Resist',\n                            value: '-43%'\n                        },{\n                            effect: 'Small Weapon Damage',\n                            value: '+172%'\n                        },{\n                            effect: 'Signature Size',\n                            value: '-43%'\n                        }\n                    ],\n                        6: [\n                        {\n                            effect: 'Armor HP',\n                            value: '+100%'\n                        },{\n                            effect: 'Shield Resist',\n                            value: '-50%'\n                        },{\n                            effect: 'Small Weapon Damage',\n                            value: '+200%'\n                        },{\n                            effect: 'Signature Size',\n                            value: '-50%'\n                        }\n                    ]\n                },\n                cataclysmic: {\n                    1: [\n                        {\n                            effect: 'Local armor repair amount',\n                            value: '-15%'\n                        },{\n                            effect: 'Local shield boost amount',\n                            value: '-15%'\n                        },{\n                            effect: 'Shield transfer amount',\n                            value: '+30%'\n                        },{\n                            effect: 'Remote repair amount',\n                            value: '+30%'\n                        },{\n                            effect: 'Capacitor capacity',\n                            value: '+30%'\n                        },{\n                            effect: 'Capacitor recharge time',\n                            value: '+15%'\n                        },{\n                            effect: 'Remote Capacitor Transmitter amount',\n                            value: '-15%'\n                        }\n                    ],\n                        2: [\n                        {\n                            effect: 'Local armor repair amount',\n                            value: '-22%'\n                        },{\n                            effect: 'Local shield boost amount',\n                            value: '-22%'\n                        },{\n                            effect: 'Shield transfer amount',\n                            value: '+44%'\n                        },{\n                            effect: 'Remote repair amount',\n                            value: '+44%'\n                        },{\n                            effect: 'Capacitor capacity',\n                            value: '+44%'\n                        },{\n                            effect: 'Capacitor recharge time',\n                            value: '+22%'\n                        },{\n                            effect: 'Remote Capacitor Transmitter amount',\n                            value: '-22%'\n                        }\n                    ],\n                        3: [\n                        {\n                            effect: 'Local armor repair amount',\n                            value: '-29%'\n                        },{\n                            effect: 'Local shield boost amount',\n                            value: '-29%'\n                        },{\n                            effect: 'Shield transfer amount',\n                            value: '+58%'\n                        },{\n                            effect: 'Remote repair amount',\n                            value: '+58%'\n                        },{\n                            effect: 'Capacitor capacity',\n                            value: '+58%'\n                        },{\n                            effect: 'Capacitor recharge time',\n                            value: '+29%'\n                        },{\n                            effect: 'Remote Capacitor Transmitter amount',\n                            value: '-29%'\n                        }\n                    ],\n                        4: [\n                        {\n                            effect: 'Local armor repair amount',\n                            value: '-36%'\n                        },{\n                            effect: 'Local shield boost amount',\n                            value: '-36%'\n                        },{\n                            effect: 'Shield transfer amount',\n                            value: '+72%'\n                        },{\n                            effect: 'Remote repair amount',\n                            value: '+72%'\n                        },{\n                            effect: 'Capacitor capacity',\n                            value: '+72%'\n                        },{\n                            effect: 'Capacitor recharge time',\n                            value: '+36%'\n                        },{\n                            effect: 'Remote Capacitor Transmitter amount',\n                            value: '-36%'\n                        }\n                    ],\n                        5: [\n                        {\n                            effect: 'Local armor repair amount',\n                            value: '-43%'\n                        },{\n                            effect: 'Local shield boost amount',\n                            value: '-43%'\n                        },{\n                            effect: 'Shield transfer amount',\n                            value: '+86%'\n                        },{\n                            effect: 'Remote repair amount',\n                            value: '+86%'\n                        },{\n                            effect: 'Capacitor capacity',\n                            value: '+86%'\n                        },{\n                            effect: 'Capacitor recharge time',\n                            value: '+43%'\n                        },{\n                            effect: 'Remote Capacitor Transmitter amount',\n                            value: '-43%'\n                        }\n                    ],\n                        6: [\n                        {\n                            effect: 'Local armor repair amount',\n                            value: '-50%'\n                        },{\n                            effect: 'Local shield boost amount',\n                            value: '-50%'\n                        },{\n                            effect: 'Shield transfer amount',\n                            value: '+100%'\n                        },{\n                            effect: 'Remote repair amount',\n                            value: '+100%'\n                        },{\n                            effect: 'Capacitor capacity',\n                            value: '+100%'\n                        },{\n                            effect: 'Capacitor recharge time',\n                            value: '+50%'\n                        },{\n                            effect: 'Remote Capacitor Transmitter amount',\n                            value: '-50%'\n                        }\n                    ]\n                },\n                blackHole: {\n                    1: [\n                        {\n                            effect: 'Missile velocity',\n                            value: '+15%'\n                        },{\n                            effect: 'Missile Explosion Velocity',\n                            value: '+30%'\n                        },{\n                            effect: 'Ship velocity',\n                            value: '+30%'\n                        },{\n                            effect: 'Stasis Webifier Strength',\n                            value: '-15%'\n                        },{\n                            effect: 'Inertia',\n                            value: '+15%'\n                        },{\n                            effect: 'Targeting range',\n                            value: '+30%'\n                        }\n                    ],\n                        2: [\n                        {\n                            effect: 'Missile velocity',\n                            value: '+22%'\n                        },{\n                            effect: 'Missile Explosion Velocity',\n                            value: '+44%'\n                        },{\n                            effect: 'Ship velocity',\n                            value: '+44%'\n                        },{\n                            effect: 'Stasis Webifier Strength',\n                            value: '-22%'\n                        },{\n                            effect: 'Inertia',\n                            value: '+22%'\n                        },{\n                            effect: 'Targeting range',\n                            value: '+44%'\n                        }\n                    ],\n                        3: [\n                        {\n                            effect: 'Missile velocity',\n                            value: '+29%'\n                        },{\n                            effect: 'Missile Explosion Velocity',\n                            value: '+58%'\n                        },{\n                            effect: 'Ship velocity',\n                            value: '+58%'\n                        },{\n                            effect: 'Stasis Webifier Strength',\n                            value: '-29%'\n                        },{\n                            effect: 'Inertia',\n                            value: '+29%'\n                        },{\n                            effect: 'Targeting range',\n                            value: '+58%'\n                        }\n                    ],\n                        4: [\n                        {\n                            effect: 'Missile velocity',\n                            value: '+36%'\n                        },{\n                            effect: 'Missile Explosion Velocity',\n                            value: '+72%'\n                        },{\n                            effect: 'Ship velocity',\n                            value: '+72%'\n                        },{\n                            effect: 'Stasis Webifier Strength',\n                            value: '-36%'\n                        },{\n                            effect: 'Inertia',\n                            value: '+36%'\n                        },{\n                            effect: 'Targeting range',\n                            value: '+72%'\n                        }\n                    ],\n                        5: [\n                        {\n                            effect: 'Missile velocity',\n                            value: '+43%'\n                        },{\n                            effect: 'Missile Explosion Velocity',\n                            value: '+86%'\n                        },{\n                            effect: 'Ship velocity',\n                            value: '+86%'\n                        },{\n                            effect: 'Stasis Webifier Strength',\n                            value: '-43%'\n                        },{\n                            effect: 'Inertia',\n                            value: '+43%'\n                        },{\n                            effect: 'Targeting range',\n                            value: '+86%'\n                        }\n                    ],\n                        6: [\n                        {\n                            effect: 'Missile velocity',\n                            value: '+50%'\n                        },{\n                            effect: 'Missile Explosion Velocity',\n                            value: '+100%'\n                        },{\n                            effect: 'Ship velocity',\n                            value: '+100%'\n                        },{\n                            effect: 'Stasis Webifier Strength',\n                            value: '-50%'\n                        },{\n                            effect: 'Inertia',\n                            value: '+50%'\n                        },{\n                            effect: 'Targeting range',\n                            value: '+100%'\n                        }\n                    ]\n                }\n            }\n        };\n\n\n    return systemEffects;\n});\n",
    "/**\n * Created by exodus4d on 06.07.2015.\n * static signature types\n *\n * (*) marked fields are in-game verified and\n * proofed, signature names (copy & paste from scanning window)\n */\n\ndefine('config/signature_type',['jquery'], function($) {\n\n    'use strict';\n\n    // signature sources\n    // http://de.sistersprobe.wikia.com/wiki/EVE_Sister_Core_Scanner_Probe_Wiki\n\n\n    // NullSec Relic sites, which can also spawn in C1, C2, C3 wormholes\n    let nullSecRelicSites = {\n        10: 'Ruined Angel Crystal Quarry',\n        11: 'Ruined Angel Monument Site',\n        12: 'Ruined Angel Science Outpost',\n        13: 'Ruined Angel Temple Site',\n        14: 'Ruined Blood Raider Crystal Quarry',\n        15: 'Ruined Blood Raider Monument Site',\n        16: 'Ruined Blood Raider Science Outpost',\n        17: 'Ruined Blood Raider Temple Site',\n        18: 'Ruined Guristas Crystal Quarry',\n        19: 'Ruined Guristas Monument Site',\n        20: 'Ruined Guristas Science Outpost',\n        21: 'Ruined Guristas Temple Site',\n        22: 'Ruined Sansha Crystal Quarry',\n        23: 'Ruined Sansha Monument Site',\n        24: 'Ruined Sansha Science Outpost',\n        25: 'Ruined Sansha Temple Site',\n        26: 'Ruined Serpentis Crystal Quarry',\n        27: 'Ruined Serpentis Monument Site',\n        28: 'Ruined Serpentis Science Outpost',\n        29: 'Ruined Serpentis Temple Site'\n    };\n\n    // NulSec Data sites, which can also spawn in C1, C2, C3 wormholes\n    let nullSecDataSites = {\n        10: 'Abandoned Research Complex DA005',\n        11: 'Abandoned Research Complex DA015',\n        12: 'Abandoned Research Complex DC007',\n        13: 'Abandoned Research Complex DC021',\n        14: 'Abandoned Research Complex DC035',\n        15: 'Abandoned Research Complex DG003',\n        16: 'Central Angel Command Center',\n        17: 'Central Angel Data Mining Site',\n        18: 'Central Angel Sparking Transmitter',\n        19: 'Central Angel Survey Site',\n        20: 'Central Blood Raider Command Center',\n        21: 'Central Blood Raider Data Mining Site',\n        22: 'Central Blood Raider Sparking Transmitter',\n        23: 'Central Blood Raider Survey Site',\n        24: 'Central Guristas Command Center',\n        25: 'Central Guristas Data Mining Center',\n        26: 'Central Guristas Sparking Transmitter',\n        27: 'Central Guristas Survey Site',\n        28: 'Central Sansha Command Center',\n        29: 'Central Sansha Data Mining Site',\n        30: 'Central Sansha Sparking Transmitter',\n        31: 'Central Sansha Survey Site',\n        32: 'Central Serpentis Command Center',\n        33: 'Central Serpentis Data Mining Site',\n        34: 'Central Serpentis Sparking Transmitter',\n        35: 'Central Serpentis Survey Site'\n    };\n\n\n    // signature types\n    let signatureTypes = {\n        1: { // system type (wh)\n            1: {    // C1 (area id)\n                1: {    // Combat\n                    1: 'Perimeter Ambush Point',\n                    2: 'Perimeter Camp',\n                    3: 'Phase Catalyst Node',\n                    4: 'The Line'\n                },\n                2: $.extend({}, nullSecRelicSites, {    // Relic\n                    1: 'Forgotten Perimeter Coronation Platform', //*\n                    2: 'Forgotten Perimeter Power Array' //*\n                }),\n                3: $.extend({}, nullSecDataSites, {    // Data\n                    1: 'Unsecured Perimeter Amplifier', //*\n                    2: 'Unsecured Perimeter Information Center' //*\n                }),\n                4: {    // Gas\n                    1: 'Barren Perimeter Reservoir', //*\n                    2: 'Token Perimeter Reservoir', //*\n                    3: 'Minor Perimeter Reservoir', //*\n                    4: 'Sizeable Perimeter Reservoir', //*\n                    5: 'Ordinary Perimeter Reservoir' //*\n                },\n                5: {    // Wormhole\n                    1: 'H121 - C1',\n                    2: 'C125 - C2',\n                    3: 'O883 - C3',\n                    4: 'M609 - C4',\n                    5: 'L614 - C5',\n                    6: 'S804 - C6',\n                    7: 'F135 - Thera'\n                },\n                6: {    // ORE\n                    1: 'Ordinary Perimeter Deposit', //*\n                    2: 'Common Perimeter Deposit', //*\n                    3: 'Unexceptional Frontier Deposit', //*\n                    4: 'Average Frontier Deposit', //*\n                    5: 'Isolated Core Deposit', //*\n                    6: 'Uncommon Core Deposit' //*\n                },\n                7: {    // Ghost\n\n                }\n            },\n            2: {    // C2\n                1: {    // Combat\n                    1: 'Perimeter Checkpoint',\n                    2: 'Perimeter Hangar',\n                    3: 'The Ruins of Enclave Cohort 27',\n                    4: 'Sleeper Data Sanctuary'\n                },\n                2: $.extend({}, nullSecRelicSites, {    // Relic\n                    1: 'Forgotten Perimeter Gateway', //*\n                    2: 'Forgotten Perimeter Habitation Coils' //*\n                }),\n                3: $.extend({}, nullSecDataSites, {    // Data\n                    1: 'Unsecured Perimeter Comms Relay', //*\n                    2: 'Unsecured Perimeter Transponder Farm' //*\n                }),\n                4: {    // Gas\n                    1: 'Barren Perimeter Reservoir', //*\n                    2: 'Token Perimeter Reservoir', //*\n                    3: 'Minor Perimeter Reservoir', //*\n                    4: 'Sizeable Perimeter Reservoir', //*\n                    5: 'Ordinary Perimeter Reservoir' //*\n                },\n                5: {    // Wormhole\n                    1: 'Z647 - C1',\n                    2: 'D382 - C2',\n                    3: 'O477 - C3',\n                    4: 'Y683 - C4',\n                    5: 'N062 - C5',\n                    6: 'R474 - C6',\n                    7: 'F135 - Thera'\n                },\n                6: {    // ORE\n                    1: 'Ordinary Perimeter Deposit', //*\n                    2: 'Common Perimeter Deposit', //*\n                    3: 'Unexceptional Frontier Deposit', //*\n                    4: 'Average Frontier Deposit', //*\n                    5: 'Isolated Core Deposit', //*\n                    6: 'Uncommon Core Deposit' //*\n                },\n                7: {    // Ghost\n\n                }\n            },\n            3: {    // C3\n                1: {    // Combat\n                    1: 'Fortification Frontier Stronghold',\n                    2: 'Outpost Frontier Stronghold',\n                    3: 'Solar Cell',\n                    4: 'The Oruze Construct'\n                },\n                2: $.extend({}, nullSecRelicSites, {    // Relic\n                    1: 'Forgotten Frontier Quarantine Outpost', //*\n                    2: 'Forgotten Frontier Recursive Depot' //*\n                }),\n                3: $.extend({}, nullSecDataSites, {    // Data\n                    1: 'Unsecured Frontier Database', //*\n                    2: 'Unsecured Frontier Receiver' //*\n                }),\n                4: {    // Gas\n                    1: 'Barren Perimeter Reservoir', //*\n                    2: 'Token Perimeter Reservoir', //*\n                    3: 'Minor Perimeter Reservoir', //*\n                    4: 'Sizeable Perimeter Reservoir', //*\n                    5: 'Ordinary Perimeter Reservoir', //*\n                    6: 'Bountiful Frontier Reservoir', //*\n                    7: 'Vast Frontier Reservoir' //*\n                },\n                5: {    // Wormhole\n                    1: 'V301 - C1',\n                    2: 'I182 - C2',\n                    3: 'N968 - C3',\n                    4: 'T405 - C4',\n                    5: 'N770 - C5',\n                    6: 'A982 - C6',\n                    7: 'F135 - Thera'\n                },\n                6: {    // ORE\n                    1: 'Ordinary Perimeter Deposit', //*\n                    2: 'Common Perimeter Deposit', //*\n                    3: 'Unexceptional Frontier Deposit', //*\n                    4: 'Average Frontier Deposit', //*\n                    5: 'Infrequent Core Deposit', //*\n                    6: 'Unusual Core Deposit' //*\n                },\n                7: {    // Ghost\n\n                }\n            },\n            4: {    // C4\n                1: {    // Combat\n                    1: 'Frontier Barracks',\n                    2: 'Frontier Command Post',\n                    3: 'Integrated Terminus',\n                    4: 'Sleeper Information Sanctum'\n                },\n                2: {    // Relic\n                    1: 'Forgotten Frontier Conversion Module',\n                    2: 'Forgotten Frontier Evacuation Center'\n                },\n                3: {    // Data\n                    1: 'Unsecured Frontier Digital Nexus',\n                    2: 'Unsecured Frontier Trinary Hub'\n                },\n                4: {    // Gas\n                    1: 'Barren Perimeter Reservoir', //*\n                    2: 'Token Perimeter Reservoir', //*\n                    3: 'Minor Perimeter Reservoir', //*\n                    4: 'Sizeable Perimeter Reservoir', //*\n                    5: 'Ordinary Perimeter Reservoir', //*\n                    6: 'Vast Frontier Reservoir', //*\n                    7: 'Bountiful Frontier Reservoir' //*\n                },\n                5: {    // Wormhole\n                    // no *wandering* w-space -> k-space wormholes\n                    // all holes are statics or K162\n                },\n                6: {    // ORE\n                    1: 'Ordinary Perimeter Deposit', //*\n                    2: 'Common Perimeter Deposit', //*\n                    3: 'Unexceptional Frontier Deposit', //*\n                    4: 'Average Frontier Deposit', //*\n                    5: 'Unusual Core Deposit', //*\n                    6: 'Infrequent Core Deposit' //*\n                },\n                7: {    // Ghost\n\n                }\n            },\n            5: {    // C5\n                1: {    // Combat\n                    1: 'Core Garrison', //*\n                    2: 'Core Stronghold', //*\n                    3: 'Oruze Osobnyk', //*\n                    4: 'Quarantine Area'\n                },\n                2: {    // Relic\n                    1: 'Forgotten Core Data Field',\n                    2: 'Forgotten Core Information Pen'\n                },\n                3: {    // Data\n                    1: 'Unsecured Frontier Enclave Relay',\n                    2: 'Unsecured Frontier Server Bank'\n                },\n                4: {    // Gas\n                    1: 'Barren Perimeter Reservoir', //*\n                    2: 'Minor Perimeter Reservoir', //*\n                    3: 'Ordinary Perimeter Reservoir', //*\n                    4: 'Sizeable Perimeter Reservoir', //*\n                    5: 'Token Perimeter Reservoir', //*\n                    6: 'Bountiful Frontier Reservoir', //*\n                    7: 'Vast Frontier Reservoir', //*\n                    8: 'Instrumental Core Reservoir', //*\n                    9: 'Vital Core Reservoir' //*\n                },\n                5: {    // Wormhole\n                    1: 'D792 - HS',\n                    2: 'C140 - LS',\n                    3: 'Z142 - 0.0',\n                    4: 'F135 - Thera'\n                },\n                6: {    // ORE\n                    1: 'Average Frontier Deposit', //*\n                    2: 'Unexceptional Frontier Deposit', //*\n                    3: 'Uncommon Core Deposit', //*\n                    4: 'Ordinary Perimeter Deposit', //*\n                    5: 'Common Perimeter Deposit', //*\n                    6: 'Exceptional Core Deposit', //*\n                    7: 'Infrequent Core Deposit', //*\n                    8: 'Unusual Core Deposit', //*\n                    9: 'Rarified Core Deposit', //*\n                    10: 'Isolated Core Deposit' //*\n                },\n                7: {    // Ghost\n\n                }\n            },\n            6: {    // C6\n                1: {    // Combat\n                    1: 'Core Citadel', //*\n                    2: 'Core Bastion', //*\n                    3: 'Strange Energy Readings', //*\n                    4: 'The Mirror' //*\n                },\n                2: {    // Relic\n                    1: 'Forgotten Core Assembly Hall', //*\n                    2: 'Forgotten Core Circuitry Disassembler' //*\n                },\n                3: {    // Data\n                    1: 'Unsecured Core Backup Array', //*\n                    2: 'Unsecured Core Emergence' //*\n                },\n                4: {    // Gas\n                    1: 'Barren Perimeter Reservoir', //*\n                    2: 'Minor Perimeter Reservoir', //*\n                    3: 'Ordinary Perimeter Reservoir', //*\n                    4: 'Sizeable Perimeter Reservoir', //*\n                    5: 'Token Perimeter Reservoir', //*\n                    6: 'Bountiful Frontier Reservoir', //*\n                    7: 'Vast Frontier Reservoir', //*\n                    8: 'Instrumental Core Reservoir', //*\n                    9: 'Vital Core Reservoir' //*\n                },\n                5: {    // Wormhole\n                    1: 'D792 - HS',\n                    2: 'C391 - LS',\n                    3: 'C248 - 0.0',\n                    4: 'F135 - Thera'\n                },\n                6: {    // ORE\n                    1: 'Ordinary Perimeter Deposit', //*\n                    2: 'Common Perimeter Deposit', //*\n                    3: 'Unexceptional Frontier Deposit', //*\n                    4: 'Average Frontier Deposit', //*\n                    5: 'Rarified Core Deposit' //*\n                },\n                7: {    // Ghost\n                    1: 'Superior Blood Raider Covert Research Facility' //*\n                }\n            },\n            13: {   // Shattered Wormholes\n                5: {    // Wormhole (some of them are static)\n                    1: 'P060 - C1',\n                    2: 'Z647 - C1',\n                    3: 'D382 - C2',\n                    4: 'L005 - C2',\n                    5: 'N766 - C2',\n                    6: 'C247 - C3',\n                    7: 'M267 - C3',\n                    8: 'O477 - C3',\n                    9: 'X877 - C4',\n                    10: 'Y683 - C4',\n                    11: 'H296 - C5',\n                    12: 'H900 - C5',\n                    13: 'H296 - C5',\n                    14: 'N062 - C5',    // ??\n                    15: 'V911 - C5',\n                    16: 'U574 - C6',\n                    17: 'V753 - C6',\n                    18: 'W237 - C6',\n                    19: 'B274 - HS',\n                    20: 'D792 - HS',\n                    21: 'D845 - HS',\n                    22: 'N110 - HS',\n                    23: 'A239 - LS',\n                    24: 'C391 - LS',\n                    25: 'J244 - LS',\n                    26: 'U201 - LS',    // ??\n                    27: 'U210 - LS',\n                    28: 'C248 - 0.0',\n                    29: 'E545 - 0.0',\n                    30: 'K346 - 0.0',\n                    31: 'Z060 - 0.0'\n                }\n            }\n        }, // system type (k-space)\n        2:  {\n            10: {   // High Sec\n                5:  {   // Wormhole\n                    1: 'Z971 - C1',\n                    2: 'R943 - C2',\n                    3: 'X702 - C3',\n                    // no C4\n                    4: 'M555 - C5',\n                    5: 'B041 - C6',\n                    6: 'A641 - HS',\n                    7: 'R051 - LS',\n                    8: 'V283 - 0.0',\n                    9: 'T458 - Thera'\n                }\n            },\n            11: {   // Low Sec\n                5:  {   // Wormhole\n                    1: 'Z971 - C1',\n                    2: 'R943 - C2',\n                    3: 'X702 - C3',\n                    // no C4\n                    4: 'N432 - C5',\n                    5: 'U319 - C6',\n                    6: 'B449 - HS',\n                    7: 'N944 - LS',\n                    8: 'S199 - 0.0',\n                    9: 'M164 - Thera'\n                }\n            },\n            12: {   // 0.0\n                5:  {   // Wormhole\n                    1: 'Z971 - C1',\n                    2: 'R943 - C2',\n                    3: 'X702 - C3',\n                    // no C4\n                    4: 'N432 - C5',\n                    5: 'U319 - C6',\n                    6: 'B449 - HS',\n                    7: 'N944 - LS',\n                    8: 'S199 - 0.0',\n                    9: 'L031 - Thera'\n                }\n            }\n        }\n    };\n\n    return signatureTypes;\n});\n\n",
    "/*!\n * Bootstrap v3.3.5 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\nif(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.5\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.5\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")?(c.prop(\"checked\")&&(a=!1),b.find(\".active\").removeClass(\"active\"),this.$element.addClass(\"active\")):\"checkbox\"==c.prop(\"type\")&&(c.prop(\"checked\")!==this.$element.hasClass(\"active\")&&(a=!1),this.$element.toggleClass(\"active\")),c.prop(\"checked\",this.$element.hasClass(\"active\")),a&&c.trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\")),this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),a(c.target).is('input[type=\"radio\"]')||a(c.target).is('input[type=\"checkbox\"]')||c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\"prev\"==a&&0===c||\"next\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\"prev\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=this;if(f.hasClass(\"active\"))return this.sliding=!1;var j=f[0],k=a.Event(\"slide.bs.carousel\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\"active\")}var m=a.Event(\"slid.bs.carousel\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\"collapse\"][href=\"#'+b.id+'\"],[data-toggle=\"collapse\"][data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.5\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.children(\".panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":e.data();c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\"open\")&&(c&&\"click\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\"hide.bs.dropdown\",f)),c.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(\"hidden.bs.dropdown\",f))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.5\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=b(e),g=f.hasClass(\"open\");if(c(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(\"shown.bs.dropdown\",h)}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=b(d),g=e.hasClass(\"open\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.disabled):visible a\",i=e.find(\".dropdown-menu\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",c).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",\".dropdown-menu\",g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\".modal-dialog\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\"modal-open\"),this.escape(),this.resize(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.$dialog.on(\"mousedown.dismiss.bs.modal\",function(){d.$element.one(\"mouseup.dismiss.bs.modal\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\"),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$dialog.one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"),this.$dialog.off(\"mousedown.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.resize=function(){this.isShown?a(window).on(\"resize.bs.modal\",a.proxy(this.handleUpdate,this)):a(window).off(\"resize.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\"div\")).addClass(\"modal-backdrop \"+e).appendTo(this.$body),this.$element.on(\"click.dismiss.bs.modal\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\"\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\"\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\"\",paddingRight:\"\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\"\",this.bodyIsOverflowing&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\"`selector` option must be specified when initializing \"+this.type+\" on the window.document object!\");for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusin\"==b.type?\"focus\":\"hover\"]=!0),c.tip().hasClass(\"in\")||\"in\"==c.hoverState?void(c.hoverState=\"in\"):(clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusout\"==b.type?\"focus\":\"hover\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\"inserted.bs.\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\"bottom\"==h&&k.bottom+m>o.bottom?\"top\":\"top\"==h&&k.top-m<o.top?\"bottom\":\"right\"==h&&k.right+l>o.width?\"left\":\"left\"==h&&k.left-l<o.left?\"right\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\" `template` option must consist of exactly 1 top-level element!\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.5\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.5\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\"offset\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\"position\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\"target\")||b.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");d.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),\n    d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.5\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\").length&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.5\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);\ndefine(\"bootstrap\", [\"jquery\"], function(){});\n\n",
    "/**\n * bootbox.js v4.4.0\n *\n * http://bootboxjs.com/license.txt\n */\n!function(a,b){\"use strict\";\"function\"==typeof define&&define.amd?define('bootbox',[\"jquery\"],b):\"object\"==typeof exports?module.exports=b(require(\"jquery\")):a.bootbox=b(a.jQuery)}(this,function a(b,c){\"use strict\";function d(a){var b=q[o.locale];return b?b[a]:q.en[a]}function e(a,c,d){a.stopPropagation(),a.preventDefault();var e=b.isFunction(d)&&d.call(c,a)===!1;e||c.modal(\"hide\")}function f(a){var b,c=0;for(b in a)c++;return c}function g(a,c){var d=0;b.each(a,function(a,b){c(a,b,d++)})}function h(a){var c,d;if(\"object\"!=typeof a)throw new Error(\"Please supply an object of options\");if(!a.message)throw new Error(\"Please specify a message\");return a=b.extend({},o,a),a.buttons||(a.buttons={}),c=a.buttons,d=f(c),g(c,function(a,e,f){if(b.isFunction(e)&&(e=c[a]={callback:e}),\"object\"!==b.type(e))throw new Error(\"button with key \"+a+\" must be an object\");e.label||(e.label=a),e.className||(e.className=2>=d&&f===d-1?\"btn-primary\":\"btn-default\")}),a}function i(a,b){var c=a.length,d={};if(1>c||c>2)throw new Error(\"Invalid argument length\");return 2===c||\"string\"==typeof a[0]?(d[b[0]]=a[0],d[b[1]]=a[1]):d=a[0],d}function j(a,c,d){return b.extend(!0,{},a,i(c,d))}function k(a,b,c,d){var e={className:\"bootbox-\"+a,buttons:l.apply(null,b)};return m(j(e,d,c),b)}function l(){for(var a={},b=0,c=arguments.length;c>b;b++){var e=arguments[b],f=e.toLowerCase(),g=e.toUpperCase();a[f]={label:d(g)}}return a}function m(a,b){var d={};return g(b,function(a,b){d[b]=!0}),g(a.buttons,function(a){if(d[a]===c)throw new Error(\"button key \"+a+\" is not allowed (options are \"+b.join(\"\\n\")+\")\")}),a}var n={dialog:\"<div class='bootbox modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'></div></div></div></div></div>\",header:\"<div class='modal-header'><h4 class='modal-title'></h4></div>\",footer:\"<div class='modal-footer'></div>\",closeButton:\"<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>\",form:\"<form class='bootbox-form'></form>\",inputs:{text:\"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\",textarea:\"<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>\",email:\"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\",select:\"<select class='bootbox-input bootbox-input-select form-control'></select>\",checkbox:\"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\",date:\"<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />\",time:\"<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />\",number:\"<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />\",password:\"<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />\"}},o={locale:\"en\",backdrop:\"static\",animate:!0,className:null,closeButton:!0,show:!0,container:\"body\"},p={};p.alert=function(){var a;if(a=k(\"alert\",[\"ok\"],[\"message\",\"callback\"],arguments),a.callback&&!b.isFunction(a.callback))throw new Error(\"alert requires callback property to be a function when provided\");return a.buttons.ok.callback=a.onEscape=function(){return b.isFunction(a.callback)?a.callback.call(this):!0},p.dialog(a)},p.confirm=function(){var a;if(a=k(\"confirm\",[\"cancel\",\"confirm\"],[\"message\",\"callback\"],arguments),a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,!1)},a.buttons.confirm.callback=function(){return a.callback.call(this,!0)},!b.isFunction(a.callback))throw new Error(\"confirm requires a callback\");return p.dialog(a)},p.prompt=function(){var a,d,e,f,h,i,k;if(f=b(n.form),d={className:\"bootbox-prompt\",buttons:l(\"cancel\",\"confirm\"),value:\"\",inputType:\"text\"},a=m(j(d,arguments,[\"title\",\"callback\"]),[\"cancel\",\"confirm\"]),i=a.show===c?!0:a.show,a.message=f,a.buttons.cancel.callback=a.onEscape=function(){return a.callback.call(this,null)},a.buttons.confirm.callback=function(){var c;switch(a.inputType){case\"text\":case\"textarea\":case\"email\":case\"select\":case\"date\":case\"time\":case\"number\":case\"password\":c=h.val();break;case\"checkbox\":var d=h.find(\"input:checked\");c=[],g(d,function(a,d){c.push(b(d).val())})}return a.callback.call(this,c)},a.show=!1,!a.title)throw new Error(\"prompt requires a title\");if(!b.isFunction(a.callback))throw new Error(\"prompt requires a callback\");if(!n.inputs[a.inputType])throw new Error(\"invalid prompt type\");switch(h=b(n.inputs[a.inputType]),a.inputType){case\"text\":case\"textarea\":case\"email\":case\"date\":case\"time\":case\"number\":case\"password\":h.val(a.value);break;case\"select\":var o={};if(k=a.inputOptions||[],!b.isArray(k))throw new Error(\"Please pass an array of input options\");if(!k.length)throw new Error(\"prompt with select requires options\");g(k,function(a,d){var e=h;if(d.value===c||d.text===c)throw new Error(\"given options in wrong format\");d.group&&(o[d.group]||(o[d.group]=b(\"<optgroup/>\").attr(\"label\",d.group)),e=o[d.group]),e.append(\"<option value='\"+d.value+\"'>\"+d.text+\"</option>\")}),g(o,function(a,b){h.append(b)}),h.val(a.value);break;case\"checkbox\":var q=b.isArray(a.value)?a.value:[a.value];if(k=a.inputOptions||[],!k.length)throw new Error(\"prompt with checkbox requires options\");if(!k[0].value||!k[0].text)throw new Error(\"given options in wrong format\");h=b(\"<div/>\"),g(k,function(c,d){var e=b(n.inputs[a.inputType]);e.find(\"input\").attr(\"value\",d.value),e.find(\"label\").append(d.text),g(q,function(a,b){b===d.value&&e.find(\"input\").prop(\"checked\",!0)}),h.append(e)})}return a.placeholder&&h.attr(\"placeholder\",a.placeholder),a.pattern&&h.attr(\"pattern\",a.pattern),a.maxlength&&h.attr(\"maxlength\",a.maxlength),f.append(h),f.on(\"submit\",function(a){a.preventDefault(),a.stopPropagation(),e.find(\".btn-primary\").click()}),e=p.dialog(a),e.off(\"shown.bs.modal\"),e.on(\"shown.bs.modal\",function(){h.focus()}),i===!0&&e.modal(\"show\"),e},p.dialog=function(a){a=h(a);var d=b(n.dialog),f=d.find(\".modal-dialog\"),i=d.find(\".modal-body\"),j=a.buttons,k=\"\",l={onEscape:a.onEscape};if(b.fn.modal===c)throw new Error(\"$.fn.modal is not defined; please double check you have included the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ for more details.\");if(g(j,function(a,b){k+=\"<button data-bb-handler='\"+a+\"' type='button' class='btn \"+b.className+\"'>\"+b.label+\"</button>\",l[a]=b.callback}),i.find(\".bootbox-body\").html(a.message),a.animate===!0&&d.addClass(\"fade\"),a.className&&d.addClass(a.className),\"large\"===a.size?f.addClass(\"modal-lg\"):\"small\"===a.size&&f.addClass(\"modal-sm\"),a.title&&i.before(n.header),a.closeButton){var m=b(n.closeButton);a.title?d.find(\".modal-header\").prepend(m):m.css(\"margin-top\",\"-10px\").prependTo(i)}return a.title&&d.find(\".modal-title\").html(a.title),k.length&&(i.after(n.footer),d.find(\".modal-footer\").html(k)),d.on(\"hidden.bs.modal\",function(a){a.target===this&&d.remove()}),d.on(\"shown.bs.modal\",function(){d.find(\".btn-primary:first\").focus()}),\"static\"!==a.backdrop&&d.on(\"click.dismiss.bs.modal\",function(a){d.children(\".modal-backdrop\").length&&(a.currentTarget=d.children(\".modal-backdrop\").get(0)),a.target===a.currentTarget&&d.trigger(\"escape.close.bb\")}),d.on(\"escape.close.bb\",function(a){l.onEscape&&e(a,d,l.onEscape)}),d.on(\"click\",\".modal-footer button\",function(a){var c=b(this).data(\"bb-handler\");e(a,d,l[c])}),d.on(\"click\",\".bootbox-close-button\",function(a){e(a,d,l.onEscape)}),d.on(\"keyup\",function(a){27===a.which&&d.trigger(\"escape.close.bb\")}),b(a.container).append(d),d.modal({backdrop:a.backdrop?\"static\":!1,keyboard:!1,show:!1}),a.show&&d.modal(\"show\"),d},p.setDefaults=function(){var a={};2===arguments.length?a[arguments[0]]=arguments[1]:a=arguments[0],b.extend(o,a)},p.hideAll=function(){return b(\".bootbox\").modal(\"hide\"),p};var q={bg_BG:{OK:\"Ок\",CANCEL:\"Отказ\",CONFIRM:\"Потвърждавам\"},br:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Sim\"},cs:{OK:\"OK\",CANCEL:\"Zrušit\",CONFIRM:\"Potvrdit\"},da:{OK:\"OK\",CANCEL:\"Annuller\",CONFIRM:\"Accepter\"},de:{OK:\"OK\",CANCEL:\"Abbrechen\",CONFIRM:\"Akzeptieren\"},el:{OK:\"Εντάξει\",CANCEL:\"Ακύρωση\",CONFIRM:\"Επιβεβαίωση\"},en:{OK:\"OK\",CANCEL:\"Cancel\",CONFIRM:\"OK\"},es:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Aceptar\"},et:{OK:\"OK\",CANCEL:\"Katkesta\",CONFIRM:\"OK\"},fa:{OK:\"قبول\",CANCEL:\"لغو\",CONFIRM:\"تایید\"},fi:{OK:\"OK\",CANCEL:\"Peruuta\",CONFIRM:\"OK\"},fr:{OK:\"OK\",CANCEL:\"Annuler\",CONFIRM:\"D'accord\"},he:{OK:\"אישור\",CANCEL:\"ביטול\",CONFIRM:\"אישור\"},hu:{OK:\"OK\",CANCEL:\"Mégsem\",CONFIRM:\"Megerősít\"},hr:{OK:\"OK\",CANCEL:\"Odustani\",CONFIRM:\"Potvrdi\"},id:{OK:\"OK\",CANCEL:\"Batal\",CONFIRM:\"OK\"},it:{OK:\"OK\",CANCEL:\"Annulla\",CONFIRM:\"Conferma\"},ja:{OK:\"OK\",CANCEL:\"キャンセル\",CONFIRM:\"確認\"},lt:{OK:\"Gerai\",CANCEL:\"Atšaukti\",CONFIRM:\"Patvirtinti\"},lv:{OK:\"Labi\",CANCEL:\"Atcelt\",CONFIRM:\"Apstiprināt\"},nl:{OK:\"OK\",CANCEL:\"Annuleren\",CONFIRM:\"Accepteren\"},no:{OK:\"OK\",CANCEL:\"Avbryt\",CONFIRM:\"OK\"},pl:{OK:\"OK\",CANCEL:\"Anuluj\",CONFIRM:\"Potwierdź\"},pt:{OK:\"OK\",CANCEL:\"Cancelar\",CONFIRM:\"Confirmar\"},ru:{OK:\"OK\",CANCEL:\"Отмена\",CONFIRM:\"Применить\"},sq:{OK:\"OK\",CANCEL:\"Anulo\",CONFIRM:\"Prano\"},sv:{OK:\"OK\",CANCEL:\"Avbryt\",CONFIRM:\"OK\"},th:{OK:\"ตกลง\",CANCEL:\"ยกเลิก\",CONFIRM:\"ยืนยัน\"},tr:{OK:\"Tamam\",CANCEL:\"İptal\",CONFIRM:\"Onayla\"},zh_CN:{OK:\"OK\",CANCEL:\"取消\",CONFIRM:\"确认\"},zh_TW:{OK:\"OK\",CANCEL:\"取消\",CONFIRM:\"確認\"}};return p.addLocale=function(a,c){return b.each([\"OK\",\"CANCEL\",\"CONFIRM\"],function(a,b){if(!c[b])throw new Error(\"Please supply a translation for '\"+b+\"'\")}),q[a]={OK:c.OK,CANCEL:c.CANCEL,CONFIRM:c.CONFIRM},p},p.removeLocale=function(a){return delete q[a],p},p.setLocale=function(a){return p.setDefaults(\"locale\",a)},p.init=function(c){return a(c||b)},p});\n",
    "/*!\n    localForage -- Offline Storage, Improved\n    Version 1.4.2\n    https://mozilla.github.io/localForage\n    (c) 2013-2015 Mozilla, Apache License 2.0\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define('localForage',[],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.localforage=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){(function(a){\"use strict\";function c(){k=!0;for(var a,b,c=l.length;c;){for(b=l,l=[],a=-1;++a<c;)b[a]();c=l.length}k=!1}function d(a){1!==l.push(a)||k||e()}var e,f=a.MutationObserver||a.WebKitMutationObserver;if(f){var g=0,h=new f(c),i=a.document.createTextNode(\"\");h.observe(i,{characterData:!0}),e=function(){i.data=g=++g%2}}else if(a.setImmediate||\"undefined\"==typeof a.MessageChannel)e=\"document\"in a&&\"onreadystatechange\"in a.document.createElement(\"script\")?function(){var b=a.document.createElement(\"script\");b.onreadystatechange=function(){c(),b.onreadystatechange=null,b.parentNode.removeChild(b),b=null},a.document.documentElement.appendChild(b)}:function(){setTimeout(c,0)};else{var j=new a.MessageChannel;j.port1.onmessage=c,e=function(){j.port2.postMessage(0)}}var k,l=[];b.exports=d}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],2:[function(a,b,c){\"use strict\";function d(){}function e(a){if(\"function\"!=typeof a)throw new TypeError(\"resolver must be a function\");this.state=s,this.queue=[],this.outcome=void 0,a!==d&&i(this,a)}function f(a,b,c){this.promise=a,\"function\"==typeof b&&(this.onFulfilled=b,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof c&&(this.onRejected=c,this.callRejected=this.otherCallRejected)}function g(a,b,c){o(function(){var d;try{d=b(c)}catch(e){return p.reject(a,e)}d===a?p.reject(a,new TypeError(\"Cannot resolve promise with itself\")):p.resolve(a,d)})}function h(a){var b=a&&a.then;return a&&\"object\"==typeof a&&\"function\"==typeof b?function(){b.apply(a,arguments)}:void 0}function i(a,b){function c(b){f||(f=!0,p.reject(a,b))}function d(b){f||(f=!0,p.resolve(a,b))}function e(){b(d,c)}var f=!1,g=j(e);\"error\"===g.status&&c(g.value)}function j(a,b){var c={};try{c.value=a(b),c.status=\"success\"}catch(d){c.status=\"error\",c.value=d}return c}function k(a){return a instanceof this?a:p.resolve(new this(d),a)}function l(a){var b=new this(d);return p.reject(b,a)}function m(a){function b(a,b){function d(a){g[b]=a,++h!==e||f||(f=!0,p.resolve(j,g))}c.resolve(a).then(d,function(a){f||(f=!0,p.reject(j,a))})}var c=this;if(\"[object Array]\"!==Object.prototype.toString.call(a))return this.reject(new TypeError(\"must be an array\"));var e=a.length,f=!1;if(!e)return this.resolve([]);for(var g=new Array(e),h=0,i=-1,j=new this(d);++i<e;)b(a[i],i);return j}function n(a){function b(a){c.resolve(a).then(function(a){f||(f=!0,p.resolve(h,a))},function(a){f||(f=!0,p.reject(h,a))})}var c=this;if(\"[object Array]\"!==Object.prototype.toString.call(a))return this.reject(new TypeError(\"must be an array\"));var e=a.length,f=!1;if(!e)return this.resolve([]);for(var g=-1,h=new this(d);++g<e;)b(a[g]);return h}var o=a(1),p={},q=[\"REJECTED\"],r=[\"FULFILLED\"],s=[\"PENDING\"];b.exports=c=e,e.prototype[\"catch\"]=function(a){return this.then(null,a)},e.prototype.then=function(a,b){if(\"function\"!=typeof a&&this.state===r||\"function\"!=typeof b&&this.state===q)return this;var c=new this.constructor(d);if(this.state!==s){var e=this.state===r?a:b;g(c,e,this.outcome)}else this.queue.push(new f(c,a,b));return c},f.prototype.callFulfilled=function(a){p.resolve(this.promise,a)},f.prototype.otherCallFulfilled=function(a){g(this.promise,this.onFulfilled,a)},f.prototype.callRejected=function(a){p.reject(this.promise,a)},f.prototype.otherCallRejected=function(a){g(this.promise,this.onRejected,a)},p.resolve=function(a,b){var c=j(h,b);if(\"error\"===c.status)return p.reject(a,c.value);var d=c.value;if(d)i(a,d);else{a.state=r,a.outcome=b;for(var e=-1,f=a.queue.length;++e<f;)a.queue[e].callFulfilled(b)}return a},p.reject=function(a,b){a.state=q,a.outcome=b;for(var c=-1,d=a.queue.length;++c<d;)a.queue[c].callRejected(b);return a},c.resolve=k,c.reject=l,c.all=m,c.race=n},{1:1}],3:[function(a,b,c){(function(b){\"use strict\";\"function\"!=typeof b.Promise&&(b.Promise=a(2))}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{2:2}],4:[function(a,b,c){\"use strict\";function d(a,b){if(!(a instanceof b))throw new TypeError(\"Cannot call a class as a function\")}function e(){return\"undefined\"!=typeof indexedDB?indexedDB:\"undefined\"!=typeof webkitIndexedDB?webkitIndexedDB:\"undefined\"!=typeof mozIndexedDB?mozIndexedDB:\"undefined\"!=typeof OIndexedDB?OIndexedDB:\"undefined\"!=typeof msIndexedDB?msIndexedDB:void 0}function f(){try{return fa?\"undefined\"!=typeof openDatabase&&\"undefined\"!=typeof navigator&&navigator.userAgent&&/Safari/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)?!1:fa&&\"function\"==typeof fa.open&&\"undefined\"!=typeof IDBKeyRange:!1}catch(a){return!1}}function g(){return\"function\"==typeof openDatabase}function h(){try{return\"undefined\"!=typeof localStorage&&\"setItem\"in localStorage&&localStorage.setItem}catch(a){return!1}}function i(a,b){a=a||[],b=b||{};try{return new Blob(a,b)}catch(c){if(\"TypeError\"!==c.name)throw c;for(var d=\"undefined\"!=typeof BlobBuilder?BlobBuilder:\"undefined\"!=typeof MSBlobBuilder?MSBlobBuilder:\"undefined\"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder,e=new d,f=0;f<a.length;f+=1)e.append(a[f]);return e.getBlob(b.type)}}function j(a,b){b&&a.then(function(a){b(null,a)},function(a){b(a)})}function k(a){for(var b=a.length,c=new ArrayBuffer(b),d=new Uint8Array(c),e=0;b>e;e++)d[e]=a.charCodeAt(e);return c}function l(a){return new ia(function(b){var c=i([\"\"]);a.objectStore(ja).put(c,\"key\"),a.onabort=function(a){a.preventDefault(),a.stopPropagation(),b(!1)},a.oncomplete=function(){var a=navigator.userAgent.match(/Chrome\\/(\\d+)/),c=navigator.userAgent.match(/Edge\\//);b(c||!a||parseInt(a[1],10)>=43)}})[\"catch\"](function(){return!1})}function m(a){return\"boolean\"==typeof ga?ia.resolve(ga):l(a).then(function(a){return ga=a})}function n(a){var b=ha[a.name],c={};c.promise=new ia(function(a){c.resolve=a}),b.deferredOperations.push(c),b.dbReady?b.dbReady=b.dbReady.then(function(){return c.promise}):b.dbReady=c.promise}function o(a){var b=ha[a.name],c=b.deferredOperations.pop();c&&c.resolve()}function p(a,b){return new ia(function(c,d){if(a.db){if(!b)return c(a.db);n(a),a.db.close()}var e=[a.name];b&&e.push(a.version);var f=fa.open.apply(fa,e);b&&(f.onupgradeneeded=function(b){var c=f.result;try{c.createObjectStore(a.storeName),b.oldVersion<=1&&c.createObjectStore(ja)}catch(d){if(\"ConstraintError\"!==d.name)throw d;console.warn('The database \"'+a.name+'\" has been upgraded from version '+b.oldVersion+\" to version \"+b.newVersion+', but the storage \"'+a.storeName+'\" already exists.')}}),f.onerror=function(){d(f.error)},f.onsuccess=function(){c(f.result),o(a)}})}function q(a){return p(a,!1)}function r(a){return p(a,!0)}function s(a,b){if(!a.db)return!0;var c=!a.db.objectStoreNames.contains(a.storeName),d=a.version<a.db.version,e=a.version>a.db.version;if(d&&(a.version!==b&&console.warn('The database \"'+a.name+\"\\\" can't be downgraded from version \"+a.db.version+\" to version \"+a.version+\".\"),a.version=a.db.version),e||c){if(c){var f=a.db.version+1;f>a.version&&(a.version=f)}return!0}return!1}function t(a){return new ia(function(b,c){var d=new FileReader;d.onerror=c,d.onloadend=function(c){var d=btoa(c.target.result||\"\");b({__local_forage_encoded_blob:!0,data:d,type:a.type})},d.readAsBinaryString(a)})}function u(a){var b=k(atob(a.data));return i([b],{type:a.type})}function v(a){return a&&a.__local_forage_encoded_blob}function w(a){var b=this,c=b._initReady().then(function(){var a=ha[b._dbInfo.name];return a&&a.dbReady?a.dbReady:void 0});return c.then(a,a),c}function x(a){function b(){return ia.resolve()}var c=this,d={db:null};if(a)for(var e in a)d[e]=a[e];ha||(ha={});var f=ha[d.name];f||(f={forages:[],db:null,dbReady:null,deferredOperations:[]},ha[d.name]=f),f.forages.push(c),c._initReady||(c._initReady=c.ready,c.ready=w);for(var g=[],h=0;h<f.forages.length;h++){var i=f.forages[h];i!==c&&g.push(i._initReady()[\"catch\"](b))}var j=f.forages.slice(0);return ia.all(g).then(function(){return d.db=f.db,q(d)}).then(function(a){return d.db=a,s(d,c._defaultConfig.version)?r(d):a}).then(function(a){d.db=f.db=a,c._dbInfo=d;for(var b=0;b<j.length;b++){var e=j[b];e!==c&&(e._dbInfo.db=d.db,e._dbInfo.version=d.version)}})}function y(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ia(function(b,d){c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readonly\").objectStore(e.storeName),g=f.get(a);g.onsuccess=function(){var a=g.result;void 0===a&&(a=null),v(a)&&(a=u(a)),b(a)},g.onerror=function(){d(g.error)}})[\"catch\"](d)});return j(d,b),d}function z(a,b){var c=this,d=new ia(function(b,d){c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readonly\").objectStore(e.storeName),g=f.openCursor(),h=1;g.onsuccess=function(){var c=g.result;if(c){var d=c.value;v(d)&&(d=u(d));var e=a(d,c.key,h++);void 0!==e?b(e):c[\"continue\"]()}else b()},g.onerror=function(){d(g.error)}})[\"catch\"](d)});return j(d,b),d}function A(a,b,c){var d=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var e=new ia(function(c,e){var f;d.ready().then(function(){return f=d._dbInfo,b instanceof Blob?m(f.db).then(function(a){return a?b:t(b)}):b}).then(function(b){var d=f.db.transaction(f.storeName,\"readwrite\"),g=d.objectStore(f.storeName);null===b&&(b=void 0),d.oncomplete=function(){void 0===b&&(b=null),c(b)},d.onabort=d.onerror=function(){var a=h.error?h.error:h.transaction.error;e(a)};var h=g.put(b,a)})[\"catch\"](e)});return j(e,c),e}function B(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ia(function(b,d){c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readwrite\"),g=f.objectStore(e.storeName),h=g[\"delete\"](a);f.oncomplete=function(){b()},f.onerror=function(){d(h.error)},f.onabort=function(){var a=h.error?h.error:h.transaction.error;d(a)}})[\"catch\"](d)});return j(d,b),d}function C(a){var b=this,c=new ia(function(a,c){b.ready().then(function(){var d=b._dbInfo,e=d.db.transaction(d.storeName,\"readwrite\"),f=e.objectStore(d.storeName),g=f.clear();e.oncomplete=function(){a()},e.onabort=e.onerror=function(){var a=g.error?g.error:g.transaction.error;c(a)}})[\"catch\"](c)});return j(c,a),c}function D(a){var b=this,c=new ia(function(a,c){b.ready().then(function(){var d=b._dbInfo,e=d.db.transaction(d.storeName,\"readonly\").objectStore(d.storeName),f=e.count();f.onsuccess=function(){a(f.result)},f.onerror=function(){c(f.error)}})[\"catch\"](c)});return j(c,a),c}function E(a,b){var c=this,d=new ia(function(b,d){return 0>a?void b(null):void c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readonly\").objectStore(e.storeName),g=!1,h=f.openCursor();h.onsuccess=function(){var c=h.result;return c?void(0===a?b(c.key):g?b(c.key):(g=!0,c.advance(a))):void b(null)},h.onerror=function(){d(h.error)}})[\"catch\"](d)});return j(d,b),d}function F(a){var b=this,c=new ia(function(a,c){b.ready().then(function(){var d=b._dbInfo,e=d.db.transaction(d.storeName,\"readonly\").objectStore(d.storeName),f=e.openCursor(),g=[];f.onsuccess=function(){var b=f.result;return b?(g.push(b.key),void b[\"continue\"]()):void a(g)},f.onerror=function(){c(f.error)}})[\"catch\"](c)});return j(c,a),c}function G(a){var b,c,d,e,f,g=.75*a.length,h=a.length,i=0;\"=\"===a[a.length-1]&&(g--,\"=\"===a[a.length-2]&&g--);var j=new ArrayBuffer(g),k=new Uint8Array(j);for(b=0;h>b;b+=4)c=la.indexOf(a[b]),d=la.indexOf(a[b+1]),e=la.indexOf(a[b+2]),f=la.indexOf(a[b+3]),k[i++]=c<<2|d>>4,k[i++]=(15&d)<<4|e>>2,k[i++]=(3&e)<<6|63&f;return j}function H(a){var b,c=new Uint8Array(a),d=\"\";for(b=0;b<c.length;b+=3)d+=la[c[b]>>2],d+=la[(3&c[b])<<4|c[b+1]>>4],d+=la[(15&c[b+1])<<2|c[b+2]>>6],d+=la[63&c[b+2]];return c.length%3===2?d=d.substring(0,d.length-1)+\"=\":c.length%3===1&&(d=d.substring(0,d.length-2)+\"==\"),d}function I(a,b){var c=\"\";if(a&&(c=a.toString()),a&&(\"[object ArrayBuffer]\"===a.toString()||a.buffer&&\"[object ArrayBuffer]\"===a.buffer.toString())){var d,e=oa;a instanceof ArrayBuffer?(d=a,e+=qa):(d=a.buffer,\"[object Int8Array]\"===c?e+=sa:\"[object Uint8Array]\"===c?e+=ta:\"[object Uint8ClampedArray]\"===c?e+=ua:\"[object Int16Array]\"===c?e+=va:\"[object Uint16Array]\"===c?e+=xa:\"[object Int32Array]\"===c?e+=wa:\"[object Uint32Array]\"===c?e+=ya:\"[object Float32Array]\"===c?e+=za:\"[object Float64Array]\"===c?e+=Aa:b(new Error(\"Failed to get type for BinaryArray\"))),b(e+H(d))}else if(\"[object Blob]\"===c){var f=new FileReader;f.onload=function(){var c=ma+a.type+\"~\"+H(this.result);b(oa+ra+c)},f.readAsArrayBuffer(a)}else try{b(JSON.stringify(a))}catch(g){console.error(\"Couldn't convert value into a JSON string: \",a),b(null,g)}}function J(a){if(a.substring(0,pa)!==oa)return JSON.parse(a);var b,c=a.substring(Ba),d=a.substring(pa,Ba);if(d===ra&&na.test(c)){var e=c.match(na);b=e[1],c=c.substring(e[0].length)}var f=G(c);switch(d){case qa:return f;case ra:return i([f],{type:b});case sa:return new Int8Array(f);case ta:return new Uint8Array(f);case ua:return new Uint8ClampedArray(f);case va:return new Int16Array(f);case xa:return new Uint16Array(f);case wa:return new Int32Array(f);case ya:return new Uint32Array(f);case za:return new Float32Array(f);case Aa:return new Float64Array(f);default:throw new Error(\"Unkown type: \"+d)}}function K(a){var b=this,c={db:null};if(a)for(var d in a)c[d]=\"string\"!=typeof a[d]?a[d].toString():a[d];var e=new ia(function(a,d){try{c.db=openDatabase(c.name,String(c.version),c.description,c.size)}catch(e){return d(e)}c.db.transaction(function(e){e.executeSql(\"CREATE TABLE IF NOT EXISTS \"+c.storeName+\" (id INTEGER PRIMARY KEY, key unique, value)\",[],function(){b._dbInfo=c,a()},function(a,b){d(b)})})});return c.serializer=Ca,e}function L(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ia(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"SELECT * FROM \"+e.storeName+\" WHERE key = ? LIMIT 1\",[a],function(a,c){var d=c.rows.length?c.rows.item(0).value:null;d&&(d=e.serializer.deserialize(d)),b(d)},function(a,b){d(b)})})})[\"catch\"](d)});return j(d,b),d}function M(a,b){var c=this,d=new ia(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"SELECT * FROM \"+e.storeName,[],function(c,d){for(var f=d.rows,g=f.length,h=0;g>h;h++){var i=f.item(h),j=i.value;if(j&&(j=e.serializer.deserialize(j)),j=a(j,i.key,h+1),void 0!==j)return void b(j)}b()},function(a,b){d(b)})})})[\"catch\"](d)});return j(d,b),d}function N(a,b,c){var d=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var e=new ia(function(c,e){d.ready().then(function(){void 0===b&&(b=null);var f=b,g=d._dbInfo;g.serializer.serialize(b,function(b,d){d?e(d):g.db.transaction(function(d){d.executeSql(\"INSERT OR REPLACE INTO \"+g.storeName+\" (key, value) VALUES (?, ?)\",[a,b],function(){c(f)},function(a,b){e(b)})},function(a){a.code===a.QUOTA_ERR&&e(a)})})})[\"catch\"](e)});return j(e,c),e}function O(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ia(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"DELETE FROM \"+e.storeName+\" WHERE key = ?\",[a],function(){b()},function(a,b){d(b)})})})[\"catch\"](d)});return j(d,b),d}function P(a){var b=this,c=new ia(function(a,c){b.ready().then(function(){var d=b._dbInfo;d.db.transaction(function(b){b.executeSql(\"DELETE FROM \"+d.storeName,[],function(){a()},function(a,b){c(b)})})})[\"catch\"](c)});return j(c,a),c}function Q(a){var b=this,c=new ia(function(a,c){b.ready().then(function(){var d=b._dbInfo;d.db.transaction(function(b){b.executeSql(\"SELECT COUNT(key) as c FROM \"+d.storeName,[],function(b,c){var d=c.rows.item(0).c;a(d)},function(a,b){c(b)})})})[\"catch\"](c)});return j(c,a),c}function R(a,b){var c=this,d=new ia(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"SELECT key FROM \"+e.storeName+\" WHERE id = ? LIMIT 1\",[a+1],function(a,c){var d=c.rows.length?c.rows.item(0).key:null;b(d)},function(a,b){d(b)})})})[\"catch\"](d)});return j(d,b),d}function S(a){var b=this,c=new ia(function(a,c){b.ready().then(function(){var d=b._dbInfo;d.db.transaction(function(b){b.executeSql(\"SELECT key FROM \"+d.storeName,[],function(b,c){for(var d=[],e=0;e<c.rows.length;e++)d.push(c.rows.item(e).key);a(d)},function(a,b){c(b)})})})[\"catch\"](c)});return j(c,a),c}function T(a){var b=this,c={};if(a)for(var d in a)c[d]=a[d];return c.keyPrefix=c.name+\"/\",c.storeName!==b._defaultConfig.storeName&&(c.keyPrefix+=c.storeName+\"/\"),b._dbInfo=c,c.serializer=Ca,ia.resolve()}function U(a){var b=this,c=b.ready().then(function(){for(var a=b._dbInfo.keyPrefix,c=localStorage.length-1;c>=0;c--){var d=localStorage.key(c);0===d.indexOf(a)&&localStorage.removeItem(d)}});return j(c,a),c}function V(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=c.ready().then(function(){var b=c._dbInfo,d=localStorage.getItem(b.keyPrefix+a);return d&&(d=b.serializer.deserialize(d)),d});return j(d,b),d}function W(a,b){var c=this,d=c.ready().then(function(){for(var b=c._dbInfo,d=b.keyPrefix,e=d.length,f=localStorage.length,g=1,h=0;f>h;h++){var i=localStorage.key(h);if(0===i.indexOf(d)){var j=localStorage.getItem(i);if(j&&(j=b.serializer.deserialize(j)),j=a(j,i.substring(e),g++),void 0!==j)return j}}});return j(d,b),d}function X(a,b){var c=this,d=c.ready().then(function(){var b,d=c._dbInfo;try{b=localStorage.key(a)}catch(e){b=null}return b&&(b=b.substring(d.keyPrefix.length)),b});return j(d,b),d}function Y(a){var b=this,c=b.ready().then(function(){for(var a=b._dbInfo,c=localStorage.length,d=[],e=0;c>e;e++)0===localStorage.key(e).indexOf(a.keyPrefix)&&d.push(localStorage.key(e).substring(a.keyPrefix.length));return d});return j(c,a),c}function Z(a){var b=this,c=b.keys().then(function(a){return a.length});return j(c,a),c}function $(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=c.ready().then(function(){var b=c._dbInfo;localStorage.removeItem(b.keyPrefix+a)});return j(d,b),d}function _(a,b,c){var d=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var e=d.ready().then(function(){void 0===b&&(b=null);var c=b;return new ia(function(e,f){var g=d._dbInfo;g.serializer.serialize(b,function(b,d){if(d)f(d);else try{localStorage.setItem(g.keyPrefix+a,b),e(c)}catch(h){\"QuotaExceededError\"!==h.name&&\"NS_ERROR_DOM_QUOTA_REACHED\"!==h.name||f(h),f(h)}})})});return j(e,c),e}function aa(a,b,c){\"function\"==typeof b&&a.then(b),\"function\"==typeof c&&a[\"catch\"](c)}function ba(a,b){a[b]=function(){var c=arguments;return a.ready().then(function(){return a[b].apply(a,c)})}}function ca(){for(var a=1;a<arguments.length;a++){var b=arguments[a];if(b)for(var c in b)b.hasOwnProperty(c)&&(La(b[c])?arguments[0][c]=b[c].slice():arguments[0][c]=b[c])}return arguments[0]}function da(a){for(var b in Ga)if(Ga.hasOwnProperty(b)&&Ga[b]===a)return!0;return!1}var ea=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&\"function\"==typeof Symbol&&a.constructor===Symbol?\"symbol\":typeof a},fa=e();\"undefined\"==typeof Promise&&\"undefined\"!=typeof a&&a(3);var ga,ha,ia=Promise,ja=\"local-forage-detect-blob-support\",ka={_driver:\"asyncStorage\",_initStorage:x,iterate:z,getItem:y,setItem:A,removeItem:B,clear:C,length:D,key:E,keys:F},la=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",ma=\"~~local_forage_type~\",na=/^~~local_forage_type~([^~]+)~/,oa=\"__lfsc__:\",pa=oa.length,qa=\"arbf\",ra=\"blob\",sa=\"si08\",ta=\"ui08\",ua=\"uic8\",va=\"si16\",wa=\"si32\",xa=\"ur16\",ya=\"ui32\",za=\"fl32\",Aa=\"fl64\",Ba=pa+qa.length,Ca={serialize:I,deserialize:J,stringToBuffer:G,bufferToString:H},Da={_driver:\"webSQLStorage\",_initStorage:K,iterate:M,getItem:L,setItem:N,removeItem:O,clear:P,length:Q,key:R,keys:S},Ea={_driver:\"localStorageWrapper\",_initStorage:T,iterate:W,getItem:V,setItem:_,removeItem:$,clear:U,length:Z,key:X,keys:Y},Fa={},Ga={INDEXEDDB:\"asyncStorage\",LOCALSTORAGE:\"localStorageWrapper\",WEBSQL:\"webSQLStorage\"},Ha=[Ga.INDEXEDDB,Ga.WEBSQL,Ga.LOCALSTORAGE],Ia=[\"clear\",\"getItem\",\"iterate\",\"key\",\"keys\",\"length\",\"removeItem\",\"setItem\"],Ja={description:\"\",driver:Ha.slice(),name:\"localforage\",size:4980736,storeName:\"keyvaluepairs\",version:1},Ka={};Ka[Ga.INDEXEDDB]=f(),Ka[Ga.WEBSQL]=g(),Ka[Ga.LOCALSTORAGE]=h();var La=Array.isArray||function(a){return\"[object Array]\"===Object.prototype.toString.call(a)},Ma=function(){function a(b){d(this,a),this.INDEXEDDB=Ga.INDEXEDDB,this.LOCALSTORAGE=Ga.LOCALSTORAGE,this.WEBSQL=Ga.WEBSQL,this._defaultConfig=ca({},Ja),this._config=ca({},this._defaultConfig,b),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver)}return a.prototype.config=function(a){if(\"object\"===(\"undefined\"==typeof a?\"undefined\":ea(a))){if(this._ready)return new Error(\"Can't call config() after localforage has been used.\");for(var b in a)\"storeName\"===b&&(a[b]=a[b].replace(/\\W/g,\"_\")),this._config[b]=a[b];return\"driver\"in a&&a.driver&&this.setDriver(this._config.driver),!0}return\"string\"==typeof a?this._config[a]:this._config},a.prototype.defineDriver=function(a,b,c){var d=new ia(function(b,c){try{var d=a._driver,e=new Error(\"Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver\"),f=new Error(\"Custom driver name already in use: \"+a._driver);if(!a._driver)return void c(e);if(da(a._driver))return void c(f);for(var g=Ia.concat(\"_initStorage\"),h=0;h<g.length;h++){var i=g[h];if(!i||!a[i]||\"function\"!=typeof a[i])return void c(e)}var j=ia.resolve(!0);\"_support\"in a&&(j=a._support&&\"function\"==typeof a._support?a._support():ia.resolve(!!a._support)),j.then(function(c){Ka[d]=c,Fa[d]=a,b()},c)}catch(k){c(k)}});return aa(d,b,c),d},a.prototype.driver=function(){return this._driver||null},a.prototype.getDriver=function(a,b,c){var d=this,e=ia.resolve().then(function(){if(!da(a)){if(Fa[a])return Fa[a];throw new Error(\"Driver not found.\")}switch(a){case d.INDEXEDDB:return ka;case d.LOCALSTORAGE:return Ea;case d.WEBSQL:return Da}});return aa(e,b,c),e},a.prototype.getSerializer=function(a){var b=ia.resolve(Ca);return aa(b,a),b},a.prototype.ready=function(a){var b=this,c=b._driverSet.then(function(){return null===b._ready&&(b._ready=b._initDriver()),b._ready});return aa(c,a,a),c},a.prototype.setDriver=function(a,b,c){function d(){f._config.driver=f.driver()}function e(a){return function(){function b(){for(;c<a.length;){var e=a[c];return c++,f._dbInfo=null,f._ready=null,f.getDriver(e).then(function(a){return f._extend(a),d(),f._ready=f._initStorage(f._config),f._ready})[\"catch\"](b)}d();var g=new Error(\"No available storage method found.\");return f._driverSet=ia.reject(g),f._driverSet}var c=0;return b()}}var f=this;La(a)||(a=[a]);var g=this._getSupportedDrivers(a),h=null!==this._driverSet?this._driverSet[\"catch\"](function(){return ia.resolve()}):ia.resolve();return this._driverSet=h.then(function(){var a=g[0];return f._dbInfo=null,f._ready=null,f.getDriver(a).then(function(a){f._driver=a._driver,d(),f._wrapLibraryMethodsWithReady(),f._initDriver=e(g)})})[\"catch\"](function(){d();var a=new Error(\"No available storage method found.\");return f._driverSet=ia.reject(a),f._driverSet}),aa(this._driverSet,b,c),this._driverSet},a.prototype.supports=function(a){return!!Ka[a]},a.prototype._extend=function(a){ca(this,a)},a.prototype._getSupportedDrivers=function(a){for(var b=[],c=0,d=a.length;d>c;c++){var e=a[c];this.supports(e)&&b.push(e)}return b},a.prototype._wrapLibraryMethodsWithReady=function(){for(var a=0;a<Ia.length;a++)ba(this,Ia[a])},a.prototype.createInstance=function(b){return new a(b)},a}(),Na=new Ma;b.exports=Na},{3:3}]},{},[4])(4)});\n",
    "/*! VelocityJS.org (1.4.1). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n!function(a){\"use strict\";function b(a){var b=a.length,d=c.type(a);return\"function\"!==d&&!c.isWindow(a)&&(!(1!==a.nodeType||!b)||(\"array\"===d||0===b||\"number\"==typeof b&&b>0&&b-1 in a))}if(!a.jQuery){var c=function(a,b){return new c.fn.init(a,b)};c.isWindow=function(a){return a&&a===a.window},c.type=function(a){return a?\"object\"==typeof a||\"function\"==typeof a?e[g.call(a)]||\"object\":typeof a:a+\"\"},c.isArray=Array.isArray||function(a){return\"array\"===c.type(a)},c.isPlainObject=function(a){var b;if(!a||\"object\"!==c.type(a)||a.nodeType||c.isWindow(a))return!1;try{if(a.constructor&&!f.call(a,\"constructor\")&&!f.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(d){return!1}for(b in a);return void 0===b||f.call(a,b)},c.each=function(a,c,d){var e,f=0,g=a.length,h=b(a);if(d){if(h)for(;f<g&&(e=c.apply(a[f],d),e!==!1);f++);else for(f in a)if(a.hasOwnProperty(f)&&(e=c.apply(a[f],d),e===!1))break}else if(h)for(;f<g&&(e=c.call(a[f],f,a[f]),e!==!1);f++);else for(f in a)if(a.hasOwnProperty(f)&&(e=c.call(a[f],f,a[f]),e===!1))break;return a},c.data=function(a,b,e){if(void 0===e){var f=a[c.expando],g=f&&d[f];if(void 0===b)return g;if(g&&b in g)return g[b]}else if(void 0!==b){var h=a[c.expando]||(a[c.expando]=++c.uuid);return d[h]=d[h]||{},d[h][b]=e,e}},c.removeData=function(a,b){var e=a[c.expando],f=e&&d[e];f&&(b?c.each(b,function(a,b){delete f[b]}):delete d[e])},c.extend=function(){var a,b,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;for(\"boolean\"==typeof h&&(k=h,h=arguments[i]||{},i++),\"object\"!=typeof h&&\"function\"!==c.type(h)&&(h={}),i===j&&(h=this,i--);i<j;i++)if(f=arguments[i])for(e in f)f.hasOwnProperty(e)&&(a=h[e],d=f[e],h!==d&&(k&&d&&(c.isPlainObject(d)||(b=c.isArray(d)))?(b?(b=!1,g=a&&c.isArray(a)?a:[]):g=a&&c.isPlainObject(a)?a:{},h[e]=c.extend(k,g,d)):void 0!==d&&(h[e]=d)));return h},c.queue=function(a,d,e){function f(a,c){var d=c||[];return a&&(b(Object(a))?!function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;)a[e++]=b[d++];if(c!==c)for(;void 0!==b[d];)a[e++]=b[d++];return a.length=e,a}(d,\"string\"==typeof a?[a]:a):[].push.call(d,a)),d}if(a){d=(d||\"fx\")+\"queue\";var g=c.data(a,d);return e?(!g||c.isArray(e)?g=c.data(a,d,f(e)):g.push(e),g):g||[]}},c.dequeue=function(a,b){c.each(a.nodeType?[a]:a,function(a,d){b=b||\"fx\";var e=c.queue(d,b),f=e.shift();\"inprogress\"===f&&(f=e.shift()),f&&(\"fx\"===b&&e.unshift(\"inprogress\"),f.call(d,function(){c.dequeue(d,b)}))})},c.fn=c.prototype={init:function(a){if(a.nodeType)return this[0]=a,this;throw new Error(\"Not a DOM node.\")},offset:function(){var b=this[0].getBoundingClientRect?this[0].getBoundingClientRect():{top:0,left:0};return{top:b.top+(a.pageYOffset||document.scrollTop||0)-(document.clientTop||0),left:b.left+(a.pageXOffset||document.scrollLeft||0)-(document.clientLeft||0)}},position:function(){function a(a){for(var b=a.offsetParent;b&&\"html\"!==b.nodeName.toLowerCase()&&b.style&&\"static\"===b.style.position;)b=b.offsetParent;return b||document}var b=this[0],d=a(b),e=this.offset(),f=/^(?:body|html)$/i.test(d.nodeName)?{top:0,left:0}:c(d).offset();return e.top-=parseFloat(b.style.marginTop)||0,e.left-=parseFloat(b.style.marginLeft)||0,d.style&&(f.top+=parseFloat(d.style.borderTopWidth)||0,f.left+=parseFloat(d.style.borderLeftWidth)||0),{top:e.top-f.top,left:e.left-f.left}}};var d={};c.expando=\"velocity\"+(new Date).getTime(),c.uuid=0;for(var e={},f=e.hasOwnProperty,g=e.toString,h=\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),i=0;i<h.length;i++)e[\"[object \"+h[i]+\"]\"]=h[i].toLowerCase();c.fn.init.prototype=c.fn,a.Velocity={Utilities:c}}}(window),function(a){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a():\"function\"==typeof define&&define.amd?define('velocity',a):a()}(function(){\"use strict\";return function(a,b,c,d){function e(a){for(var b=-1,c=a?a.length:0,d=[];++b<c;){var e=a[b];e&&d.push(e)}return d}function f(a){return s.isWrapped(a)?a=[].slice.call(a):s.isNode(a)&&(a=[a]),a}function g(a){var b=o.data(a,\"velocity\");return null===b?d:b}function h(a,b){var c=g(a);c&&c.delayTimer&&!c.delayPaused&&(c.delayRemaining=c.delay-b+c.delayBegin,c.delayPaused=!0,clearTimeout(c.delayTimer.setTimeout))}function i(a,b){var c=g(a);c&&c.delayTimer&&c.delayPaused&&(c.delayPaused=!1,c.delayTimer.setTimeout=setTimeout(c.delayTimer.next,c.delayRemaining))}function j(a){return function(b){return Math.round(b*a)*(1/a)}}function k(a,c,d,e){function f(a,b){return 1-3*b+3*a}function g(a,b){return 3*b-6*a}function h(a){return 3*a}function i(a,b,c){return((f(b,c)*a+g(b,c))*a+h(b))*a}function j(a,b,c){return 3*f(b,c)*a*a+2*g(b,c)*a+h(b)}function k(b,c){for(var e=0;e<p;++e){var f=j(c,a,d);if(0===f)return c;var g=i(c,a,d)-b;c-=g/f}return c}function l(){for(var b=0;b<t;++b)x[b]=i(b*u,a,d)}function m(b,c,e){var f,g,h=0;do g=c+(e-c)/2,f=i(g,a,d)-b,f>0?e=g:c=g;while(Math.abs(f)>r&&++h<s);return g}function n(b){for(var c=0,e=1,f=t-1;e!==f&&x[e]<=b;++e)c+=u;--e;var g=(b-x[e])/(x[e+1]-x[e]),h=c+g*u,i=j(h,a,d);return i>=q?k(b,h):0===i?h:m(b,c,c+u)}function o(){y=!0,a===c&&d===e||l()}var p=4,q=.001,r=1e-7,s=10,t=11,u=1/(t-1),v=\"Float32Array\"in b;if(4!==arguments.length)return!1;for(var w=0;w<4;++w)if(\"number\"!=typeof arguments[w]||isNaN(arguments[w])||!isFinite(arguments[w]))return!1;a=Math.min(a,1),d=Math.min(d,1),a=Math.max(a,0),d=Math.max(d,0);var x=v?new Float32Array(t):new Array(t),y=!1,z=function(b){return y||o(),a===c&&d===e?b:0===b?0:1===b?1:i(n(b),c,e)};z.getControlPoints=function(){return[{x:a,y:c},{x:d,y:e}]};var A=\"generateBezier(\"+[a,c,d,e]+\")\";return z.toString=function(){return A},z}function l(a,b){var c=a;return s.isString(a)?w.Easings[a]||(c=!1):c=s.isArray(a)&&1===a.length?j.apply(null,a):s.isArray(a)&&2===a.length?x.apply(null,a.concat([b])):!(!s.isArray(a)||4!==a.length)&&k.apply(null,a),c===!1&&(c=w.Easings[w.defaults.easing]?w.defaults.easing:v),c}function m(a){if(a){var b=w.timestamp&&a!==!0?a:r.now(),c=w.State.calls.length;c>1e4&&(w.State.calls=e(w.State.calls),c=w.State.calls.length);for(var f=0;f<c;f++)if(w.State.calls[f]){var h=w.State.calls[f],i=h[0],j=h[2],k=h[3],l=!!k,q=null,t=h[5],u=h[6];if(k||(k=w.State.calls[f][3]=b-16),t){if(t.resume!==!0)continue;k=h[3]=Math.round(b-u-16),h[5]=null}u=h[6]=b-k;for(var v=Math.min(u/j.duration,1),x=0,z=i.length;x<z;x++){var B=i[x],C=B.element;if(g(C)){var D=!1;if(j.display!==d&&null!==j.display&&\"none\"!==j.display){if(\"flex\"===j.display){var E=[\"-webkit-box\",\"-moz-box\",\"-ms-flexbox\",\"-webkit-flex\"];o.each(E,function(a,b){y.setPropertyValue(C,\"display\",b)})}y.setPropertyValue(C,\"display\",j.display)}j.visibility!==d&&\"hidden\"!==j.visibility&&y.setPropertyValue(C,\"visibility\",j.visibility);for(var F in B)if(B.hasOwnProperty(F)&&\"element\"!==F){var G,H=B[F],I=s.isString(H.easing)?w.Easings[H.easing]:H.easing;if(s.isString(H.pattern)){var J=1===v?function(a,b,c){var d=H.endValue[b];return c?Math.round(d):d}:function(a,b,c){var d=H.startValue[b],e=H.endValue[b]-d,f=d+e*I(v,j,e);return c?Math.round(f):f};G=H.pattern.replace(/{(\\d+)(!)?}/g,J)}else if(1===v)G=H.endValue;else{var K=H.endValue-H.startValue;G=H.startValue+K*I(v,j,K)}if(!l&&G===H.currentValue)continue;if(H.currentValue=G,\"tween\"===F)q=G;else{var L;if(y.Hooks.registered[F]){L=y.Hooks.getRoot(F);var M=g(C).rootPropertyValueCache[L];M&&(H.rootPropertyValue=M)}var N=y.setPropertyValue(C,F,H.currentValue+(p<9&&0===parseFloat(G)?\"\":H.unitType),H.rootPropertyValue,H.scrollData);y.Hooks.registered[F]&&(y.Normalizations.registered[L]?g(C).rootPropertyValueCache[L]=y.Normalizations.registered[L](\"extract\",null,N[1]):g(C).rootPropertyValueCache[L]=N[1]),\"transform\"===N[0]&&(D=!0)}}j.mobileHA&&g(C).transformCache.translate3d===d&&(g(C).transformCache.translate3d=\"(0px, 0px, 0px)\",D=!0),D&&y.flushTransformCache(C)}}j.display!==d&&\"none\"!==j.display&&(w.State.calls[f][2].display=!1),j.visibility!==d&&\"hidden\"!==j.visibility&&(w.State.calls[f][2].visibility=!1),j.progress&&j.progress.call(h[1],h[1],v,Math.max(0,k+j.duration-b),k,q),1===v&&n(f)}}w.State.isTicking&&A(m)}function n(a,b){if(!w.State.calls[a])return!1;for(var c=w.State.calls[a][0],e=w.State.calls[a][1],f=w.State.calls[a][2],h=w.State.calls[a][4],i=!1,j=0,k=c.length;j<k;j++){var l=c[j].element;b||f.loop||(\"none\"===f.display&&y.setPropertyValue(l,\"display\",f.display),\"hidden\"===f.visibility&&y.setPropertyValue(l,\"visibility\",f.visibility));var m=g(l);if(f.loop!==!0&&(o.queue(l)[1]===d||!/\\.velocityQueueEntryFlag/i.test(o.queue(l)[1]))&&m){m.isAnimating=!1,m.rootPropertyValueCache={};var n=!1;o.each(y.Lists.transforms3D,function(a,b){var c=/^scale/.test(b)?1:0,e=m.transformCache[b];m.transformCache[b]!==d&&new RegExp(\"^\\\\(\"+c+\"[^.]\").test(e)&&(n=!0,delete m.transformCache[b])}),f.mobileHA&&(n=!0,delete m.transformCache.translate3d),n&&y.flushTransformCache(l),y.Values.removeClass(l,\"velocity-animating\")}if(!b&&f.complete&&!f.loop&&j===k-1)try{f.complete.call(e,e)}catch(p){setTimeout(function(){throw p},1)}h&&f.loop!==!0&&h(e),m&&f.loop===!0&&!b&&(o.each(m.tweensContainer,function(a,b){if(/^rotate/.test(a)&&(parseFloat(b.startValue)-parseFloat(b.endValue))%360===0){var c=b.startValue;b.startValue=b.endValue,b.endValue=c}/^backgroundPosition/.test(a)&&100===parseFloat(b.endValue)&&\"%\"===b.unitType&&(b.endValue=0,b.startValue=100)}),w(l,\"reverse\",{loop:!0,delay:f.delay})),f.queue!==!1&&o.dequeue(l,f.queue)}w.State.calls[a]=!1;for(var q=0,r=w.State.calls.length;q<r;q++)if(w.State.calls[q]!==!1){i=!0;break}i===!1&&(w.State.isTicking=!1,delete w.State.calls,w.State.calls=[])}var o,p=function(){if(c.documentMode)return c.documentMode;for(var a=7;a>4;a--){var b=c.createElement(\"div\");if(b.innerHTML=\"<!--[if IE \"+a+\"]><span></span><![endif]-->\",b.getElementsByTagName(\"span\").length)return b=null,a}return d}(),q=function(){var a=0;return b.webkitRequestAnimationFrame||b.mozRequestAnimationFrame||function(b){var c,d=(new Date).getTime();return c=Math.max(0,16-(d-a)),a=d+c,setTimeout(function(){b(d+c)},c)}}(),r=function(){var a=b.performance||{};if(!a.hasOwnProperty(\"now\")){var c=a.timing&&a.timing.domComplete?a.timing.domComplete:(new Date).getTime();a.now=function(){return(new Date).getTime()-c}}return a}(),s={isNumber:function(a){return\"number\"==typeof a},isString:function(a){return\"string\"==typeof a},isArray:Array.isArray||function(a){return\"[object Array]\"===Object.prototype.toString.call(a)},isFunction:function(a){return\"[object Function]\"===Object.prototype.toString.call(a)},isNode:function(a){return a&&a.nodeType},isWrapped:function(a){return a&&s.isNumber(a.length)&&!s.isString(a)&&!s.isFunction(a)&&!s.isNode(a)&&(0===a.length||s.isNode(a[0]))},isSVG:function(a){return b.SVGElement&&a instanceof b.SVGElement},isEmptyObject:function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}},t=!1;if(a.fn&&a.fn.jquery?(o=a,t=!0):o=b.Velocity.Utilities,p<=8&&!t)throw new Error(\"Velocity: IE8 and below require jQuery to be loaded before Velocity.\");if(p<=7)return void(jQuery.fn.velocity=jQuery.fn.animate);var u=400,v=\"swing\",w={State:{isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),isAndroid:/Android/i.test(navigator.userAgent),isGingerbread:/Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),isChrome:b.chrome,isFirefox:/Firefox/i.test(navigator.userAgent),prefixElement:c.createElement(\"div\"),prefixMatches:{},scrollAnchor:null,scrollPropertyLeft:null,scrollPropertyTop:null,isTicking:!1,calls:[],delayedElements:{count:0}},CSS:{},Utilities:o,Redirects:{},Easings:{},Promise:b.Promise,defaults:{queue:\"\",duration:u,easing:v,begin:d,complete:d,progress:d,display:d,visibility:d,loop:!1,delay:!1,mobileHA:!0,_cacheValues:!0,promiseRejectEmpty:!0},init:function(a){o.data(a,\"velocity\",{isSVG:s.isSVG(a),isAnimating:!1,computedStyle:null,tweensContainer:null,rootPropertyValueCache:{},transformCache:{}})},hook:null,mock:!1,version:{major:1,minor:4,patch:1},debug:!1,timestamp:!0,pauseAll:function(a){var b=(new Date).getTime();o.each(w.State.calls,function(b,c){if(c){if(a!==d&&(c[2].queue!==a||c[2].queue===!1))return!0;c[5]={resume:!1}}}),o.each(w.State.delayedElements,function(a,c){c&&h(c,b)})},resumeAll:function(a){var b=(new Date).getTime();o.each(w.State.calls,function(b,c){if(c){if(a!==d&&(c[2].queue!==a||c[2].queue===!1))return!0;c[5]&&(c[5].resume=!0)}}),o.each(w.State.delayedElements,function(a,c){c&&i(c,b)})}};b.pageYOffset!==d?(w.State.scrollAnchor=b,w.State.scrollPropertyLeft=\"pageXOffset\",w.State.scrollPropertyTop=\"pageYOffset\"):(w.State.scrollAnchor=c.documentElement||c.body.parentNode||c.body,w.State.scrollPropertyLeft=\"scrollLeft\",w.State.scrollPropertyTop=\"scrollTop\");var x=function(){function a(a){return-a.tension*a.x-a.friction*a.v}function b(b,c,d){var e={x:b.x+d.dx*c,v:b.v+d.dv*c,tension:b.tension,friction:b.friction};return{dx:e.v,dv:a(e)}}function c(c,d){var e={dx:c.v,dv:a(c)},f=b(c,.5*d,e),g=b(c,.5*d,f),h=b(c,d,g),i=1/6*(e.dx+2*(f.dx+g.dx)+h.dx),j=1/6*(e.dv+2*(f.dv+g.dv)+h.dv);return c.x=c.x+i*d,c.v=c.v+j*d,c}return function d(a,b,e){var f,g,h,i={x:-1,v:0,tension:null,friction:null},j=[0],k=0,l=1e-4,m=.016;for(a=parseFloat(a)||500,b=parseFloat(b)||20,e=e||null,i.tension=a,i.friction=b,f=null!==e,f?(k=d(a,b),g=k/e*m):g=m;;)if(h=c(h||i,g),j.push(1+h.x),k+=16,!(Math.abs(h.x)>l&&Math.abs(h.v)>l))break;return f?function(a){return j[a*(j.length-1)|0]}:k}}();w.Easings={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},spring:function(a){return 1-Math.cos(4.5*a*Math.PI)*Math.exp(6*-a)}},o.each([[\"ease\",[.25,.1,.25,1]],[\"ease-in\",[.42,0,1,1]],[\"ease-out\",[0,0,.58,1]],[\"ease-in-out\",[.42,0,.58,1]],[\"easeInSine\",[.47,0,.745,.715]],[\"easeOutSine\",[.39,.575,.565,1]],[\"easeInOutSine\",[.445,.05,.55,.95]],[\"easeInQuad\",[.55,.085,.68,.53]],[\"easeOutQuad\",[.25,.46,.45,.94]],[\"easeInOutQuad\",[.455,.03,.515,.955]],[\"easeInCubic\",[.55,.055,.675,.19]],[\"easeOutCubic\",[.215,.61,.355,1]],[\"easeInOutCubic\",[.645,.045,.355,1]],[\"easeInQuart\",[.895,.03,.685,.22]],[\"easeOutQuart\",[.165,.84,.44,1]],[\"easeInOutQuart\",[.77,0,.175,1]],[\"easeInQuint\",[.755,.05,.855,.06]],[\"easeOutQuint\",[.23,1,.32,1]],[\"easeInOutQuint\",[.86,0,.07,1]],[\"easeInExpo\",[.95,.05,.795,.035]],[\"easeOutExpo\",[.19,1,.22,1]],[\"easeInOutExpo\",[1,0,0,1]],[\"easeInCirc\",[.6,.04,.98,.335]],[\"easeOutCirc\",[.075,.82,.165,1]],[\"easeInOutCirc\",[.785,.135,.15,.86]]],function(a,b){w.Easings[b[0]]=k.apply(null,b[1])});var y=w.CSS={RegEx:{isHex:/^#([A-f\\d]{3}){1,2}$/i,valueUnwrap:/^[A-z]+\\((.*)\\)$/i,wrappedValueAlreadyExtracted:/[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,valueSplit:/([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/gi},Lists:{colors:[\"fill\",\"stroke\",\"stopColor\",\"color\",\"backgroundColor\",\"borderColor\",\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\",\"outlineColor\"],transformsBase:[\"translateX\",\"translateY\",\"scale\",\"scaleX\",\"scaleY\",\"skewX\",\"skewY\",\"rotateZ\"],transforms3D:[\"transformPerspective\",\"translateZ\",\"scaleZ\",\"rotateX\",\"rotateY\"],units:[\"%\",\"em\",\"ex\",\"ch\",\"rem\",\"vw\",\"vh\",\"vmin\",\"vmax\",\"cm\",\"mm\",\"Q\",\"in\",\"pc\",\"pt\",\"px\",\"deg\",\"grad\",\"rad\",\"turn\",\"s\",\"ms\"],colorNames:{aliceblue:\"240,248,255\",antiquewhite:\"250,235,215\",aquamarine:\"127,255,212\",aqua:\"0,255,255\",azure:\"240,255,255\",beige:\"245,245,220\",bisque:\"255,228,196\",black:\"0,0,0\",blanchedalmond:\"255,235,205\",blueviolet:\"138,43,226\",blue:\"0,0,255\",brown:\"165,42,42\",burlywood:\"222,184,135\",cadetblue:\"95,158,160\",chartreuse:\"127,255,0\",chocolate:\"210,105,30\",coral:\"255,127,80\",cornflowerblue:\"100,149,237\",cornsilk:\"255,248,220\",crimson:\"220,20,60\",cyan:\"0,255,255\",darkblue:\"0,0,139\",darkcyan:\"0,139,139\",darkgoldenrod:\"184,134,11\",darkgray:\"169,169,169\",darkgrey:\"169,169,169\",darkgreen:\"0,100,0\",darkkhaki:\"189,183,107\",darkmagenta:\"139,0,139\",darkolivegreen:\"85,107,47\",darkorange:\"255,140,0\",darkorchid:\"153,50,204\",darkred:\"139,0,0\",darksalmon:\"233,150,122\",darkseagreen:\"143,188,143\",darkslateblue:\"72,61,139\",darkslategray:\"47,79,79\",darkturquoise:\"0,206,209\",darkviolet:\"148,0,211\",deeppink:\"255,20,147\",deepskyblue:\"0,191,255\",dimgray:\"105,105,105\",dimgrey:\"105,105,105\",dodgerblue:\"30,144,255\",firebrick:\"178,34,34\",floralwhite:\"255,250,240\",forestgreen:\"34,139,34\",fuchsia:\"255,0,255\",gainsboro:\"220,220,220\",ghostwhite:\"248,248,255\",gold:\"255,215,0\",goldenrod:\"218,165,32\",gray:\"128,128,128\",grey:\"128,128,128\",greenyellow:\"173,255,47\",green:\"0,128,0\",honeydew:\"240,255,240\",hotpink:\"255,105,180\",indianred:\"205,92,92\",indigo:\"75,0,130\",ivory:\"255,255,240\",khaki:\"240,230,140\",lavenderblush:\"255,240,245\",lavender:\"230,230,250\",lawngreen:\"124,252,0\",lemonchiffon:\"255,250,205\",lightblue:\"173,216,230\",lightcoral:\"240,128,128\",lightcyan:\"224,255,255\",lightgoldenrodyellow:\"250,250,210\",lightgray:\"211,211,211\",lightgrey:\"211,211,211\",lightgreen:\"144,238,144\",lightpink:\"255,182,193\",lightsalmon:\"255,160,122\",lightseagreen:\"32,178,170\",lightskyblue:\"135,206,250\",lightslategray:\"119,136,153\",lightsteelblue:\"176,196,222\",lightyellow:\"255,255,224\",limegreen:\"50,205,50\",lime:\"0,255,0\",linen:\"250,240,230\",magenta:\"255,0,255\",maroon:\"128,0,0\",mediumaquamarine:\"102,205,170\",mediumblue:\"0,0,205\",mediumorchid:\"186,85,211\",mediumpurple:\"147,112,219\",mediumseagreen:\"60,179,113\",mediumslateblue:\"123,104,238\",mediumspringgreen:\"0,250,154\",mediumturquoise:\"72,209,204\",mediumvioletred:\"199,21,133\",midnightblue:\"25,25,112\",mintcream:\"245,255,250\",mistyrose:\"255,228,225\",moccasin:\"255,228,181\",navajowhite:\"255,222,173\",navy:\"0,0,128\",oldlace:\"253,245,230\",olivedrab:\"107,142,35\",olive:\"128,128,0\",orangered:\"255,69,0\",orange:\"255,165,0\",orchid:\"218,112,214\",palegoldenrod:\"238,232,170\",palegreen:\"152,251,152\",paleturquoise:\"175,238,238\",palevioletred:\"219,112,147\",papayawhip:\"255,239,213\",peachpuff:\"255,218,185\",peru:\"205,133,63\",pink:\"255,192,203\",plum:\"221,160,221\",powderblue:\"176,224,230\",purple:\"128,0,128\",red:\"255,0,0\",rosybrown:\"188,143,143\",royalblue:\"65,105,225\",saddlebrown:\"139,69,19\",salmon:\"250,128,114\",sandybrown:\"244,164,96\",seagreen:\"46,139,87\",seashell:\"255,245,238\",sienna:\"160,82,45\",silver:\"192,192,192\",skyblue:\"135,206,235\",slateblue:\"106,90,205\",slategray:\"112,128,144\",snow:\"255,250,250\",springgreen:\"0,255,127\",steelblue:\"70,130,180\",tan:\"210,180,140\",teal:\"0,128,128\",thistle:\"216,191,216\",tomato:\"255,99,71\",turquoise:\"64,224,208\",violet:\"238,130,238\",wheat:\"245,222,179\",whitesmoke:\"245,245,245\",white:\"255,255,255\",yellowgreen:\"154,205,50\",yellow:\"255,255,0\"}},Hooks:{templates:{textShadow:[\"Color X Y Blur\",\"black 0px 0px 0px\"],boxShadow:[\"Color X Y Blur Spread\",\"black 0px 0px 0px 0px\"],clip:[\"Top Right Bottom Left\",\"0px 0px 0px 0px\"],backgroundPosition:[\"X Y\",\"0% 0%\"],transformOrigin:[\"X Y Z\",\"50% 50% 0px\"],perspectiveOrigin:[\"X Y\",\"50% 50%\"]},registered:{},register:function(){for(var a=0;a<y.Lists.colors.length;a++){var b=\"color\"===y.Lists.colors[a]?\"0 0 0 1\":\"255 255 255 1\";y.Hooks.templates[y.Lists.colors[a]]=[\"Red Green Blue Alpha\",b]}var c,d,e;if(p)for(c in y.Hooks.templates)if(y.Hooks.templates.hasOwnProperty(c)){d=y.Hooks.templates[c],e=d[0].split(\" \");var f=d[1].match(y.RegEx.valueSplit);\"Color\"===e[0]&&(e.push(e.shift()),f.push(f.shift()),y.Hooks.templates[c]=[e.join(\" \"),f.join(\" \")])}for(c in y.Hooks.templates)if(y.Hooks.templates.hasOwnProperty(c)){d=y.Hooks.templates[c],e=d[0].split(\" \");for(var g in e)if(e.hasOwnProperty(g)){var h=c+e[g],i=g;y.Hooks.registered[h]=[c,i]}}},getRoot:function(a){var b=y.Hooks.registered[a];return b?b[0]:a},getUnit:function(a,b){var c=(a.substr(b||0,5).match(/^[a-z%]+/)||[])[0]||\"\";return c&&y.Lists.units.indexOf(c)>=0?c:\"\"},fixColors:function(a){return a.replace(/(rgba?\\(\\s*)?(\\b[a-z]+\\b)/g,function(a,b,c){return y.Lists.colorNames.hasOwnProperty(c)?(b?b:\"rgba(\")+y.Lists.colorNames[c]+(b?\"\":\",1)\"):b+c})},cleanRootPropertyValue:function(a,b){return y.RegEx.valueUnwrap.test(b)&&(b=b.match(y.RegEx.valueUnwrap)[1]),y.Values.isCSSNullValue(b)&&(b=y.Hooks.templates[a][1]),b},extractValue:function(a,b){var c=y.Hooks.registered[a];if(c){var d=c[0],e=c[1];return b=y.Hooks.cleanRootPropertyValue(d,b),b.toString().match(y.RegEx.valueSplit)[e]}return b},injectValue:function(a,b,c){var d=y.Hooks.registered[a];if(d){var e,f,g=d[0],h=d[1];return c=y.Hooks.cleanRootPropertyValue(g,c),e=c.toString().match(y.RegEx.valueSplit),e[h]=b,f=e.join(\" \")}return c}},Normalizations:{registered:{clip:function(a,b,c){switch(a){case\"name\":return\"clip\";case\"extract\":var d;return y.RegEx.wrappedValueAlreadyExtracted.test(c)?d=c:(d=c.toString().match(y.RegEx.valueUnwrap),d=d?d[1].replace(/,(\\s+)?/g,\" \"):c),d;case\"inject\":return\"rect(\"+c+\")\"}},blur:function(a,b,c){switch(a){case\"name\":return w.State.isFirefox?\"filter\":\"-webkit-filter\";case\"extract\":var d=parseFloat(c);if(!d&&0!==d){var e=c.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i);d=e?e[1]:0}return d;case\"inject\":return parseFloat(c)?\"blur(\"+c+\")\":\"none\"}},opacity:function(a,b,c){if(p<=8)switch(a){case\"name\":return\"filter\";case\"extract\":var d=c.toString().match(/alpha\\(opacity=(.*)\\)/i);return c=d?d[1]/100:1;case\"inject\":return b.style.zoom=1,parseFloat(c)>=1?\"\":\"alpha(opacity=\"+parseInt(100*parseFloat(c),10)+\")\"}else switch(a){case\"name\":return\"opacity\";case\"extract\":return c;case\"inject\":return c}}},register:function(){function a(a,b,c){var d=\"border-box\"===y.getPropertyValue(b,\"boxSizing\").toString().toLowerCase();if(d===(c||!1)){var e,f,g=0,h=\"width\"===a?[\"Left\",\"Right\"]:[\"Top\",\"Bottom\"],i=[\"padding\"+h[0],\"padding\"+h[1],\"border\"+h[0]+\"Width\",\"border\"+h[1]+\"Width\"];for(e=0;e<i.length;e++)f=parseFloat(y.getPropertyValue(b,i[e])),isNaN(f)||(g+=f);return c?-g:g}return 0}function b(b,c){return function(d,e,f){switch(d){case\"name\":return b;case\"extract\":return parseFloat(f)+a(b,e,c);case\"inject\":return parseFloat(f)-a(b,e,c)+\"px\"}}}p&&!(p>9)||w.State.isGingerbread||(y.Lists.transformsBase=y.Lists.transformsBase.concat(y.Lists.transforms3D));for(var c=0;c<y.Lists.transformsBase.length;c++)!function(){var a=y.Lists.transformsBase[c];y.Normalizations.registered[a]=function(b,c,e){switch(b){case\"name\":return\"transform\";case\"extract\":return g(c)===d||g(c).transformCache[a]===d?/^scale/i.test(a)?1:0:g(c).transformCache[a].replace(/[()]/g,\"\");case\"inject\":var f=!1;switch(a.substr(0,a.length-1)){case\"translate\":f=!/(%|px|em|rem|vw|vh|\\d)$/i.test(e);break;case\"scal\":case\"scale\":w.State.isAndroid&&g(c).transformCache[a]===d&&e<1&&(e=1),f=!/(\\d)$/i.test(e);break;case\"skew\":f=!/(deg|\\d)$/i.test(e);break;case\"rotate\":f=!/(deg|\\d)$/i.test(e)}return f||(g(c).transformCache[a]=\"(\"+e+\")\"),g(c).transformCache[a]}}}();for(var e=0;e<y.Lists.colors.length;e++)!function(){var a=y.Lists.colors[e];y.Normalizations.registered[a]=function(b,c,e){switch(b){case\"name\":return a;case\"extract\":var f;if(y.RegEx.wrappedValueAlreadyExtracted.test(e))f=e;else{var g,h={black:\"rgb(0, 0, 0)\",blue:\"rgb(0, 0, 255)\",gray:\"rgb(128, 128, 128)\",green:\"rgb(0, 128, 0)\",red:\"rgb(255, 0, 0)\",white:\"rgb(255, 255, 255)\"};/^[A-z]+$/i.test(e)?g=h[e]!==d?h[e]:h.black:y.RegEx.isHex.test(e)?g=\"rgb(\"+y.Values.hexToRgb(e).join(\" \")+\")\":/^rgba?\\(/i.test(e)||(g=h.black),f=(g||e).toString().match(y.RegEx.valueUnwrap)[1].replace(/,(\\s+)?/g,\" \")}return(!p||p>8)&&3===f.split(\" \").length&&(f+=\" 1\"),f;case\"inject\":return/^rgb/.test(e)?e:(p<=8?4===e.split(\" \").length&&(e=e.split(/\\s+/).slice(0,3).join(\" \")):3===e.split(\" \").length&&(e+=\" 1\"),(p<=8?\"rgb\":\"rgba\")+\"(\"+e.replace(/\\s+/g,\",\").replace(/\\.(\\d)+(?=,)/g,\"\")+\")\")}}}();y.Normalizations.registered.innerWidth=b(\"width\",!0),y.Normalizations.registered.innerHeight=b(\"height\",!0),y.Normalizations.registered.outerWidth=b(\"width\"),y.Normalizations.registered.outerHeight=b(\"height\")}},Names:{camelCase:function(a){return a.replace(/-(\\w)/g,function(a,b){return b.toUpperCase()})},SVGAttribute:function(a){var b=\"width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2\";return(p||w.State.isAndroid&&!w.State.isChrome)&&(b+=\"|transform\"),new RegExp(\"^(\"+b+\")$\",\"i\").test(a)},prefixCheck:function(a){if(w.State.prefixMatches[a])return[w.State.prefixMatches[a],!0];for(var b=[\"\",\"Webkit\",\"Moz\",\"ms\",\"O\"],c=0,d=b.length;c<d;c++){var e;if(e=0===c?a:b[c]+a.replace(/^\\w/,function(a){return a.toUpperCase()}),s.isString(w.State.prefixElement.style[e]))return w.State.prefixMatches[a]=e,[e,!0]}return[a,!1]}},Values:{hexToRgb:function(a){var b,c=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,d=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;return a=a.replace(c,function(a,b,c,d){return b+b+c+c+d+d}),b=d.exec(a),b?[parseInt(b[1],16),parseInt(b[2],16),parseInt(b[3],16)]:[0,0,0]},isCSSNullValue:function(a){return!a||/^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(a)},getUnitType:function(a){return/^(rotate|skew)/i.test(a)?\"deg\":/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(a)?\"\":\"px\"},getDisplayType:function(a){var b=a&&a.tagName.toString().toLowerCase();return/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(b)?\"inline\":/^(li)$/i.test(b)?\"list-item\":/^(tr)$/i.test(b)?\"table-row\":/^(table)$/i.test(b)?\"table\":/^(tbody)$/i.test(b)?\"table-row-group\":\"block\"},addClass:function(a,b){if(a)if(a.classList)a.classList.add(b);else if(s.isString(a.className))a.className+=(a.className.length?\" \":\"\")+b;else{var c=a.getAttribute(p<=7?\"className\":\"class\")||\"\";a.setAttribute(\"class\",c+(c?\" \":\"\")+b)}},removeClass:function(a,b){if(a)if(a.classList)a.classList.remove(b);else if(s.isString(a.className))a.className=a.className.toString().replace(new RegExp(\"(^|\\\\s)\"+b.split(\" \").join(\"|\")+\"(\\\\s|$)\",\"gi\"),\" \");else{var c=a.getAttribute(p<=7?\"className\":\"class\")||\"\";a.setAttribute(\"class\",c.replace(new RegExp(\"(^|s)\"+b.split(\" \").join(\"|\")+\"(s|$)\",\"gi\"),\" \"))}}},getPropertyValue:function(a,c,e,f){function h(a,c){var e=0;if(p<=8)e=o.css(a,c);else{var i=!1;/^(width|height)$/.test(c)&&0===y.getPropertyValue(a,\"display\")&&(i=!0,y.setPropertyValue(a,\"display\",y.Values.getDisplayType(a)));var j=function(){i&&y.setPropertyValue(a,\"display\",\"none\")};if(!f){if(\"height\"===c&&\"border-box\"!==y.getPropertyValue(a,\"boxSizing\").toString().toLowerCase()){var k=a.offsetHeight-(parseFloat(y.getPropertyValue(a,\"borderTopWidth\"))||0)-(parseFloat(y.getPropertyValue(a,\"borderBottomWidth\"))||0)-(parseFloat(y.getPropertyValue(a,\"paddingTop\"))||0)-(parseFloat(y.getPropertyValue(a,\"paddingBottom\"))||0);return j(),k}if(\"width\"===c&&\"border-box\"!==y.getPropertyValue(a,\"boxSizing\").toString().toLowerCase()){var l=a.offsetWidth-(parseFloat(y.getPropertyValue(a,\"borderLeftWidth\"))||0)-(parseFloat(y.getPropertyValue(a,\"borderRightWidth\"))||0)-(parseFloat(y.getPropertyValue(a,\"paddingLeft\"))||0)-(parseFloat(y.getPropertyValue(a,\"paddingRight\"))||0);return j(),l}}var m;m=g(a)===d?b.getComputedStyle(a,null):g(a).computedStyle?g(a).computedStyle:g(a).computedStyle=b.getComputedStyle(a,null),\"borderColor\"===c&&(c=\"borderTopColor\"),e=9===p&&\"filter\"===c?m.getPropertyValue(c):m[c],\"\"!==e&&null!==e||(e=a.style[c]),j()}if(\"auto\"===e&&/^(top|right|bottom|left)$/i.test(c)){var n=h(a,\"position\");(\"fixed\"===n||\"absolute\"===n&&/top|left/i.test(c))&&(e=o(a).position()[c]+\"px\")}return e}var i;if(y.Hooks.registered[c]){var j=c,k=y.Hooks.getRoot(j);e===d&&(e=y.getPropertyValue(a,y.Names.prefixCheck(k)[0])),y.Normalizations.registered[k]&&(e=y.Normalizations.registered[k](\"extract\",a,e)),i=y.Hooks.extractValue(j,e)}else if(y.Normalizations.registered[c]){var l,m;l=y.Normalizations.registered[c](\"name\",a),\"transform\"!==l&&(m=h(a,y.Names.prefixCheck(l)[0]),y.Values.isCSSNullValue(m)&&y.Hooks.templates[c]&&(m=y.Hooks.templates[c][1])),i=y.Normalizations.registered[c](\"extract\",a,m)}if(!/^[\\d-]/.test(i)){var n=g(a);if(n&&n.isSVG&&y.Names.SVGAttribute(c))if(/^(height|width)$/i.test(c))try{i=a.getBBox()[c]}catch(q){i=0}else i=a.getAttribute(c);else i=h(a,y.Names.prefixCheck(c)[0])}return y.Values.isCSSNullValue(i)&&(i=0),w.debug>=2&&console.log(\"Get \"+c+\": \"+i),i},setPropertyValue:function(a,c,d,e,f){var h=c;if(\"scroll\"===c)f.container?f.container[\"scroll\"+f.direction]=d:\"Left\"===f.direction?b.scrollTo(d,f.alternateValue):b.scrollTo(f.alternateValue,d);else if(y.Normalizations.registered[c]&&\"transform\"===y.Normalizations.registered[c](\"name\",a))y.Normalizations.registered[c](\"inject\",a,d),h=\"transform\",d=g(a).transformCache[c];else{if(y.Hooks.registered[c]){var i=c,j=y.Hooks.getRoot(c);e=e||y.getPropertyValue(a,j),d=y.Hooks.injectValue(i,d,e),c=j}if(y.Normalizations.registered[c]&&(d=y.Normalizations.registered[c](\"inject\",a,d),c=y.Normalizations.registered[c](\"name\",a)),h=y.Names.prefixCheck(c)[0],p<=8)try{a.style[h]=d}catch(k){w.debug&&console.log(\"Browser does not support [\"+d+\"] for [\"+h+\"]\")}else{var l=g(a);l&&l.isSVG&&y.Names.SVGAttribute(c)?a.setAttribute(c,d):a.style[h]=d}w.debug>=2&&console.log(\"Set \"+c+\" (\"+h+\"): \"+d)}return[h,d]},flushTransformCache:function(a){var b=\"\",c=g(a);if((p||w.State.isAndroid&&!w.State.isChrome)&&c&&c.isSVG){var d=function(b){return parseFloat(y.getPropertyValue(a,b))},e={translate:[d(\"translateX\"),d(\"translateY\")],skewX:[d(\"skewX\")],skewY:[d(\"skewY\")],scale:1!==d(\"scale\")?[d(\"scale\"),d(\"scale\")]:[d(\"scaleX\"),d(\"scaleY\")],rotate:[d(\"rotateZ\"),0,0]};o.each(g(a).transformCache,function(a){/^translate/i.test(a)?a=\"translate\":/^scale/i.test(a)?a=\"scale\":/^rotate/i.test(a)&&(a=\"rotate\"),e[a]&&(b+=a+\"(\"+e[a].join(\" \")+\") \",delete e[a])})}else{var f,h;o.each(g(a).transformCache,function(c){return f=g(a).transformCache[c],\"transformPerspective\"===c?(h=f,!0):(9===p&&\"rotateZ\"===c&&(c=\"rotate\"),void(b+=c+f+\" \"))}),h&&(b=\"perspective\"+h+\" \"+b)}y.setPropertyValue(a,\"transform\",b)}};y.Hooks.register(),y.Normalizations.register(),w.hook=function(a,b,c){var e;return a=f(a),o.each(a,function(a,f){if(g(f)===d&&w.init(f),c===d)e===d&&(e=y.getPropertyValue(f,b));else{var h=y.setPropertyValue(f,b,c);\"transform\"===h[0]&&w.CSS.flushTransformCache(f),e=h}}),e};var z=function(){function a(){return k?A.promise||null:p}function e(a,e){function f(f){var k,n;if(i.begin&&0===C)try{i.begin.call(r,r)}catch(p){setTimeout(function(){throw p},1)}if(\"scroll\"===F){var q,u,x,z=/^x$/i.test(i.axis)?\"Left\":\"Top\",D=parseFloat(i.offset)||0;i.container?s.isWrapped(i.container)||s.isNode(i.container)?(i.container=i.container[0]||i.container,q=i.container[\"scroll\"+z],x=q+o(a).position()[z.toLowerCase()]+D):i.container=null:(q=w.State.scrollAnchor[w.State[\"scrollProperty\"+z]],u=w.State.scrollAnchor[w.State[\"scrollProperty\"+(\"Left\"===z?\"Top\":\"Left\")]],x=o(a).offset()[z.toLowerCase()]+D),j={scroll:{rootPropertyValue:!1,startValue:q,currentValue:q,endValue:x,unitType:\"\",easing:i.easing,scrollData:{container:i.container,direction:z,alternateValue:u}},element:a},w.debug&&console.log(\"tweensContainer (scroll): \",j.scroll,a)}else if(\"reverse\"===F){if(k=g(a),!k)return;if(!k.tweensContainer)return void o.dequeue(a,i.queue);\"none\"===k.opts.display&&(k.opts.display=\"auto\"),\"hidden\"===k.opts.visibility&&(k.opts.visibility=\"visible\"),k.opts.loop=!1,k.opts.begin=null,k.opts.complete=null,v.easing||delete i.easing,v.duration||delete i.duration,i=o.extend({},k.opts,i),n=o.extend(!0,{},k?k.tweensContainer:null);for(var E in n)if(n.hasOwnProperty(E)&&\"element\"!==E){var G=n[E].startValue;n[E].startValue=n[E].currentValue=n[E].endValue,n[E].endValue=G,s.isEmptyObject(v)||(n[E].easing=i.easing),w.debug&&console.log(\"reverse tweensContainer (\"+E+\"): \"+JSON.stringify(n[E]),a)}j=n}else if(\"start\"===F){k=g(a),k&&k.tweensContainer&&k.isAnimating===!0&&(n=k.tweensContainer);var H=function(b,c){var d,f,g;return s.isFunction(b)&&(b=b.call(a,e,B)),s.isArray(b)?(d=b[0],!s.isArray(b[1])&&/^[\\d-]/.test(b[1])||s.isFunction(b[1])||y.RegEx.isHex.test(b[1])?g=b[1]:s.isString(b[1])&&!y.RegEx.isHex.test(b[1])&&w.Easings[b[1]]||s.isArray(b[1])?(f=c?b[1]:l(b[1],i.duration),g=b[2]):g=b[1]||b[2]):d=b,c||(f=f||i.easing),s.isFunction(d)&&(d=d.call(a,e,B)),s.isFunction(g)&&(g=g.call(a,e,B)),[d||0,f,g]},I=function(e,f){var g,l=y.Hooks.getRoot(e),m=!1,p=f[0],q=f[1],r=f[2];if(!(k&&k.isSVG||\"tween\"===l||y.Names.prefixCheck(l)[1]!==!1||y.Normalizations.registered[l]!==d))return void(w.debug&&console.log(\"Skipping [\"+l+\"] due to a lack of browser support.\"));\n    (i.display!==d&&null!==i.display&&\"none\"!==i.display||i.visibility!==d&&\"hidden\"!==i.visibility)&&/opacity|filter/.test(e)&&!r&&0!==p&&(r=0),i._cacheValues&&n&&n[e]?(r===d&&(r=n[e].endValue+n[e].unitType),m=k.rootPropertyValueCache[l]):y.Hooks.registered[e]?r===d?(m=y.getPropertyValue(a,l),r=y.getPropertyValue(a,e,m)):m=y.Hooks.templates[l][1]:r===d&&(r=y.getPropertyValue(a,e));var t,u,v,x=!1,z=function(a,b){var c,d;return d=(b||\"0\").toString().toLowerCase().replace(/[%A-z]+$/,function(a){return c=a,\"\"}),c||(c=y.Values.getUnitType(a)),[d,c]};if(r!==p&&s.isString(r)&&s.isString(p)){g=\"\";var A=0,B=0,C=[],D=[],E=0,F=0,G=0;for(r=y.Hooks.fixColors(r),p=y.Hooks.fixColors(p);A<r.length&&B<p.length;){var H=r[A],I=p[B];if(/[\\d\\.]/.test(H)&&/[\\d\\.]/.test(I)){for(var J=H,K=I,M=\".\",N=\".\";++A<r.length;){if(H=r[A],H===M)M=\"..\";else if(!/\\d/.test(H))break;J+=H}for(;++B<p.length;){if(I=p[B],I===N)N=\"..\";else if(!/\\d/.test(I))break;K+=I}var O=y.Hooks.getUnit(r,A),P=y.Hooks.getUnit(p,B);if(A+=O.length,B+=P.length,O===P)J===K?g+=J+O:(g+=\"{\"+C.length+(F?\"!\":\"\")+\"}\"+O,C.push(parseFloat(J)),D.push(parseFloat(K)));else{var Q=parseFloat(J),R=parseFloat(K);g+=(E<5?\"calc\":\"\")+\"(\"+(Q?\"{\"+C.length+(F?\"!\":\"\")+\"}\":\"0\")+O+\" + \"+(R?\"{\"+(C.length+(Q?1:0))+(F?\"!\":\"\")+\"}\":\"0\")+P+\")\",Q&&(C.push(Q),D.push(0)),R&&(C.push(0),D.push(R))}}else{if(H!==I){E=0;break}g+=H,A++,B++,0===E&&\"c\"===H||1===E&&\"a\"===H||2===E&&\"l\"===H||3===E&&\"c\"===H||E>=4&&\"(\"===H?E++:(E&&E<5||E>=4&&\")\"===H&&--E<5)&&(E=0),0===F&&\"r\"===H||1===F&&\"g\"===H||2===F&&\"b\"===H||3===F&&\"a\"===H||F>=3&&\"(\"===H?(3===F&&\"a\"===H&&(G=1),F++):G&&\",\"===H?++G>3&&(F=G=0):(G&&F<(G?5:4)||F>=(G?4:3)&&\")\"===H&&--F<(G?5:4))&&(F=G=0)}}A===r.length&&B===p.length||(w.debug&&console.error('Trying to pattern match mis-matched strings [\"'+p+'\", \"'+r+'\"]'),g=d),g&&(C.length?(w.debug&&console.log('Pattern found \"'+g+'\" -> ',C,D,\"[\"+r+\",\"+p+\"]\"),r=C,p=D,u=v=\"\"):g=d)}g||(t=z(e,r),r=t[0],v=t[1],t=z(e,p),p=t[0].replace(/^([+-\\/*])=/,function(a,b){return x=b,\"\"}),u=t[1],r=parseFloat(r)||0,p=parseFloat(p)||0,\"%\"===u&&(/^(fontSize|lineHeight)$/.test(e)?(p/=100,u=\"em\"):/^scale/.test(e)?(p/=100,u=\"\"):/(Red|Green|Blue)$/i.test(e)&&(p=p/100*255,u=\"\")));var S=function(){var d={myParent:a.parentNode||c.body,position:y.getPropertyValue(a,\"position\"),fontSize:y.getPropertyValue(a,\"fontSize\")},e=d.position===L.lastPosition&&d.myParent===L.lastParent,f=d.fontSize===L.lastFontSize;L.lastParent=d.myParent,L.lastPosition=d.position,L.lastFontSize=d.fontSize;var g=100,h={};if(f&&e)h.emToPx=L.lastEmToPx,h.percentToPxWidth=L.lastPercentToPxWidth,h.percentToPxHeight=L.lastPercentToPxHeight;else{var i=k&&k.isSVG?c.createElementNS(\"http://www.w3.org/2000/svg\",\"rect\"):c.createElement(\"div\");w.init(i),d.myParent.appendChild(i),o.each([\"overflow\",\"overflowX\",\"overflowY\"],function(a,b){w.CSS.setPropertyValue(i,b,\"hidden\")}),w.CSS.setPropertyValue(i,\"position\",d.position),w.CSS.setPropertyValue(i,\"fontSize\",d.fontSize),w.CSS.setPropertyValue(i,\"boxSizing\",\"content-box\"),o.each([\"minWidth\",\"maxWidth\",\"width\",\"minHeight\",\"maxHeight\",\"height\"],function(a,b){w.CSS.setPropertyValue(i,b,g+\"%\")}),w.CSS.setPropertyValue(i,\"paddingLeft\",g+\"em\"),h.percentToPxWidth=L.lastPercentToPxWidth=(parseFloat(y.getPropertyValue(i,\"width\",null,!0))||1)/g,h.percentToPxHeight=L.lastPercentToPxHeight=(parseFloat(y.getPropertyValue(i,\"height\",null,!0))||1)/g,h.emToPx=L.lastEmToPx=(parseFloat(y.getPropertyValue(i,\"paddingLeft\"))||1)/g,d.myParent.removeChild(i)}return null===L.remToPx&&(L.remToPx=parseFloat(y.getPropertyValue(c.body,\"fontSize\"))||16),null===L.vwToPx&&(L.vwToPx=parseFloat(b.innerWidth)/100,L.vhToPx=parseFloat(b.innerHeight)/100),h.remToPx=L.remToPx,h.vwToPx=L.vwToPx,h.vhToPx=L.vhToPx,w.debug>=1&&console.log(\"Unit ratios: \"+JSON.stringify(h),a),h};if(/[\\/*]/.test(x))u=v;else if(v!==u&&0!==r)if(0===p)u=v;else{h=h||S();var T=/margin|padding|left|right|width|text|word|letter/i.test(e)||/X$/.test(e)||\"x\"===e?\"x\":\"y\";switch(v){case\"%\":r*=\"x\"===T?h.percentToPxWidth:h.percentToPxHeight;break;case\"px\":break;default:r*=h[v+\"ToPx\"]}switch(u){case\"%\":r*=1/(\"x\"===T?h.percentToPxWidth:h.percentToPxHeight);break;case\"px\":break;default:r*=1/h[u+\"ToPx\"]}}switch(x){case\"+\":p=r+p;break;case\"-\":p=r-p;break;case\"*\":p=r*p;break;case\"/\":p=r/p}j[e]={rootPropertyValue:m,startValue:r,currentValue:r,endValue:p,unitType:u,easing:q},g&&(j[e].pattern=g),w.debug&&console.log(\"tweensContainer (\"+e+\"): \"+JSON.stringify(j[e]),a)};for(var J in t)if(t.hasOwnProperty(J)){var K=y.Names.camelCase(J),N=H(t[J]);if(y.Lists.colors.indexOf(K)>=0){var O=N[0],P=N[1],Q=N[2];if(y.RegEx.isHex.test(O)){for(var R=[\"Red\",\"Green\",\"Blue\"],S=y.Values.hexToRgb(O),T=Q?y.Values.hexToRgb(Q):d,U=0;U<R.length;U++){var V=[S[U]];P&&V.push(P),T!==d&&V.push(T[U]),I(K+R[U],V)}continue}}I(K,N)}j.element=a}j.element&&(y.Values.addClass(a,\"velocity-animating\"),M.push(j),k=g(a),k&&(\"\"===i.queue&&(k.tweensContainer=j,k.opts=i),k.isAnimating=!0),C===B-1?(w.State.calls.push([M,r,i,null,A.resolver,null,0]),w.State.isTicking===!1&&(w.State.isTicking=!0,m())):C++)}var h,i=o.extend({},w.defaults,v),j={};switch(g(a)===d&&w.init(a),parseFloat(i.delay)&&i.queue!==!1&&o.queue(a,i.queue,function(b){w.velocityQueueEntryFlag=!0;var c=w.State.delayedElements.count++;w.State.delayedElements[c]=a;var d=function(a){return function(){w.State.delayedElements[a]=!1,b()}}(c);g(a).delayBegin=(new Date).getTime(),g(a).delay=parseFloat(i.delay),g(a).delayTimer={setTimeout:setTimeout(b,parseFloat(i.delay)),next:d}}),i.duration.toString().toLowerCase()){case\"fast\":i.duration=200;break;case\"normal\":i.duration=u;break;case\"slow\":i.duration=600;break;default:i.duration=parseFloat(i.duration)||1}if(w.mock!==!1&&(w.mock===!0?i.duration=i.delay=1:(i.duration*=parseFloat(w.mock)||1,i.delay*=parseFloat(w.mock)||1)),i.easing=l(i.easing,i.duration),i.begin&&!s.isFunction(i.begin)&&(i.begin=null),i.progress&&!s.isFunction(i.progress)&&(i.progress=null),i.complete&&!s.isFunction(i.complete)&&(i.complete=null),i.display!==d&&null!==i.display&&(i.display=i.display.toString().toLowerCase(),\"auto\"===i.display&&(i.display=w.CSS.Values.getDisplayType(a))),i.visibility!==d&&null!==i.visibility&&(i.visibility=i.visibility.toString().toLowerCase()),i.mobileHA=i.mobileHA&&w.State.isMobile&&!w.State.isGingerbread,i.queue===!1)if(i.delay){var k=w.State.delayedElements.count++;w.State.delayedElements[k]=a;var n=function(a){return function(){w.State.delayedElements[a]=!1,f()}}(k);g(a).delayBegin=(new Date).getTime(),g(a).delay=parseFloat(i.delay),g(a).delayTimer={setTimeout:setTimeout(f,parseFloat(i.delay)),next:n}}else f();else o.queue(a,i.queue,function(a,b){return b===!0?(A.promise&&A.resolver(r),!0):(w.velocityQueueEntryFlag=!0,void f(a))});\"\"!==i.queue&&\"fx\"!==i.queue||\"inprogress\"===o.queue(a)[0]||o.dequeue(a)}var j,k,p,q,r,t,v,x=arguments[0]&&(arguments[0].p||o.isPlainObject(arguments[0].properties)&&!arguments[0].properties.names||s.isString(arguments[0].properties));s.isWrapped(this)?(k=!1,q=0,r=this,p=this):(k=!0,q=1,r=x?arguments[0].elements||arguments[0].e:arguments[0]);var A={promise:null,resolver:null,rejecter:null};if(k&&w.Promise&&(A.promise=new w.Promise(function(a,b){A.resolver=a,A.rejecter=b})),x?(t=arguments[0].properties||arguments[0].p,v=arguments[0].options||arguments[0].o):(t=arguments[q],v=arguments[q+1]),r=f(r),!r)return void(A.promise&&(t&&v&&v.promiseRejectEmpty===!1?A.resolver():A.rejecter()));var B=r.length,C=0;if(!/^(stop|finish|finishAll|pause|resume)$/i.test(t)&&!o.isPlainObject(v)){var D=q+1;v={};for(var E=D;E<arguments.length;E++)s.isArray(arguments[E])||!/^(fast|normal|slow)$/i.test(arguments[E])&&!/^\\d/.test(arguments[E])?s.isString(arguments[E])||s.isArray(arguments[E])?v.easing=arguments[E]:s.isFunction(arguments[E])&&(v.complete=arguments[E]):v.duration=arguments[E]}var F;switch(t){case\"scroll\":F=\"scroll\";break;case\"reverse\":F=\"reverse\";break;case\"pause\":var G=(new Date).getTime();return o.each(r,function(a,b){h(b,G)}),o.each(w.State.calls,function(a,b){var c=!1;b&&o.each(b[1],function(a,e){var f=v===d?\"\":v;return f!==!0&&b[2].queue!==f&&(v!==d||b[2].queue!==!1)||(o.each(r,function(a,d){if(d===e)return b[5]={resume:!1},c=!0,!1}),!c&&void 0)})}),a();case\"resume\":return o.each(r,function(a,b){i(b,G)}),o.each(w.State.calls,function(a,b){var c=!1;b&&o.each(b[1],function(a,e){var f=v===d?\"\":v;return f!==!0&&b[2].queue!==f&&(v!==d||b[2].queue!==!1)||(!b[5]||(o.each(r,function(a,d){if(d===e)return b[5].resume=!0,c=!0,!1}),!c&&void 0))})}),a();case\"finish\":case\"finishAll\":case\"stop\":o.each(r,function(a,b){g(b)&&g(b).delayTimer&&(clearTimeout(g(b).delayTimer.setTimeout),g(b).delayTimer.next&&g(b).delayTimer.next(),delete g(b).delayTimer),\"finishAll\"!==t||v!==!0&&!s.isString(v)||(o.each(o.queue(b,s.isString(v)?v:\"\"),function(a,b){s.isFunction(b)&&b()}),o.queue(b,s.isString(v)?v:\"\",[]))});var H=[];return o.each(w.State.calls,function(a,b){b&&o.each(b[1],function(c,e){var f=v===d?\"\":v;return f!==!0&&b[2].queue!==f&&(v!==d||b[2].queue!==!1)||void o.each(r,function(c,d){if(d===e)if((v===!0||s.isString(v))&&(o.each(o.queue(d,s.isString(v)?v:\"\"),function(a,b){s.isFunction(b)&&b(null,!0)}),o.queue(d,s.isString(v)?v:\"\",[])),\"stop\"===t){var h=g(d);h&&h.tweensContainer&&f!==!1&&o.each(h.tweensContainer,function(a,b){b.endValue=b.currentValue}),H.push(a)}else\"finish\"!==t&&\"finishAll\"!==t||(b[2].duration=1)})})}),\"stop\"===t&&(o.each(H,function(a,b){n(b,!0)}),A.promise&&A.resolver(r)),a();default:if(!o.isPlainObject(t)||s.isEmptyObject(t)){if(s.isString(t)&&w.Redirects[t]){j=o.extend({},v);var I=j.duration,J=j.delay||0;return j.backwards===!0&&(r=o.extend(!0,[],r).reverse()),o.each(r,function(a,b){parseFloat(j.stagger)?j.delay=J+parseFloat(j.stagger)*a:s.isFunction(j.stagger)&&(j.delay=J+j.stagger.call(b,a,B)),j.drag&&(j.duration=parseFloat(I)||(/^(callout|transition)/.test(t)?1e3:u),j.duration=Math.max(j.duration*(j.backwards?1-a/B:(a+1)/B),.75*j.duration,200)),w.Redirects[t].call(b,b,j||{},a,B,r,A.promise?A:d)}),a()}var K=\"Velocity: First argument (\"+t+\") was not a property map, a known action, or a registered redirect. Aborting.\";return A.promise?A.rejecter(new Error(K)):console.log(K),a()}F=\"start\"}var L={lastParent:null,lastPosition:null,lastFontSize:null,lastPercentToPxWidth:null,lastPercentToPxHeight:null,lastEmToPx:null,remToPx:null,vwToPx:null,vhToPx:null},M=[];o.each(r,function(a,b){s.isNode(b)&&e(b,a)}),j=o.extend({},w.defaults,v),j.loop=parseInt(j.loop,10);var N=2*j.loop-1;if(j.loop)for(var O=0;O<N;O++){var P={delay:j.delay,progress:j.progress};O===N-1&&(P.display=j.display,P.visibility=j.visibility,P.complete=j.complete),z(r,\"reverse\",P)}return a()};w=o.extend(z,w),w.animate=z;var A=b.requestAnimationFrame||q;if(!w.State.isMobile&&c.hidden!==d){var B=function(){c.hidden?(A=function(a){return setTimeout(function(){a(!0)},16)},m()):A=b.requestAnimationFrame||q};B(),c.addEventListener(\"visibilitychange\",B)}return a.Velocity=w,a!==b&&(a.fn.velocity=z,a.fn.velocity.defaults=w.defaults),o.each([\"Down\",\"Up\"],function(a,b){w.Redirects[\"slide\"+b]=function(a,c,e,f,g,h){var i=o.extend({},c),j=i.begin,k=i.complete,l={},m={height:\"\",marginTop:\"\",marginBottom:\"\",paddingTop:\"\",paddingBottom:\"\"};i.display===d&&(i.display=\"Down\"===b?\"inline\"===w.CSS.Values.getDisplayType(a)?\"inline-block\":\"block\":\"none\"),i.begin=function(){0===e&&j&&j.call(g,g);for(var c in m)if(m.hasOwnProperty(c)){l[c]=a.style[c];var d=y.getPropertyValue(a,c);m[c]=\"Down\"===b?[d,0]:[0,d]}l.overflow=a.style.overflow,a.style.overflow=\"hidden\"},i.complete=function(){for(var b in l)l.hasOwnProperty(b)&&(a.style[b]=l[b]);e===f-1&&(k&&k.call(g,g),h&&h.resolver(g))},w(a,m,i)}}),o.each([\"In\",\"Out\"],function(a,b){w.Redirects[\"fade\"+b]=function(a,c,e,f,g,h){var i=o.extend({},c),j=i.complete,k={opacity:\"In\"===b?1:0};0!==e&&(i.begin=null),e!==f-1?i.complete=null:i.complete=function(){j&&j.call(g,g),h&&h.resolver(g)},i.display===d&&(i.display=\"In\"===b?\"auto\":\"none\"),w(this,k,i)}}),w}(window.jQuery||window.Zepto||window,window,window?window.document:void 0)});\n",
    "!function(a){\"use strict\";\"function\"==typeof require&&\"object\"==typeof exports?module.exports=a():\"function\"==typeof define&&define.amd?define('velocityUI',[\"velocity\"],a):a()}(function(){\"use strict\";return function(a,b,c,d){function e(a,b){var c=[];return!(!a||!b)&&(g.each([a,b],function(a,b){var d=[];g.each(b,function(a,b){for(;b.toString().length<5;)b=\"0\"+b;d.push(b)}),c.push(d.join(\"\"))}),parseFloat(c[0])>parseFloat(c[1]))}var f=a.Velocity;if(!f||!f.Utilities)return void(b.console&&console.log(\"Velocity UI Pack: Velocity must be loaded first. Aborting.\"));var g=f.Utilities,h=f.version,i={major:1,minor:1,patch:0};if(e(i,h)){var j=\"Velocity UI Pack: You need to update Velocity (velocity.js) to a newer version. Visit http://github.com/julianshapiro/velocity.\";throw alert(j),new Error(j)}f.RegisterEffect=f.RegisterUI=function(a,b){function c(a,b,c,d){var e,h=0;g.each(a.nodeType?[a]:a,function(a,b){d&&(c+=a*d),e=b.parentNode;var i=[\"height\",\"paddingTop\",\"paddingBottom\",\"marginTop\",\"marginBottom\"];\"border-box\"===f.CSS.getPropertyValue(b,\"boxSizing\").toString().toLowerCase()&&(i=[\"height\"]),g.each(i,function(a,c){h+=parseFloat(f.CSS.getPropertyValue(b,c))})}),f.animate(e,{height:(\"In\"===b?\"+\":\"-\")+\"=\"+h},{queue:!1,easing:\"ease-in-out\",duration:c*(\"In\"===b?.6:1)})}return f.Redirects[a]=function(e,h,i,j,k,l,m){var n=i===j-1,o=0;m=m||b.loop,\"function\"==typeof b.defaultDuration?b.defaultDuration=b.defaultDuration.call(k,k):b.defaultDuration=parseFloat(b.defaultDuration);for(var p=0;p<b.calls.length;p++)u=b.calls[p][1],\"number\"==typeof u&&(o+=u);var q=o>=1?0:b.calls.length?(1-o)/b.calls.length:1;for(p=0;p<b.calls.length;p++){var r=b.calls[p],s=r[0],t=1e3,u=r[1],v=r[2]||{},w={};if(h.duration!==d?t=h.duration:b.defaultDuration!==d&&(t=b.defaultDuration),w.duration=t*(\"number\"==typeof u?u:q),w.queue=h.queue||\"\",w.easing=v.easing||\"ease\",w.delay=parseFloat(v.delay)||0,w.loop=!b.loop&&v.loop,w._cacheValues=v._cacheValues||!0,0===p){if(w.delay+=parseFloat(h.delay)||0,0===i&&(w.begin=function(){h.begin&&h.begin.call(k,k);var b=a.match(/(In|Out)$/);b&&\"In\"===b[0]&&s.opacity!==d&&g.each(k.nodeType?[k]:k,function(a,b){f.CSS.setPropertyValue(b,\"opacity\",0)}),h.animateParentHeight&&b&&c(k,b[0],t+w.delay,h.stagger)}),null!==h.display)if(h.display!==d&&\"none\"!==h.display)w.display=h.display;else if(/In$/.test(a)){var x=f.CSS.Values.getDisplayType(e);w.display=\"inline\"===x?\"inline-block\":x}h.visibility&&\"hidden\"!==h.visibility&&(w.visibility=h.visibility)}if(p===b.calls.length-1){var y=function(){h.display!==d&&\"none\"!==h.display||!/Out$/.test(a)||g.each(k.nodeType?[k]:k,function(a,b){f.CSS.setPropertyValue(b,\"display\",\"none\")}),h.complete&&h.complete.call(k,k),l&&l.resolver(k||e)};w.complete=function(){if(m&&f.Redirects[a](e,h,i,j,k,l,m===!0||Math.max(0,m-1)),b.reset){for(var c in b.reset)if(b.reset.hasOwnProperty(c)){var g=b.reset[c];f.CSS.Hooks.registered[c]!==d||\"string\"!=typeof g&&\"number\"!=typeof g||(b.reset[c]=[b.reset[c],b.reset[c]])}var o={duration:0,queue:!1};n&&(o.complete=y),f.animate(e,b.reset,o)}else n&&y()},\"hidden\"===h.visibility&&(w.visibility=h.visibility)}f.animate(e,s,w)}},f},f.RegisterEffect.packagedEffects={\"callout.bounce\":{defaultDuration:550,calls:[[{translateY:-30},.25],[{translateY:0},.125],[{translateY:-15},.125],[{translateY:0},.25]]},\"callout.shake\":{defaultDuration:800,calls:[[{translateX:-11}],[{translateX:11}],[{translateX:-11}],[{translateX:11}],[{translateX:-11}],[{translateX:11}],[{translateX:-11}],[{translateX:0}]]},\"callout.flash\":{defaultDuration:1100,calls:[[{opacity:[0,\"easeInOutQuad\",1]}],[{opacity:[1,\"easeInOutQuad\"]}],[{opacity:[0,\"easeInOutQuad\"]}],[{opacity:[1,\"easeInOutQuad\"]}]]},\"callout.pulse\":{defaultDuration:825,calls:[[{scaleX:1.1,scaleY:1.1},.5,{easing:\"easeInExpo\"}],[{scaleX:1,scaleY:1},.5]]},\"callout.swing\":{defaultDuration:950,calls:[[{rotateZ:15}],[{rotateZ:-10}],[{rotateZ:5}],[{rotateZ:-5}],[{rotateZ:0}]]},\"callout.tada\":{defaultDuration:1e3,calls:[[{scaleX:.9,scaleY:.9,rotateZ:-3},.1],[{scaleX:1.1,scaleY:1.1,rotateZ:3},.1],[{scaleX:1.1,scaleY:1.1,rotateZ:-3},.1],[\"reverse\",.125],[\"reverse\",.125],[\"reverse\",.125],[\"reverse\",.125],[\"reverse\",.125],[{scaleX:1,scaleY:1,rotateZ:0},.2]]},\"transition.fadeIn\":{defaultDuration:500,calls:[[{opacity:[1,0]}]]},\"transition.fadeOut\":{defaultDuration:500,calls:[[{opacity:[0,1]}]]},\"transition.flipXIn\":{defaultDuration:700,calls:[[{opacity:[1,0],transformPerspective:[800,800],rotateY:[0,-55]}]],reset:{transformPerspective:0}},\"transition.flipXOut\":{defaultDuration:700,calls:[[{opacity:[0,1],transformPerspective:[800,800],rotateY:55}]],reset:{transformPerspective:0,rotateY:0}},\"transition.flipYIn\":{defaultDuration:800,calls:[[{opacity:[1,0],transformPerspective:[800,800],rotateX:[0,-45]}]],reset:{transformPerspective:0}},\"transition.flipYOut\":{defaultDuration:800,calls:[[{opacity:[0,1],transformPerspective:[800,800],rotateX:25}]],reset:{transformPerspective:0,rotateX:0}},\"transition.flipBounceXIn\":{defaultDuration:900,calls:[[{opacity:[.725,0],transformPerspective:[400,400],rotateY:[-10,90]},.5],[{opacity:.8,rotateY:10},.25],[{opacity:1,rotateY:0},.25]],reset:{transformPerspective:0}},\"transition.flipBounceXOut\":{defaultDuration:800,calls:[[{opacity:[.9,1],transformPerspective:[400,400],rotateY:-10}],[{opacity:0,rotateY:90}]],reset:{transformPerspective:0,rotateY:0}},\"transition.flipBounceYIn\":{defaultDuration:850,calls:[[{opacity:[.725,0],transformPerspective:[400,400],rotateX:[-10,90]},.5],[{opacity:.8,rotateX:10},.25],[{opacity:1,rotateX:0},.25]],reset:{transformPerspective:0}},\"transition.flipBounceYOut\":{defaultDuration:800,calls:[[{opacity:[.9,1],transformPerspective:[400,400],rotateX:-15}],[{opacity:0,rotateX:90}]],reset:{transformPerspective:0,rotateX:0}},\"transition.swoopIn\":{defaultDuration:850,calls:[[{opacity:[1,0],transformOriginX:[\"100%\",\"50%\"],transformOriginY:[\"100%\",\"100%\"],scaleX:[1,0],scaleY:[1,0],translateX:[0,-700],translateZ:0}]],reset:{transformOriginX:\"50%\",transformOriginY:\"50%\"}},\"transition.swoopOut\":{defaultDuration:850,calls:[[{opacity:[0,1],transformOriginX:[\"50%\",\"100%\"],transformOriginY:[\"100%\",\"100%\"],scaleX:0,scaleY:0,translateX:-700,translateZ:0}]],reset:{transformOriginX:\"50%\",transformOriginY:\"50%\",scaleX:1,scaleY:1,translateX:0}},\"transition.whirlIn\":{defaultDuration:850,calls:[[{opacity:[1,0],transformOriginX:[\"50%\",\"50%\"],transformOriginY:[\"50%\",\"50%\"],scaleX:[1,0],scaleY:[1,0],rotateY:[0,160]},1,{easing:\"easeInOutSine\"}]]},\"transition.whirlOut\":{defaultDuration:750,calls:[[{opacity:[0,\"easeInOutQuint\",1],transformOriginX:[\"50%\",\"50%\"],transformOriginY:[\"50%\",\"50%\"],scaleX:0,scaleY:0,rotateY:160},1,{easing:\"swing\"}]],reset:{scaleX:1,scaleY:1,rotateY:0}},\"transition.shrinkIn\":{defaultDuration:750,calls:[[{opacity:[1,0],transformOriginX:[\"50%\",\"50%\"],transformOriginY:[\"50%\",\"50%\"],scaleX:[1,1.5],scaleY:[1,1.5],translateZ:0}]]},\"transition.shrinkOut\":{defaultDuration:600,calls:[[{opacity:[0,1],transformOriginX:[\"50%\",\"50%\"],transformOriginY:[\"50%\",\"50%\"],scaleX:1.3,scaleY:1.3,translateZ:0}]],reset:{scaleX:1,scaleY:1}},\"transition.expandIn\":{defaultDuration:700,calls:[[{opacity:[1,0],transformOriginX:[\"50%\",\"50%\"],transformOriginY:[\"50%\",\"50%\"],scaleX:[1,.625],scaleY:[1,.625],translateZ:0}]]},\"transition.expandOut\":{defaultDuration:700,calls:[[{opacity:[0,1],transformOriginX:[\"50%\",\"50%\"],transformOriginY:[\"50%\",\"50%\"],scaleX:.5,scaleY:.5,translateZ:0}]],reset:{scaleX:1,scaleY:1}},\"transition.bounceIn\":{defaultDuration:800,calls:[[{opacity:[1,0],scaleX:[1.05,.3],scaleY:[1.05,.3]},.35],[{scaleX:.9,scaleY:.9,translateZ:0},.2],[{scaleX:1,scaleY:1},.45]]},\"transition.bounceOut\":{defaultDuration:800,calls:[[{scaleX:.95,scaleY:.95},.35],[{scaleX:1.1,scaleY:1.1,translateZ:0},.35],[{opacity:[0,1],scaleX:.3,scaleY:.3},.3]],reset:{scaleX:1,scaleY:1}},\"transition.bounceUpIn\":{defaultDuration:800,calls:[[{opacity:[1,0],translateY:[-30,1e3]},.6,{easing:\"easeOutCirc\"}],[{translateY:10},.2],[{translateY:0},.2]]},\"transition.bounceUpOut\":{defaultDuration:1e3,calls:[[{translateY:20},.2],[{opacity:[0,\"easeInCirc\",1],translateY:-1e3},.8]],reset:{translateY:0}},\"transition.bounceDownIn\":{defaultDuration:800,calls:[[{opacity:[1,0],translateY:[30,-1e3]},.6,{easing:\"easeOutCirc\"}],[{translateY:-10},.2],[{translateY:0},.2]]},\"transition.bounceDownOut\":{defaultDuration:1e3,calls:[[{translateY:-20},.2],[{opacity:[0,\"easeInCirc\",1],translateY:1e3},.8]],reset:{translateY:0}},\"transition.bounceLeftIn\":{defaultDuration:750,calls:[[{opacity:[1,0],translateX:[30,-1250]},.6,{easing:\"easeOutCirc\"}],[{translateX:-10},.2],[{translateX:0},.2]]},\"transition.bounceLeftOut\":{defaultDuration:750,calls:[[{translateX:30},.2],[{opacity:[0,\"easeInCirc\",1],translateX:-1250},.8]],reset:{translateX:0}},\"transition.bounceRightIn\":{defaultDuration:750,calls:[[{opacity:[1,0],translateX:[-30,1250]},.6,{easing:\"easeOutCirc\"}],[{translateX:10},.2],[{translateX:0},.2]]},\"transition.bounceRightOut\":{defaultDuration:750,calls:[[{translateX:-30},.2],[{opacity:[0,\"easeInCirc\",1],translateX:1250},.8]],reset:{translateX:0}},\"transition.slideUpIn\":{defaultDuration:900,calls:[[{opacity:[1,0],translateY:[0,20],translateZ:0}]]},\"transition.slideUpOut\":{defaultDuration:900,calls:[[{opacity:[0,1],translateY:-20,translateZ:0}]],reset:{translateY:0}},\"transition.slideDownIn\":{defaultDuration:900,calls:[[{opacity:[1,0],translateY:[0,-20],translateZ:0}]]},\"transition.slideDownOut\":{defaultDuration:900,calls:[[{opacity:[0,1],translateY:20,translateZ:0}]],reset:{translateY:0}},\"transition.slideLeftIn\":{defaultDuration:1e3,calls:[[{opacity:[1,0],translateX:[0,-20],translateZ:0}]]},\"transition.slideLeftOut\":{defaultDuration:1050,calls:[[{opacity:[0,1],translateX:-20,translateZ:0}]],reset:{translateX:0}},\"transition.slideRightIn\":{defaultDuration:1e3,calls:[[{opacity:[1,0],translateX:[0,20],translateZ:0}]]},\"transition.slideRightOut\":{defaultDuration:1050,calls:[[{opacity:[0,1],translateX:20,translateZ:0}]],reset:{translateX:0}},\"transition.slideUpBigIn\":{defaultDuration:850,calls:[[{opacity:[1,0],translateY:[0,75],translateZ:0}]]},\"transition.slideUpBigOut\":{defaultDuration:800,calls:[[{opacity:[0,1],translateY:-75,translateZ:0}]],reset:{translateY:0}},\"transition.slideDownBigIn\":{defaultDuration:850,calls:[[{opacity:[1,0],translateY:[0,-75],translateZ:0}]]},\"transition.slideDownBigOut\":{defaultDuration:800,calls:[[{opacity:[0,1],translateY:75,translateZ:0}]],reset:{translateY:0}},\"transition.slideLeftBigIn\":{defaultDuration:800,calls:[[{opacity:[1,0],translateX:[0,-75],translateZ:0}]]},\"transition.slideLeftBigOut\":{defaultDuration:750,calls:[[{opacity:[0,1],translateX:-75,translateZ:0}]],reset:{translateX:0}},\"transition.slideRightBigIn\":{defaultDuration:800,calls:[[{opacity:[1,0],translateX:[0,75],translateZ:0}]]},\"transition.slideRightBigOut\":{defaultDuration:750,calls:[[{opacity:[0,1],translateX:75,translateZ:0}]],reset:{translateX:0}},\"transition.perspectiveUpIn\":{defaultDuration:800,calls:[[{opacity:[1,0],transformPerspective:[800,800],transformOriginX:[0,0],transformOriginY:[\"100%\",\"100%\"],rotateX:[0,-180]}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\"}},\"transition.perspectiveUpOut\":{defaultDuration:850,calls:[[{opacity:[0,1],transformPerspective:[800,800],transformOriginX:[0,0],transformOriginY:[\"100%\",\"100%\"],rotateX:-180}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\",rotateX:0}},\"transition.perspectiveDownIn\":{defaultDuration:800,calls:[[{opacity:[1,0],transformPerspective:[800,800],transformOriginX:[0,0],transformOriginY:[0,0],rotateX:[0,180]}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\"}},\"transition.perspectiveDownOut\":{defaultDuration:850,calls:[[{opacity:[0,1],transformPerspective:[800,800],transformOriginX:[0,0],transformOriginY:[0,0],rotateX:180}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\",rotateX:0}},\"transition.perspectiveLeftIn\":{defaultDuration:950,calls:[[{opacity:[1,0],transformPerspective:[2e3,2e3],transformOriginX:[0,0],transformOriginY:[0,0],rotateY:[0,-180]}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\"}},\"transition.perspectiveLeftOut\":{defaultDuration:950,calls:[[{opacity:[0,1],transformPerspective:[2e3,2e3],transformOriginX:[0,0],transformOriginY:[0,0],rotateY:-180}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\",rotateY:0}},\"transition.perspectiveRightIn\":{defaultDuration:950,calls:[[{opacity:[1,0],transformPerspective:[2e3,2e3],transformOriginX:[\"100%\",\"100%\"],transformOriginY:[0,0],rotateY:[0,180]}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\"}},\"transition.perspectiveRightOut\":{defaultDuration:950,calls:[[{opacity:[0,1],transformPerspective:[2e3,2e3],transformOriginX:[\"100%\",\"100%\"],transformOriginY:[0,0],rotateY:180}]],reset:{transformPerspective:0,transformOriginX:\"50%\",transformOriginY:\"50%\",rotateY:0}}};for(var k in f.RegisterEffect.packagedEffects)f.RegisterEffect.packagedEffects.hasOwnProperty(k)&&f.RegisterEffect(k,f.RegisterEffect.packagedEffects[k]);f.RunSequence=function(a){var b=g.extend(!0,[],a);b.length>1&&(g.each(b.reverse(),function(a,c){var d=b[a+1];if(d){var e=c.o||c.options,h=d.o||d.options,i=e&&e.sequenceQueue===!1?\"begin\":\"complete\",j=h&&h[i],k={};k[i]=function(){var a=d.e||d.elements,b=a.nodeType?[a]:a;j&&j.call(b,b),f(c)},d.o?d.o=g.extend({},h,k):d.options=g.extend({},h,k)}}),b.reverse()),f(b[0])}}(window.jQuery||window.Zepto||window,window,window?window.document:void 0)});\n",
    "/*!\n * jQuery Mousewheel 3.1.13\n *\n * Copyright 2015 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n!function(a){\"function\"==typeof define&&define.amd?define('mousewheel',[\"jquery\"],a):\"object\"==typeof exports?module.exports=a:a(jQuery)}(function(a){function b(b){var g=b||window.event,h=i.call(arguments,1),j=0,l=0,m=0,n=0,o=0,p=0;if(b=a.event.fix(g),b.type=\"mousewheel\",\"detail\"in g&&(m=-1*g.detail),\"wheelDelta\"in g&&(m=g.wheelDelta),\"wheelDeltaY\"in g&&(m=g.wheelDeltaY),\"wheelDeltaX\"in g&&(l=-1*g.wheelDeltaX),\"axis\"in g&&g.axis===g.HORIZONTAL_AXIS&&(l=-1*m,m=0),j=0===m?l:m,\"deltaY\"in g&&(m=-1*g.deltaY,j=m),\"deltaX\"in g&&(l=g.deltaX,0===m&&(j=-1*l)),0!==m||0!==l){if(1===g.deltaMode){var q=a.data(this,\"mousewheel-line-height\");j*=q,m*=q,l*=q}else if(2===g.deltaMode){var r=a.data(this,\"mousewheel-page-height\");j*=r,m*=r,l*=r}if(n=Math.max(Math.abs(m),Math.abs(l)),(!f||f>n)&&(f=n,d(g,n)&&(f/=40)),d(g,n)&&(j/=40,l/=40,m/=40),j=Math[j>=1?\"floor\":\"ceil\"](j/f),l=Math[l>=1?\"floor\":\"ceil\"](l/f),m=Math[m>=1?\"floor\":\"ceil\"](m/f),k.settings.normalizeOffset&&this.getBoundingClientRect){var s=this.getBoundingClientRect();o=b.clientX-s.left,p=b.clientY-s.top}return b.deltaX=l,b.deltaY=m,b.deltaFactor=f,b.offsetX=o,b.offsetY=p,b.deltaMode=0,h.unshift(b,j,l,m),e&&clearTimeout(e),e=setTimeout(c,200),(a.event.dispatch||a.event.handle).apply(this,h)}}function c(){f=null}function d(a,b){return k.settings.adjustOldDeltas&&\"mousewheel\"===a.type&&b%120===0}var e,f,g=[\"wheel\",\"mousewheel\",\"DOMMouseScroll\",\"MozMousePixelScroll\"],h=\"onwheel\"in document||document.documentMode>=9?[\"wheel\"]:[\"mousewheel\",\"DomMouseScroll\",\"MozMousePixelScroll\"],i=Array.prototype.slice;if(a.event.fixHooks)for(var j=g.length;j;)a.event.fixHooks[g[--j]]=a.event.mouseHooks;var k=a.event.special.mousewheel={version:\"3.1.12\",setup:function(){if(this.addEventListener)for(var c=h.length;c;)this.addEventListener(h[--c],b,!1);else this.onmousewheel=b;a.data(this,\"mousewheel-line-height\",k.getLineHeight(this)),a.data(this,\"mousewheel-page-height\",k.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var c=h.length;c;)this.removeEventListener(h[--c],b,!1);else this.onmousewheel=null;a.removeData(this,\"mousewheel-line-height\"),a.removeData(this,\"mousewheel-page-height\")},getLineHeight:function(b){var c=a(b),d=c[\"offsetParent\"in a.fn?\"offsetParent\":\"parent\"]();return d.length||(d=a(\"body\")),parseInt(d.css(\"fontSize\"),10)||parseInt(c.css(\"fontSize\"),10)||16},getPageHeight:function(b){return a(b).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};a.fn.extend({mousewheel:function(a){return a?this.bind(\"mousewheel\",a):this.trigger(\"mousewheel\")},unmousewheel:function(a){return this.unbind(\"mousewheel\",a)}})});\n",
    "/* == malihu jquery custom scrollbar plugin == Version: 3.1.4, License: MIT License (MIT) */\n!function(e){\"undefined\"!=typeof module&&module.exports?module.exports=e:e(jQuery,window,document)}(function(e){!function(t){var o=\"function\"==typeof define&&define.amd,a=\"undefined\"!=typeof module&&module.exports,n=\"https:\"==document.location.protocol?\"https:\":\"http:\",i=\"cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js\";o||(a?require(\"jquery-mousewheel\")(e):e.event.special.mousewheel||e(\"head\").append(decodeURI(\"%3Cscript src=\"+n+\"//\"+i+\"%3E%3C/script%3E\"))),t()}(function(){var t,o=\"mCustomScrollbar\",a=\"mCS\",n=\".mCustomScrollbar\",i={setTop:0,setLeft:0,axis:\"y\",scrollbarPosition:\"inside\",scrollInertia:950,autoDraggerLength:!0,alwaysShowScrollbar:0,snapOffset:0,mouseWheel:{enable:!0,scrollAmount:\"auto\",axis:\"y\",deltaFactor:\"auto\",disableOver:[\"select\",\"option\",\"keygen\",\"datalist\",\"textarea\"]},scrollButtons:{scrollType:\"stepless\",scrollAmount:\"auto\"},keyboard:{enable:!0,scrollType:\"stepless\",scrollAmount:\"auto\"},contentTouchScroll:25,documentTouchScroll:!0,advanced:{autoScrollOnFocus:\"input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']\",updateOnContentResize:!0,updateOnImageLoad:\"auto\",autoUpdateTimeout:60},theme:\"light\",callbacks:{onTotalScrollOffset:0,onTotalScrollBackOffset:0,alwaysTriggerOffsets:!0}},r=0,l={},s=window.attachEvent&&!window.addEventListener?1:0,c=!1,d=[\"mCSB_dragger_onDrag\",\"mCSB_scrollTools_onDrag\",\"mCS_img_loaded\",\"mCS_disabled\",\"mCS_destroyed\",\"mCS_no_scrollbar\",\"mCS-autoHide\",\"mCS-dir-rtl\",\"mCS_no_scrollbar_y\",\"mCS_no_scrollbar_x\",\"mCS_y_hidden\",\"mCS_x_hidden\",\"mCSB_draggerContainer\",\"mCSB_buttonUp\",\"mCSB_buttonDown\",\"mCSB_buttonLeft\",\"mCSB_buttonRight\"],u={init:function(t){var t=e.extend(!0,{},i,t),o=f.call(this);if(t.live){var s=t.liveSelector||this.selector||n,c=e(s);if(\"off\"===t.live)return void m(s);l[s]=setTimeout(function(){c.mCustomScrollbar(t),\"once\"===t.live&&c.length&&m(s)},500)}else m(s);return t.setWidth=t.set_width?t.set_width:t.setWidth,t.setHeight=t.set_height?t.set_height:t.setHeight,t.axis=t.horizontalScroll?\"x\":p(t.axis),t.scrollInertia=t.scrollInertia>0&&t.scrollInertia<17?17:t.scrollInertia,\"object\"!=typeof t.mouseWheel&&1==t.mouseWheel&&(t.mouseWheel={enable:!0,scrollAmount:\"auto\",axis:\"y\",preventDefault:!1,deltaFactor:\"auto\",normalizeDelta:!1,invert:!1}),t.mouseWheel.scrollAmount=t.mouseWheelPixels?t.mouseWheelPixels:t.mouseWheel.scrollAmount,t.mouseWheel.normalizeDelta=t.advanced.normalizeMouseWheelDelta?t.advanced.normalizeMouseWheelDelta:t.mouseWheel.normalizeDelta,t.scrollButtons.scrollType=g(t.scrollButtons.scrollType),h(t),e(o).each(function(){var o=e(this);if(!o.data(a)){o.data(a,{idx:++r,opt:t,scrollRatio:{y:null,x:null},overflowed:null,contentReset:{y:null,x:null},bindEvents:!1,tweenRunning:!1,sequential:{},langDir:o.css(\"direction\"),cbOffsets:null,trigger:null,poll:{size:{o:0,n:0},img:{o:0,n:0},change:{o:0,n:0}}});var n=o.data(a),i=n.opt,l=o.data(\"mcs-axis\"),s=o.data(\"mcs-scrollbar-position\"),c=o.data(\"mcs-theme\");l&&(i.axis=l),s&&(i.scrollbarPosition=s),c&&(i.theme=c,h(i)),v.call(this),n&&i.callbacks.onCreate&&\"function\"==typeof i.callbacks.onCreate&&i.callbacks.onCreate.call(this),e(\"#mCSB_\"+n.idx+\"_container img:not(.\"+d[2]+\")\").addClass(d[2]),u.update.call(null,o)}})},update:function(t,o){var n=t||f.call(this);return e(n).each(function(){var t=e(this);if(t.data(a)){var n=t.data(a),i=n.opt,r=e(\"#mCSB_\"+n.idx+\"_container\"),l=e(\"#mCSB_\"+n.idx),s=[e(\"#mCSB_\"+n.idx+\"_dragger_vertical\"),e(\"#mCSB_\"+n.idx+\"_dragger_horizontal\")];if(!r.length)return;n.tweenRunning&&V(t),o&&n&&i.callbacks.onBeforeUpdate&&\"function\"==typeof i.callbacks.onBeforeUpdate&&i.callbacks.onBeforeUpdate.call(this),t.hasClass(d[3])&&t.removeClass(d[3]),t.hasClass(d[4])&&t.removeClass(d[4]),l.css(\"max-height\",\"none\"),l.height()!==t.height()&&l.css(\"max-height\",t.height()),_.call(this),\"y\"===i.axis||i.advanced.autoExpandHorizontalScroll||r.css(\"width\",x(r)),n.overflowed=y.call(this),M.call(this),i.autoDraggerLength&&S.call(this),b.call(this),T.call(this);var c=[Math.abs(r[0].offsetTop),Math.abs(r[0].offsetLeft)];\"x\"!==i.axis&&(n.overflowed[0]?s[0].height()>s[0].parent().height()?B.call(this):(Q(t,c[0].toString(),{dir:\"y\",dur:0,overwrite:\"none\"}),n.contentReset.y=null):(B.call(this),\"y\"===i.axis?k.call(this):\"yx\"===i.axis&&n.overflowed[1]&&Q(t,c[1].toString(),{dir:\"x\",dur:0,overwrite:\"none\"}))),\"y\"!==i.axis&&(n.overflowed[1]?s[1].width()>s[1].parent().width()?B.call(this):(Q(t,c[1].toString(),{dir:\"x\",dur:0,overwrite:\"none\"}),n.contentReset.x=null):(B.call(this),\"x\"===i.axis?k.call(this):\"yx\"===i.axis&&n.overflowed[0]&&Q(t,c[0].toString(),{dir:\"y\",dur:0,overwrite:\"none\"}))),o&&n&&(2===o&&i.callbacks.onImageLoad&&\"function\"==typeof i.callbacks.onImageLoad?i.callbacks.onImageLoad.call(this):3===o&&i.callbacks.onSelectorChange&&\"function\"==typeof i.callbacks.onSelectorChange?i.callbacks.onSelectorChange.call(this):i.callbacks.onUpdate&&\"function\"==typeof i.callbacks.onUpdate&&i.callbacks.onUpdate.call(this)),X.call(this)}})},scrollTo:function(t,o){if(\"undefined\"!=typeof t&&null!=t){var n=f.call(this);return e(n).each(function(){var n=e(this);if(n.data(a)){var i=n.data(a),r=i.opt,l={trigger:\"external\",scrollInertia:r.scrollInertia,scrollEasing:\"mcsEaseInOut\",moveDragger:!1,timeout:60,callbacks:!0,onStart:!0,onUpdate:!0,onComplete:!0},s=e.extend(!0,{},l,o),c=Y.call(this,t),d=s.scrollInertia>0&&s.scrollInertia<17?17:s.scrollInertia;c[0]=j.call(this,c[0],\"y\"),c[1]=j.call(this,c[1],\"x\"),s.moveDragger&&(c[0]*=i.scrollRatio.y,c[1]*=i.scrollRatio.x),s.dur=ae()?0:d,setTimeout(function(){null!==c[0]&&\"undefined\"!=typeof c[0]&&\"x\"!==r.axis&&i.overflowed[0]&&(s.dir=\"y\",s.overwrite=\"all\",Q(n,c[0].toString(),s)),null!==c[1]&&\"undefined\"!=typeof c[1]&&\"y\"!==r.axis&&i.overflowed[1]&&(s.dir=\"x\",s.overwrite=\"none\",Q(n,c[1].toString(),s))},s.timeout)}})}},stop:function(){var t=f.call(this);return e(t).each(function(){var t=e(this);t.data(a)&&V(t)})},disable:function(t){var o=f.call(this);return e(o).each(function(){var o=e(this);if(o.data(a)){o.data(a);X.call(this,\"remove\"),k.call(this),t&&B.call(this),M.call(this,!0),o.addClass(d[3])}})},destroy:function(){var t=f.call(this);return e(t).each(function(){var n=e(this);if(n.data(a)){var i=n.data(a),r=i.opt,l=e(\"#mCSB_\"+i.idx),s=e(\"#mCSB_\"+i.idx+\"_container\"),c=e(\".mCSB_\"+i.idx+\"_scrollbar\");r.live&&m(r.liveSelector||e(t).selector),X.call(this,\"remove\"),k.call(this),B.call(this),n.removeData(a),Z(this,\"mcs\"),c.remove(),s.find(\"img.\"+d[2]).removeClass(d[2]),l.replaceWith(s.contents()),n.removeClass(o+\" _\"+a+\"_\"+i.idx+\" \"+d[6]+\" \"+d[7]+\" \"+d[5]+\" \"+d[3]).addClass(d[4])}})}},f=function(){return\"object\"!=typeof e(this)||e(this).length<1?n:this},h=function(t){var o=[\"rounded\",\"rounded-dark\",\"rounded-dots\",\"rounded-dots-dark\"],a=[\"rounded-dots\",\"rounded-dots-dark\",\"3d\",\"3d-dark\",\"3d-thick\",\"3d-thick-dark\",\"inset\",\"inset-dark\",\"inset-2\",\"inset-2-dark\",\"inset-3\",\"inset-3-dark\"],n=[\"minimal\",\"minimal-dark\"],i=[\"minimal\",\"minimal-dark\"],r=[\"minimal\",\"minimal-dark\"];t.autoDraggerLength=e.inArray(t.theme,o)>-1?!1:t.autoDraggerLength,t.autoExpandScrollbar=e.inArray(t.theme,a)>-1?!1:t.autoExpandScrollbar,t.scrollButtons.enable=e.inArray(t.theme,n)>-1?!1:t.scrollButtons.enable,t.autoHideScrollbar=e.inArray(t.theme,i)>-1?!0:t.autoHideScrollbar,t.scrollbarPosition=e.inArray(t.theme,r)>-1?\"outside\":t.scrollbarPosition},m=function(e){l[e]&&(clearTimeout(l[e]),Z(l,e))},p=function(e){return\"yx\"===e||\"xy\"===e||\"auto\"===e?\"yx\":\"x\"===e||\"horizontal\"===e?\"x\":\"y\"},g=function(e){return\"stepped\"===e||\"pixels\"===e||\"step\"===e||\"click\"===e?\"stepped\":\"stepless\"},v=function(){var t=e(this),n=t.data(a),i=n.opt,r=i.autoExpandScrollbar?\" \"+d[1]+\"_expand\":\"\",l=[\"<div id='mCSB_\"+n.idx+\"_scrollbar_vertical' class='mCSB_scrollTools mCSB_\"+n.idx+\"_scrollbar mCS-\"+i.theme+\" mCSB_scrollTools_vertical\"+r+\"'><div class='\"+d[12]+\"'><div id='mCSB_\"+n.idx+\"_dragger_vertical' class='mCSB_dragger' style='position:absolute;' oncontextmenu='return false;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>\",\"<div id='mCSB_\"+n.idx+\"_scrollbar_horizontal' class='mCSB_scrollTools mCSB_\"+n.idx+\"_scrollbar mCS-\"+i.theme+\" mCSB_scrollTools_horizontal\"+r+\"'><div class='\"+d[12]+\"'><div id='mCSB_\"+n.idx+\"_dragger_horizontal' class='mCSB_dragger' style='position:absolute;' oncontextmenu='return false;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>\"],s=\"yx\"===i.axis?\"mCSB_vertical_horizontal\":\"x\"===i.axis?\"mCSB_horizontal\":\"mCSB_vertical\",c=\"yx\"===i.axis?l[0]+l[1]:\"x\"===i.axis?l[1]:l[0],u=\"yx\"===i.axis?\"<div id='mCSB_\"+n.idx+\"_container_wrapper' class='mCSB_container_wrapper' />\":\"\",f=i.autoHideScrollbar?\" \"+d[6]:\"\",h=\"x\"!==i.axis&&\"rtl\"===n.langDir?\" \"+d[7]:\"\";i.setWidth&&t.css(\"width\",i.setWidth),i.setHeight&&t.css(\"height\",i.setHeight),i.setLeft=\"y\"!==i.axis&&\"rtl\"===n.langDir?\"989999px\":i.setLeft,t.addClass(o+\" _\"+a+\"_\"+n.idx+f+h).wrapInner(\"<div id='mCSB_\"+n.idx+\"' class='mCustomScrollBox mCS-\"+i.theme+\" \"+s+\"'><div id='mCSB_\"+n.idx+\"_container' class='mCSB_container' style='position:relative; top:\"+i.setTop+\"; left:\"+i.setLeft+\";' dir='\"+n.langDir+\"' /></div>\");var m=e(\"#mCSB_\"+n.idx),p=e(\"#mCSB_\"+n.idx+\"_container\");\"y\"===i.axis||i.advanced.autoExpandHorizontalScroll||p.css(\"width\",x(p)),\"outside\"===i.scrollbarPosition?(\"static\"===t.css(\"position\")&&t.css(\"position\",\"relative\"),t.css(\"overflow\",\"visible\"),m.addClass(\"mCSB_outside\").after(c)):(m.addClass(\"mCSB_inside\").append(c),p.wrap(u)),w.call(this);var g=[e(\"#mCSB_\"+n.idx+\"_dragger_vertical\"),e(\"#mCSB_\"+n.idx+\"_dragger_horizontal\")];g[0].css(\"min-height\",g[0].height()),g[1].css(\"min-width\",g[1].width())},x=function(t){var o=[t[0].scrollWidth,Math.max.apply(Math,t.children().map(function(){return e(this).outerWidth(!0)}).get())],a=t.parent().width();return o[0]>a?o[0]:o[1]>a?o[1]:\"100%\"},_=function(){var t=e(this),o=t.data(a),n=o.opt,i=e(\"#mCSB_\"+o.idx+\"_container\");if(n.advanced.autoExpandHorizontalScroll&&\"y\"!==n.axis){i.css({width:\"auto\",\"min-width\":0,\"overflow-x\":\"scroll\"});var r=Math.ceil(i[0].scrollWidth);3===n.advanced.autoExpandHorizontalScroll||2!==n.advanced.autoExpandHorizontalScroll&&r>i.parent().width()?i.css({width:r,\"min-width\":\"100%\",\"overflow-x\":\"inherit\"}):i.css({\"overflow-x\":\"inherit\",position:\"absolute\"}).wrap(\"<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />\").css({width:Math.ceil(i[0].getBoundingClientRect().right+.4)-Math.floor(i[0].getBoundingClientRect().left),\"min-width\":\"100%\",position:\"relative\"}).unwrap()}},w=function(){var t=e(this),o=t.data(a),n=o.opt,i=e(\".mCSB_\"+o.idx+\"_scrollbar:first\"),r=te(n.scrollButtons.tabindex)?\"tabindex='\"+n.scrollButtons.tabindex+\"'\":\"\",l=[\"<a href='#' class='\"+d[13]+\"' oncontextmenu='return false;' \"+r+\" />\",\"<a href='#' class='\"+d[14]+\"' oncontextmenu='return false;' \"+r+\" />\",\"<a href='#' class='\"+d[15]+\"' oncontextmenu='return false;' \"+r+\" />\",\"<a href='#' class='\"+d[16]+\"' oncontextmenu='return false;' \"+r+\" />\"],s=[\"x\"===n.axis?l[2]:l[0],\"x\"===n.axis?l[3]:l[1],l[2],l[3]];n.scrollButtons.enable&&i.prepend(s[0]).append(s[1]).next(\".mCSB_scrollTools\").prepend(s[2]).append(s[3])},S=function(){var t=e(this),o=t.data(a),n=e(\"#mCSB_\"+o.idx),i=e(\"#mCSB_\"+o.idx+\"_container\"),r=[e(\"#mCSB_\"+o.idx+\"_dragger_vertical\"),e(\"#mCSB_\"+o.idx+\"_dragger_horizontal\")],l=[n.height()/i.outerHeight(!1),n.width()/i.outerWidth(!1)],c=[parseInt(r[0].css(\"min-height\")),Math.round(l[0]*r[0].parent().height()),parseInt(r[1].css(\"min-width\")),Math.round(l[1]*r[1].parent().width())],d=s&&c[1]<c[0]?c[0]:c[1],u=s&&c[3]<c[2]?c[2]:c[3];r[0].css({height:d,\"max-height\":r[0].parent().height()-10}).find(\".mCSB_dragger_bar\").css({\"line-height\":c[0]+\"px\"}),r[1].css({width:u,\"max-width\":r[1].parent().width()-10})},b=function(){var t=e(this),o=t.data(a),n=e(\"#mCSB_\"+o.idx),i=e(\"#mCSB_\"+o.idx+\"_container\"),r=[e(\"#mCSB_\"+o.idx+\"_dragger_vertical\"),e(\"#mCSB_\"+o.idx+\"_dragger_horizontal\")],l=[i.outerHeight(!1)-n.height(),i.outerWidth(!1)-n.width()],s=[l[0]/(r[0].parent().height()-r[0].height()),l[1]/(r[1].parent().width()-r[1].width())];o.scrollRatio={y:s[0],x:s[1]}},C=function(e,t,o){var a=o?d[0]+\"_expanded\":\"\",n=e.closest(\".mCSB_scrollTools\");\"active\"===t?(e.toggleClass(d[0]+\" \"+a),n.toggleClass(d[1]),e[0]._draggable=e[0]._draggable?0:1):e[0]._draggable||(\"hide\"===t?(e.removeClass(d[0]),n.removeClass(d[1])):(e.addClass(d[0]),n.addClass(d[1])))},y=function(){var t=e(this),o=t.data(a),n=e(\"#mCSB_\"+o.idx),i=e(\"#mCSB_\"+o.idx+\"_container\"),r=null==o.overflowed?i.height():i.outerHeight(!1),l=null==o.overflowed?i.width():i.outerWidth(!1),s=i[0].scrollHeight,c=i[0].scrollWidth;return s>r&&(r=s),c>l&&(l=c),[r>n.height(),l>n.width()]},B=function(){var t=e(this),o=t.data(a),n=o.opt,i=e(\"#mCSB_\"+o.idx),r=e(\"#mCSB_\"+o.idx+\"_container\"),l=[e(\"#mCSB_\"+o.idx+\"_dragger_vertical\"),e(\"#mCSB_\"+o.idx+\"_dragger_horizontal\")];if(V(t),(\"x\"!==n.axis&&!o.overflowed[0]||\"y\"===n.axis&&o.overflowed[0])&&(l[0].add(r).css(\"top\",0),Q(t,\"_resetY\")),\"y\"!==n.axis&&!o.overflowed[1]||\"x\"===n.axis&&o.overflowed[1]){var s=dx=0;\"rtl\"===o.langDir&&(s=i.width()-r.outerWidth(!1),dx=Math.abs(s/o.scrollRatio.x)),r.css(\"left\",s),l[1].css(\"left\",dx),Q(t,\"_resetX\")}},T=function(){function t(){r=setTimeout(function(){e.event.special.mousewheel?(clearTimeout(r),W.call(o[0])):t()},100)}var o=e(this),n=o.data(a),i=n.opt;if(!n.bindEvents){if(I.call(this),i.contentTouchScroll&&D.call(this),E.call(this),i.mouseWheel.enable){var r;t()}z.call(this),H.call(this),i.advanced.autoScrollOnFocus&&P.call(this),i.scrollButtons.enable&&U.call(this),i.keyboard.enable&&F.call(this),n.bindEvents=!0}},k=function(){var t=e(this),o=t.data(a),n=o.opt,i=a+\"_\"+o.idx,r=\".mCSB_\"+o.idx+\"_scrollbar\",l=e(\"#mCSB_\"+o.idx+\",#mCSB_\"+o.idx+\"_container,#mCSB_\"+o.idx+\"_container_wrapper,\"+r+\" .\"+d[12]+\",#mCSB_\"+o.idx+\"_dragger_vertical,#mCSB_\"+o.idx+\"_dragger_horizontal,\"+r+\">a\"),s=e(\"#mCSB_\"+o.idx+\"_container\");n.advanced.releaseDraggableSelectors&&l.add(e(n.advanced.releaseDraggableSelectors)),n.advanced.extraDraggableSelectors&&l.add(e(n.advanced.extraDraggableSelectors)),o.bindEvents&&(e(document).add(e(!A()||top.document)).unbind(\".\"+i),l.each(function(){e(this).unbind(\".\"+i)}),clearTimeout(t[0]._focusTimeout),Z(t[0],\"_focusTimeout\"),clearTimeout(o.sequential.step),Z(o.sequential,\"step\"),clearTimeout(s[0].onCompleteTimeout),Z(s[0],\"onCompleteTimeout\"),o.bindEvents=!1)},M=function(t){var o=e(this),n=o.data(a),i=n.opt,r=e(\"#mCSB_\"+n.idx+\"_container_wrapper\"),l=r.length?r:e(\"#mCSB_\"+n.idx+\"_container\"),s=[e(\"#mCSB_\"+n.idx+\"_scrollbar_vertical\"),e(\"#mCSB_\"+n.idx+\"_scrollbar_horizontal\")],c=[s[0].find(\".mCSB_dragger\"),s[1].find(\".mCSB_dragger\")];\"x\"!==i.axis&&(n.overflowed[0]&&!t?(s[0].add(c[0]).add(s[0].children(\"a\")).css(\"display\",\"block\"),l.removeClass(d[8]+\" \"+d[10])):(i.alwaysShowScrollbar?(2!==i.alwaysShowScrollbar&&c[0].css(\"display\",\"none\"),l.removeClass(d[10])):(s[0].css(\"display\",\"none\"),l.addClass(d[10])),l.addClass(d[8]))),\"y\"!==i.axis&&(n.overflowed[1]&&!t?(s[1].add(c[1]).add(s[1].children(\"a\")).css(\"display\",\"block\"),l.removeClass(d[9]+\" \"+d[11])):(i.alwaysShowScrollbar?(2!==i.alwaysShowScrollbar&&c[1].css(\"display\",\"none\"),l.removeClass(d[11])):(s[1].css(\"display\",\"none\"),l.addClass(d[11])),l.addClass(d[9]))),n.overflowed[0]||n.overflowed[1]?o.removeClass(d[5]):o.addClass(d[5])},O=function(t){var o=t.type,a=t.target.ownerDocument!==document&&null!==frameElement?[e(frameElement).offset().top,e(frameElement).offset().left]:null,n=A()&&t.target.ownerDocument!==top.document&&null!==frameElement?[e(t.view.frameElement).offset().top,e(t.view.frameElement).offset().left]:[0,0];switch(o){case\"pointerdown\":case\"MSPointerDown\":case\"pointermove\":case\"MSPointerMove\":case\"pointerup\":case\"MSPointerUp\":return a?[t.originalEvent.pageY-a[0]+n[0],t.originalEvent.pageX-a[1]+n[1],!1]:[t.originalEvent.pageY,t.originalEvent.pageX,!1];case\"touchstart\":case\"touchmove\":case\"touchend\":var i=t.originalEvent.touches[0]||t.originalEvent.changedTouches[0],r=t.originalEvent.touches.length||t.originalEvent.changedTouches.length;return t.target.ownerDocument!==document?[i.screenY,i.screenX,r>1]:[i.pageY,i.pageX,r>1];default:return a?[t.pageY-a[0]+n[0],t.pageX-a[1]+n[1],!1]:[t.pageY,t.pageX,!1]}},I=function(){function t(e){var t=m.find(\"iframe\");if(t.length){var o=e?\"auto\":\"none\";t.css(\"pointer-events\",o)}}function o(e,t,o,a){if(m[0].idleTimer=u.scrollInertia<233?250:0,n.attr(\"id\")===h[1])var i=\"x\",r=(n[0].offsetLeft-t+a)*d.scrollRatio.x;else var i=\"y\",r=(n[0].offsetTop-e+o)*d.scrollRatio.y;Q(l,r.toString(),{dir:i,drag:!0})}var n,i,r,l=e(this),d=l.data(a),u=d.opt,f=a+\"_\"+d.idx,h=[\"mCSB_\"+d.idx+\"_dragger_vertical\",\"mCSB_\"+d.idx+\"_dragger_horizontal\"],m=e(\"#mCSB_\"+d.idx+\"_container\"),p=e(\"#\"+h[0]+\",#\"+h[1]),g=u.advanced.releaseDraggableSelectors?p.add(e(u.advanced.releaseDraggableSelectors)):p,v=u.advanced.extraDraggableSelectors?e(!A()||top.document).add(e(u.advanced.extraDraggableSelectors)):e(!A()||top.document);p.bind(\"mousedown.\"+f+\" touchstart.\"+f+\" pointerdown.\"+f+\" MSPointerDown.\"+f,function(o){if(o.stopImmediatePropagation(),o.preventDefault(),$(o)){c=!0,s&&(document.onselectstart=function(){return!1}),t(!1),V(l),n=e(this);var a=n.offset(),d=O(o)[0]-a.top,f=O(o)[1]-a.left,h=n.height()+a.top,m=n.width()+a.left;h>d&&d>0&&m>f&&f>0&&(i=d,r=f),C(n,\"active\",u.autoExpandScrollbar)}}).bind(\"touchmove.\"+f,function(e){e.stopImmediatePropagation(),e.preventDefault();var t=n.offset(),a=O(e)[0]-t.top,l=O(e)[1]-t.left;o(i,r,a,l)}),e(document).add(v).bind(\"mousemove.\"+f+\" pointermove.\"+f+\" MSPointerMove.\"+f,function(e){if(n){var t=n.offset(),a=O(e)[0]-t.top,l=O(e)[1]-t.left;if(i===a&&r===l)return;o(i,r,a,l)}}).add(g).bind(\"mouseup.\"+f+\" touchend.\"+f+\" pointerup.\"+f+\" MSPointerUp.\"+f,function(){n&&(C(n,\"active\",u.autoExpandScrollbar),n=null),c=!1,s&&(document.onselectstart=null),t(!0)})},D=function(){function o(e){if(!ee(e)||c||O(e)[2])return void(t=0);t=1,b=0,C=0,d=1,y.removeClass(\"mCS_touch_action\");var o=I.offset();u=O(e)[0]-o.top,f=O(e)[1]-o.left,z=[O(e)[0],O(e)[1]]}function n(e){if(ee(e)&&!c&&!O(e)[2]&&(T.documentTouchScroll||e.preventDefault(),e.stopImmediatePropagation(),(!C||b)&&d)){g=J();var t=M.offset(),o=O(e)[0]-t.top,a=O(e)[1]-t.left,n=\"mcsLinearOut\";if(E.push(o),W.push(a),z[2]=Math.abs(O(e)[0]-z[0]),z[3]=Math.abs(O(e)[1]-z[1]),B.overflowed[0])var i=D[0].parent().height()-D[0].height(),r=u-o>0&&o-u>-(i*B.scrollRatio.y)&&(2*z[3]<z[2]||\"yx\"===T.axis);if(B.overflowed[1])var l=D[1].parent().width()-D[1].width(),h=f-a>0&&a-f>-(l*B.scrollRatio.x)&&(2*z[2]<z[3]||\"yx\"===T.axis);r||h?(U||e.preventDefault(),b=1):(C=1,y.addClass(\"mCS_touch_action\")),U&&e.preventDefault(),w=\"yx\"===T.axis?[u-o,f-a]:\"x\"===T.axis?[null,f-a]:[u-o,null],I[0].idleTimer=250,B.overflowed[0]&&s(w[0],R,n,\"y\",\"all\",!0),B.overflowed[1]&&s(w[1],R,n,\"x\",L,!0)}}function i(e){if(!ee(e)||c||O(e)[2])return void(t=0);t=1,e.stopImmediatePropagation(),V(y),p=J();var o=M.offset();h=O(e)[0]-o.top,m=O(e)[1]-o.left,E=[],W=[]}function r(e){if(ee(e)&&!c&&!O(e)[2]){d=0,e.stopImmediatePropagation(),b=0,C=0,v=J();var t=M.offset(),o=O(e)[0]-t.top,a=O(e)[1]-t.left;if(!(v-g>30)){_=1e3/(v-p);var n=\"mcsEaseOut\",i=2.5>_,r=i?[E[E.length-2],W[W.length-2]]:[0,0];x=i?[o-r[0],a-r[1]]:[o-h,a-m];var u=[Math.abs(x[0]),Math.abs(x[1])];_=i?[Math.abs(x[0]/4),Math.abs(x[1]/4)]:[_,_];var f=[Math.abs(I[0].offsetTop)-x[0]*l(u[0]/_[0],_[0]),Math.abs(I[0].offsetLeft)-x[1]*l(u[1]/_[1],_[1])];w=\"yx\"===T.axis?[f[0],f[1]]:\"x\"===T.axis?[null,f[1]]:[f[0],null],S=[4*u[0]+T.scrollInertia,4*u[1]+T.scrollInertia];var y=parseInt(T.contentTouchScroll)||0;w[0]=u[0]>y?w[0]:0,w[1]=u[1]>y?w[1]:0,B.overflowed[0]&&s(w[0],S[0],n,\"y\",L,!1),B.overflowed[1]&&s(w[1],S[1],n,\"x\",L,!1)}}}function l(e,t){var o=[1.5*t,2*t,t/1.5,t/2];return e>90?t>4?o[0]:o[3]:e>60?t>3?o[3]:o[2]:e>30?t>8?o[1]:t>6?o[0]:t>4?t:o[2]:t>8?t:o[3]}function s(e,t,o,a,n,i){e&&Q(y,e.toString(),{dur:t,scrollEasing:o,dir:a,overwrite:n,drag:i})}var d,u,f,h,m,p,g,v,x,_,w,S,b,C,y=e(this),B=y.data(a),T=B.opt,k=a+\"_\"+B.idx,M=e(\"#mCSB_\"+B.idx),I=e(\"#mCSB_\"+B.idx+\"_container\"),D=[e(\"#mCSB_\"+B.idx+\"_dragger_vertical\"),e(\"#mCSB_\"+B.idx+\"_dragger_horizontal\")],E=[],W=[],R=0,L=\"yx\"===T.axis?\"none\":\"all\",z=[],P=I.find(\"iframe\"),H=[\"touchstart.\"+k+\" pointerdown.\"+k+\" MSPointerDown.\"+k,\"touchmove.\"+k+\" pointermove.\"+k+\" MSPointerMove.\"+k,\"touchend.\"+k+\" pointerup.\"+k+\" MSPointerUp.\"+k],U=void 0!==document.body.style.touchAction;I.bind(H[0],function(e){o(e)}).bind(H[1],function(e){n(e)}),M.bind(H[0],function(e){i(e)}).bind(H[2],function(e){r(e)}),P.length&&P.each(function(){e(this).bind(\"load\",function(){A(this)&&e(this.contentDocument||this.contentWindow.document).bind(H[0],function(e){o(e),i(e)}).bind(H[1],function(e){n(e)}).bind(H[2],function(e){r(e)})})})},E=function(){function o(){return window.getSelection?window.getSelection().toString():document.selection&&\"Control\"!=document.selection.type?document.selection.createRange().text:0}function n(e,t,o){d.type=o&&i?\"stepped\":\"stepless\",d.scrollAmount=10,q(r,e,t,\"mcsLinearOut\",o?60:null)}var i,r=e(this),l=r.data(a),s=l.opt,d=l.sequential,u=a+\"_\"+l.idx,f=e(\"#mCSB_\"+l.idx+\"_container\"),h=f.parent();f.bind(\"mousedown.\"+u,function(){t||i||(i=1,c=!0)}).add(document).bind(\"mousemove.\"+u,function(e){if(!t&&i&&o()){var a=f.offset(),r=O(e)[0]-a.top+f[0].offsetTop,c=O(e)[1]-a.left+f[0].offsetLeft;r>0&&r<h.height()&&c>0&&c<h.width()?d.step&&n(\"off\",null,\"stepped\"):(\"x\"!==s.axis&&l.overflowed[0]&&(0>r?n(\"on\",38):r>h.height()&&n(\"on\",40)),\"y\"!==s.axis&&l.overflowed[1]&&(0>c?n(\"on\",37):c>h.width()&&n(\"on\",39)))}}).bind(\"mouseup.\"+u+\" dragend.\"+u,function(){t||(i&&(i=0,n(\"off\",null)),c=!1)})},W=function(){function t(t,a){if(V(o),!L(o,t.target)){var r=\"auto\"!==i.mouseWheel.deltaFactor?parseInt(i.mouseWheel.deltaFactor):s&&t.deltaFactor<100?100:t.deltaFactor||100,d=i.scrollInertia;if(\"x\"===i.axis||\"x\"===i.mouseWheel.axis)var u=\"x\",f=[Math.round(r*n.scrollRatio.x),parseInt(i.mouseWheel.scrollAmount)],h=\"auto\"!==i.mouseWheel.scrollAmount?f[1]:f[0]>=l.width()?.9*l.width():f[0],m=Math.abs(e(\"#mCSB_\"+n.idx+\"_container\")[0].offsetLeft),p=c[1][0].offsetLeft,g=c[1].parent().width()-c[1].width(),v=\"y\"===i.mouseWheel.axis?t.deltaY||a:t.deltaX;else var u=\"y\",f=[Math.round(r*n.scrollRatio.y),parseInt(i.mouseWheel.scrollAmount)],h=\"auto\"!==i.mouseWheel.scrollAmount?f[1]:f[0]>=l.height()?.9*l.height():f[0],m=Math.abs(e(\"#mCSB_\"+n.idx+\"_container\")[0].offsetTop),p=c[0][0].offsetTop,g=c[0].parent().height()-c[0].height(),v=t.deltaY||a;\"y\"===u&&!n.overflowed[0]||\"x\"===u&&!n.overflowed[1]||((i.mouseWheel.invert||t.webkitDirectionInvertedFromDevice)&&(v=-v),i.mouseWheel.normalizeDelta&&(v=0>v?-1:1),(v>0&&0!==p||0>v&&p!==g||i.mouseWheel.preventDefault)&&(t.stopImmediatePropagation(),t.preventDefault()),t.deltaFactor<5&&!i.mouseWheel.normalizeDelta&&(h=t.deltaFactor,d=17),Q(o,(m-v*h).toString(),{dir:u,dur:d}))}}if(e(this).data(a)){var o=e(this),n=o.data(a),i=n.opt,r=a+\"_\"+n.idx,l=e(\"#mCSB_\"+n.idx),c=[e(\"#mCSB_\"+n.idx+\"_dragger_vertical\"),e(\"#mCSB_\"+n.idx+\"_dragger_horizontal\")],d=e(\"#mCSB_\"+n.idx+\"_container\").find(\"iframe\");d.length&&d.each(function(){e(this).bind(\"load\",function(){A(this)&&e(this.contentDocument||this.contentWindow.document).bind(\"mousewheel.\"+r,function(e,o){t(e,o)})})}),l.bind(\"mousewheel.\"+r,function(e,o){t(e,o)})}},R=new Object,A=function(t){var o=!1,a=!1,n=null;if(void 0===t?a=\"#empty\":void 0!==e(t).attr(\"id\")&&(a=e(t).attr(\"id\")),a!==!1&&void 0!==R[a])return R[a];if(t){try{var i=t.contentDocument||t.contentWindow.document;n=i.body.innerHTML}catch(r){}o=null!==n}else{try{var i=top.document;n=i.body.innerHTML}catch(r){}o=null!==n}return a!==!1&&(R[a]=o),o},L=function(t,o){var n=o.nodeName.toLowerCase(),i=t.data(a).opt.mouseWheel.disableOver,r=[\"select\",\"textarea\"];return e.inArray(n,i)>-1&&!(e.inArray(n,r)>-1&&!e(o).is(\":focus\"))},z=function(){var t,o=e(this),n=o.data(a),i=a+\"_\"+n.idx,r=e(\"#mCSB_\"+n.idx+\"_container\"),l=r.parent(),s=e(\".mCSB_\"+n.idx+\"_scrollbar .\"+d[12]);s.bind(\"mousedown.\"+i+\" touchstart.\"+i+\" pointerdown.\"+i+\" MSPointerDown.\"+i,function(o){c=!0,e(o.target).hasClass(\"mCSB_dragger\")||(t=1)}).bind(\"touchend.\"+i+\" pointerup.\"+i+\" MSPointerUp.\"+i,function(){c=!1}).bind(\"click.\"+i,function(a){if(t&&(t=0,e(a.target).hasClass(d[12])||e(a.target).hasClass(\"mCSB_draggerRail\"))){V(o);var i=e(this),s=i.find(\".mCSB_dragger\");if(i.parent(\".mCSB_scrollTools_horizontal\").length>0){if(!n.overflowed[1])return;var c=\"x\",u=a.pageX>s.offset().left?-1:1,f=Math.abs(r[0].offsetLeft)-u*(.9*l.width())}else{if(!n.overflowed[0])return;var c=\"y\",u=a.pageY>s.offset().top?-1:1,f=Math.abs(r[0].offsetTop)-u*(.9*l.height())}Q(o,f.toString(),{dir:c,scrollEasing:\"mcsEaseInOut\"})}})},P=function(){var t=e(this),o=t.data(a),n=o.opt,i=a+\"_\"+o.idx,r=e(\"#mCSB_\"+o.idx+\"_container\"),l=r.parent();r.bind(\"focusin.\"+i,function(){var o=e(document.activeElement),a=r.find(\".mCustomScrollBox\").length,i=0;o.is(n.advanced.autoScrollOnFocus)&&(V(t),clearTimeout(t[0]._focusTimeout),t[0]._focusTimer=a?(i+17)*a:0,t[0]._focusTimeout=setTimeout(function(){var e=[oe(o)[0],oe(o)[1]],a=[r[0].offsetTop,r[0].offsetLeft],s=[a[0]+e[0]>=0&&a[0]+e[0]<l.height()-o.outerHeight(!1),a[1]+e[1]>=0&&a[0]+e[1]<l.width()-o.outerWidth(!1)],c=\"yx\"!==n.axis||s[0]||s[1]?\"all\":\"none\";\"x\"===n.axis||s[0]||Q(t,e[0].toString(),{dir:\"y\",scrollEasing:\"mcsEaseInOut\",overwrite:c,dur:i}),\"y\"===n.axis||s[1]||Q(t,e[1].toString(),{dir:\"x\",scrollEasing:\"mcsEaseInOut\",overwrite:c,dur:i})},t[0]._focusTimer))})},H=function(){var t=e(this),o=t.data(a),n=a+\"_\"+o.idx,i=e(\"#mCSB_\"+o.idx+\"_container\").parent();i.bind(\"scroll.\"+n,function(){0===i.scrollTop()&&0===i.scrollLeft()||e(\".mCSB_\"+o.idx+\"_scrollbar\").css(\"visibility\",\"hidden\")})},U=function(){var t=e(this),o=t.data(a),n=o.opt,i=o.sequential,r=a+\"_\"+o.idx,l=\".mCSB_\"+o.idx+\"_scrollbar\",s=e(l+\">a\");s.bind(\"mousedown.\"+r+\" touchstart.\"+r+\" pointerdown.\"+r+\" MSPointerDown.\"+r+\" mouseup.\"+r+\" touchend.\"+r+\" pointerup.\"+r+\" MSPointerUp.\"+r+\" mouseout.\"+r+\" pointerout.\"+r+\" MSPointerOut.\"+r+\" click.\"+r,function(a){function r(e,o){i.scrollAmount=n.scrollButtons.scrollAmount,q(t,e,o)}if(a.preventDefault(),$(a)){var l=e(this).attr(\"class\");switch(i.type=n.scrollButtons.scrollType,a.type){case\"mousedown\":case\"touchstart\":case\"pointerdown\":case\"MSPointerDown\":if(\"stepped\"===i.type)return;c=!0,o.tweenRunning=!1,r(\"on\",l);break;case\"mouseup\":case\"touchend\":case\"pointerup\":case\"MSPointerUp\":case\"mouseout\":case\"pointerout\":case\"MSPointerOut\":if(\"stepped\"===i.type)return;c=!1,i.dir&&r(\"off\",l);break;case\"click\":if(\"stepped\"!==i.type||o.tweenRunning)return;r(\"on\",l)}}})},F=function(){function t(t){function a(e,t){r.type=i.keyboard.scrollType,r.scrollAmount=i.keyboard.scrollAmount,\"stepped\"===r.type&&n.tweenRunning||q(o,e,t)}switch(t.type){case\"blur\":n.tweenRunning&&r.dir&&a(\"off\",null);break;case\"keydown\":case\"keyup\":var l=t.keyCode?t.keyCode:t.which,s=\"on\";if(\"x\"!==i.axis&&(38===l||40===l)||\"y\"!==i.axis&&(37===l||39===l)){if((38===l||40===l)&&!n.overflowed[0]||(37===l||39===l)&&!n.overflowed[1])return;\"keyup\"===t.type&&(s=\"off\"),e(document.activeElement).is(u)||(t.preventDefault(),t.stopImmediatePropagation(),a(s,l))}else if(33===l||34===l){if((n.overflowed[0]||n.overflowed[1])&&(t.preventDefault(),t.stopImmediatePropagation()),\"keyup\"===t.type){V(o);var f=34===l?-1:1;if(\"x\"===i.axis||\"yx\"===i.axis&&n.overflowed[1]&&!n.overflowed[0])var h=\"x\",m=Math.abs(c[0].offsetLeft)-f*(.9*d.width());else var h=\"y\",m=Math.abs(c[0].offsetTop)-f*(.9*d.height());Q(o,m.toString(),{dir:h,scrollEasing:\"mcsEaseInOut\"})}}else if((35===l||36===l)&&!e(document.activeElement).is(u)&&((n.overflowed[0]||n.overflowed[1])&&(t.preventDefault(),t.stopImmediatePropagation()),\"keyup\"===t.type)){if(\"x\"===i.axis||\"yx\"===i.axis&&n.overflowed[1]&&!n.overflowed[0])var h=\"x\",m=35===l?Math.abs(d.width()-c.outerWidth(!1)):0;else var h=\"y\",m=35===l?Math.abs(d.height()-c.outerHeight(!1)):0;Q(o,m.toString(),{dir:h,scrollEasing:\"mcsEaseInOut\"})}}}var o=e(this),n=o.data(a),i=n.opt,r=n.sequential,l=a+\"_\"+n.idx,s=e(\"#mCSB_\"+n.idx),c=e(\"#mCSB_\"+n.idx+\"_container\"),d=c.parent(),u=\"input,textarea,select,datalist,keygen,[contenteditable='true']\",f=c.find(\"iframe\"),h=[\"blur.\"+l+\" keydown.\"+l+\" keyup.\"+l];f.length&&f.each(function(){e(this).bind(\"load\",function(){A(this)&&e(this.contentDocument||this.contentWindow.document).bind(h[0],function(e){t(e)})})}),s.attr(\"tabindex\",\"0\").bind(h[0],function(e){t(e)})},q=function(t,o,n,i,r){function l(e){u.snapAmount&&(f.scrollAmount=u.snapAmount instanceof Array?\"x\"===f.dir[0]?u.snapAmount[1]:u.snapAmount[0]:u.snapAmount);var o=\"stepped\"!==f.type,a=r?r:e?o?p/1.5:g:1e3/60,n=e?o?7.5:40:2.5,s=[Math.abs(h[0].offsetTop),Math.abs(h[0].offsetLeft)],d=[c.scrollRatio.y>10?10:c.scrollRatio.y,c.scrollRatio.x>10?10:c.scrollRatio.x],m=\"x\"===f.dir[0]?s[1]+f.dir[1]*(d[1]*n):s[0]+f.dir[1]*(d[0]*n),v=\"x\"===f.dir[0]?s[1]+f.dir[1]*parseInt(f.scrollAmount):s[0]+f.dir[1]*parseInt(f.scrollAmount),x=\"auto\"!==f.scrollAmount?v:m,_=i?i:e?o?\"mcsLinearOut\":\"mcsEaseInOut\":\"mcsLinear\",w=!!e;return e&&17>a&&(x=\"x\"===f.dir[0]?s[1]:s[0]),Q(t,x.toString(),{dir:f.dir[0],scrollEasing:_,dur:a,onComplete:w}),e?void(f.dir=!1):(clearTimeout(f.step),void(f.step=setTimeout(function(){l()},a)))}function s(){clearTimeout(f.step),Z(f,\"step\"),V(t)}var c=t.data(a),u=c.opt,f=c.sequential,h=e(\"#mCSB_\"+c.idx+\"_container\"),m=\"stepped\"===f.type,p=u.scrollInertia<26?26:u.scrollInertia,g=u.scrollInertia<1?17:u.scrollInertia;switch(o){case\"on\":if(f.dir=[n===d[16]||n===d[15]||39===n||37===n?\"x\":\"y\",n===d[13]||n===d[15]||38===n||37===n?-1:1],V(t),te(n)&&\"stepped\"===f.type)return;l(m);break;case\"off\":s(),(m||c.tweenRunning&&f.dir)&&l(!0)}},Y=function(t){var o=e(this).data(a).opt,n=[];return\"function\"==typeof t&&(t=t()),t instanceof Array?n=t.length>1?[t[0],t[1]]:\"x\"===o.axis?[null,t[0]]:[t[0],null]:(n[0]=t.y?t.y:t.x||\"x\"===o.axis?null:t,n[1]=t.x?t.x:t.y||\"y\"===o.axis?null:t),\"function\"==typeof n[0]&&(n[0]=n[0]()),\"function\"==typeof n[1]&&(n[1]=n[1]()),n},j=function(t,o){if(null!=t&&\"undefined\"!=typeof t){var n=e(this),i=n.data(a),r=i.opt,l=e(\"#mCSB_\"+i.idx+\"_container\"),s=l.parent(),c=typeof t;o||(o=\"x\"===r.axis?\"x\":\"y\");var d=\"x\"===o?l.outerWidth(!1)-s.width():l.outerHeight(!1)-s.height(),f=\"x\"===o?l[0].offsetLeft:l[0].offsetTop,h=\"x\"===o?\"left\":\"top\";switch(c){case\"function\":return t();case\"object\":var m=t.jquery?t:e(t);if(!m.length)return;return\"x\"===o?oe(m)[1]:oe(m)[0];case\"string\":case\"number\":if(te(t))return Math.abs(t);if(-1!==t.indexOf(\"%\"))return Math.abs(d*parseInt(t)/100);if(-1!==t.indexOf(\"-=\"))return Math.abs(f-parseInt(t.split(\"-=\")[1]));if(-1!==t.indexOf(\"+=\")){var p=f+parseInt(t.split(\"+=\")[1]);return p>=0?0:Math.abs(p)}if(-1!==t.indexOf(\"px\")&&te(t.split(\"px\")[0]))return Math.abs(t.split(\"px\")[0]);if(\"top\"===t||\"left\"===t)return 0;if(\"bottom\"===t)return Math.abs(s.height()-l.outerHeight(!1));if(\"right\"===t)return Math.abs(s.width()-l.outerWidth(!1));if(\"first\"===t||\"last\"===t){var m=l.find(\":\"+t);return\"x\"===o?oe(m)[1]:oe(m)[0]}return e(t).length?\"x\"===o?oe(e(t))[1]:oe(e(t))[0]:(l.css(h,t),void u.update.call(null,n[0]))}}},X=function(t){function o(){return clearTimeout(f[0].autoUpdate),0===l.parents(\"html\").length?void(l=null):void(f[0].autoUpdate=setTimeout(function(){return c.advanced.updateOnSelectorChange&&(s.poll.change.n=i(),s.poll.change.n!==s.poll.change.o)?(s.poll.change.o=s.poll.change.n,void r(3)):c.advanced.updateOnContentResize&&(s.poll.size.n=l[0].scrollHeight+l[0].scrollWidth+f[0].offsetHeight+l[0].offsetHeight+l[0].offsetWidth,s.poll.size.n!==s.poll.size.o)?(s.poll.size.o=s.poll.size.n,void r(1)):!c.advanced.updateOnImageLoad||\"auto\"===c.advanced.updateOnImageLoad&&\"y\"===c.axis||(s.poll.img.n=f.find(\"img\").length,s.poll.img.n===s.poll.img.o)?void((c.advanced.updateOnSelectorChange||c.advanced.updateOnContentResize||c.advanced.updateOnImageLoad)&&o()):(s.poll.img.o=s.poll.img.n,void f.find(\"img\").each(function(){n(this)}))},c.advanced.autoUpdateTimeout))}function n(t){function o(e,t){return function(){return t.apply(e,arguments)}}function a(){this.onload=null,\n    e(t).addClass(d[2]),r(2)}if(e(t).hasClass(d[2]))return void r();var n=new Image;n.onload=o(n,a),n.src=t.src}function i(){c.advanced.updateOnSelectorChange===!0&&(c.advanced.updateOnSelectorChange=\"*\");var e=0,t=f.find(c.advanced.updateOnSelectorChange);return c.advanced.updateOnSelectorChange&&t.length>0&&t.each(function(){e+=this.offsetHeight+this.offsetWidth}),e}function r(e){clearTimeout(f[0].autoUpdate),u.update.call(null,l[0],e)}var l=e(this),s=l.data(a),c=s.opt,f=e(\"#mCSB_\"+s.idx+\"_container\");return t?(clearTimeout(f[0].autoUpdate),void Z(f[0],\"autoUpdate\")):void o()},N=function(e,t,o){return Math.round(e/t)*t-o},V=function(t){var o=t.data(a),n=e(\"#mCSB_\"+o.idx+\"_container,#mCSB_\"+o.idx+\"_container_wrapper,#mCSB_\"+o.idx+\"_dragger_vertical,#mCSB_\"+o.idx+\"_dragger_horizontal\");n.each(function(){K.call(this)})},Q=function(t,o,n){function i(e){return s&&c.callbacks[e]&&\"function\"==typeof c.callbacks[e]}function r(){return[c.callbacks.alwaysTriggerOffsets||w>=S[0]+y,c.callbacks.alwaysTriggerOffsets||-B>=w]}function l(){var e=[h[0].offsetTop,h[0].offsetLeft],o=[x[0].offsetTop,x[0].offsetLeft],a=[h.outerHeight(!1),h.outerWidth(!1)],i=[f.height(),f.width()];t[0].mcs={content:h,top:e[0],left:e[1],draggerTop:o[0],draggerLeft:o[1],topPct:Math.round(100*Math.abs(e[0])/(Math.abs(a[0])-i[0])),leftPct:Math.round(100*Math.abs(e[1])/(Math.abs(a[1])-i[1])),direction:n.dir}}var s=t.data(a),c=s.opt,d={trigger:\"internal\",dir:\"y\",scrollEasing:\"mcsEaseOut\",drag:!1,dur:c.scrollInertia,overwrite:\"all\",callbacks:!0,onStart:!0,onUpdate:!0,onComplete:!0},n=e.extend(d,n),u=[n.dur,n.drag?0:n.dur],f=e(\"#mCSB_\"+s.idx),h=e(\"#mCSB_\"+s.idx+\"_container\"),m=h.parent(),p=c.callbacks.onTotalScrollOffset?Y.call(t,c.callbacks.onTotalScrollOffset):[0,0],g=c.callbacks.onTotalScrollBackOffset?Y.call(t,c.callbacks.onTotalScrollBackOffset):[0,0];if(s.trigger=n.trigger,0===m.scrollTop()&&0===m.scrollLeft()||(e(\".mCSB_\"+s.idx+\"_scrollbar\").css(\"visibility\",\"visible\"),m.scrollTop(0).scrollLeft(0)),\"_resetY\"!==o||s.contentReset.y||(i(\"onOverflowYNone\")&&c.callbacks.onOverflowYNone.call(t[0]),s.contentReset.y=1),\"_resetX\"!==o||s.contentReset.x||(i(\"onOverflowXNone\")&&c.callbacks.onOverflowXNone.call(t[0]),s.contentReset.x=1),\"_resetY\"!==o&&\"_resetX\"!==o){if(!s.contentReset.y&&t[0].mcs||!s.overflowed[0]||(i(\"onOverflowY\")&&c.callbacks.onOverflowY.call(t[0]),s.contentReset.x=null),!s.contentReset.x&&t[0].mcs||!s.overflowed[1]||(i(\"onOverflowX\")&&c.callbacks.onOverflowX.call(t[0]),s.contentReset.x=null),c.snapAmount){var v=c.snapAmount instanceof Array?\"x\"===n.dir?c.snapAmount[1]:c.snapAmount[0]:c.snapAmount;o=N(o,v,c.snapOffset)}switch(n.dir){case\"x\":var x=e(\"#mCSB_\"+s.idx+\"_dragger_horizontal\"),_=\"left\",w=h[0].offsetLeft,S=[f.width()-h.outerWidth(!1),x.parent().width()-x.width()],b=[o,0===o?0:o/s.scrollRatio.x],y=p[1],B=g[1],T=y>0?y/s.scrollRatio.x:0,k=B>0?B/s.scrollRatio.x:0;break;case\"y\":var x=e(\"#mCSB_\"+s.idx+\"_dragger_vertical\"),_=\"top\",w=h[0].offsetTop,S=[f.height()-h.outerHeight(!1),x.parent().height()-x.height()],b=[o,0===o?0:o/s.scrollRatio.y],y=p[0],B=g[0],T=y>0?y/s.scrollRatio.y:0,k=B>0?B/s.scrollRatio.y:0}b[1]<0||0===b[0]&&0===b[1]?b=[0,0]:b[1]>=S[1]?b=[S[0],S[1]]:b[0]=-b[0],t[0].mcs||(l(),i(\"onInit\")&&c.callbacks.onInit.call(t[0])),clearTimeout(h[0].onCompleteTimeout),G(x[0],_,Math.round(b[1]),u[1],n.scrollEasing),!s.tweenRunning&&(0===w&&b[0]>=0||w===S[0]&&b[0]<=S[0])||G(h[0],_,Math.round(b[0]),u[0],n.scrollEasing,n.overwrite,{onStart:function(){n.callbacks&&n.onStart&&!s.tweenRunning&&(i(\"onScrollStart\")&&(l(),c.callbacks.onScrollStart.call(t[0])),s.tweenRunning=!0,C(x),s.cbOffsets=r())},onUpdate:function(){n.callbacks&&n.onUpdate&&i(\"whileScrolling\")&&(l(),c.callbacks.whileScrolling.call(t[0]))},onComplete:function(){if(n.callbacks&&n.onComplete){\"yx\"===c.axis&&clearTimeout(h[0].onCompleteTimeout);var e=h[0].idleTimer||0;h[0].onCompleteTimeout=setTimeout(function(){i(\"onScroll\")&&(l(),c.callbacks.onScroll.call(t[0])),i(\"onTotalScroll\")&&b[1]>=S[1]-T&&s.cbOffsets[0]&&(l(),c.callbacks.onTotalScroll.call(t[0])),i(\"onTotalScrollBack\")&&b[1]<=k&&s.cbOffsets[1]&&(l(),c.callbacks.onTotalScrollBack.call(t[0])),s.tweenRunning=!1,h[0].idleTimer=0,C(x,\"hide\")},e)}}})}},G=function(e,t,o,a,n,i,r){function l(){S.stop||(x||m.call(),x=J()-v,s(),x>=S.time&&(S.time=x>S.time?x+f-(x-S.time):x+f-1,S.time<x+1&&(S.time=x+1)),S.time<a?S.id=h(l):g.call())}function s(){a>0?(S.currVal=u(S.time,_,b,a,n),w[t]=Math.round(S.currVal)+\"px\"):w[t]=o+\"px\",p.call()}function c(){f=1e3/60,S.time=x+f,h=window.requestAnimationFrame?window.requestAnimationFrame:function(e){return s(),setTimeout(e,.01)},S.id=h(l)}function d(){null!=S.id&&(window.requestAnimationFrame?window.cancelAnimationFrame(S.id):clearTimeout(S.id),S.id=null)}function u(e,t,o,a,n){switch(n){case\"linear\":case\"mcsLinear\":return o*e/a+t;case\"mcsLinearOut\":return e/=a,e--,o*Math.sqrt(1-e*e)+t;case\"easeInOutSmooth\":return e/=a/2,1>e?o/2*e*e+t:(e--,-o/2*(e*(e-2)-1)+t);case\"easeInOutStrong\":return e/=a/2,1>e?o/2*Math.pow(2,10*(e-1))+t:(e--,o/2*(-Math.pow(2,-10*e)+2)+t);case\"easeInOut\":case\"mcsEaseInOut\":return e/=a/2,1>e?o/2*e*e*e+t:(e-=2,o/2*(e*e*e+2)+t);case\"easeOutSmooth\":return e/=a,e--,-o*(e*e*e*e-1)+t;case\"easeOutStrong\":return o*(-Math.pow(2,-10*e/a)+1)+t;case\"easeOut\":case\"mcsEaseOut\":default:var i=(e/=a)*e,r=i*e;return t+o*(.499999999999997*r*i+-2.5*i*i+5.5*r+-6.5*i+4*e)}}e._mTween||(e._mTween={top:{},left:{}});var f,h,r=r||{},m=r.onStart||function(){},p=r.onUpdate||function(){},g=r.onComplete||function(){},v=J(),x=0,_=e.offsetTop,w=e.style,S=e._mTween[t];\"left\"===t&&(_=e.offsetLeft);var b=o-_;S.stop=0,\"none\"!==i&&d(),c()},J=function(){return window.performance&&window.performance.now?window.performance.now():window.performance&&window.performance.webkitNow?window.performance.webkitNow():Date.now?Date.now():(new Date).getTime()},K=function(){var e=this;e._mTween||(e._mTween={top:{},left:{}});for(var t=[\"top\",\"left\"],o=0;o<t.length;o++){var a=t[o];e._mTween[a].id&&(window.requestAnimationFrame?window.cancelAnimationFrame(e._mTween[a].id):clearTimeout(e._mTween[a].id),e._mTween[a].id=null,e._mTween[a].stop=1)}},Z=function(e,t){try{delete e[t]}catch(o){e[t]=null}},$=function(e){return!(e.which&&1!==e.which)},ee=function(e){var t=e.originalEvent.pointerType;return!(t&&\"touch\"!==t&&2!==t)},te=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},oe=function(e){var t=e.parents(\".mCSB_container\");return[e.offset().top-t.offset().top,e.offset().left-t.offset().left]},ae=function(){function e(){var e=[\"webkit\",\"moz\",\"ms\",\"o\"];if(\"hidden\"in document)return\"hidden\";for(var t=0;t<e.length;t++)if(e[t]+\"Hidden\"in document)return e[t]+\"Hidden\";return null}var t=e();return t?document[t]:!1};e.fn[o]=function(t){return u[t]?u[t].apply(this,Array.prototype.slice.call(arguments,1)):\"object\"!=typeof t&&t?void e.error(\"Method \"+t+\" does not exist\"):u.init.apply(this,arguments)},e[o]=function(t){return u[t]?u[t].apply(this,Array.prototype.slice.call(arguments,1)):\"object\"!=typeof t&&t?void e.error(\"Method \"+t+\" does not exist\"):u.init.apply(this,arguments)},e[o].defaults=i,window[o]=!0,e(window).bind(\"load\",function(){e(n)[o](),e.extend(e.expr[\":\"],{mcsInView:e.expr[\":\"].mcsInView||function(t){var o,a,n=e(t),i=n.parents(\".mCSB_container\");if(i.length)return o=i.parent(),a=[i[0].offsetTop,i[0].offsetLeft],a[0]+oe(n)[0]>=0&&a[0]+oe(n)[0]<o.height()-n.outerHeight(!1)&&a[1]+oe(n)[1]>=0&&a[1]+oe(n)[1]<o.width()-n.outerWidth(!1)},mcsInSight:e.expr[\":\"].mcsInSight||function(t){var o,a,n,i,r=e(t),l=r.parents(\".mCSB_container\");if(l.length)return o=[r.outerHeight(!1),r.outerWidth(!1)],n=[l[0].offsetTop+oe(r)[0],l[0].offsetLeft+oe(r)[1]],a=[l.parent()[0].offsetHeight,l.parent()[0].offsetWidth],i=[o[0]<a[0]?[.9,.1]:[.6,.4],o[1]<a[1]?[.9,.1]:[.6,.4]],n[0]-a[0]*i[0][0]<0&&n[0]+o[0]-a[0]*i[0][1]>=0&&n[1]-a[1]*i[1][0]<0&&n[1]+o[1]-a[1]*i[1][1]>=0},mcsOverflow:e.expr[\":\"].mcsOverflow||function(t){var o=e(t).data(a);if(o)return o.overflowed[0]||o.overflowed[1]}})})})});\ndefine(\"customScrollbar\", [\"jquery\",\"mousewheel\"], function(){});\n\n",
    "/*!\n * Validator v0.10.1 for Bootstrap 3, by @1000hz\n * Copyright 2016 Cina Saffary\n * Licensed under http://opensource.org/licenses/MIT\n *\n * https://github.com/1000hz/bootstrap-validator\n */\n\n+function(a){\"use strict\";function b(b){return b.is('[type=\"checkbox\"]')?b.prop(\"checked\"):b.is('[type=\"radio\"]')?!!a('[name=\"'+b.attr(\"name\")+'\"]:checked').length:a.trim(b.val())}function c(b){return this.each(function(){var c=a(this),e=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b),f=c.data(\"bs.validator\");(f||\"destroy\"!=b)&&(f||c.data(\"bs.validator\",f=new d(this,e)),\"string\"==typeof b&&f[b]())})}var d=function(c,e){this.options=e,this.$element=a(c),this.$inputs=this.$element.find(d.INPUT_SELECTOR),this.$btn=a('button[type=\"submit\"], input[type=\"submit\"]').filter('[form=\"'+this.$element.attr(\"id\")+'\"]').add(this.$element.find('input[type=\"submit\"], button[type=\"submit\"]')),e.errors=a.extend({},d.DEFAULTS.errors,e.errors);for(var f in e.custom)if(!e.errors[f])throw new Error(\"Missing default error message for custom validator: \"+f);a.extend(d.VALIDATORS,e.custom),this.$element.attr(\"novalidate\",!0),this.toggleSubmit(),this.$element.on(\"input.bs.validator change.bs.validator focusout.bs.validator\",d.INPUT_SELECTOR,a.proxy(this.onInput,this)),this.$element.on(\"submit.bs.validator\",a.proxy(this.onSubmit,this)),this.$element.find(\"[data-match]\").each(function(){var c=a(this),d=c.data(\"match\");a(d).on(\"input.bs.validator\",function(){b(c)&&c.trigger(\"input.bs.validator\")})})};d.INPUT_SELECTOR=':input:not([type=\"submit\"], button):enabled:visible',d.FOCUS_OFFSET=20,d.DEFAULTS={delay:500,html:!1,disable:!0,focus:!0,custom:{},errors:{match:\"Does not match\",minlength:\"Not long enough\"},feedback:{success:\"glyphicon-ok\",error:\"glyphicon-remove\"}},d.VALIDATORS={\"native\":function(a){var b=a[0];return b.checkValidity?b.checkValidity():!0},match:function(b){var c=b.data(\"match\");return!b.val()||b.val()===a(c).val()},minlength:function(a){var b=a.data(\"minlength\");return!a.val()||a.val().length>=b}},d.prototype.onInput=function(b){var c=this,d=a(b.target),e=\"focusout\"!==b.type;this.validateInput(d,e).done(function(){c.toggleSubmit()})},d.prototype.validateInput=function(c,d){var e=b(c),f=c.data(\"bs.validator.previous\"),g=c.data(\"bs.validator.errors\");if(f===e)return a.Deferred().resolve();c.data(\"bs.validator.previous\",e),c.is('[type=\"radio\"]')&&(c=this.$element.find('input[name=\"'+c.attr(\"name\")+'\"]'));var h=a.Event(\"validate.bs.validator\",{relatedTarget:c[0]});if(this.$element.trigger(h),!h.isDefaultPrevented()){var i=this;return this.runValidators(c).done(function(b){c.data(\"bs.validator.errors\",b),b.length?d?i.defer(c,i.showErrors):i.showErrors(c):i.clearErrors(c),g&&b.toString()===g.toString()||(h=b.length?a.Event(\"invalid.bs.validator\",{relatedTarget:c[0],detail:b}):a.Event(\"valid.bs.validator\",{relatedTarget:c[0],detail:g}),i.$element.trigger(h)),i.toggleSubmit(),i.$element.trigger(a.Event(\"validated.bs.validator\",{relatedTarget:c[0]}))})}},d.prototype.runValidators=function(c){function e(a){return c.data(a+\"-error\")||c.data(\"error\")||\"native\"==a&&c[0].validationMessage||h.errors[a]}var f=[],g=a.Deferred(),h=this.options;return c.data(\"bs.validator.deferred\")&&c.data(\"bs.validator.deferred\").reject(),c.data(\"bs.validator.deferred\",g),a.each(d.VALIDATORS,a.proxy(function(a,d){if((b(c)||c.attr(\"required\"))&&(c.data(a)||\"native\"==a)&&!d.call(this,c)){var g=e(a);!~f.indexOf(g)&&f.push(g)}},this)),!f.length&&b(c)&&c.data(\"remote\")?this.defer(c,function(){var d={};d[c.attr(\"name\")]=b(c),a.get(c.data(\"remote\"),d).fail(function(a,b,c){f.push(e(\"remote\")||c)}).always(function(){g.resolve(f)})}):g.resolve(f),g.promise()},d.prototype.validate=function(){var b=this;return a.when(this.$inputs.map(function(){return b.validateInput(a(this),!1)})).then(function(){b.toggleSubmit(),b.$btn.hasClass(\"disabled\")&&b.focusError()}),this},d.prototype.focusError=function(){if(this.options.focus){var b=a(\".has-error:first :input\");a(document.body).animate({scrollTop:b.offset().top-d.FOCUS_OFFSET},250),b.focus()}},d.prototype.showErrors=function(b){var c=this.options.html?\"html\":\"text\",d=b.data(\"bs.validator.errors\"),e=b.closest(\".form-group\"),f=e.find(\".help-block.with-errors\"),g=e.find(\".form-control-feedback\");d.length&&(d=a(\"<ul/>\").addClass(\"list-unstyled\").append(a.map(d,function(b){return a(\"<li/>\")[c](b)})),void 0===f.data(\"bs.validator.originalContent\")&&f.data(\"bs.validator.originalContent\",f.html()),f.empty().append(d),e.addClass(\"has-error has-danger\"),e.hasClass(\"has-feedback\")&&g.removeClass(this.options.feedback.success)&&g.addClass(this.options.feedback.error)&&e.removeClass(\"has-success\"))},d.prototype.clearErrors=function(a){var c=a.closest(\".form-group\"),d=c.find(\".help-block.with-errors\"),e=c.find(\".form-control-feedback\");d.html(d.data(\"bs.validator.originalContent\")),c.removeClass(\"has-error has-danger\"),c.hasClass(\"has-feedback\")&&e.removeClass(this.options.feedback.error)&&b(a)&&e.addClass(this.options.feedback.success)&&c.addClass(\"has-success\")},d.prototype.hasErrors=function(){function b(){return!!(a(this).data(\"bs.validator.errors\")||[]).length}return!!this.$inputs.filter(b).length},d.prototype.isIncomplete=function(){function c(){return!b(a(this))}return!!this.$inputs.filter(\"[required]\").filter(c).length},d.prototype.onSubmit=function(a){this.validate(),this.$btn.hasClass(\"disabled\")&&a.preventDefault()},d.prototype.toggleSubmit=function(){this.options.disable&&this.$btn.toggleClass(\"disabled\",this.isIncomplete()||this.hasErrors())},d.prototype.defer=function(b,c){return c=a.proxy(c,this,b),this.options.delay?(window.clearTimeout(b.data(\"bs.validator.timeout\")),void b.data(\"bs.validator.timeout\",window.setTimeout(c,this.options.delay))):c()},d.prototype.destroy=function(){return this.$element.removeAttr(\"novalidate\").removeData(\"bs.validator\").off(\".bs.validator\").find(\".form-control-feedback\").removeClass([this.options.feedback.error,this.options.feedback.success].join(\" \")),this.$inputs.off(\".bs.validator\").removeData([\"bs.validator.errors\",\"bs.validator.deferred\",\"bs.validator.previous\"]).each(function(){var b=a(this),c=b.data(\"bs.validator.timeout\");window.clearTimeout(c)&&b.removeData(\"bs.validator.timeout\")}),this.$element.find(\".help-block.with-errors\").each(function(){var b=a(this),c=b.data(\"bs.validator.originalContent\");b.removeData(\"bs.validator.originalContent\").html(c)}),this.$element.find('input[type=\"submit\"], button[type=\"submit\"]').removeClass(\"disabled\"),this.$element.find(\".has-error, .has-danger\").removeClass(\"has-error has-danger\"),this};var e=a.fn.validator;a.fn.validator=c,a.fn.validator.Constructor=d,a.fn.validator.noConflict=function(){return a.fn.validator=e,this},a(window).on(\"load\",function(){a('form[data-toggle=\"validator\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery);\ndefine(\"validator\", [\"jquery\",\"bootstrap\"], function(){});\n\n",
    "/**!\n * easyPieChart\n * Lightweight plugin to render simple, animated and retina optimized pie charts\n *\n * @license \n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\n * @version 2.1.6\n **/\n!function(a,b){\"object\"==typeof exports?module.exports=b(require(\"jquery\")):\"function\"==typeof define&&define.amd?define('easyPieChart',[\"jquery\"],b):b(a.jQuery)}(this,function(a){var b=function(a,b){var c,d=document.createElement(\"canvas\");a.appendChild(d),\"undefined\"!=typeof G_vmlCanvasManager&&G_vmlCanvasManager.initElement(d);var e=d.getContext(\"2d\");d.width=d.height=b.size;var f=1;window.devicePixelRatio>1&&(f=window.devicePixelRatio,d.style.width=d.style.height=[b.size,\"px\"].join(\"\"),d.width=d.height=b.size*f,e.scale(f,f)),e.translate(b.size/2,b.size/2),e.rotate((-0.5+b.rotate/180)*Math.PI);var g=(b.size-b.lineWidth)/2;b.scaleColor&&b.scaleLength&&(g-=b.scaleLength+2),Date.now=Date.now||function(){return+new Date};var h=function(a,b,c){c=Math.min(Math.max(-1,c||0),1);var d=0>=c?!0:!1;e.beginPath(),e.arc(0,0,g,0,2*Math.PI*c,d),e.strokeStyle=a,e.lineWidth=b,e.stroke()},i=function(){var a,c;e.lineWidth=1,e.fillStyle=b.scaleColor,e.save();for(var d=24;d>0;--d)d%6===0?(c=b.scaleLength,a=0):(c=.6*b.scaleLength,a=b.scaleLength-c),e.fillRect(-b.size/2+a,0,c,1),e.rotate(Math.PI/12);e.restore()},j=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(a){window.setTimeout(a,1e3/60)}}(),k=function(){b.scaleColor&&i(),b.trackColor&&h(b.trackColor,b.trackWidth||b.lineWidth,1)};this.getCanvas=function(){return d},this.getCtx=function(){return e},this.clear=function(){e.clearRect(b.size/-2,b.size/-2,b.size,b.size)},this.draw=function(a){b.scaleColor||b.trackColor?e.getImageData&&e.putImageData?c?e.putImageData(c,0,0):(k(),c=e.getImageData(0,0,b.size*f,b.size*f)):(this.clear(),k()):this.clear(),e.lineCap=b.lineCap;var d;d=\"function\"==typeof b.barColor?b.barColor(a):b.barColor,h(d,b.lineWidth,a/100)}.bind(this),this.animate=function(a,c){var d=Date.now();b.onStart(a,c);var e=function(){var f=Math.min(Date.now()-d,b.animate.duration),g=b.easing(this,f,a,c-a,b.animate.duration);this.draw(g),b.onStep(a,c,g),f>=b.animate.duration?b.onStop(a,c):j(e)}.bind(this);j(e)}.bind(this)},c=function(a,c){var d={barColor:\"#ef1e25\",trackColor:\"#f9f9f9\",scaleColor:\"#dfe0e0\",scaleLength:5,lineCap:\"round\",lineWidth:3,trackWidth:void 0,size:110,rotate:0,animate:{duration:1e3,enabled:!0},easing:function(a,b,c,d,e){return b/=e/2,1>b?d/2*b*b+c:-d/2*(--b*(b-2)-1)+c},onStart:function(){},onStep:function(){},onStop:function(){}};if(\"undefined\"!=typeof b)d.renderer=b;else{if(\"undefined\"==typeof SVGRenderer)throw new Error(\"Please load either the SVG- or the CanvasRenderer\");d.renderer=SVGRenderer}var e={},f=0,g=function(){this.el=a,this.options=e;for(var b in d)d.hasOwnProperty(b)&&(e[b]=c&&\"undefined\"!=typeof c[b]?c[b]:d[b],\"function\"==typeof e[b]&&(e[b]=e[b].bind(this)));e.easing=\"string\"==typeof e.easing&&\"undefined\"!=typeof jQuery&&jQuery.isFunction(jQuery.easing[e.easing])?jQuery.easing[e.easing]:d.easing,\"number\"==typeof e.animate&&(e.animate={duration:e.animate,enabled:!0}),\"boolean\"!=typeof e.animate||e.animate||(e.animate={duration:1e3,enabled:e.animate}),this.renderer=new e.renderer(a,e),this.renderer.draw(f),a.dataset&&a.dataset.percent?this.update(parseFloat(a.dataset.percent)):a.getAttribute&&a.getAttribute(\"data-percent\")&&this.update(parseFloat(a.getAttribute(\"data-percent\")))}.bind(this);this.update=function(a){return a=parseFloat(a),e.animate.enabled?this.renderer.animate(f,a):this.renderer.draw(a),f=a,this}.bind(this),this.disableAnimation=function(){return e.animate.enabled=!1,this},this.enableAnimation=function(){return e.animate.enabled=!0,this},g()};a.fn.easyPieChart=function(b){return this.each(function(){var d;a.data(this,\"easyPieChart\")||(d=a.extend({},b,a(this).data()),a.data(this,\"easyPieChart\",new c(this,d)))})}});\n",
    "/*!\n * hoverIntent v1.8.0 // 2014.06.29 // jQuery v1.9.1+\n * http://cherne.net/brian/resources/jquery.hoverIntent.html\n *\n * You may use hoverIntent under the terms of the MIT license. Basically that\n * means you are free to use hoverIntent as long as this header is left intact.\n * Copyright 2007, 2014 Brian Cherne\n */\n(function($){$.fn.hoverIntent=function(handlerIn,handlerOut,selector){var cfg={interval:100,sensitivity:6,timeout:0};if(typeof handlerIn===\"object\"){cfg=$.extend(cfg,handlerIn)}else{if($.isFunction(handlerOut)){cfg=$.extend(cfg,{over:handlerIn,out:handlerOut,selector:selector})}else{cfg=$.extend(cfg,{over:handlerIn,out:handlerIn,selector:handlerOut})}}var cX,cY,pX,pY;var track=function(ev){cX=ev.pageX;cY=ev.pageY};var compare=function(ev,ob){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t);if(Math.sqrt((pX-cX)*(pX-cX)+(pY-cY)*(pY-cY))<cfg.sensitivity){$(ob).off(\"mousemove.hoverIntent\",track);ob.hoverIntent_s=true;return cfg.over.apply(ob,[ev])}else{pX=cX;pY=cY;ob.hoverIntent_t=setTimeout(function(){compare(ev,ob)},cfg.interval)}};var delay=function(ev,ob){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t);ob.hoverIntent_s=false;return cfg.out.apply(ob,[ev])};var handleHover=function(e){var ev=$.extend({},e);var ob=this;if(ob.hoverIntent_t){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t)}if(e.type===\"mouseenter\"){pX=ev.pageX;pY=ev.pageY;$(ob).on(\"mousemove.hoverIntent\",track);if(!ob.hoverIntent_s){ob.hoverIntent_t=setTimeout(function(){compare(ev,ob)},cfg.interval)}}else{$(ob).off(\"mousemove.hoverIntent\",track);if(ob.hoverIntent_s){ob.hoverIntent_t=setTimeout(function(){delay(ev,ob)},cfg.timeout)}}};return this.on({\"mouseenter.hoverIntent\":handleHover,\"mouseleave.hoverIntent\":handleHover},cfg.selector)}})(jQuery);\ndefine(\"hoverIntent\", [\"jquery\"], function(){});\n\n",
    "/*!\n * Bootstrap Confirmation v1.0.5\n * https://github.com/tavicu/bs-confirmation\n */\n+function ($) {\n    'use strict';\n\n    //var for check event at body can have only one.\n    var event_body = false;\n\n    // CONFIRMATION PUBLIC CLASS DEFINITION\n    // ===============================\n    var Confirmation = function (element, options) {\n        var that = this;\n\n        this.init('confirmation', element, options);\n\n        $(element).on('show.bs.confirmation', function(e) {\n            that.options.onShow(e, this);\n\n            $(this).addClass('open');\n\n            var options = that.options;\n            var all = options.all_selector;\n\n            if(options.singleton)\n            {\n                $(all).not(that.$element).each(function()\n                {\n                    if( $(this).hasClass('open') )\n                    {\n                        $(this).confirmation('hide');\n                    }\n                });\n            }\n        });\n\n        $(element).on('hide.bs.confirmation', function(e) {\n            that.options.onHide(e, this);\n\n            $(this).removeClass('open');\n        });\n\n        $(element).on('shown.bs.confirmation', function(e) {\n            var options = that.options;\n            var all = options.all_selector;\n\n            if(that.isPopout()) {\n                if(!event_body) {\n                    event_body = $('body').on('click', function (e) {\n                        if(that.$element.is(e.target)) return;\n                        if(that.$element.has(e.target).length) return;\n                        if($('.popover').has(e.target).length) return;\n\n                        that.hide();\n                        that.inState.click = false;\n\n                        $('body').unbind(e);\n\n                        event_body = false;\n\n                        return;\n                    });\n                }\n            }\n        });\n\n        if(options.selector) {\n            $(element).on('click.bs.confirmation', options.selector, function(e) {\n                e.preventDefault();\n            });\n        } else {\n            $(element).on('click.bs.confirmation', function(e) {\n                e.preventDefault();\n            });\n        }\n    }\n\n    if (!$.fn.popover || !$.fn.tooltip) throw new Error('Confirmation requires popover.js and tooltip.js');\n\n    Confirmation.VERSION  = '1.0.5'\n\n    Confirmation.DEFAULTS = $.extend({}, $.fn.popover.Constructor.DEFAULTS, {\n        placement \t\t: 'right',\n        title \t\t\t: 'Are you sure?',\n        btnOkClass \t\t: 'btn btn-sm btn-danger',\n        btnOkLabel \t\t: 'Delete',\n        btnOkIcon \t\t: 'glyphicon glyphicon-ok',\n        btnCancelClass \t: 'btn btn-sm btn-default',\n        btnCancelLabel \t: 'Cancel',\n        btnCancelIcon \t: 'glyphicon glyphicon-remove',\n        href \t\t\t: '#',\n        target \t\t\t: '_self',\n        singleton \t\t: true,\n        popout \t\t\t: true,\n        onShow \t\t\t: function(event, element){},\n        onHide \t\t\t: function(event, element){},\n        onConfirm \t\t: function(event, element){},\n        onCancel \t\t: function(event, element){},\n        template \t\t:   '<div class=\"popover\"><div class=\"arrow\"></div>'\n        + '<h3 class=\"popover-title\"></h3>'\n        + '<div class=\"popover-content\">'\n        + '<a data-apply=\"confirmation\">Yes</a>'\n        + '<a data-dismiss=\"confirmation\">No</a>'\n        + '</div>'\n        + '</div>'\n    });\n\n\n    // NOTE: CONFIRMATION EXTENDS popover.js\n    // ================================\n    Confirmation.prototype = $.extend({}, $.fn.popover.Constructor.prototype);\n\n    Confirmation.prototype.constructor = Confirmation;\n\n    Confirmation.prototype.getDefaults = function () {\n        return Confirmation.DEFAULTS;\n    }\n\n    Confirmation.prototype.setContent = function () {\n        var that       = this;\n        var $tip       = this.tip();\n        var title      = this.getTitle();\n        var $btnOk     = $tip.find('[data-apply=\"confirmation\"]');\n        var $btnCancel = $tip.find('[data-dismiss=\"confirmation\"]');\n        var options    = this.options\n\n        $btnOk.addClass(this.getBtnOkClass())\n            .html(this.getBtnOkLabel())\n            .prepend($('<i></i>').addClass(this.getBtnOkIcon()), \" \")\n            .attr('href', this.getHref())\n            .attr('target', this.getTarget())\n            .off('click').on('click', function(event) {\n            options.onConfirm(event, that.$element);\n\n            // If the button is a submit one\n            if (that.$element.attr('type') == 'submit')\n                that.$element.closest('form:first').submit();\n\n            that.hide();\n            that.inState.click = false;\n        });\n\n        $btnCancel.addClass(this.getBtnCancelClass())\n            .html(this.getBtnCancelLabel())\n            .prepend($('<i></i>').addClass(this.getBtnCancelIcon()), \" \")\n            .off('click').on('click', function(event){\n            options.onCancel(event, that.$element);\n\n            that.hide();\n            that.inState.click = false;\n        });\n\n        $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title);\n\n        $tip.removeClass('fade top bottom left right in');\n\n        // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n        // this manually by checking the contents.\n        if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide();\n    }\n\n    Confirmation.prototype.getBtnOkClass = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-btnOkClass') || (typeof o.btnOkClass == 'function' ? o.btnOkClass.call(this, $e[0]) : o.btnOkClass);\n    }\n\n    Confirmation.prototype.getBtnOkLabel = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-btnOkLabel') || (typeof o.btnOkLabel == 'function' ? o.btnOkLabel.call(this, $e[0]) : o.btnOkLabel);\n    }\n\n    Confirmation.prototype.getBtnOkIcon = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-btnOkIcon') || (typeof o.btnOkIcon == 'function' ?  o.btnOkIcon.call(this, $e[0]) : o.btnOkIcon);\n    }\n\n    Confirmation.prototype.getBtnCancelClass = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-btnCancelClass') || (typeof o.btnCancelClass == 'function' ? o.btnCancelClass.call(this, $e[0]) : o.btnCancelClass);\n    }\n\n    Confirmation.prototype.getBtnCancelLabel = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-btnCancelLabel') || (typeof o.btnCancelLabel == 'function' ? o.btnCancelLabel.call(this, $e[0]) : o.btnCancelLabel);\n    }\n\n    Confirmation.prototype.getBtnCancelIcon = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-btnCancelIcon') || (typeof o.btnCancelIcon == 'function' ? o.btnCancelIcon.call(this, $e[0]) : o.btnCancelIcon);\n    }\n\n    Confirmation.prototype.getHref = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-href') || (typeof o.href == 'function' ? o.href.call(this, $e[0]) : o.href);\n    }\n\n    Confirmation.prototype.getTarget = function () {\n        var $e = this.$element;\n        var o  = this.options;\n\n        return $e.attr('data-target') || (typeof o.target == 'function' ? o.target.call(this, $e[0]) : o.target);\n    }\n\n    Confirmation.prototype.isPopout = function () {\n        var popout;\n        var $e = this.$element;\n        var o  = this.options;\n\n        popout = $e.attr('data-popout') || (typeof o.popout == 'function' ? o.popout.call(this, $e[0]) :\to.popout);\n\n        if(popout == 'false') popout = false;\n\n        return popout\n    }\n\n\n    // CONFIRMATION PLUGIN DEFINITION\n    // =========================\n    var old = $.fn.confirmation;\n\n    $.fn.confirmation = function (option) {\n        var that = this;\n\n        return this.each(function () {\n            var $this            = $(this);\n            var data             = $this.data('bs.confirmation');\n            var options          = typeof option == 'object' && option;\n\n            options              = options || {};\n            options.all_selector = that.selector;\n\n            if (!data && option == 'destroy') return;\n            if (!data) $this.data('bs.confirmation', (data = new Confirmation(this, options)));\n            if (typeof option == 'string') data[option]();\n        });\n    }\n\n    $.fn.confirmation.Constructor = Confirmation\n\n\n    // CONFIRMATION NO CONFLICT\n    // ===================\n    $.fn.confirmation.noConflict = function () {\n        $.fn.confirmation = old;\n\n        return this;\n    }\n}(jQuery);\n\ndefine(\"bootstrapConfirmation\", [\"bootstrap\"], function(){});\n\n",
    "/*! ========================================================================\n * Bootstrap Toggle: bootstrap2-toggle.js v2.2.0\n * http://www.bootstraptoggle.com\n * ========================================================================\n * Copyright 2014 Min Hur, The New York Times Company\n * Licensed under MIT\n * ======================================================================== */\n+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.toggle\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.toggle\",e=new c(this,f)),\"string\"==typeof b&&e[b]&&e[b]()})}var c=function(b,c){this.$element=a(b),this.options=a.extend({},this.defaults(),c),this.render()};c.VERSION=\"2.2.0\",c.DEFAULTS={on:\"On\",off:\"Off\",onstyle:\"primary\",offstyle:\"default\",size:\"normal\",style:\"\",width:null,height:null},c.prototype.defaults=function(){return{on:this.$element.attr(\"data-on\")||c.DEFAULTS.on,off:this.$element.attr(\"data-off\")||c.DEFAULTS.off,onstyle:this.$element.attr(\"data-onstyle\")||c.DEFAULTS.onstyle,offstyle:this.$element.attr(\"data-offstyle\")||c.DEFAULTS.offstyle,size:this.$element.attr(\"data-size\")||c.DEFAULTS.size,style:this.$element.attr(\"data-style\")||c.DEFAULTS.style,width:this.$element.attr(\"data-width\")||c.DEFAULTS.width,height:this.$element.attr(\"data-height\")||c.DEFAULTS.height}},c.prototype.render=function(){this._onstyle=\"btn-\"+this.options.onstyle,this._offstyle=\"btn-\"+this.options.offstyle;var b=\"large\"===this.options.size?\"btn-large\":\"small\"===this.options.size?\"btn-small\":\"mini\"===this.options.size?\"btn-mini\":\"\",c=a('<label class=\"btn\">').html(this.options.on).addClass(this._onstyle+\" \"+b),d=a('<label class=\"btn\">').html(this.options.off).addClass(this._offstyle+\" \"+b+\" active\"),e=a('<span class=\"toggle-handle btn btn-default\">').addClass(b),f=a('<div class=\"toggle-group\">').append(c,d,e),g=a('<div class=\"toggle btn\" data-toggle=\"toggle\">').addClass(this.$element.prop(\"checked\")?this._onstyle:this._offstyle+\" off\").addClass(b).addClass(this.options.style);this.$element.wrap(g),a.extend(this,{$toggle:this.$element.parent(),$toggleOn:c,$toggleOff:d,$toggleGroup:f}),this.$toggle.append(f);var h=this.options.width||Math.max(c.width(),d.width())+e.outerWidth()/2,i=this.options.height||Math.max(c.height(),d.height());c.addClass(\"toggle-on\"),d.addClass(\"toggle-off\"),this.$toggle.css({width:h,height:i}),this.options.height&&(c.css(\"line-height\",c.height()+\"px\"),d.css(\"line-height\",d.height()+\"px\")),this.update(!0),this.trigger(!0)},c.prototype.toggle=function(){this.$element.prop(\"checked\")?this.off():this.on()},c.prototype.on=function(a){return this.$element.prop(\"disabled\")?!1:(this.$toggle.removeClass(this._offstyle+\" off\").addClass(this._onstyle),this.$element.prop(\"checked\",!0),void(a||this.trigger()))},c.prototype.off=function(a){return this.$element.prop(\"disabled\")?!1:(this.$toggle.removeClass(this._onstyle).addClass(this._offstyle+\" off\"),this.$element.prop(\"checked\",!1),void(a||this.trigger()))},c.prototype.enable=function(){this.$toggle.removeAttr(\"disabled\"),this.$element.prop(\"disabled\",!1)},c.prototype.disable=function(){this.$toggle.attr(\"disabled\",\"disabled\"),this.$element.prop(\"disabled\",!0)},c.prototype.update=function(a){this.$element.prop(\"disabled\")?this.disable():this.enable(),this.$element.prop(\"checked\")?this.on(a):this.off(a)},c.prototype.trigger=function(b){this.$element.off(\"change.bs.toggle\"),b||this.$element.change(),this.$element.on(\"change.bs.toggle\",a.proxy(function(){this.update()},this))},c.prototype.destroy=function(){this.$element.off(\"change.bs.toggle\"),this.$toggleGroup.remove(),this.$element.removeData(\"bs.toggle\"),this.$element.unwrap()};var d=a.fn.bootstrapToggle;a.fn.bootstrapToggle=b,a.fn.bootstrapToggle.Constructor=c,a.fn.toggle.noConflict=function(){return a.fn.bootstrapToggle=d,this},a(function(){a(\"input[type=checkbox][data-toggle^=toggle]\").bootstrapToggle()}),a(document).on(\"click.bs.toggle\",\"div[data-toggle^=toggle]\",function(b){var c=a(this).find(\"input[type=checkbox]\");c.bootstrapToggle(\"toggle\"),b.preventDefault()})}(jQuery);\ndefine(\"bootstrapToggle\", [\"jquery\"], function(){});\n\n",
    "/**\n *  Util\n */\ndefine('app/util',[\n    'jquery',\n    'app/init',\n    'config/system_effect',\n    'config/signature_type',\n    'bootbox',\n    'localForage',\n    'velocity',\n    'velocityUI',\n    'customScrollbar',\n    'validator',\n    'easyPieChart',\n    'hoverIntent',\n    'bootstrapConfirmation',\n    'bootstrapToggle'\n], function($, Init, SystemEffect, SignatureType, bootbox, localforage) {\n\n    'use strict';\n\n    let config = {\n        ajaxOverlayClass: 'pf-loading-overlay',\n        ajaxOverlayWrapperClass: 'pf-loading-overlay-wrapper',\n\n        // form\n        formEditableFieldClass: 'pf-editable',                                  // class for all xEditable fields\n        formErrorContainerClass: 'pf-dialog-error-container',                   // class for \"error\" containers in dialogs\n        formWarningContainerClass: 'pf-dialog-warning-container',               // class for \"warning\" containers in dialogs\n        formInfoContainerClass: 'pf-dialog-info-container',                     // class for \"info\" containers in dialogs\n\n        // head\n        headMapTrackingId: 'pf-head-map-tracking',                              // id for \"map tracking\" toggle (checkbox)\n        headCharacterSwitchId: 'pf-head-character-switch',                      // id for \"character switch\" popover\n        headCurrentLocationId: 'pf-head-current-location',                      // id for \"show current location\" element\n\n        // menu\n        menuButtonFullScreenId: 'pf-menu-button-fullscreen',                    // id for menu button \"fullscreen\"\n        menuButtonMagnetizerId: 'pf-menu-button-magnetizer',                    // id for menu button \"magnetizer\"\n        menuButtonGridId: 'pf-menu-button-grid',                                // id for menu button \"grid snap\"\n        menuButtonEndpointId: 'pf-menu-button-endpoint',                        // id for menu button \"endpoint\" overlays\n\n\n        settingsMessageVelocityOptions: {\n            duration: 180\n        },\n\n        // dialogs\n        dialogClass: 'modal-dialog',                                            // class for all dialogs (bootstrap)\n\n        // map module\n        mapModuleId: 'pf-map-module',                                           // id for main map module\n        mapTabBarId: 'pf-map-tabs',                                             // id for map tab bar\n        mapWrapperClass: 'pf-map-wrapper',                                      // wrapper div (scrollable)\n        mapClass: 'pf-map' ,                                                    // class for all maps\n\n\n        // animation\n        animationPulseSuccessClass: 'pf-animation-pulse-success',               // animation class\n        animationPulseWarningClass: 'pf-animation-pulse-warning',               // animation class\n\n        // popover\n        popoverTriggerClass: 'pf-popover-trigger'                               // class for \"popover\" trigger elements\n\n    };\n\n    let stopTimerCache = {};                                                    // cache for stopwatch timer\n\n    let animationTimerCache = {};                                               // cache for table row animation timeout\n\n    let localStorage;                                                           // cache for \"localForage\" singleton\n\n    /*\n     *  ===========================================================================================================\n     *   Global jQuery plugins for some common and frequently used functions\n     *   ==========================================================================================================\n     */\n\n    /**\n     * displays a loading indicator on an element\n     */\n    $.fn.showLoadingAnimation = function(options){\n        return this.each(function(){\n            let loadingElement = $(this);\n            let iconSize = 'fa-lg';\n\n            // disable all events\n            loadingElement.css('pointer-events', 'none');\n\n            if(options){\n                if(options.icon){\n                    if(options.icon.size){\n                        iconSize = options.icon.size;\n                    }\n                }\n            }\n\n            let overlay = $('<div>', {\n                class: config.ajaxOverlayClass\n            }).append(\n                $('<div>', {\n                    class: [config.ajaxOverlayWrapperClass].join(' ')\n                }).append(\n                    $('<i>', {\n                        class: ['fa', 'fa-fw', iconSize, 'fa-refresh', 'fa-spin'].join(' ')\n                    })\n                )\n            );\n\n            loadingElement.append(overlay);\n\n            // fade in\n            $(overlay).velocity({\n                opacity: 0.6\n            },{\n                duration: 120\n            });\n        });\n    };\n\n    /**\n     * removes a loading indicator\n     */\n    $.fn.hideLoadingAnimation = function(){\n        return this.each(function(){\n            let loadingElement = $(this);\n            let overlay = loadingElement.find('.' + config.ajaxOverlayClass );\n\n            if(overlay.length){\n                // important: \"stop\" is required to stop \"show\" animation\n                // -> otherwise \"complete\" callback is not fired!\n                overlay.velocity('stop').velocity('reverse', {\n                    complete: function(){\n                        $(this).remove();\n                        // enable all events\n                        loadingElement.css('pointer-events', 'auto');\n                    }\n                });\n            }\n        });\n    };\n\n    /**\n     * show \"splash\" loading overlay\n     * @param callback\n     */\n    $.fn.showSplashOverlay = function(callback){\n        let splashOverlay = $(this);\n\n        splashOverlay.velocity('fadeIn', {\n            duration: Init.animationSpeed.splashOverlay,\n            complete: function(){\n                // execute callback function if given\n                if(callback !== undefined){\n                    callback();\n                }\n            }\n        });\n    };\n\n    /**\n     * hide \"splash\" loading overlay\n     */\n    $.fn.hideSplashOverlay = function(){\n        let splashOverlay = $(this);\n\n        splashOverlay.velocity('fadeOut', {\n            duration: Init.animationSpeed.splashOverlay\n        });\n    };\n\n    /**\n     * show a unique generated captcha image\n     * @param reason\n     * @param callback\n     * @returns {*}\n     */\n    $.fn.showCaptchaImage = function(reason, callback){\n        return this.each(function(){\n            let captchaWrapper = $(this);\n            let captchaImage = captchaWrapper.find('img');\n\n            captchaWrapper.showLoadingAnimation(config.loadingOptions);\n            getCaptchaImage(reason, function(base64Image){\n\n                captchaImage.attr('src', base64Image).show();\n                captchaWrapper.hideLoadingAnimation({\n                    icon: {\n                        size: 'fa-2x'\n                    }\n                });\n\n                if(callback){\n                    callback();\n                }\n            });\n        });\n    };\n\n    /**\n     * request a captcha image\n     * @param reason\n     * @param callback\n     */\n    let getCaptchaImage = function(reason, callback){\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.getCaptcha,\n            data: {\n                reason: reason\n            },\n            dataType: 'json'\n        }).done(function(responseData){\n            if(responseData.error.length > 0){\n                showNotify({title: 'getCaptchaImage', text: 'Captcha image gneration failed', type: 'error'});\n            }else{\n                callback(responseData.img);\n            }\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            showNotify({title: jqXHR.status + ': getCaptchaImage', text: reason, type: 'error'});\n        });\n\n    };\n\n    /**\n     * reset/clear form fields\n     * @returns {*}\n     */\n    $.fn.resetFormFields = function(){\n        return this.each(function(){\n            let field = $(this);\n\n            if( !field.is('select') ){\n                // \"input\"\n                field.val('');\n            }\n\n            field.parents('.form-group').removeClass('has-error has-success');\n        });\n    };\n\n    /**\n     * show form messages\n     * check: showMessage() for en other way of showing messages\n     * @param errors\n     */\n    $.fn.showFormMessage = function(errors){\n\n        let formElement = $(this);\n\n        let errorMessage = [];\n        let warningMessage = [];\n        let infoMessage = [];\n        for(let i = 0; i < errors.length; i++){\n            if(errors[i].type === 'error'){\n                errorMessage.push( errors[i].message );\n\n                // mark form field as invalid in case of a validation error\n                if(\n                    errors[i].field &&\n                    errors[i].field.length > 0\n                ){\n                    let formField = formElement.find('[name=\"' + errors[i].field + '\"]');\n                    formField.parents('.form-group').removeClass('has-success').addClass('has-error');\n                }\n\n            }else if(errors[i].type === 'warning'){\n                warningMessage.push( errors[i].message );\n            }else if(errors[i].type === 'info'){\n                infoMessage.push( errors[i].message );\n            }\n        }\n\n        if(errorMessage.length > 0){\n            formElement.hideFormMessage('error', function(element){\n                $(element).find('small').html( errorMessage.join('<br>') );\n                $(element).velocity('transition.slideUpIn', config.settingsMessageVelocityOptions);\n            });\n        }\n\n        if(warningMessage.length > 0){\n            formElement.hideFormMessage('warning', function(element){\n                $(element).find('small').html( warningMessage.join('<br>') );\n                $(element).velocity('transition.slideUpIn', config.settingsMessageVelocityOptions);\n            });\n        }\n\n        if(infoMessage.length > 0){\n            formElement.hideFormMessage('info', function(element){\n                $(element).find('small').html( infoMessage.join('<br>') );\n                $(element).velocity('transition.slideUpIn', config.settingsMessageVelocityOptions);\n            });\n        }\n    };\n\n    /**\n     * hide all form messages\n     * @param type\n     * @param callback\n     */\n    $.fn.hideFormMessage = function(type, callback){\n\n        let formElement = $(this);\n\n        let settingsMessageVelocityOptions = $.extend({}, config.settingsMessageVelocityOptions);\n\n        // check if callback exists\n        if(callback !== undefined){\n            settingsMessageVelocityOptions.complete = callback;\n\n            // new error will be shown afterwards -> keep display\n            settingsMessageVelocityOptions.display = 'block';\n        }\n\n        let messageElement = null;\n\n        switch(type){\n            case 'error':\n                // find error container\n                messageElement = formElement.find('.' + config.formErrorContainerClass);\n                break;\n            case 'warning':\n                messageElement = formElement.find('.' + config.formWarningContainerClass);\n                break;\n            case 'info':\n                messageElement = formElement.find('.' + config.formInfoContainerClass);\n                break;\n            case 'all':\n                messageElement = formElement.find(\n                    '.' + config.formErrorContainerClass + ', ' +\n                    '.' + config.formWarningContainerClass + ', ' +\n                    '.' + config.formInfoContainerClass\n                );\n        }\n\n        if(messageElement){\n            if(messageElement.is(':visible')){\n                messageElement.velocity('transition.slideDownOut', settingsMessageVelocityOptions);\n            }else if(callback){\n                // skip hide animation\n                callback(messageElement);\n            }\n        }\n    };\n\n    /**\n     * init form elements for validation (bootstrap3 validation)\n     * @param options\n     * @returns {*}\n     */\n    $.fn.initFormValidation = function(options){\n        options = (typeof options === 'undefined')? {} : options;\n\n        return this.each(function(){\n            let form = $(this);\n\n            // init form validation\n            form.validator(options);\n\n            // validation event listener\n            form.on('valid.bs.validator', function(validatorObj){\n                let inputGroup = $(validatorObj.relatedTarget).parents('.form-group');\n                if(inputGroup){\n                    inputGroup.removeClass('has-error').addClass('has-success');\n                }\n            });\n\n            form.on('invalid.bs.validator', function(validatorObj){\n                let field = $(validatorObj.relatedTarget);\n                let inputGroup = field.parents('.form-group');\n                if(inputGroup){\n                    inputGroup.removeClass('has-success').addClass('has-error');\n                }\n            });\n        });\n    };\n\n    /**\n     * checks whether a bootstrap form is valid or not\n     * validation plugin does not provide a proper function for this\n     * @returns {boolean}\n     */\n    $.fn.isValidForm = function(){\n        let form = $(this);\n        let valid = false;\n\n        let errorElements =  form.find('.has-error');\n\n        if(errorElements.length === 0){\n            valid = true;\n        }\n\n        return valid;\n    };\n\n    /**\n     * check multiple element if they arecurrently visible in viewport\n     * @returns {Array}\n     */\n    $.fn.isInViewport = function(){\n\n        let visibleElement = [];\n\n        this.each(function(){\n            let element = $(this)[0];\n\n            let top = element.offsetTop;\n            let left = element.offsetLeft;\n            let width = element.offsetWidth;\n            let height = element.offsetHeight;\n\n            while(element.offsetParent) {\n                element = element.offsetParent;\n                top += element.offsetTop;\n                left += element.offsetLeft;\n            }\n\n            if(\n                top < (window.pageYOffset + window.innerHeight) &&\n                left < (window.pageXOffset + window.innerWidth) &&\n                (top + height) > window.pageYOffset &&\n                (left + width) > window.pageXOffset\n            ){\n                visibleElement.push( this );\n            }\n        });\n\n        return visibleElement;\n    };\n\n    /**\n     * init the map-update-counter as \"easy-pie-chart\"\n     */\n    $.fn.initMapUpdateCounter = function(){\n\n        let counterChart = $(this);\n\n        counterChart.easyPieChart({\n            barColor: function(percent){\n\n                let color = '#568a89';\n                if(percent <= 30){\n                    color = '#d9534f';\n                }else if(percent <= 50){\n                    color = '#f0ad4e';\n                }\n\n                return color;\n\n            },\n            trackColor: '#2b2b2b',\n            size: 30,\n            scaleColor: false,\n            lineWidth: 2,\n            animate: 1000\n        });\n    };\n\n    /**\n     * init tooltips on an element\n     * @param  {object} options\n     * @returns {*}\n     */\n    $.fn.initTooltips = function(options){\n\n        options = (typeof options === 'object') ? options : {};\n\n        let defaultOptions = {\n            container:  this,\n            delay: 100\n        };\n        options = $.extend(defaultOptions, options);\n\n        return this.each(function(){\n            let tooltipElements = $(this).find('[title]');\n            tooltipElements.tooltip('destroy').tooltip(options);\n        });\n    };\n\n    /**\n     * adds a popup tooltip with character information (created/updated)\n     * @param tooltipData\n     */\n    $.fn.addCharacterInfoTooltip = function(tooltipData){\n        let element = $(this);\n\n        if(\n            tooltipData.created.character &&\n            tooltipData.updated.character\n        ){\n            let createdData = tooltipData.created;\n            let updatedData = tooltipData.updated;\n\n            // check if data has changed\n            if(\n                element.data('created') !== createdData.created ||\n                element.data('updated') !== updatedData.updated\n            ){\n                // data changed\n                // set new data for next check\n                element.data('created', createdData.created);\n                element.data('updated', updatedData.updated);\n\n                let statusCreatedClass = getStatusInfoForCharacter(createdData.character, 'class');\n                let statusUpdatedClass = getStatusInfoForCharacter(updatedData.character, 'class');\n\n                // convert timestamps\n                let dateCreated = new Date(createdData.created * 1000);\n                let dateUpdated = new Date(updatedData.updated * 1000);\n                let dateCreatedUTC = convertDateToUTC(dateCreated);\n                let dateUpdatedUTC = convertDateToUTC(dateUpdated);\n\n                let data = {\n                    created: createdData,\n                    updated: updatedData,\n                    createdTime: convertDateToString(dateCreatedUTC),\n                    updatedTime: convertDateToString(dateUpdatedUTC),\n                    createdStatusClass: statusCreatedClass,\n                    updatedStatusClass: statusUpdatedClass\n                };\n\n                requirejs(['text!templates/tooltip/character_info.html', 'mustache'], function(template, Mustache) {\n                    let content = Mustache.render(template, data);\n\n                    element.popover({\n                        placement: 'top',\n                        html: true,\n                        trigger: 'hover',\n                        content: '',\n                        container: 'body',\n                        title: 'Created / Updated',\n                        delay: {\n                            show: 250,\n                            hide: 0\n                        }\n                    });\n\n                    // set new popover content\n                    let popover = element.data('bs.popover');\n                    popover.options.content = content;\n                });\n\n            }\n        }\n    };\n\n    /**\n     * add character switch popover\n     * @param userData\n     */\n    $.fn.initCharacterSwitchPopover = function(userData){\n        let elements = $(this);\n        let eventNamespace = 'hideCharacterPopup';\n\n        requirejs(['text!templates/tooltip/character_switch.html', 'mustache'], function (template, Mustache) {\n\n            let data = {\n                id: config.headCharacterSwitchId,\n                routes:  Init.routes,\n                userData: userData,\n                otherCharacters: $.grep( userData.characters, function( character ) {\n                    // exclude current active character\n                    return character.id !== userData.character.id;\n                })\n            };\n\n            let content = Mustache.render(template, data);\n\n            return elements.each(function() {\n                let element = $(this);\n\n                // check if tooltip already exists -> remove it\n                if(element.data('bs.popover') !== undefined){\n                    element.off('click').popover('destroy');\n                }\n\n                element.on('click', function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    let easeEffect = $(this).attr('data-easein');\n                    let popoverData = $(this).data('bs.popover');\n                    let popoverElement = null;\n\n                    let velocityOptions = {\n                        duration: Init.animationSpeed.dialogEvents\n                    };\n\n                    if(popoverData === undefined){\n\n                        // init popover and add specific class to it (for styling)\n                        $(this).popover({\n                            html: true,\n                            title: 'select character',\n                            trigger: 'manual',\n                            placement: 'bottom',\n                            container: 'body',\n                            content: content,\n                            animation: false\n                        }).data('bs.popover').tip().addClass('pf-popover');\n\n                        $(this).popover('show');\n\n                        popoverElement = $(this).data('bs.popover').tip();\n                        popoverElement.velocity('transition.' + easeEffect, velocityOptions);\n                        popoverElement.initTooltips();\n                    }else{\n                        popoverElement = $(this).data('bs.popover').tip();\n                        if(popoverElement.is(':visible')){\n                            popoverElement.velocity('reverse');\n                        }else{\n                            $(this).popover('show');\n                            popoverElement.initTooltips();\n                            popoverElement.velocity('transition.' + easeEffect, velocityOptions);\n                        }\n                    }\n                });\n\n                // set popup \"close\" observer\n                elements.initPopoverClose(eventNamespace);\n            });\n        });\n    };\n\n    /**\n     * set \"popover\" close action on clicking \"somewhere\" on the <body>\n     * @param eventNamespace\n     * @returns {*}\n     */\n    $.fn.initPopoverClose = function(eventNamespace){\n        return this.each(function() {\n            $('body').off('click.' + eventNamespace).on('click.' + eventNamespace + ' contextmenu', function (e) {\n\n                $('.' + config.popoverTriggerClass).each(function () {\n                    let popoverElement = $(this);\n                    //the 'is' for buttons that trigger popups\n                    //the 'has' for icons within a button that triggers a popup\n                    if(\n                        !popoverElement.is(e.target) &&\n                        popoverElement.has(e.target).length === 0 &&\n                        $('.popover').has(e.target).length === 0\n                    ){\n                        let popover = popoverElement.data('bs.popover');\n\n                        if(\n                            popover !== undefined &&\n                            popover.tip().is(':visible')\n                        ){\n                            popoverElement.popover('hide');\n                        }\n                    }\n                });\n            });\n        });\n    };\n\n    /**\n     * add a wormhole tooltip with wh specific data to elements\n     * @param tooltipData\n     * @returns {*}\n     */\n    $.fn.addWormholeInfoTooltip = function(tooltipData){\n        return this.each(function() {\n            let element = $(this);\n\n            requirejs(['text!templates/tooltip/wormhole_info.html', 'mustache'], function (template, Mustache) {\n                let content = Mustache.render(template, tooltipData);\n\n                element.popover({\n                    placement: 'top',\n                    html: true,\n                    trigger: 'hover',\n                    content: '',\n                    container: 'body',\n                    title: tooltipData.name +\n                    '<span class=\"pull-right ' + tooltipData.class +'\">' + tooltipData.security + '</span>',\n                    delay: {\n                        show: 250,\n                        hide: 0\n                    }\n                });\n\n                // set new popover content\n                let popover = element.data('bs.popover');\n                popover.options.content = content;\n            });\n        });\n    };\n\n    /**\n     * display a custom message (info/warning/error) to a container element\n     * check: $.fn.showFormMessage() for an other way of showing messages\n     * @param config\n     */\n    $.fn.showMessage = function(config){\n        let containerElement = $(this);\n\n        requirejs(['text!templates/form/message.html', 'mustache'], function(template, Mustache) {\n\n            let messageTypeClass = 'alert-danger';\n            let messageTextClass = 'txt-color-danger';\n\n            switch(config.type){\n                case 'info':\n                    messageTypeClass = 'alert-info';\n                    messageTextClass = 'txt-color-information';\n                    break;\n                case 'success':\n                    messageTypeClass = 'alert-success';\n                    messageTextClass = 'txt-color-success';\n                    break;\n                case 'warning':\n                    messageTypeClass = 'alert-warning';\n                    messageTextClass = 'txt-color-warning';\n                    break;\n            }\n\n            let defaultOptions = {\n                dismissible: true,\n                messageTypeClass: messageTypeClass,\n                messageTextClass: messageTextClass\n            };\n\n            defaultOptions = $.extend(defaultOptions, config);\n\n            let content = Mustache.render(template, defaultOptions);\n\n            containerElement.html(content);\n\n            containerElement.children().first().velocity('stop').velocity('fadeIn');\n\n        });\n    };\n\n    /**\n     * wrapper function for onClick() || onDblClick() events in order to distinguish between this two types of events\n     * @param singleClickCallback\n     * @param doubleClickCallback\n     * @param timeout\n     * @returns {any|JQuery|*}\n     */\n    $.fn.singleDoubleClick = function(singleClickCallback, doubleClickCallback, timeout) {\n        return this.each(function(){\n            let clicks = 0, self = this;\n\n            // prevent default behaviour (e.g. open <a>-tag link)\n            $(this).off('click').on('click', function(e){\n                e.preventDefault();\n            });\n\n            $(this).off('mouseup').on('mouseup', function(e){\n                clicks++;\n                if (clicks === 1) {\n                    setTimeout(function(){\n                        if(clicks === 1) {\n                            singleClickCallback.call(self, e);\n                        } else {\n                            doubleClickCallback.call(self, e);\n                        }\n                        clicks = 0;\n                    }, timeout || Init.timer.DBL_CLICK);\n                }\n            });\n        });\n    };\n\n    /**\n     * highlight jquery elements\n     * add/remove css class for keyframe animation\n     * @returns {any|JQuery|*}\n     */\n    $.fn.pulseTableRow = function(status, clear){\n\n        let animationClass = '';\n        switch(status){\n            case 'added':\n                animationClass = config.animationPulseSuccessClass;\n                break;\n            case 'changed':\n                animationClass = config.animationPulseWarningClass;\n                break;\n        }\n\n        let clearTimer =  function(element) {\n            element.removeClass( animationClass );\n            let currentTimer = element.data('animationTimer');\n\n            if( animationTimerCache.hasOwnProperty(currentTimer) ){\n                clearTimeout( currentTimer );\n                delete animationTimerCache[currentTimer];\n                element.removeData('animationTimer');\n            }\n        };\n\n        return this.each(function(){\n            let element = $(this);\n\n            if( element.hasClass(animationClass) ){\n                // clear timer -> set new timer\n                clearTimer(element);\n            }\n\n            if(clear !== true){\n                element.addClass( animationClass );\n                let timer = setTimeout(clearTimer, 1500, element);\n                element.data('animationTimer', timer);\n                animationTimerCache[timer] = true;\n            }\n\n        });\n    };\n\n    /*\n     *  ===========================================================================================================\n     *   Util functions that are global available for all modules\n     *   ==========================================================================================================\n     */\n\n    /**\n     * get current Pathfinder version number\n     * @returns {*|jQuery}\n     */\n    let getVersion = function(){\n        return $('body').data('version');\n    };\n\n    /**\n     * show current program version information in browser console\n     */\n    let showVersionInfo = function(){\n        console.info('PATHFINDER ' + getVersion());\n    };\n\n    /**\n     * init utility prototype functions\n     */\n    let initPrototypes = function(){\n        // Array diff\n        // [1,2,3,4,5,6].diff( [3,4,5] );\n        // => [1, 2, 6]\n        Array.prototype.diff = function(a) {\n            return this.filter(function(i) {return a.indexOf(i) < 0;});\n        };\n    };\n\n    /**\n     * flatten XEditable array for select fields\n     * @param dataArray\n     * @returns {{}}\n     */\n    let flattenXEditableSelectArray = (dataArray) => {\n        let flatten = {};\n\n        for(let data of dataArray){\n            if(data.children && data.children.length > 0){\n                for(let child of data.children){\n                    flatten[child.value] = child.text;\n                }\n            }else{\n                flatten[data.value] = data.text;\n            }\n        }\n\n        return flatten;\n    } ;\n\n    /**\n     * set default configuration  for \"Bootbox\" dialogs\n     */\n    let initDefaultBootboxConfig = function(){\n        bootbox.setDefaults({\n            onEscape: true      // enables close dialogs on ESC key\n        });\n    };\n\n    /**\n     * get the current main trigger delay for the main trigger functions\n     * optional in/decrease the delay\n     * @param updateKey\n     * @param value\n     * @returns {*}\n     */\n    let getCurrentTriggerDelay = function( updateKey, value ){\n\n        // make sure the delay timer is valid!\n        // if this is called for the first time -> set CURRENT_DELAY\n        if(\n            Init.timer[updateKey].CURRENT_DELAY === undefined ||\n            Init.timer[updateKey].CURRENT_DELAY <= 0\n        ){\n            Init.timer[updateKey].CURRENT_DELAY = Init.timer[updateKey].DELAY;\n        }\n\n        // in/decrease the trigger delay\n        if(\n            value === parseInt(value, 10)  &&\n            ( Init.timer[updateKey].CURRENT_DELAY ) + value > 0\n        ){\n            Init.timer[updateKey].CURRENT_DELAY += value;\n        }\n\n        return Init.timer[updateKey].CURRENT_DELAY;\n    };\n\n    /**\n     * get date obj with current EVE Server Time.\n     * @returns {Date}\n     */\n    let getServerTime = function(){\n\n        // Server is running with GMT/UTC (EVE Time)\n        let localDate = new Date();\n\n        let serverDate= new Date(\n            localDate.getUTCFullYear(),\n            localDate.getUTCMonth(),\n            localDate.getUTCDate(),\n            localDate.getUTCHours(),\n            localDate.getUTCMinutes(),\n            localDate.getUTCSeconds()\n        );\n\n        return serverDate;\n    };\n\n    /**\n     * convert timestamp to server time\n     * @param timestamp\n     * @returns {Date}\n     */\n    let convertTimestampToServerTime = function(timestamp){\n        let currentTimeZoneOffsetInMinutes = new Date().getTimezoneOffset();\n        return new Date( (timestamp + (currentTimeZoneOffsetInMinutes * 60)) * 1000);\n    };\n\n    /**\n     * get date difference as time parts (days, hours, minutes, seconds)\n     * @param date1\n     * @param date2\n     * @returns {{}}\n     */\n    let getTimeDiffParts = function(date1, date2){\n        let parts = {};\n        let time1 = date1.getTime();\n        let time2 = date2.getTime();\n        let diff  = 0;\n\n        if(\n            time1 >= 0 &&\n            time2 >= 0\n        ){\n            diff = (date2.getTime() - date1.getTime()) / 1000;\n        }\n\n        diff = Math.abs(Math.floor(diff));\n\n        parts.days = Math.floor(diff/(24*60*60));\n        let leftSec = diff - parts.days * 24*60*60;\n\n        parts.hours = Math.floor(leftSec/(60*60));\n        leftSec = leftSec - parts.hours * 60*60;\n\n        parts.min = Math.floor(leftSec/(60));\n        parts.sec = leftSec - parts.min * 60;\n        return parts;\n    };\n\n    /**\n     * start time measurement by a unique string identifier\n     * @param timerName\n     */\n    let timeStart = function(timerName){\n\n        if(typeof performance === 'object'){\n            stopTimerCache[timerName] = performance.now();\n        }else{\n            stopTimerCache[timerName] = new Date().getTime();\n        }\n    };\n\n    /**\n     * get time delta between timeStart() and timeStop() by a unique string identifier\n     * @param timerName\n     * @returns {number}\n     */\n    let timeStop = function(timerName){\n\n        let duration = 0;\n\n        if( stopTimerCache.hasOwnProperty(timerName) ){\n            // check browser support for performance API\n            let timeNow = 0;\n\n            if(typeof performance === 'object'){\n                timeNow = performance.now();\n            }else{\n                timeNow = new Date();\n            }\n\n            // format ms time duration\n            duration = Number( (timeNow - stopTimerCache[timerName] ).toFixed(2) );\n\n            // delete key\n            delete( stopTimerCache[timerName]);\n        }\n\n        return duration;\n    };\n\n    /**\n     * trigger main logging event with log information\n     * @param logKey\n     * @param options\n     */\n    let log = function(logKey, options){\n        $(window).trigger('pf:log', [logKey, options]);\n    };\n\n    /**\n     * trigger a notification (on screen or desktop)\n     * @param customConfig\n     * @param desktop\n     */\n    let showNotify = function(customConfig, desktop){\n        requirejs(['app/notification'], function(Notification) {\n            Notification.showNotify(customConfig, desktop);\n        });\n    };\n\n    /**\n     * stop browser tab title \"blinking\"\n     */\n    let stopTabBlink = function(){\n        requirejs(['app/notification'], function(Notification) {\n            Notification.stopTabBlink();\n        });\n    };\n\n    /**\n     * get log entry info\n     * @param logType\n     * @param option\n     * @returns {string}\n     */\n    let getLogInfo = function(logType, option){\n        let logInfo = '';\n\n        if(Init.classes.logTypes.hasOwnProperty(logType)){\n            logInfo = Init.classes.logTypes[logType][option];\n        }\n\n        return logInfo;\n    };\n\n    /**\n     * get currentUserData from \"global\" variable\n     * @returns {*}\n     */\n    let getCurrentUserData = function(){\n        return Init.currentUserData;\n    };\n\n    /**\n     * set default jQuery AJAX configuration\n     */\n    let ajaxSetup = function(){\n        $.ajaxSetup({\n            beforeSend: function(xhr, settings) {\n                // Add custom application headers on \"same origin\" requests only!\n                // -> Otherwise a \"preflight\" request is made, which will \"probably\" fail\n                if(settings.crossDomain === false){\n                    // add current character data to ANY XHR request (HTTP HEADER)\n                    // -> This helps to identify multiple characters on multiple browser tabs\n                    let userData = getCurrentUserData();\n                    let currentCharacterId = 0;\n                    if(\n                        userData &&\n                        userData.character\n                    ){\n                        currentCharacterId = parseInt( userData.character.id );\n                    }\n\n                    xhr.setRequestHeader('Pf-Character', currentCharacterId);\n                }\n            }\n        });\n    };\n\n    /**\n     * get WebSocket readyState description from ID\n     * https://developer.mozilla.org/de/docs/Web/API/WebSocket\n     * @param readyState\n     * @returns {string}\n     */\n    let getWebSocketDescriptionByReadyState = (readyState) => {\n        let description = '';\n\n        switch(readyState){\n            case 0: description = 'connecting'; break;\n            case 1: description = 'open'; break;\n            case 2: description = 'closing'; break;\n            case 3: description = 'closed'; break;\n        }\n\n        return description;\n    };\n\n    /**\n     * set sync status for map updates\n     * -> if SharedWorker AND WebSocket connected -> status = \"WebSocket\"\n     * -> else -> status = \"ajax\" (long polling)\n     * @param type\n     * @param options\n     */\n    let setSyncStatus = (type, options) => {\n        // current syncStatus\n        let syncStatus = Init.syncStatus;\n\n        switch(type){\n            case 'ws:open':\n                // WebSocket open\n                syncStatus.webSocket.status = getWebSocketDescriptionByReadyState(options.readyState);\n                syncStatus.webSocket.class = 'txt-color-success';\n                syncStatus.webSocket.timestamp = new Date().getTime() / 1000;\n\n                syncStatus.type = 'webSocket';\n                setSyncStatus('ajax:disable');\n\n                $(window).trigger('pf:syncStatus');\n                break;\n            case 'ws:get':\n                // WebSocket data pushed from server\n                syncStatus.webSocket.timestamp = new Date().getTime() / 1000;\n                $(window).trigger('pf:syncStatus');\n                break;\n            case 'ws:closed':\n                // WebSocket closed\n                syncStatus.webSocket.status = getWebSocketDescriptionByReadyState(options.readyState);\n                syncStatus.webSocket.class = 'txt-color-danger';\n                syncStatus.webSocket.timestamp = undefined;\n\n                setSyncStatus('ajax:enable');\n                break;\n            case 'ws:error':\n                // WebSocket error\n                syncStatus.webSocket.status = getWebSocketDescriptionByReadyState(options.readyState);\n                syncStatus.webSocket.class = 'txt-color-danger';\n\n                setSyncStatus('ajax:enable');\n                break;\n            case 'sw:init':\n                // SharedWorker initialized\n                syncStatus.sharedWorker.status = 'online';\n                syncStatus.sharedWorker.class = 'txt-color-success';\n                break;\n            case 'sw:error':\n                // SharedWorker error\n                syncStatus.sharedWorker.status = 'offline';\n                syncStatus.sharedWorker.class = 'txt-color-danger';\n\n                setSyncStatus('ajax:enable');\n                break;\n            case 'ajax:enable':\n                // Ajax enabled (WebSocket error/not connected)\n                syncStatus.ajax.status = 'enabled';\n                syncStatus.ajax.class = 'txt-color-success';\n                syncStatus.ajax.timestamp = new Date().getTime() / 1000;\n\n                syncStatus.type = 'ajax';\n                $(window).trigger('pf:syncStatus');\n                break;\n            case 'ajax:get':\n                // Ajax data pulled from client\n                syncStatus.ajax.timestamp = new Date().getTime() / 1000;\n                $(window).trigger('pf:syncStatus');\n                break;\n            case 'ajax:disable':\n                // Ajax disabled (WebSocket open/ready)\n                syncStatus.ajax.status = 'disabled';\n                syncStatus.ajax.class = 'txt-color-warning';\n                break;\n        }\n    };\n\n    /**\n     * get current sync type for map updates\n     * -> \"ajax\" or \"webSocket\"\n     * @returns {string}\n     */\n    let getSyncType = () => {\n        return Init.syncStatus.type;\n    };\n\n    /**\n     * Returns true if the user hit Esc or navigated away from the\n     * current page before an AJAX call was done. (The response\n     * headers will be null or empty, depending on the browser.)\n     *\n     * NOTE: this function is only meaningful when called from\n     * inside an AJAX \"error\" callback!\n     * @param jqXHR XMLHttpRequest instance\n     * @returns {boolean}\n     */\n    let isXHRAborted = function(jqXHR){\n        return !jqXHR.getAllResponseHeaders();\n    };\n\n    /**\n     * get all mapTabElements (<a> tags)\n     * or search for a specific tabElement within the\n     * mapModuleElement\n     * @param mapId\n     * @returns {JQuery|*|{}|T}\n     */\n    $.fn.getMapTabElements = function(mapId){\n        let mapModuleElement = $(this);\n        let mapTabElements = mapModuleElement.find('#' + config.mapTabBarId).find('a');\n\n        if(mapId){\n            // search for a specific tab element\n            mapTabElements = mapTabElements.filter(function(i, el){\n                return ( $(el).data('map-id') === mapId );\n            });\n        }\n\n        return mapTabElements;\n    };\n\n    /**\n     * get mapElement from overlay or any child of that\n     * @param mapOverlay\n     * @returns {jQuery}\n     */\n    let getMapElementFromOverlay = (mapOverlay) => {\n        return $(mapOverlay).parents('.' + config.mapWrapperClass).find('.' + config.mapClass);\n    };\n\n    /**\n     * get the map module object or create a new module\n     * @returns {*|HTMLElement}\n     */\n    let getMapModule = function(){\n\n        let mapModule = $('#' + config.mapModuleId);\n        if(mapModule.length === 0){\n            mapModule = $('<div>', {\n                id: config.mapModuleId\n            });\n        }\n\n        return mapModule;\n    };\n\n    /**\n     * get Area ID by security string\n     * @param security\n     * @returns {number}\n     */\n    let getAreaIdBySecurity = function(security){\n\n        let areaId = 0;\n\n        switch(security){\n            case 'H':\n                areaId = 10;\n                break;\n            case 'L':\n                areaId = 11;\n                break;\n            case '0.0':\n                areaId = 12;\n                break;\n            case 'SH':\n                areaId = 13;\n                break;\n            default:\n                // w-space\n                for(let i = 1; i <= 6; i++){\n                    if(security === 'C' + i){\n                        areaId = i;\n                        break;\n                    }\n                }\n                break;\n        }\n\n        return areaId;\n    };\n\n    /**\n     * get system effect data by system security and system class\n     * if no search parameters given -> get all effect data\n     * @param security\n     * @param effect\n     * @returns {boolean}\n     */\n    let getSystemEffectData = function(security, effect){\n        let data =  SystemEffect;\n        if(security){\n            // look for specific data\n            data = false;\n            let areaId = getAreaIdBySecurity(security);\n\n            if(\n                areaId > 0 &&\n                SystemEffect.wh[effect] &&\n                SystemEffect.wh[effect][areaId]\n            ){\n                data = SystemEffect.wh[effect][areaId];\n            }\n        }\n\n        return data;\n    };\n\n    /**\n     * get status info for a character for a given status\n     * @param characterData\n     * @param option\n     * @returns {string}\n     */\n    let getStatusInfoForCharacter = function(characterData, option){\n\n        let statusInfo = '';\n\n        // character status can not be checked if there are no reference data\n        // e.g. during registration process (login page)\n        if(Init.characterStatus){\n            // get info for current \"main\" character\n            let corporationId = getCurrentUserInfo('corporationId');\n            let allianceId = getCurrentUserInfo('allianceId');\n\n            // get all user characters\n            let userData = getCurrentUserData();\n\n            if(userData){\n                // check if character is one of his own characters\n                let userCharactersData = userData.characters;\n\n                for(let i = 0; i < userCharactersData.length; i++){\n                    if(userCharactersData[i].id === characterData.id){\n                        statusInfo = Init.characterStatus.own[option];\n                        break;\n                    }\n                }\n            }\n\n            if(statusInfo === ''){\n                // compare current user data with given user data\n                if(\n                    characterData.corporation &&\n                    characterData.corporation.id === corporationId\n                ){\n                    statusInfo = Init.characterStatus.corporation[option];\n                }else if(\n                    characterData.alliance &&\n                    characterData.alliance.id === allianceId\n                ){\n                    statusInfo = Init.characterStatus.alliance[option];\n                }\n            }\n        }\n\n        return statusInfo;\n    };\n\n    /**\n     * get a HTML table with system effect information\n     * e.g. for popover\n     * @param data\n     * @returns {string}\n     */\n    let getSystemEffectTable = function(data){\n        let table = '';\n\n        if(data.length > 0){\n\n            table += '<table>';\n            for(let i = 0; i < data.length; i++){\n                table += '<tr>';\n                table += '<td>';\n                table += data[i].effect;\n                table += '</td>';\n                table += '<td class=\"text-right\">';\n                table += data[i].value;\n                table += '</td>';\n                table += '</tr>';\n            }\n            table += '</table>';\n        }\n\n        return table;\n    };\n\n    /**\n     * get a HTML table with information for multiple systems\n     * e.g. for popover\n     * @param data\n     * @returns {string}\n     */\n    let getSystemsInfoTable = function(data){\n        let table = '';\n\n        if(data.length > 0){\n\n            table += '<table>';\n            for(let i = 0; i < data.length; i++){\n\n                let trueSecClass = getTrueSecClassForSystem( data[i].trueSec );\n                let securityClass = getSecurityClassForSystem( data[i].security );\n\n                table += '<tr>';\n                table += '<td>';\n                table += data[i].name;\n                table += '</td>';\n                table += '<td class=\"text-right ' + securityClass + '\">';\n                table += data[i].security;\n                table += '</td>';\n                table += '<td class=\"text-right ' + trueSecClass + '\">';\n                table += parseFloat( data[i].trueSec ).toFixed(1);\n                table += '</td>';\n                table += '</tr>';\n            }\n            table += '</table>';\n        }\n\n        return table;\n    };\n\n    /**\n     * get a css class for the security level of a system\n     * @param sec\n     * @returns {string}\n     */\n    let getSecurityClassForSystem = function(sec){\n        let secClass = '';\n\n        if( Init.classes.systemSecurity.hasOwnProperty(sec) ){\n            secClass = Init.classes.systemSecurity[sec]['class'];\n        }\n\n        return secClass;\n    };\n\n    /**\n     * get a css class for the trueSec level of a system\n     * @param trueSec\n     * @returns {string}\n     */\n    let getTrueSecClassForSystem = function(trueSec){\n        let trueSecClass = '';\n\n        trueSec = parseFloat(trueSec);\n\n        // check for valid decimal number\n        if(\n            !isNaN( trueSec ) &&\n            isFinite( trueSec )\n        ){\n            if(trueSec < 0){\n                trueSec = 0;\n            }\n\n            trueSec = trueSec.toFixed(1).toString();\n\n            if( Init.classes.trueSec.hasOwnProperty(trueSec) ){\n                trueSecClass = Init.classes.trueSec[trueSec]['class'];\n            }\n        }\n\n        return trueSecClass;\n    };\n\n    /**\n     * get status info\n     * @param status\n     * @param option\n     * @returns {string}\n     */\n    let getStatusInfoForSystem = function(status, option){\n\n        let statusInfo = '';\n\n        if( Init.systemStatus.hasOwnProperty(status) ){\n            // search by status string\n            statusInfo = Init.systemStatus[status][option];\n        }else{\n            // saarch by statusID\n            $.each(Init.systemStatus, function(prop, data){\n\n                if(status === data.id){\n                    statusInfo = data[option];\n                    return;\n                }\n            });\n        }\n\n        return statusInfo;\n    };\n\n    /**\n     * get signature group information\n     * @param option\n     * @returns {{}}\n     */\n    let getSignatureGroupInfo = function(option){\n\n        let groupInfo = {};\n\n        for (let prop in Init.signatureGroups) {\n            if(Init.signatureGroups.hasOwnProperty(prop)){\n                prop = parseInt(prop);\n                groupInfo[prop] = Init.signatureGroups[prop][option];\n            }\n        }\n\n        return groupInfo;\n    };\n\n    /**\n     * get Signature names out of global\n     * @param systemTypeId\n     * @param areaId\n     * @param sigGroupId\n     * @returns {{}}\n     */\n    let getAllSignatureNames = function(systemTypeId, areaId, sigGroupId){\n\n        let signatureNames = {};\n\n        if(\n            SignatureType[systemTypeId] &&\n            SignatureType[systemTypeId][areaId] &&\n            SignatureType[systemTypeId][areaId][sigGroupId]\n        ){\n            signatureNames =  SignatureType[systemTypeId][areaId][sigGroupId];\n        }\n\n        return signatureNames;\n    };\n\n    /**\n     * get the typeID of a signature name\n     * @param systemData\n     * @param sigGroupId\n     * @param name\n     * @returns {number}\n     */\n    let getSignatureTypeIdByName = function(systemData, sigGroupId, name){\n\n        let signatureTypeId = 0;\n\n        let areaId = getAreaIdBySecurity(systemData.security);\n\n        if(areaId > 0){\n            let signatureNames = getAllSignatureNames(systemData.type.id, areaId, sigGroupId );\n            name = name.toLowerCase();\n\n            for(let prop in signatureNames) {\n\n                if(\n                    signatureNames.hasOwnProperty(prop) &&\n                    signatureNames[prop].toLowerCase() === name\n                ){\n                    signatureTypeId = parseInt( prop );\n                    break;\n                }\n            }\n        }\n\n        return signatureTypeId;\n    };\n\n    /**\n     * set currentMapUserData as \"global\" variable (count of active pilots)\n     * this function should be called continuously after data change\n     * to keep the data always up2data\n     * @param mapUserData\n     */\n    let setCurrentMapUserData = function(mapUserData){\n        Init.currentMapUserData = mapUserData;\n\n        return getCurrentMapUserData();\n    };\n\n    /**\n     * get currentMapUserData from \"global\" variable for specific map or all maps\n     * @param mapId\n     * @returns {boolean}\n     */\n    let getCurrentMapUserData = function(mapId){\n        let currentMapUserData = false;\n\n        if(\n            mapId === parseInt(mapId, 10) &&\n            Init.currentMapUserData\n        ){\n            // search for a specific map\n            for(let i = 0; i < Init.currentMapUserData.length; i++){\n                if(Init.currentMapUserData[i].config.id === mapId){\n                    currentMapUserData = Init.currentMapUserData[i];\n                    break;\n                }\n            }\n        }else{\n            // get data for all maps\n            currentMapUserData = Init.currentMapUserData;\n        }\n\n        if(currentMapUserData !== false){\n            // return a fresh (deep) copy of that, in case of further modifications\n            currentMapUserData = $.extend(true, {}, currentMapUserData);\n        }\n\n        return currentMapUserData;\n    };\n\n    /**\n     * set currentMapData as \"global\" variable\n     * this function should be called continuously after data change\n     * to keep the data always up2data\n     * @param mapData\n     */\n    let setCurrentMapData = function(mapData){\n        Init.currentMapData = mapData;\n\n        return getCurrentMapData();\n    };\n\n    /**\n     * get mapData array index by mapId\n     * @param mapId\n     * @returns {boolean|int}\n     */\n    let getCurrentMapDataIndex = function(mapId){\n        let mapDataIndex = false;\n\n        if( mapId === parseInt(mapId, 10) ){\n            for(let i = 0; i < Init.currentMapData.length; i++){\n                if(Init.currentMapData[i].config.id === mapId){\n                    mapDataIndex = i;\n                    break;\n                }\n            }\n        }\n\n        return mapDataIndex;\n    };\n\n    /**\n     * update cached mapData for a single map\n     * @param mapData\n     */\n    let updateCurrentMapData = function(mapData){\n        let mapDataIndex = getCurrentMapDataIndex( mapData.config.id );\n\n        if(mapDataIndex !== false){\n            Init.currentMapData[mapDataIndex].config = mapData.config;\n            Init.currentMapData[mapDataIndex].data = mapData.data;\n        }else{\n            // new map data\n            Init.currentMapData.push(mapData);\n        }\n    };\n\n    /**\n     * get currentMapData from \"global\" variable for a specific map or all maps\n     * @param mapId\n     * @returns {boolean}\n     */\n    let getCurrentMapData = function(mapId){\n        let currentMapData = false;\n\n        if( mapId === parseInt(mapId, 10) ){\n            // search for a specific map\n            for(let i = 0; i < Init.currentMapData.length; i++){\n                if(Init.currentMapData[i].config.id === mapId){\n                    currentMapData = Init.currentMapData[i];\n                    break;\n                }\n            }\n        }else{\n            // get data for all maps\n            currentMapData = Init.currentMapData;\n        }\n\n        return currentMapData;\n    };\n\n    /**\n     * delete map data by mapId from currentMapData\n     * @param mapId\n     */\n    let deleteCurrentMapData = (mapId) => {\n        Init.currentMapData = Init.currentMapData.filter((mapData) => {\n            return (mapData.config.id !== mapId);\n        });\n    };\n\n    /**\n     * set currentUserData as \"global\" variable\n     * this function should be called continuously after data change\n     * to keep the data always up2data\n     * @param userData\n     */\n    let setCurrentUserData = function(userData){\n        Init.currentUserData = userData;\n\n        // check if function is available\n        // this is not the case in \"login\" page\n        if( $.fn.updateHeaderUserData ){\n            $.fn.updateHeaderUserData();\n        }\n\n        return getCurrentUserData();\n    };\n\n    /**\n     * get the current log data for the current user character\n     * @returns {boolean}\n     */\n    let getCurrentCharacterLog = function(){\n        let characterLog = false;\n        let currentUserData = getCurrentUserData();\n\n        if(\n            currentUserData &&\n            currentUserData.character &&\n            currentUserData.character.log\n        ){\n            characterLog = currentUserData.character.log;\n        }\n\n        return characterLog;\n    };\n\n    /**\n     * get information for the current mail user\n     * @param option\n     * @returns {boolean}\n     */\n    let getCurrentUserInfo = function(option){\n        let currentUserData = getCurrentUserData();\n        let userInfo = false;\n\n        if(currentUserData){\n            // user data is set -> user data will be set AFTER the main init request!\n            let characterData = currentUserData.character;\n\n            if(characterData){\n                if(\n                    option === 'allianceId' &&\n                    characterData.alliance\n                ){\n                    userInfo = characterData.alliance.id;\n                }\n\n                if(\n                    option === 'corporationId' &&\n                    characterData.corporation\n                ){\n                    userInfo = characterData.corporation.id;\n                }\n            }\n        }\n\n        return userInfo;\n    };\n\n    /**\n     * get \"nearBy\" systemData based on a jump radius around a currentSystem\n     * @param currentSystemData\n     * @param currentMapData\n     * @param jumps\n     * @param foundSystemIds\n     * @returns {{systemData: *, tree: {}}}\n     */\n    let getNearBySystemData = (currentSystemData, currentMapData, jumps, foundSystemIds = {}) => {\n\n        // look for systemData by ID\n        let getSystemData = (systemId) => {\n            for(let j = 0; j < currentMapData.data.systems.length; j++){\n                let systemData = currentMapData.data.systems[j];\n                if(systemData.id === systemId){\n                    return systemData;\n                }\n            }\n            return false;\n        };\n\n        // skip systems that are already found in recursive calls\n        foundSystemIds[currentSystemData.id] = {distance: jumps};\n\n        let nearBySystems = {\n            systemData: currentSystemData,\n            tree: {}\n        };\n\n        jumps--;\n        if(jumps >= 0){\n            for(let i = 0; i < currentMapData.data.connections.length; i++){\n                let connectionData = currentMapData.data.connections[i];\n                let type = ''; // \"source\" OR \"target\"\n                if(connectionData.source === currentSystemData.id){\n                    type = 'target';\n                }else if(connectionData.target === currentSystemData.id){\n                    type = 'source';\n                }\n\n                if(\n                    type &&\n                    (\n                        foundSystemIds[connectionData[type]] === undefined ||\n                        foundSystemIds[connectionData[type]].distance < jumps\n                    )\n                ){\n                    let newSystemData = getSystemData(connectionData[type]);\n                    if(newSystemData){\n                        nearBySystems.tree[connectionData[type]] = getNearBySystemData(newSystemData, currentMapData, jumps, foundSystemIds);\n                    }\n                }\n            }\n        }\n        return nearBySystems;\n    };\n\n    /**\n     * get current character data from all characters who are \"nearby\" the current user\n     * -> see getNearBySystemData()\n     * @param nearBySystems\n     * @param userData\n     * @param jumps\n     * @param data\n     * @returns {{}}\n     */\n    let getNearByCharacterData = (nearBySystems, userData, jumps = 0, data = {}) => {\n\n        let getCharacterDataBySystemId = (systemId) => {\n            for(let i = 0; i < userData.length; i++){\n                if(userData[i].id === systemId){\n                    return userData[i].user;\n                }\n            }\n            return [];\n        };\n\n        let filterFinalCharData = function(tmpFinalCharData){\n            return this.id !== tmpFinalCharData.id;\n        };\n\n        let characterData = getCharacterDataBySystemId(nearBySystems.systemData.systemId);\n\n        if(characterData.length){\n            // filter (remove) characterData for \"already\" added chars\n            characterData = characterData.filter(function(tmpCharacterData, index, allData){\n                let keepData = true;\n\n                for(let tmpJump in data) {\n                    // just scan systems with > jumps than current system\n                    if(tmpJump > jumps){\n                        let filteredFinalData = data[tmpJump].filter(filterFinalCharData, tmpCharacterData);\n\n                        if(filteredFinalData.length > 0){\n                            data[tmpJump] = filteredFinalData;\n                        }else{\n                            delete data[tmpJump];\n                        }\n                    }else{\n                        for(let k = 0; k < data[tmpJump].length; k++){\n                            if(data[tmpJump][k].id === tmpCharacterData.id){\n                                keepData = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                return keepData;\n            });\n\n            data[jumps] = data[jumps] ? data[jumps] : [];\n            data[jumps] = [...data[jumps], ...characterData];\n        }\n\n        jumps++;\n        for(let prop in nearBySystems.tree) {\n            if( nearBySystems.tree.hasOwnProperty(prop) ){\n                let tmpSystemData = nearBySystems.tree[prop];\n                data = getNearByCharacterData(tmpSystemData, userData, jumps, data);\n            }\n        }\n\n        return data;\n    };\n\n    /**\n     * set new destination for a system\n     * @param systemData\n     * @param type\n     */\n    let setDestination = function(systemData, type){\n        let description = '';\n        switch(type){\n            case 'set_destination':\n                description = 'Set destination';\n                break;\n            case 'add_first_waypoint':\n                description = 'Set first waypoint';\n                break;\n            case 'add_last_waypoint':\n                description = 'Set new waypoint';\n                break;\n        }\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.setDestination,\n            data: {\n                clearOtherWaypoints: (type === 'set_destination') ? 1 : 0,\n                first: (type === 'add_last_waypoint') ? 0 : 1,\n                systemData: [{\n                    systemId: systemData.systemId,\n                    name: systemData.name\n                }]\n            },\n            context: {\n                description: description\n            },\n            dataType: 'json'\n        }).done(function(responseData){\n            if(\n                responseData.systemData &&\n                responseData.systemData.length > 0\n            ){\n                for (let j = 0; j < responseData.systemData.length; j++) {\n                    showNotify({title: this.description, text: 'System: ' + responseData.systemData[j].name, type: 'success'});\n                }\n            }\n\n            if(\n                responseData.error &&\n                responseData.error.length > 0\n            ){\n                for(let i = 0; i < responseData.error.length; i++){\n                    showNotify({title: this.description + ' error', text: 'System: ' + responseData.error[i].message, type: 'error'});\n                }\n            }\n\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            showNotify({title: jqXHR.status + ': ' + this.description, text: reason, type: 'warning'});\n        });\n    };\n\n    /**\n     * set currentSystemData as \"global\" variable\n     * @param systemData\n     */\n    let setCurrentSystemData = function(systemData){\n        Init.currentSystemData = systemData;\n    };\n\n    /**\n     * get currentSystemData from \"global\" variables\n     * @returns {*}\n     */\n    let getCurrentSystemData = function(){\n        return Init.currentSystemData;\n    };\n\n    /**\n     * get current location data\n     * -> system data where current user is located\n     * @returns {{id: *, name: *}}\n     */\n    let getCurrentLocationData = function(){\n        let currentLocationLink = $('#' + config.headCurrentLocationId).find('a');\n        return {\n            id: currentLocationLink.data('systemId'),\n            name: currentLocationLink.data('systemName')\n        };\n    };\n\n    /**\n     * get all \"open\" dialog elements\n     * @returns {*|jQuery}\n     */\n    let getOpenDialogs = function(){\n        return $('.' + config.dialogClass).filter(':visible');\n    };\n\n    /**\n     * send Ajax request that remote opens an ingame Window\n     * @param targetId\n     */\n    let openIngameWindow = (targetId) => {\n        targetId = parseInt(targetId);\n\n        if(targetId > 0){\n            $.ajax({\n                type: 'POST',\n                url: Init.path.openIngameWindow,\n                data: {\n                    targetId: targetId\n                },\n                dataType: 'json'\n            }).done(function(data){\n                if(data.error.length > 0){\n                    showNotify({title: 'Open window in client', text: 'Remote window open failed', type: 'error'});\n                }else{\n                    showNotify({title: 'Open window in client', text: 'Check your EVE client', type: 'success'});\n                }\n            }).fail(function( jqXHR, status, error) {\n                let reason = status + ' ' + error;\n                showNotify({title: jqXHR.status + ': openWindow', text: reason, type: 'error'});\n            });\n        }\n    };\n\n    /**\n     * formats a price string into an ISK Price\n     * @param price\n     * @returns {string}\n     */\n    let formatPrice = function(price){\n        price = Number( price ).toFixed(2);\n\n        let parts = price.toString().split('.');\n        price = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + (parts[1] ? '.' + parts[1] : '');\n\n        return price + ' ISK';\n    };\n\n    /**\n     * get localForage instance (singleton) for offline client site storage\n     * @returns {localforage}\n     */\n    let getLocalStorage = function(){\n        if(localStorage === undefined){\n            localStorage = localforage.createInstance({\n                driver: [localforage.INDEXEDDB, localforage.WEBSQL, localforage.LOCALSTORAGE],\n                name: 'Pathfinder local storage'\n            });\n        }\n        return localStorage;\n    };\n\n    /**\n     * Create Date as UTC\n     * @param date\n     * @returns {Date}\n     */\n    let createDateAsUTC = function(date) {\n        return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\n    };\n\n    /**\n     * Convert Date to UTC (!important function!)\n     * @param date\n     * @returns {Date}\n     */\n    let convertDateToUTC = function(date) {\n        return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n    };\n\n    /**\n     * Convert Date to Time String\n     * @param date\n     * @returns {string}\n     */\n    let convertDateToString = function(date){\n        let dateString = ('0'+ (date.getMonth() + 1 )).slice(-2) + '/' + ('0'+date.getDate()).slice(-2) + '/' + date.getFullYear();\n        let timeString = ('0' + date.getHours()).slice(-2) + ':' + ('0'+date.getMinutes()).slice(-2);\n        return   dateString + ' ' + timeString;\n    };\n\n    /**\n     * get document path\n     * -> www.pathfinder.com/pathfinder/ -> /pathfinder\n     * @returns {string|string}\n     */\n    let getDocumentPath = function(){\n        let pathname = window.location.pathname;\n        // replace file endings\n        let r = /[^\\/]*$/;\n        let path = pathname.replace(r, '');\n        return path || '/';\n    };\n\n    /**\n     * redirect\n     * @param url\n     * @param params\n     */\n    let redirect = function(url, params){\n        let currentUrl = document.URL;\n\n        if(url !== currentUrl){\n            if(\n                params &&\n                params.length > 0\n            ){\n                url += '?' + params.join('&');\n            }\n            window.location = url;\n        }\n    };\n\n    /**\n     * send logout request\n     * @param  params\n     */\n    let logout = function(params){\n        let data = {};\n        if(\n            params &&\n            params.ajaxData\n        ){\n            data = params.ajaxData;\n        }\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.logout,\n            data: data,\n            dataType: 'json'\n        }).done(function(data){\n            if(data.reroute){\n                redirect(data.reroute, ['logout']);\n            }\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            showNotify({title: jqXHR.status + ': logout', text: reason, type: 'error'});\n        });\n    };\n\n    return {\n        config: config,\n        getVersion: getVersion,\n        showVersionInfo: showVersionInfo,\n        initPrototypes: initPrototypes,\n        initDefaultBootboxConfig: initDefaultBootboxConfig,\n        getCurrentTriggerDelay: getCurrentTriggerDelay,\n        getServerTime: getServerTime,\n        convertTimestampToServerTime: convertTimestampToServerTime,\n        getTimeDiffParts: getTimeDiffParts,\n        timeStart: timeStart,\n        timeStop: timeStop,\n        log: log,\n        showNotify: showNotify,\n        stopTabBlink: stopTabBlink,\n        getLogInfo: getLogInfo,\n        ajaxSetup: ajaxSetup,\n        setSyncStatus: setSyncStatus,\n        getSyncType: getSyncType,\n        isXHRAborted: isXHRAborted,\n        getMapElementFromOverlay: getMapElementFromOverlay,\n        getMapModule: getMapModule,\n        getSystemEffectData: getSystemEffectData,\n        getSystemEffectTable: getSystemEffectTable,\n        getSystemsInfoTable: getSystemsInfoTable,\n        getStatusInfoForCharacter: getStatusInfoForCharacter,\n        getSecurityClassForSystem: getSecurityClassForSystem,\n        getTrueSecClassForSystem: getTrueSecClassForSystem,\n        getStatusInfoForSystem: getStatusInfoForSystem,\n        getSignatureGroupInfo: getSignatureGroupInfo,\n        getAllSignatureNames: getAllSignatureNames,\n        getSignatureTypeIdByName: getSignatureTypeIdByName,\n        getAreaIdBySecurity: getAreaIdBySecurity,\n        setCurrentMapUserData: setCurrentMapUserData,\n        getCurrentMapUserData: getCurrentMapUserData,\n        setCurrentMapData: setCurrentMapData,\n        getCurrentMapData: getCurrentMapData,\n        getCurrentMapDataIndex: getCurrentMapDataIndex,\n        updateCurrentMapData: updateCurrentMapData,\n        deleteCurrentMapData: deleteCurrentMapData,\n        setCurrentUserData: setCurrentUserData,\n        getCurrentUserData: getCurrentUserData,\n        setCurrentSystemData: setCurrentSystemData,\n        getCurrentSystemData: getCurrentSystemData,\n        getCurrentLocationData: getCurrentLocationData,\n        getCurrentUserInfo: getCurrentUserInfo,\n        getCurrentCharacterLog: getCurrentCharacterLog,\n        flattenXEditableSelectArray: flattenXEditableSelectArray,\n        getNearBySystemData: getNearBySystemData,\n        getNearByCharacterData: getNearByCharacterData,\n        setDestination: setDestination,\n        convertDateToString: convertDateToString,\n        getOpenDialogs: getOpenDialogs,\n        openIngameWindow: openIngameWindow,\n        formatPrice: formatPrice,\n        getLocalStorage: getLocalStorage,\n        getDocumentPath: getDocumentPath,\n        redirect: redirect,\n        logout: logout\n    };\n});\n",
    "(function(global,factory){if(typeof exports===\"object\"&&exports){factory(exports)}else if(typeof define===\"function\"&&define.amd){define('mustache',[\"exports\"],factory)}else{factory(global.Mustache={})}})(this,function(mustache){var Object_toString=Object.prototype.toString;var isArray=Array.isArray||function(object){return Object_toString.call(object)===\"[object Array]\"};function isFunction(object){return typeof object===\"function\"}function escapeRegExp(string){return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")}var RegExp_test=RegExp.prototype.test;function testRegExp(re,string){return RegExp_test.call(re,string)}var nonSpaceRe=/\\S/;function isWhitespace(string){return!testRegExp(nonSpaceRe,string)}var entityMap={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\",\"/\":\"&#x2F;\"};function escapeHtml(string){return String(string).replace(/[&<>\"'\\/]/g,function(s){return entityMap[s]})}var whiteRe=/\\s*/;var spaceRe=/\\s+/;var equalsRe=/\\s*=/;var curlyRe=/\\s*\\}/;var tagRe=/#|\\^|\\/|>|\\{|&|=|!/;function parseTemplate(template,tags){if(!template)return[];var sections=[];var tokens=[];var spaces=[];var hasTag=false;var nonSpace=false;function stripSpace(){if(hasTag&&!nonSpace){while(spaces.length)delete tokens[spaces.pop()]}else{spaces=[]}hasTag=false;nonSpace=false}var openingTagRe,closingTagRe,closingCurlyRe;function compileTags(tags){if(typeof tags===\"string\")tags=tags.split(spaceRe,2);if(!isArray(tags)||tags.length!==2)throw new Error(\"Invalid tags: \"+tags);openingTagRe=new RegExp(escapeRegExp(tags[0])+\"\\\\s*\");closingTagRe=new RegExp(\"\\\\s*\"+escapeRegExp(tags[1]));closingCurlyRe=new RegExp(\"\\\\s*\"+escapeRegExp(\"}\"+tags[1]))}compileTags(tags||mustache.tags);var scanner=new Scanner(template);var start,type,value,chr,token,openSection;while(!scanner.eos()){start=scanner.pos;value=scanner.scanUntil(openingTagRe);if(value){for(var i=0,valueLength=value.length;i<valueLength;++i){chr=value.charAt(i);if(isWhitespace(chr)){spaces.push(tokens.length)}else{nonSpace=true}tokens.push([\"text\",chr,start,start+1]);start+=1;if(chr===\"\\n\")stripSpace()}}if(!scanner.scan(openingTagRe))break;hasTag=true;type=scanner.scan(tagRe)||\"name\";scanner.scan(whiteRe);if(type===\"=\"){value=scanner.scanUntil(equalsRe);scanner.scan(equalsRe);scanner.scanUntil(closingTagRe)}else if(type===\"{\"){value=scanner.scanUntil(closingCurlyRe);scanner.scan(curlyRe);scanner.scanUntil(closingTagRe);type=\"&\"}else{value=scanner.scanUntil(closingTagRe)}if(!scanner.scan(closingTagRe))throw new Error(\"Unclosed tag at \"+scanner.pos);token=[type,value,start,scanner.pos];tokens.push(token);if(type===\"#\"||type===\"^\"){sections.push(token)}else if(type===\"/\"){openSection=sections.pop();if(!openSection)throw new Error('Unopened section \"'+value+'\" at '+start);if(openSection[1]!==value)throw new Error('Unclosed section \"'+openSection[1]+'\" at '+start)}else if(type===\"name\"||type===\"{\"||type===\"&\"){nonSpace=true}else if(type===\"=\"){compileTags(value)}}openSection=sections.pop();if(openSection)throw new Error('Unclosed section \"'+openSection[1]+'\" at '+scanner.pos);return nestTokens(squashTokens(tokens))}function squashTokens(tokens){var squashedTokens=[];var token,lastToken;for(var i=0,numTokens=tokens.length;i<numTokens;++i){token=tokens[i];if(token){if(token[0]===\"text\"&&lastToken&&lastToken[0]===\"text\"){lastToken[1]+=token[1];lastToken[3]=token[3]}else{squashedTokens.push(token);lastToken=token}}}return squashedTokens}function nestTokens(tokens){var nestedTokens=[];var collector=nestedTokens;var sections=[];var token,section;for(var i=0,numTokens=tokens.length;i<numTokens;++i){token=tokens[i];switch(token[0]){case\"#\":case\"^\":collector.push(token);sections.push(token);collector=token[4]=[];break;case\"/\":section=sections.pop();section[5]=token[2];collector=sections.length>0?sections[sections.length-1][4]:nestedTokens;break;default:collector.push(token)}}return nestedTokens}function Scanner(string){this.string=string;this.tail=string;this.pos=0}Scanner.prototype.eos=function(){return this.tail===\"\"};Scanner.prototype.scan=function(re){var match=this.tail.match(re);if(!match||match.index!==0)return\"\";var string=match[0];this.tail=this.tail.substring(string.length);this.pos+=string.length;return string};Scanner.prototype.scanUntil=function(re){var index=this.tail.search(re),match;switch(index){case-1:match=this.tail;this.tail=\"\";break;case 0:match=\"\";break;default:match=this.tail.substring(0,index);this.tail=this.tail.substring(index)}this.pos+=match.length;return match};function Context(view,parentContext){this.view=view==null?{}:view;this.cache={\".\":this.view};this.parent=parentContext}Context.prototype.push=function(view){return new Context(view,this)};Context.prototype.lookup=function(name){var cache=this.cache;var value;if(name in cache){value=cache[name]}else{var context=this,names,index;while(context){if(name.indexOf(\".\")>0){value=context.view;names=name.split(\".\");index=0;while(value!=null&&index<names.length)value=value[names[index++]]}else if(typeof context.view==\"object\"){value=context.view[name]}if(value!=null)break;context=context.parent}cache[name]=value}if(isFunction(value))value=value.call(this.view);return value};function Writer(){this.cache={}}Writer.prototype.clearCache=function(){this.cache={}};Writer.prototype.parse=function(template,tags){var cache=this.cache;var tokens=cache[template];if(tokens==null)tokens=cache[template]=parseTemplate(template,tags);return tokens};Writer.prototype.render=function(template,view,partials){var tokens=this.parse(template);var context=view instanceof Context?view:new Context(view);return this.renderTokens(tokens,context,partials,template)};Writer.prototype.renderTokens=function(tokens,context,partials,originalTemplate){var buffer=\"\";var self=this;function subRender(template){return self.render(template,context,partials)}var token,value;for(var i=0,numTokens=tokens.length;i<numTokens;++i){token=tokens[i];switch(token[0]){case\"#\":value=context.lookup(token[1]);if(!value)continue;if(isArray(value)){for(var j=0,valueLength=value.length;j<valueLength;++j){buffer+=this.renderTokens(token[4],context.push(value[j]),partials,originalTemplate)}}else if(typeof value===\"object\"||typeof value===\"string\"){buffer+=this.renderTokens(token[4],context.push(value),partials,originalTemplate)}else if(isFunction(value)){if(typeof originalTemplate!==\"string\")throw new Error(\"Cannot use higher-order sections without the original template\");value=value.call(context.view,originalTemplate.slice(token[3],token[5]),subRender);if(value!=null)buffer+=value}else{buffer+=this.renderTokens(token[4],context,partials,originalTemplate)}break;case\"^\":value=context.lookup(token[1]);if(!value||isArray(value)&&value.length===0)buffer+=this.renderTokens(token[4],context,partials,originalTemplate);break;case\">\":if(!partials)continue;value=isFunction(partials)?partials(token[1]):partials[token[1]];if(value!=null)buffer+=this.renderTokens(this.parse(value),context,partials,value);break;case\"&\":value=context.lookup(token[1]);if(value!=null)buffer+=value;break;case\"name\":value=context.lookup(token[1]);if(value!=null)buffer+=mustache.escape(value);break;case\"text\":buffer+=token[1];break}}return buffer};mustache.name=\"mustache.js\";mustache.version=\"1.0.0\";mustache.tags=[\"{{\",\"}}\"];var defaultWriter=new Writer;mustache.clearCache=function(){return defaultWriter.clearCache()};mustache.parse=function(template,tags){return defaultWriter.parse(template,tags)};mustache.render=function(template,view,partials){return defaultWriter.render(template,view,partials)};mustache.to_html=function(template,view,partials,send){var result=mustache.render(template,view,partials);if(isFunction(send)){send(result)}else{return result}};mustache.escape=escapeHtml;mustache.Scanner=Scanner;mustache.Context=Context;mustache.Writer=Writer});\n",
    "/**\n *  Render controller\n */\n\ndefine('app/render',['jquery', 'mustache'], function($, Mustache) {\n\n    'use strict';\n\n    /**\n     * init function will be called before and after a new module is loaded\n     * @param functionName\n     * @param config\n     */\n    var initModule = function(functionName, config){\n\n        if(\n            typeof config.functions === 'object' &&\n            typeof config.functions[functionName] === 'function'\n        ){\n            config.functions[functionName]();\n        }\n    };\n\n    /**\n     * load a template and render is with Mustache\n     * @param config\n     * @param data\n     */\n    var showModule = function(config, data){\n\n        // require module template\n        requirejs(['text!templates/' + config.name + '.html'], function(template) {\n\n            // check for an id, if module already exists, do not insert again\n            if(\n                data.id === 'undefined' ||\n                 $('#' + data.id).length === 0\n            ){\n\n                var content = Mustache.render(template, data);\n\n                // display module\n                switch(config.link){\n                    case 'prepend':\n                        config.position.prepend(content);\n                        break;\n                    case 'before':\n                        config.position.before(content);\n                        break;\n                    case 'after':\n                        config.position.after(content);\n                        break;\n                    default:\n                        config.position.append(content);\n                }\n            }\n\n            // init module function after render\n            initModule('after', config);\n\n\n        });\n    };\n\n\n    return {\n        showModule: showModule\n    };\n});\n",
    "/**\n * logging\n */\n\ndefine('app/logging',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'bootbox'\n], function($, Init, Util, bootbox) {\n\n    'use strict';\n\n    let logData = [];                                                                   // cache object for all log entries\n    let logDataTable = null;                                                            // \"Datatables\" Object\n\n    // Morris charts data\n    let maxGraphDataCount = 30;                                                         // max date entries for a graph\n    let chartData = {};                                                                 // chart Data object for all Morris Log graphs\n\n    let config = {\n        taskDialogId: 'pf-task-dialog',                                                 // id for map \"task manager\" dialog\n        dialogDynamicAreaClass: 'pf-dynamic-area',                                      // class for dynamic areas\n        timestampCounterClass: 'pf-timestamp-counter',                                  // class for \"timestamp\" counter\n        taskDialogStatusAreaClass: 'pf-task-dialog-status',                             // class for \"status\" dynamic area\n        taskDialogLogTableAreaClass: 'pf-task-dialog-table',                            // class for \"log table\" dynamic area\n        logGraphClass: 'pf-log-graph',                                                  // class for all log Morris graphs\n        tableToolsClass: 'pf-table-tools'                                               // class for table tools\n    };\n\n    /**\n     * get log time string\n     * @returns {string}\n     */\n    let getLogTime = function(){\n        let serverTime = Util.getServerTime();\n        let logTime = serverTime.toLocaleTimeString('en-US', { hour12: false });\n\n        return logTime;\n    };\n\n    /**\n     * updated \"sync status\" dynamic dialog area\n     */\n    let updateSyncStatus = function(){\n\n        // check if task manager dialog is open\n        let logDialog = $('#' + config.taskDialogId);\n        if(logDialog.length){\n            // dialog is open\n            requirejs(['text!templates/modules/sync_status.html', 'mustache'], function(templateSyncStatus, Mustache) {\n                let data = {\n                    timestampCounterClass: config.timestampCounterClass,\n                    syncStatus: Init.syncStatus,\n                    isWebSocket: () => {\n                        return (Util.getSyncType() === 'webSocket');\n                    },\n                    isAjax: () => {\n                        return (Util.getSyncType() === 'ajax');\n                    }\n                };\n\n                let syncStatusElement = $( Mustache.render(templateSyncStatus, data ) );\n\n                logDialog.find('.' + config.taskDialogStatusAreaClass).html( syncStatusElement );\n\n                logDialog.find('.' + config.timestampCounterClass).initTimestampCounter();\n\n                syncStatusElement.initTooltips({\n                    placement: 'right'\n                });\n            });\n        }\n\n    };\n\n    /**\n     * shows the logging dialog\n     */\n    let showDialog = function(){\n        // dialog content\n\n        requirejs(['text!templates/dialog/task_manager.html', 'mustache'], function(templateTaskManagerDialog, Mustache) {\n            let data = {\n                id: config.taskDialogId,\n                dialogDynamicAreaClass: config.dialogDynamicAreaClass,\n                taskDialogStatusAreaClass: config.taskDialogStatusAreaClass,\n                taskDialogLogTableAreaClass: config.taskDialogLogTableAreaClass,\n                tableActionBarClass: config.tableToolsClass\n            };\n\n            let contentTaskManager = $( Mustache.render(templateTaskManagerDialog, data) );\n\n            let rowElementGraphs = contentTaskManager.find('.row');\n            let taskDialogLogTableAreaElement  = contentTaskManager.find('.' + config.taskDialogLogTableAreaClass);\n\n            let logTable = $('<table>', {\n                class: ['compact', 'stripe', 'order-column', 'row-border'].join(' ')\n            });\n\n            taskDialogLogTableAreaElement.append(logTable);\n\n            // init log table\n            logDataTable = logTable.DataTable({\n                paging: true,\n                ordering: true,\n                order: [ 1, 'desc' ],\n                autoWidth: false,\n                hover: false,\n                pageLength: 10,\n                lengthMenu: [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, 'All']],\n                data: logData,                      // load cached logs (if available)\n                language: {\n                    emptyTable:  'No entries',\n                    zeroRecords: 'No entries found',\n                    lengthMenu:  'Show _MENU_ entries',\n                    info:        'Showing _START_ to _END_ of _TOTAL_ entries'\n                },\n                columnDefs: [\n                    {\n                        targets: 0,\n                        title: '<i class=\"fa fa-lg fa-tag\"></i>',\n                        width: '18px',\n                        searchable: false,\n                        class: ['text-center'].join(' '),\n                        data: 'status'\n                    },{\n                        targets: 1,\n                        title: '<i class=\"fa fa-lg fa-fw fa-clock-o\"></i>&nbsp;&nbsp;',\n                        width: '50px',\n                        searchable: true,\n                        class: 'text-right',\n                        data: 'time'\n                    },{\n                        targets: 2,\n                        title: '<i class=\"fa fa-lg fa-fw fa-history\"></i>&nbsp;&nbsp;',\n                        width: '35px',\n                        searchable: false,\n                        class: 'text-right',\n                        sType: 'html',\n                        data: 'duration'\n                    },{\n                        targets: 3,\n                        title: 'description',\n                        searchable: true,\n                        data: 'description'\n                    },{\n                        targets: 4,\n                        title: 'type',\n                        width: '40px',\n                        searchable: true,\n                        class: ['text-center'].join(' '),\n                        data: 'type'\n                    },{\n                        targets: 5,\n                        title: 'Prozess-ID&nbsp;&nbsp;&nbsp;',\n                        width: '80px',\n                        searchable: false,\n                        class: 'text-right',\n                        data: 'key'\n                    }\n                ]\n\n            });\n\n            // open dialog\n            let logDialog = bootbox.dialog({\n                title: 'Task-Manager',\n                message: contentTaskManager,\n                size: 'large',\n                buttons: {\n                    close: {\n                        label: 'close',\n                        className: 'btn-default'\n                    }\n                }\n            });\n\n            // modal dialog is shown\n            logDialog.on('shown.bs.modal', function(e) {\n                updateSyncStatus();\n\n                // show Morris graphs ----------------------------------------------------------\n\n                // function for chart label formation\n                let labelYFormat = function(y){\n                    return Math.round(y) + 'ms';\n                };\n\n                for(let key in chartData) {\n                    if(chartData.hasOwnProperty(key)) {\n                        // create a chart for each key\n\n                        let colElementGraph = $('<div>', {\n                            class: ['col-md-6'].join(' ')\n                        });\n\n\n                        // graph element\n                        let graphElement = $('<div>', {\n                            class: config.logGraphClass\n                        });\n\n                        let graphArea = $('<div>', {\n                            class: config.dialogDynamicAreaClass\n                        }).append(  graphElement );\n\n                        // headline\n                        let headline = $('<h4>', {\n                            text: key\n                        }).prepend(\n                            $('<span>', {\n                                class: ['txt-color', 'txt-color-grayLight'].join(' '),\n                                text: 'Prozess-ID: '\n                            })\n                        );\n\n                        // show update ping between function calls\n                        let updateElement = $('<small>', {\n                            class: ['txt-color', 'txt-color-blue', 'pull-right'].join(' ')\n                        });\n                        headline.append(updateElement).append('<br>');\n\n                        // show average execution time\n                        let averageElement = $('<small>', {\n                            class: 'pull-right'\n                        });\n                        headline.append(averageElement);\n\n                        colElementGraph.append( headline );\n                        colElementGraph.append( graphArea );\n\n                        graphArea.showLoadingAnimation();\n\n                        rowElementGraphs.append( colElementGraph );\n\n                        // cache DOM Elements that will be updated frequently\n                        chartData[key].averageElement = averageElement;\n                        chartData[key].updateElement = updateElement;\n\n                        chartData[key].graph = Morris.Area({\n                            element: graphElement,\n                            data: [],\n                            xkey: 'x',\n                            ykeys: ['y'],\n                            labels: [key],\n                            units: 'ms',\n                            parseTime: false,\n                            ymin: 0,\n                            yLabelFormat: labelYFormat,\n                            padding: 10,\n                            hideHover: true,\n                            pointSize: 3,\n                            lineColors: ['#375959'],\n                            pointFillColors: ['#477372'],\n                            pointStrokeColors: ['#313335'],\n                            lineWidth: 2,\n                            grid: false,\n                            gridStrokeWidth: 0.3,\n                            gridTextSize: 9,\n                            gridTextFamily: 'Oxygen Bold',\n                            gridTextColor: '#63676a',\n                            behaveLikeLine: true,\n                            goals: [],\n                            goalLineColors: ['#66c84f'],\n                            smooth: false,\n                            fillOpacity: 0.3,\n                            resize: true\n                        });\n\n                        updateLogGraph(key);\n\n                        graphArea.hideLoadingAnimation();\n\n                    }\n                }\n\n                // ------------------------------------------------------------------------------\n                // add dataTable buttons (extension)\n\n                let buttons = new $.fn.dataTable.Buttons( logDataTable, {\n                    buttons: [\n                        {\n                            extend: 'copy',\n                            className: 'btn btn-sm btn-default',\n                            text: '<i class=\"fa fa-fw fa-clipboard\"></i> copy'\n                        },{\n                            extend: 'csv',\n                            className: 'btn btn-sm btn-default',\n                            text: '<i class=\"fa fa-fw fa-download\"></i> csv'\n                        }\n                    ]\n                } );\n\n                logDataTable.buttons().container().appendTo( $(this).find('.' + config.tableToolsClass));\n            });\n\n\n            // modal dialog is closed\n            logDialog.on('hidden.bs.modal', function(e) {\n                // clear memory -> destroy all charts\n                for (let key in chartData) {\n                    if (chartData.hasOwnProperty(key)) {\n                        chartData[key].graph = null;\n                    }\n                }\n            });\n\n            // modal dialog before hide\n            logDialog.on('hide.bs.modal', function(e) {\n\n                // destroy logTable\n                logDataTable.destroy(true);\n                logDataTable= null;\n\n                // remove event -> prevent calling this multiple times\n                $(this).off('hide.bs.modal');\n            });\n\n        });\n\n    };\n\n    /**\n     * updates the log graph for a log key\n     * @param key\n     * @param duration (if undefined -> just update graph with current data)\n     */\n    let updateLogGraph = function(key, duration){\n\n        // check if graph data already exist\n        if( !(chartData.hasOwnProperty(key))){\n            chartData[key] = {};\n            chartData[key].data = [];\n            chartData[key].graph = null;\n            chartData[key].averageElement = null;\n            chartData[key].updateElement = null;\n        }\n\n        // add new value\n        if(duration !== undefined){\n            chartData[key].data.unshift(duration);\n        }\n\n        if(chartData[key].data.length > maxGraphDataCount){\n            chartData[key].data = chartData[key].data.slice(0, maxGraphDataCount);\n        }\n\n        function getGraphData(data) {\n            let tempChartData = {\n                data: [],\n                dataSum: 0,\n                average: 0\n            };\n\n            for(let x = 0; x < maxGraphDataCount; x++){\n                let value = 0;\n                if(data[x]){\n                    value = data[x];\n                    tempChartData.dataSum = Number( (tempChartData.dataSum + value).toFixed(2) );\n                }\n\n                tempChartData.data.push({\n                    x: x,\n                    y: value\n                });\n            }\n\n            // calculate average\n            tempChartData.average = Number( ( tempChartData.dataSum / data.length ).toFixed(2) );\n\n            return tempChartData;\n        }\n\n        let tempChartData = getGraphData(chartData[key].data);\n\n        // add new data to graph (Morris chart) - if is already initialized\n        if(chartData[key].graph !== null){\n            let avgElement = chartData[key].averageElement;\n            let updateElement = chartData[key].updateElement;\n\n            let delay = Util.getCurrentTriggerDelay( key, 0 );\n\n            if(delay){\n                updateElement[0].textContent = ' delay: ' + delay + 'ms ';\n            }\n\n            // set/change average line\n            chartData[key].graph.options.goals = [tempChartData.average];\n\n            // change avg. display\n            avgElement[0].textContent = 'Avg. ' + tempChartData.average + 'ms';\n\n            let avgStatus = getLogStatusByDuration(key, tempChartData.average);\n            let avgStatusClass = Util.getLogInfo( avgStatus, 'class' );\n\n            //change avg. display class\n            if( !avgElement.hasClass(avgStatusClass) ){\n                // avg status changed!\n                avgElement.removeClass().addClass('pull-right txt-color ' + avgStatusClass);\n\n                // change goals line color\n                if(avgStatus === 'warning'){\n                    chartData[key].graph.options.goalLineColors = ['#e28a0d'];\n                    $(document).setProgramStatus('slow connection');\n                }else{\n                    chartData[key].graph.options.goalLineColors = ['#5cb85c'];\n                }\n            }\n\n            // set new data and redraw\n            chartData[key].graph.setData( tempChartData.data );\n        }\n\n        return tempChartData.data;\n    };\n\n    /**\n     * get the log \"status\" by log duration (ms).\n     * If duration > warning limit -> show as warning\n     * @param logKey\n     * @param logDuration\n     * @returns {string}\n     */\n    let getLogStatusByDuration = function(logKey, logDuration){\n        let logStatus = 'info';\n        if( logDuration > Init.timer[logKey].EXECUTION_LIMIT ){\n            logStatus = 'warning';\n        }\n        return logStatus;\n    };\n\n    /**\n     * get the css class for a specific log type\n     * @param logType\n     * @returns {string}\n     */\n    let getLogTypeIconClass = function(logType){\n\n        let logIconClass = '';\n\n        switch(logType){\n            case 'client':\n                logIconClass = 'fa-user';\n                break;\n            case 'server':\n                logIconClass = 'fa-download';\n                break;\n        }\n\n        return logIconClass;\n    };\n\n    /**\n     * init logging -> set global log events\n     */\n    let init = function(){\n\n        let maxEntries = 150;\n\n        $(window).on('pf:syncStatus', function(){\n            updateSyncStatus();\n        });\n\n        // set global logging listener\n        $(window).on('pf:log', function(e, logKey, options){\n\n            // check required logging information\n            if(\n                options &&\n                options.duration &&\n                options.description\n            ){\n                let logDescription = options.description;\n                let logDuration = options.duration;\n                let logType = options.type;\n\n                // check log status by duration\n                let logStatus = getLogStatusByDuration(logKey, logDuration);\n                let statusClass = Util.getLogInfo( logStatus, 'class' );\n                let typeIconClass = getLogTypeIconClass(logType);\n\n                // update graph data\n                updateLogGraph(logKey, logDuration);\n\n                let logRowData = {\n                    status:  '<i class=\"fa fa-fw fa-circle txt-color ' + statusClass + '\"></i>',\n                    time: getLogTime(),\n                    duration: '<span class=\"txt-color ' + statusClass + '\">' + logDuration + '<small>ms</small></span>',\n                    description: logDescription,\n                    type: '<i class=\"fa ' + typeIconClass + '\"></i>',\n                    key: logKey\n                };\n\n\n                if(logDataTable){\n                    // add row if dataTable is initialized before new log\n                    logDataTable.row.add( logRowData ).draw(false);\n                }else{\n                    // add row data to cache\n                    logData.push(logRowData);\n                }\n            }\n\n            // delete old log entries from table ---------------------------------\n            let rowCount = logData.length;\n\n            if( rowCount >= maxEntries ){\n\n                if(logDataTable){\n                    logDataTable.rows(0, {order:'index'}).remove().draw(false);\n                }else{\n                    logData.shift();\n                }\n            }\n\n            // cache logs in order to keep previous logs in table after reopening the dialog\n            if(logDataTable){\n                logData = logDataTable.rows({order:'index'}).data();\n            }\n\n        });\n    };\n\n\n    return {\n        init: init,\n        getLogTime: getLogTime,\n        showDialog: showDialog\n    };\n});\n",
    "/**\n * Map util functions\n */\n\ndefine('app/map/util',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'bootbox'\n], function($, Init, Util, bootbox) {\n    'use strict';\n\n    let config = {\n        mapSnapToGridDimension: 20,                                     // px for grid snapping (grid YxY)\n        defaultLocalJumpRadius: 3,                                      // default search radius (in jumps) for \"nearby\" pilots\n\n        // local storage\n        characterLocalStoragePrefix: 'character_',                      // prefix for character data local storage key\n        mapLocalStoragePrefix: 'map_',                                  // prefix for map data local storage key\n        mapTabContentClass: 'pf-map-tab-content',                       // Tab-Content element (parent element)\n\n        mapClass: 'pf-map',                                             // class for all maps\n        mapGridClass: 'pf-grid-small',                                  // class for map grid snapping\n\n        systemIdPrefix: 'pf-system-',                                   // id prefix for a system\n        systemClass: 'pf-system',                                       // class for all systems\n        systemSelectedClass: 'pf-system-selected',                      // class for selected systems in a map\n\n        // dataTable\n        tableCellEllipsisClass: 'pf-table-cell-ellipsis',\n        tableCellEllipsis80Class: 'pf-table-cell-80',\n        tableCellEllipsis90Class: 'pf-table-cell-90',\n        tableCellEllipsis100Class: 'pf-table-cell-100'\n    };\n\n    // map menu options\n    let mapOptions = {\n        mapMagnetizer: {\n            buttonId: Util.config.menuButtonMagnetizerId,\n            description: 'Magnetizer',\n            onEnable: 'initMagnetizer',                                 // jQuery extension function\n            onDisable: 'destroyMagnetizer'                              // jQuery extension function\n        },\n        mapSnapToGrid : {\n            buttonId: Util.config.menuButtonGridId,\n            description: 'Grid snapping',\n            class: 'mapGridClass'\n        },\n        mapEndpoint : {\n            buttonId: Util.config.menuButtonEndpointId,\n            description: 'Endpoint overlay',\n            onEnable: 'showEndpointOverlays',                           // jQuery extension function\n            onDisable: 'hideEndpointOverlays'                           // jQuery extension function\n        }\n    };\n\n    /**\n     * get all available map Types\n     * optional they can be filtered by current access level of a user\n     * @param {bool} filterByUser\n     * @returns {Array}\n     */\n    let getMapTypes = function(filterByUser){\n        let mapTypes = [];\n\n        $.each(Init.mapTypes, function(prop, data){\n            // skip \"default\" type -> just for 'add' icon\n            if(data.label.length > 0){\n                let tempData = data;\n                tempData.name = prop;\n                mapTypes.push(tempData);\n            }\n        });\n\n        if(filterByUser === true){\n            let corporationId = Util.getCurrentUserInfo('corporationId');\n            let allianceId = Util.getCurrentUserInfo('allianceId');\n\n            let authorizedMapTypes = [];\n            // check if character data exists\n            if(corporationId > 0) {\n                authorizedMapTypes.push('corporation');\n            }\n            if(allianceId > 0){\n                authorizedMapTypes.push('alliance');\n            }\n\n            // private maps are always allowed\n            authorizedMapTypes.push('private');\n\n            // compare \"all\" map types with \"authorized\" types\n            let tempMapTypes = [];\n            for(let i = 0; i < mapTypes.length; i++){\n                for(let j = 0; j < authorizedMapTypes.length; j++){\n                    if(mapTypes[i].name === authorizedMapTypes[j]){\n                        tempMapTypes.push(mapTypes[i]);\n                        break;\n                    }\n\n                }\n            }\n            mapTypes = tempMapTypes;\n        }\n\n        return mapTypes;\n    };\n\n    /**\n     * get all available scopes for a map\n     * @returns {Array}\n     */\n    let getMapScopes = function(){\n        let scopes = [];\n        $.each(Init.mapScopes, function(prop, data){\n            let tempData = data;\n            tempData.name = prop;\n            scopes.push(tempData);\n        });\n\n        return scopes;\n    };\n\n    /**\n     * get some scope info for a given info string\n     * @param {string} info\n     * @param {string} option\n     * @returns {string}\n     */\n    let getScopeInfoForMap = function(info, option){\n        let scopeInfo = '';\n        if(Init.mapScopes.hasOwnProperty(info)){\n            scopeInfo = Init.mapScopes[info][option];\n        }\n        return scopeInfo;\n    };\n\n    /**\n     * get all available map icons\n     * @returns {Object[]}\n     */\n    let getMapIcons = function(){\n        return Init.mapIcons;\n    };\n\n    /**\n     * get map info\n     * @param {string} mapType\n     * @param {string} option\n     * @returns {string}\n     */\n    let getInfoForMap = function(mapType, option){\n        let mapInfo = '';\n        if(Init.mapTypes.hasOwnProperty(mapType)){\n            mapInfo = Init.mapTypes[mapType][option];\n        }\n        return mapInfo;\n    };\n\n    /**\n     * get some system info for a given info string (e.g. rally class)\n     * @param {string} info\n     * @param {string} option\n     * @returns {string}\n     */\n    let getInfoForSystem = function(info, option){\n        let systemInfo = '';\n        if(Init.classes.systemInfo.hasOwnProperty(info)){\n            systemInfo = Init.classes.systemInfo[info][option];\n        }\n        return systemInfo;\n    };\n\n    /**\n     * get system type information\n     * @param {number} systemTypeId\n     * @param {string} option\n     * @returns {string}\n     */\n    let getSystemTypeInfo = function(systemTypeId, option){\n        let systemTypeInfo = '';\n        $.each(Init.systemType, function(prop, data){\n            if(systemTypeId === data.id){\n                systemTypeInfo = data[option];\n                return;\n            }\n        });\n        return systemTypeInfo;\n    };\n\n    /**\n     * get some info for a given effect string\n     * @param effect\n     * @param option\n     * @returns {string}\n     */\n    let getEffectInfoForSystem = function(effect, option){\n        let effectInfo = '';\n        if( Init.classes.systemEffects.hasOwnProperty(effect) ){\n            effectInfo = Init.classes.systemEffects[effect][option];\n        }\n        return effectInfo;\n    };\n\n    /**\n     * get system elements on a map\n     * @returns {*|jQuery}\n     */\n    $.fn.getSystems = function(){\n        return this.find('.' + config.systemClass);\n    };\n\n    /**\n     * get all selected (NOT active) systems in a map\n     * @returns {*}\n     */\n    $.fn.getSelectedSystems = function(){\n        let mapElement = $(this);\n        return mapElement.find('.' + config.systemSelectedClass);\n    };\n\n    /**\n     * search connections by systems\n     * @param {Object} map - jsPlumb\n     * @param {JQuery[]} systems - system DOM elements\n     * @returns {Array} connections - found connection, DOM elements\n     */\n    let searchConnectionsBySystems = function(map, systems){\n        let connections = [];\n        let withBackConnection = true;\n\n        $.each(systems, function(i, system){\n            // get connections where system is source\n            connections = connections.concat( map.getConnections({source: system}) );\n            if(withBackConnection === true){\n                // get connections where system is target\n                connections = connections.concat( map.getConnections({target: system}) );\n            }\n        });\n        return connections;\n    };\n\n    /**\n     * search connections by scope and/or type\n     * -> scope and target can be an array\n     * @param {Object} map - jsPlumb\n     * @param {string|string[]} scope\n     * @param {string|string[]} type\n     * @returns {Array}\n     */\n    let searchConnectionsByScopeAndType = function(map, scope, type){\n        let connections = [];\n        let scopeArray = (scope === undefined) ? ['*'] : ((Array.isArray(scope)) ? scope : [scope]);\n        let typeArray = (type === undefined) ? [] : ((Array.isArray(type)) ? type : [type]);\n\n        map.select({scope: scopeArray}).each(function(connection){\n            if(typeArray.length > 0){\n                // filter by connection type as well...\n                for(let i = 0; i < typeArray.length; i++){\n                    if( connection.hasType(typeArray[i]) ){\n                        connections.push(connection);\n                        break; // don´t add same connection multiple times\n                    }\n                }\n            }else{\n                // connection type is ignored\n                connections.push(connection);\n            }\n        });\n\n        return connections;\n    };\n\n    /**\n     * get Connection Info by option\n     * @param {string} connectionTyp\n     * @param {string} option\n     * @returns {string}\n     */\n    let getConnectionInfo = function(connectionTyp, option){\n        let connectionInfo = '';\n        if(Init.connectionTypes.hasOwnProperty(connectionTyp)){\n            connectionInfo = Init.connectionTypes[connectionTyp][option];\n        }\n        return connectionInfo;\n    };\n\n    /**\n     * get all direct connections between two given systems\n     * @param map\n     * @param {JQuery} systemA\n     * @param {JQuery} systemB\n     * @returns {Array}\n     */\n    let checkForConnection = function(map, systemA, systemB){\n        let connections = [];\n        connections = connections.concat( map.getConnections({scope: '*', source: systemA, target: systemB}) );\n        // get connections where system is target\n        connections = connections.concat( map.getConnections({scope: '*', source: systemB, target: systemA}) );\n        return connections;\n    };\n\n    /**\n     * get the default connection type for a scope\n     * e.g. for new type after scope change\n     * @param {string} scope\n     * @returns {string}\n     */\n    let getDefaultConnectionTypeByScope = function(scope){\n        let type = '';\n        switch(scope){\n            case 'wh':\n                type = 'wh_fresh';\n                break;\n            case 'jumpbridge':\n                type = 'jumpbridge';\n                break;\n            case'stargate':\n                type = 'stargate';\n                break;\n            default:\n                console.error('Connection scope \"' + scope + '\" unknown!');\n        }\n\n        return type;\n    };\n\n    /**\n     * set/change connection status of a wormhole\n     * @param {Object} connection - jsPlumb object\n     * @param {string} status\n     */\n    let setConnectionWHStatus = function(connection, status){\n        if(\n            status === 'wh_fresh' &&\n            connection.hasType('wh_fresh') !== true\n        ){\n            connection.removeType('wh_reduced');\n            connection.removeType('wh_critical');\n            connection.addType('wh_fresh');\n        }else if(\n            status === 'wh_reduced' &&\n            connection.hasType('wh_reduced') !== true\n        ){\n            connection.removeType('wh_fresh');\n            connection.removeType('wh_critical');\n            connection.addType('wh_reduced');\n        }else if(\n            status === 'wh_critical' &&\n            connection.hasType('wh_critical') !== true\n        ){\n            connection.removeType('wh_fresh');\n            connection.removeType('wh_reduced');\n            connection.addType('wh_critical');\n        }else if(\n            status === 'wh_eol' &&\n            connection.hasType('wh_eol') !== true\n        ){\n            connection.addType('wh_eol');\n        }else if(\n            status === 'wh_eol' &&\n            connection.hasType('wh_eol') !== true\n        ){\n            connection.addType('wh_eol');\n        }\n    };\n\n    /**\n     * get some scope info for a given info string\n     * @param {string} info\n     * @param {string} option\n     * @returns {string}\n     */\n    let getScopeInfoForConnection = function(info, option){\n        let scopeInfo = '';\n        if(Init.connectionScopes.hasOwnProperty(info)){\n            switch(option){\n                case 'connectorDefinition':\n                    // json data in DB\n                    let temp = '{ \"data\": ' + Init.connectionScopes[info][option] + '}';\n                    scopeInfo = $.parseJSON( temp).data;\n                    break;\n                default:\n                    scopeInfo = Init.connectionScopes[info][option];\n                    break;\n            }\n        }\n\n        return scopeInfo;\n    };\n\n    /**\n     * get TabContentElement by any element on a map e.g. system\n     * @param element\n     * @returns {*}\n     */\n    let getTabContentElementByMapElement = function(element){\n        let tabContentElement = $(element).parents('.' + config.mapTabContentClass);\n        return tabContentElement;\n    };\n\n    /**\n     * store mapId for current user (IndexedDB)\n     * @param mapId\n     */\n    let storeDefaultMapId = function(mapId){\n        if(mapId > 0){\n            let userData = Util.getCurrentUserData();\n            if(\n                userData &&\n                userData.character\n            ){\n                storeLocalData('character', userData.character.id, 'defaultMapId', mapId);\n            }\n        }\n    };\n\n    /**\n     * get key prefix for local storage data\n     * @param type\n     * @returns {boolean}\n     */\n    let getLocalStoragePrefixByType = function(type){\n        let prefix = false;\n        switch(type){\n            case 'character':   prefix = config.characterLocalStoragePrefix; break;\n            case 'map':   prefix = config.mapLocalStoragePrefix; break;\n            default:   prefix = config.mapLocalStoragePrefix;\n        }\n        return prefix;\n    };\n\n    /**\n     * get stored local data from client cache (IndexedDB)\n     * @param type\n     * @param objectId\n     * @returns {*}\n     */\n    let getLocaleData = function(type, objectId){\n        if(objectId > 0){\n            let storageKey = getLocalStoragePrefixByType(type) + objectId;\n            return Util.getLocalStorage().getItem(storageKey);\n        }else{\n            console.warn('Local storage requires object id > 0');\n        }\n    };\n\n    /**\n     * store local config data to client cache (IndexedDB)\n     * @param type\n     * @param objectId\n     * @param key\n     * @param value\n     */\n    let storeLocalData = function(type, objectId, key, value){\n        if(objectId > 0){\n            // get current map config\n            let storageKey = getLocalStoragePrefixByType(type) + objectId;\n            Util.getLocalStorage().getItem(storageKey).then(function(data) {\n                // This code runs once the value has been loaded\n                // from the offline store.\n                data = (data === null) ? {} : data;\n                // set/update value\n                data[this.key] = this.value;\n                Util.getLocalStorage().setItem(this.storageKey, data);\n            }.bind({\n                key: key,\n                value: value,\n                storageKey: storageKey\n            })).catch(function(err) {\n                // This code runs if there were any errors\n                console.error('Map local storage can not be accessed!');\n            });\n        }else{\n            console.warn('storeLocalData(): Local storage requires object id > 0');\n        }\n    };\n\n    /**\n     * delete local map configuration by key (IndexedDB)\n     * @param type\n     * @param objectId\n     * @param key\n     */\n    let deleteLocalData = function(type, objectId, key){\n        if(objectId > 0){\n            // get current map config\n            let storageKey = getLocalStoragePrefixByType(type) + objectId;\n            Util.getLocalStorage().getItem(storageKey).then(function(data) {\n                if(\n                    data &&\n                    data.hasOwnProperty(key)\n                ){\n                    delete data[key];\n                    Util.getLocalStorage().setItem(this.storageKey, data);\n                }\n            }.bind({\n                storageKey: storageKey\n            }));\n        }else{\n            console.warn('deleteLocalData(): Local storage requires object id > 0');\n        }\n    };\n\n    /**\n     * set or change rallyPoint for systems\n     * @param rallyUpdated\n     * @param options\n     * @returns {*}\n     */\n    $.fn.setSystemRally = function(rallyUpdated, options){\n        rallyUpdated = rallyUpdated || 0;\n        let rallyPoke = false;\n\n        let defaultOptions = {\n            poke: false,\n            hideNotification: false,\n            hideCounter: false,\n        };\n        options = $.extend({}, defaultOptions, options);\n\n        return this.each(function(){\n            let system = $(this);\n            let rally = system.data('rallyUpdated') || 0;\n\n            if(rallyUpdated !== rally){\n                // rally status changed\n                if( !options.hideCounter ){\n                    system.getMapOverlay('timer').startMapUpdateCounter();\n                }\n\n                let rallyClass = getInfoForSystem('rally', 'class');\n\n                if(rallyUpdated > 0){\n                    // new rally point set OR update system with rally information\n\n                    system.addClass( rallyClass );\n                    // rallyUpdated > 0 is required for poke!\n                    rallyPoke = options.poke;\n\n                    let notificationOptions = {\n                        title: 'Rally Point',\n                        text: 'System: ' +  system.data('name')\n                    };\n\n                    if(rallyUpdated === 1){\n                        // rally point not saved on DB\n                        notificationOptions.type = 'success';\n                        Util.showNotify(notificationOptions);\n                    }else if(options.poke){\n                        // rally saved AND poke option active\n\n                        // check if desktop notification was already send\n                        let mapId = system.data('mapid');\n                        let systemId = system.data('id');\n                        let promiseStore = getLocaleData('map', mapId);\n                        promiseStore.then(function(data) {\n                            // This code runs once the value has been loaded\n                            // from the offline store.\n                            let rallyPokeData = {};\n\n                            if(\n                                data &&\n                                data.rallyPoke\n                            ){\n                                // poke data exists\n                                rallyPokeData = data.rallyPoke;\n                            }\n\n                            if(\n                                !rallyPokeData.hasOwnProperty(this.systemId) || // rally poke was not already send to client\n                                rallyPokeData[this.systemId] !== rallyUpdated // already send to that system but in the past\n                            ){\n                                rallyPokeData[this.systemId] = rallyUpdated;\n                                storeLocalData('map', this.mapId, 'rallyPoke', rallyPokeData);\n\n                                notificationOptions.type = 'info';\n                                Util.showNotify(notificationOptions, {desktop: true, stack: 'barBottom'});\n                            }\n                        }.bind({\n                            mapId: mapId,\n                            systemId: systemId,\n                            rallyUpdated: rallyUpdated\n                        }));\n                    }\n                }else{\n                    // rally point removed\n                    system.removeClass( rallyClass );\n\n                    if( !options.hideNotification ){\n                        Util.showNotify({title: 'Rally point removed', type: 'success'});\n                    }\n                }\n            }\n\n            system.data('rallyUpdated', rallyUpdated);\n            system.data('rallyPoke', rallyPoke);\n        });\n    };\n\n    /**\n     * set map \"shortcut\" events\n     */\n    $.fn.setMapShortcuts = function(){\n        return this.each((i, mapWrapper) => {\n            mapWrapper = $(mapWrapper);\n            let mapElement = mapWrapper.findMapElement();\n\n            // dynamic require Map module -> otherwise there is a require(), loop\n            let Map = require('app/map/map');\n            let map = Map.getMapInstance( mapElement.data('id'));\n\n            mapWrapper.watchKey('mapSystemAdd', (mapWrapper) => {\n                Map.showNewSystemDialog(map, {position: {x: 0, y: 0}});\n            },{focus: true});\n\n            mapWrapper.watchKey('mapSystemsSelect', (mapWrapper) => {\n                mapElement.selectAllSystems();\n            },{focus: true});\n\n            mapWrapper.watchKey('mapSystemsDelete', (mapWrapper) => {\n                let selectedSystems = mapElement.getSelectedSystems();\n                $.fn.showDeleteSystemDialog(map, selectedSystems);\n            },{focus: true});\n\n        });\n    };\n\n    $.fn.findMapElement = function(){\n        return $(this).find('.' + config.mapClass);\n    };\n\n    /**\n     * get systemId string (selector\n     * @param mapId\n     * @param systemId\n     * @returns {string}\n     */\n    let getSystemId = (mapId, systemId) => {\n        return config.systemIdPrefix + mapId + '-' + systemId;\n    };\n\n    return {\n        config: config,\n        mapOptions: mapOptions,\n        getMapTypes: getMapTypes,\n        getMapScopes: getMapScopes,\n        getScopeInfoForMap: getScopeInfoForMap,\n        getMapIcons: getMapIcons,\n        getInfoForMap: getInfoForMap,\n        getInfoForSystem: getInfoForSystem,\n        getSystemTypeInfo: getSystemTypeInfo,\n        getEffectInfoForSystem: getEffectInfoForSystem,\n        searchConnectionsBySystems: searchConnectionsBySystems,\n        searchConnectionsByScopeAndType: searchConnectionsByScopeAndType,\n        getConnectionInfo: getConnectionInfo,\n        checkForConnection: checkForConnection,\n        getDefaultConnectionTypeByScope: getDefaultConnectionTypeByScope,\n        setConnectionWHStatus: setConnectionWHStatus,\n        getScopeInfoForConnection: getScopeInfoForConnection,\n        getTabContentElementByMapElement: getTabContentElementByMapElement,\n        storeDefaultMapId: storeDefaultMapId,\n        getLocaleData: getLocaleData,\n        storeLocalData: storeLocalData,\n        deleteLocalData: deleteLocalData,\n        getSystemId: getSystemId\n    };\n});\n",
    "/**\n * @license RequireJS text 2.0.12 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.12',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file.indexOf('\\uFEFF') === 0) {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n",
    "\n",
    "\n",
    "\n",
    "/**\n *  notification dialog\n */\n\ndefine('dialog/notification',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox'\n], function($, Init, Util, Render, bootbox) {\n\n    'use strict';\n\n    let config = {\n\n        // shutdown dialog\n        notificationDialogId: 'pf-notification-dialog',                                 // id for \"notification\" dialog\n        notificationDialogClass: 'pf-notification-dialog'                               // class for \"notification\" dialog\n    };\n\n    /**\n     * show/animate dialog page content\n     * @param dialog\n     */\n    let showPageContent = function(dialog){\n        let headlineElement = dialog.find('h1');\n\n        headlineElement.delay(300).velocity('transition.shrinkIn', {\n            duration: 500\n        }).delay(800);\n\n        headlineElement.velocity({\n            scale: 1.05\n        }, {\n            duration: 600,\n            loop: 5\n        });\n    };\n\n    /**\n     * show \"notification\" dialog\n     * @param dialogData\n     */\n    $.fn.showNotificationDialog = function(dialogData){\n\n        // check if there is already a notification dialog open\n        let notificationDialogClassDialoges = $('.' + config.notificationDialogClass);\n\n        if(notificationDialogClassDialoges.length === 0){\n\n            // close all modals\n            $('.modal').modal('hide');\n\n            requirejs(['text!templates/dialog/notification.html', 'mustache'], function(template, Mustache) {\n\n                let data = {\n                    id: config.notificationDialogId,\n                    content: dialogData.content\n                };\n\n                let content = Mustache.render(template, data);\n\n                // show dialog\n                let shutdownDialog = bootbox.dialog({\n                    title: dialogData.content.title,\n                    message: content,\n                    className: config.notificationDialogClass,\n                    buttons: dialogData.buttons\n                });\n\n\n                shutdownDialog.on('shown.bs.modal', function(e) {\n                    // remove close button\n                    let dialog = $(this);\n\n                    dialog.find('.bootbox-close-button').remove();\n                    dialog.find('button').blur();\n\n                    // show error message\n                    showPageContent(dialog);\n                });\n            });\n        }\n    };\n\n\n});\n",
    "/**\n *  activity stats dialog\n */\n\n\ndefine('dialog/stats',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox'\n], function($, Init, Util, Render, bootbox) {\n    'use strict';\n\n    let config = {\n        // dialog\n        statsDialogId: 'pf-stats-dialog',                                       // id for \"stats\" dialog\n        dialogNavigationClass: 'pf-dialog-navigation-list',                     // class for dialog navigation bar\n        dialogNavigationListItemClass: 'pf-dialog-navigation-list-item',        // class for map manual li main navigation elements\n\n        dialogNavigationOffsetClass : 'pf-dialog-navigation-offset',            // class for \"current\" offset filter\n        dialogNavigationPrevClass : 'pf-dialog-navigation-prev',                // class for \"prev\" period load\n        dialogNavigationNextClass : 'pf-dialog-navigation-next',                // class for \"next\" period load\n\n        // stats/dataTable\n        statsContainerId: 'pf-stats-dialog-container',                          // class for statistics container (dynamic ajax content)\n        statsTableId: 'pf-stats-table',                                         // id for statistics table element\n        tableImageCellClass: 'pf-table-image-cell',                             // class for table \"image\" cells\n\n        // charts\n        statsLineChartClass: 'pf-line-chart'                                    // class for inline chart elements\n    };\n\n    /**\n     * init blank statistics dataTable\n     * @param dialogElement\n     */\n    let initStatsTable = function(dialogElement){\n        let columnNumberWidth = 35;\n        let lineColor = '#477372';\n\n        // render function for inline-chart columns\n        let renderInlineChartColumn = function(data, type, row, meta){\n            /*\n             switch(data.type){\n             case 'C': lineColor = '#5cb85c'; break;\n             case 'U': lineColor = '#e28a0d'; break;\n             case 'D': lineColor = '#a52521'; break;\n             }*/\n\n            if( /^\\d+$/.test(data.data) ){\n                // single digit (e.g. single week filter)\n                return data.data;\n            }else{\n                // period -> prepare line chart\n                return '<span class=\"' + config.statsLineChartClass + '\" data-peity=\\'{ \"stroke\": \"' + lineColor + '\" }\\'>' + data.data + '</span>';\n            }\n        };\n\n        // render function for numeric columns\n        let renderNumericColumn = function(data, type, row, meta){\n            return data.toLocaleString();\n        };\n\n        // get table element\n        // Due to \"complex\" table headers, they are already rendered and part of the stats.html file\n        let table = dialogElement.find('#' + config.statsTableId);\n\n        let  statsTable = table.DataTable({\n            pageLength: 30,\n            lengthMenu: [[10, 20, 30, 50], [10, 20, 30, 50]],\n            paging: true,\n            ordering: true,\n            order: [ 16, 'desc' ],\n            info: true,\n            searching: true,\n            hover: false,\n            autoWidth: false,\n            language: {\n                emptyTable:  'No statistics found',\n                zeroRecords: 'No characters found',\n                lengthMenu:  'Show _MENU_ characters',\n                info:        'Showing _START_ to _END_ of _TOTAL_ characters'\n            },\n            columnDefs: [\n                {\n                    targets: 0,\n                    title: '<i class=\"fa fa-hashtag\"></i>',\n                    orderable: false,\n                    searchable: false,\n                    width: 10,\n                    class: 'text-right',\n                    data: 'character.id'\n                },{\n                    targets: 1,\n                    title: '',\n                    orderable: false,\n                    searchable: false,\n                    width: 26,\n                    className: ['text-center', config.tableImageCellClass].join(' '),\n                    data: 'character',\n                    render: {\n                        _: function(data, type, row, meta){\n                            return '<img src=\"' + Init.url.ccpImageServer + 'Character/' + data.id + '_32.jpg\" />';\n                        }\n                    }\n                },{\n                    targets: 2,\n                    title: 'name',\n                    width: 200,\n                    data: 'character',\n                    render: {\n                        _: 'name',\n                        sort: 'name'\n                    }\n                },{\n                    targets: 3,\n                    title: 'last login',\n                    searchable: false,\n                    width: 70,\n                    className: ['text-right', 'separator-right'].join(' '),\n                    data: 'character',\n                    render: {\n                        _: 'lastLogin',\n                        sort: 'lastLogin'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        $(cell).initTimestampCounter();\n                    }\n                },{\n                    targets: 4,\n                    title: '<span title=\"created\" data-toggle=\"tooltip\">C&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'systemCreate',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 5,\n                    title: '<span title=\"updated\" data-toggle=\"tooltip\">U&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'systemUpdate',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 6,\n                    title: '<span title=\"deleted\" data-toggle=\"tooltip\">D&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'systemDelete',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 7,\n                    title: 'Σ&nbsp;&nbsp;',\n                    searchable: false,\n                    width: 20,\n                    className: ['text-right', 'separator-right'].join(' ') ,\n                    data: 'systemSum',\n                    render: {\n                        _: renderNumericColumn\n                    }\n                },{\n                    targets: 8,\n                    title: '<span title=\"created\" data-toggle=\"tooltip\">C&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'connectionCreate',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 9,\n                    title: '<span title=\"updated\" data-toggle=\"tooltip\">U&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'connectionUpdate',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 10,\n                    title: '<span title=\"deleted\" data-toggle=\"tooltip\">D&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'connectionDelete',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 11,\n                    title: 'Σ&nbsp;&nbsp;',\n                    searchable: false,\n                    width: 20,\n                    className: ['text-right', 'separator-right'].join(' '),\n                    data: 'connectionSum',\n                    render: {\n                        _: renderNumericColumn\n                    }\n                },{\n                    targets: 12,\n                    title: '<span title=\"created\" data-toggle=\"tooltip\">C&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'signatureCreate',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 13,\n                    title: '<span title=\"updated\" data-toggle=\"tooltip\">U&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'signatureUpdate',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 14,\n                    title: '<span title=\"deleted\" data-toggle=\"tooltip\">D&nbsp;&nbsp;</span>',\n                    orderable: false,\n                    searchable: false,\n                    width: columnNumberWidth,\n                    className: ['text-right', 'hidden-xs', 'hidden-sm'].join(' '),\n                    data: 'signatureDelete',\n                    render: {\n                        _: renderInlineChartColumn\n                    }\n                },{\n                    targets: 15,\n                    title: 'Σ&nbsp;&nbsp;',\n                    searchable: false,\n                    width: 20,\n                    className: ['text-right', 'separator-right'].join(' '),\n                    data: 'signatureSum',\n                    render: {\n                        _: renderNumericColumn\n                    }\n                },{\n                    targets: 16,\n                    title: 'Σ&nbsp;&nbsp;',\n                    searchable: false,\n                    width: 20,\n                    className: 'text-right',\n                    data: 'totalSum',\n                    render: {\n                        _: renderNumericColumn\n                    }\n                }\n            ],\n            initComplete: function(settings){\n                let tableApi = this.api();\n\n                // initial statistics data request\n                let requestData = getRequestDataFromTabPanels(dialogElement);\n                getStatsData(requestData, {tableApi: tableApi, callback: drawStatsTable});\n            },\n            drawCallback: function(settings){\n                this.api().rows().nodes().to$().each(function(i, row){\n                    $(row).find('.' + config.statsLineChartClass).peity('line', {\n                        fill: 'transparent',\n                        height: 18,\n                        min: 0,\n                        width: 50\n                    });\n                });\n            },\n            footerCallback: function ( row, data, start, end, display ) {\n                let api = this.api();\n                let sumColumnIndexes = [7, 11, 15, 16];\n\n                // column data for \"sum\" columns over this page\n                let pageTotalColumns = api\n                    .columns( sumColumnIndexes, { page: 'current'} )\n                    .data();\n\n                // sum columns for \"total\" sum\n                pageTotalColumns.each(function(colData, index){\n                    pageTotalColumns[index] = colData.reduce(function(a, b){\n                        return a + b;\n                    }, 0);\n                });\n\n                $(sumColumnIndexes).each(function(index, value){\n                    $( api.column( value ).footer() ).text( renderNumericColumn(pageTotalColumns[index]) );\n                });\n            },\n            data: [] // will be added dynamic\n        });\n\n        statsTable.on('order.dt search.dt', function(){\n            statsTable.column(0, {search:'applied', order:'applied'}).nodes().each(function(cell, i){\n                $(cell).html( (i + 1) + '.&nbsp;&nbsp;');\n            });\n        }).draw();\n\n        let tooltipElements = dialogElement.find('[data-toggle=\"tooltip\"]');\n        tooltipElements.tooltip();\n    };\n\n    /**\n     * request raw statistics data and execute callback\n     * @param requestData\n     * @param context\n     */\n    let getStatsData = function(requestData, context){\n\n        context.dynamicArea = $('#' + config.statsContainerId + ' .pf-dynamic-area');\n        context.dynamicArea.showLoadingAnimation();\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.getStatisticsData,\n            data: requestData,\n            dataType: 'json',\n            context: context\n        }).done(function(data){\n            this.dynamicArea.hideLoadingAnimation();\n\n            this.callback(data);\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            Util.showNotify({title: jqXHR.status + ': loadStatistics', text: reason, type: 'warning'});\n        });\n    };\n\n    /**\n     * update dataTable with response data\n     * update \"header\"/\"filter\" elements in dialog\n     * @param responseData\n     */\n    let drawStatsTable = function(responseData){\n        let dialogElement = $('#' + config.statsDialogId);\n\n        // update filter/header -----------------------------------------------------------------------------\n        let navigationListElements = $('.' + config.dialogNavigationClass);\n        navigationListElements.find('a[data-type=\"typeId\"][data-value=\"' + responseData.typeId + '\"]').tab('show');\n        navigationListElements.find('a[data-type=\"period\"][data-value=\"' + responseData.period + '\"]').tab('show');\n\n        // update period pagination -------------------------------------------------------------------------\n        let prevButton = dialogElement.find('.' + config.dialogNavigationPrevClass);\n        prevButton.data('newOffset', responseData.prev);\n        prevButton.find('span').text('Week ' + responseData.prev.week + ', ' + responseData.prev.year);\n        prevButton.css('visibility', 'visible');\n\n        let nextButton = dialogElement.find('.' + config.dialogNavigationNextClass);\n        if(responseData.next){\n            nextButton.data('newOffset', responseData.next);\n            nextButton.find('span').text('Week ' + responseData.next.week + ', ' + responseData.next.year);\n            nextButton.css('visibility', 'visible');\n        }else{\n            nextButton.css('visibility', 'hidden');\n        }\n\n        // update current period information label ----------------------------------------------------------\n        // if period == \"weekly\" there is no \"offset\" -> just a single week\n        let offsetText = 'Week ' + responseData.start.week + ', ' + responseData.start.year;\n        if(responseData.period !== 'weekly'){\n            offsetText += ' <small><i class=\"fa fa-fw fa-minus\"></i></small> ' +\n                            'Week ' + responseData.offset.week + ', ' + responseData.offset.year;\n        }\n        dialogElement.find('.' + config.dialogNavigationOffsetClass)\n            .data('start', responseData.start)\n            .data('period', responseData.period)\n            .html(offsetText);\n\n        // clear and (re)-fill table ------------------------------------------------------------------------\n        let formattedData = formatStatisticsData(responseData);\n        this.tableApi.clear();\n        this.tableApi.rows.add(formattedData).draw();\n    };\n\n    /**\n     * format statistics data for dataTable\n     * -> e.g. format inline-chart data\n     * @param statsData\n     * @returns {Array}\n     */\n    let formatStatisticsData = function(statsData){\n        let formattedData = [];\n        let yearStart = statsData.start.year;\n        let weekStart = statsData.start.week;\n        let weekCount = statsData.weekCount;\n        let yearWeeks = statsData.yearWeeks;\n\n        let tempRand = function(min, max){\n            return Math.random() * (max - min) + min;\n        };\n\n        // format/sum week statistics data for inline charts\n        let formatWeekData = function(weeksData){\n            let currentYear = yearStart;\n            let currentWeek = weekStart;\n\n            let formattedWeeksData = {\n                systemCreate: [],\n                systemUpdate: [],\n                systemDelete: [],\n                connectionCreate: [],\n                connectionUpdate: [],\n                connectionDelete: [],\n                signatureCreate: [],\n                signatureUpdate: [],\n                signatureDelete: [],\n                systemSum: 0,\n                connectionSum: 0,\n                signatureSum: 0\n            };\n\n            for(let i = 0; i < weekCount; i++){\n                let yearWeekProp = currentYear + '' + currentWeek;\n\n                if(weeksData.hasOwnProperty( yearWeekProp )){\n                    let weekData = weeksData[ yearWeekProp ];\n\n                    // system -------------------------------------------------------------------------------\n                    formattedWeeksData.systemCreate.push( weekData.systemCreate );\n                    formattedWeeksData.systemSum += parseInt( weekData.systemCreate );\n\n                    formattedWeeksData.systemUpdate.push( weekData.systemUpdate );\n                    formattedWeeksData.systemSum += parseInt( weekData.systemUpdate );\n\n                    formattedWeeksData.systemDelete.push( weekData.systemDelete );\n                    formattedWeeksData.systemSum += parseInt( weekData.systemDelete );\n\n                    // connection ---------------------------------------------------------------------------\n                    formattedWeeksData.connectionCreate.push( weekData.connectionCreate );\n                    formattedWeeksData.connectionSum += parseInt( weekData.connectionCreate );\n\n                    formattedWeeksData.connectionUpdate.push( weekData.connectionUpdate );\n                    formattedWeeksData.connectionSum += parseInt( weekData.connectionUpdate );\n\n                    formattedWeeksData.connectionDelete.push( weekData.connectionDelete );\n                    formattedWeeksData.connectionSum += parseInt( weekData.connectionDelete );\n\n                    // signature ----------------------------------------------------------------------------\n                    formattedWeeksData.signatureCreate.push( weekData.signatureCreate );\n                    formattedWeeksData.signatureSum += parseInt( weekData.signatureCreate );\n\n                    formattedWeeksData.signatureUpdate.push( weekData.signatureUpdate );\n                    formattedWeeksData.signatureSum += parseInt( weekData.signatureUpdate );\n\n                    formattedWeeksData.signatureDelete.push( weekData.signatureDelete );\n                    formattedWeeksData.signatureSum += parseInt( weekData.signatureDelete );\n                }else{\n                    // system -------------------------------------------------------------------------------\n                    formattedWeeksData.systemCreate.push(0);\n                    formattedWeeksData.systemUpdate.push(0);\n                    formattedWeeksData.systemDelete.push(0);\n\n                    // connection ---------------------------------------------------------------------------\n                    formattedWeeksData.connectionCreate.push(0);\n                    formattedWeeksData.connectionUpdate.push(0);\n                    formattedWeeksData.connectionDelete.push(0);\n\n                    // signature ----------------------------------------------------------------------------\n                    formattedWeeksData.signatureCreate.push(0);\n                    formattedWeeksData.signatureUpdate.push(0);\n                    formattedWeeksData.signatureDelete.push(0);\n                }\n\n                currentWeek++;\n\n                if( currentWeek > yearWeeks[currentYear] ){\n                    currentWeek = 1;\n                    currentYear++;\n                }\n            }\n\n            // system ---------------------------------------------------------------------------------------\n            formattedWeeksData.systemCreate = formattedWeeksData.systemCreate.join(',');\n            formattedWeeksData.systemUpdate = formattedWeeksData.systemUpdate.join(',');\n            formattedWeeksData.systemDelete = formattedWeeksData.systemDelete.join(',');\n\n            // connection -----------------------------------------------------------------------------------\n            formattedWeeksData.connectionCreate = formattedWeeksData.connectionCreate.join(',');\n            formattedWeeksData.connectionUpdate = formattedWeeksData.connectionUpdate.join(',');\n            formattedWeeksData.connectionDelete = formattedWeeksData.connectionDelete.join(',');\n\n            // signature ------------------------------------------------------------------------------------\n            formattedWeeksData.signatureCreate = formattedWeeksData.signatureCreate.join(',');\n            formattedWeeksData.signatureUpdate = formattedWeeksData.signatureUpdate.join(',');\n            formattedWeeksData.signatureDelete = formattedWeeksData.signatureDelete.join(',');\n\n            return formattedWeeksData;\n        };\n\n        $.each(statsData.statistics, function(characterId, data){\n\n            let formattedWeeksData = formatWeekData(data.weeks);\n\n            let rowData = {\n                character: {\n                    id: characterId,\n                    name: data.name,\n                    lastLogin: data.lastLogin\n                },\n                systemCreate: {\n                    type: 'C',\n                    data: formattedWeeksData.systemCreate\n                },\n                systemUpdate: {\n                    type: 'U',\n                    data: formattedWeeksData.systemUpdate\n                },\n                systemDelete: {\n                    type: 'D',\n                    data: formattedWeeksData.systemDelete\n                },\n                systemSum: formattedWeeksData.systemSum,\n                connectionCreate: {\n                    type: 'C',\n                    data: formattedWeeksData.connectionCreate\n                },\n                connectionUpdate: {\n                    type: 'U',\n                    data: formattedWeeksData.connectionUpdate\n                },\n                connectionDelete: {\n                    type: 'D',\n                    data: formattedWeeksData.connectionDelete\n                },\n                connectionSum: formattedWeeksData.connectionSum,\n                signatureCreate: {\n                    type: 'C',\n                    data: formattedWeeksData.signatureCreate\n                },\n                signatureUpdate: {\n                    type: 'U',\n                    data: formattedWeeksData.signatureUpdate\n                },\n                signatureDelete: {\n                    type: 'D',\n                    data: formattedWeeksData.signatureDelete\n                },\n                signatureSum: formattedWeeksData.signatureSum,\n                totalSum: formattedWeeksData.systemSum + formattedWeeksData.connectionSum + formattedWeeksData.signatureSum\n            };\n\n            formattedData.push(rowData);\n        });\n\n        return formattedData;\n    };\n\n    /**\n     *\n     * @param dialogElement\n     * @returns {{}}\n     */\n    let getRequestDataFromTabPanels = function(dialogElement){\n        let requestData = {};\n\n        // get data from \"tab\" panel links ------------------------------------------------------------------\n        let navigationListElements = dialogElement.find('.' + config.dialogNavigationClass);\n        navigationListElements.find('.' + config.dialogNavigationListItemClass + '.active a').each(function(){\n            let linkElement = $(this);\n            requestData[linkElement.data('type')]= linkElement.data('value');\n        });\n\n        // get current period (no offset) data (if available) -----------------------------------------------\n        let navigationOffsetElement = dialogElement.find('.' + config.dialogNavigationOffsetClass);\n        let startData = navigationOffsetElement.data('start');\n        let periodOld = navigationOffsetElement.data('period');\n\n        // if period switch was detected\n        // -> \"year\" and \"week\" should not be send\n        // -> start from \"now\"\n        if(\n            requestData.period === periodOld &&\n            startData\n        ){\n            requestData.year = startData.year;\n            requestData.week = startData.week;\n        }\n\n        return requestData;\n    };\n\n    /**\n     * check if \"activity log\" type is enabled for a group\n     * @param type\n     * @returns {boolean}\n     */\n    let isTabTypeEnabled = function(type){\n        let enabled = false;\n\n        switch(type){\n            case 'private':\n                if(Init.mapTypes.private.defaultConfig.activity_logging){\n                    enabled = true;\n                }\n                break;\n            case 'corporation':\n                if(\n                    Init.mapTypes.corporation.defaultConfig.activity_logging &&\n                    Util.getCurrentUserInfo('corporationId')\n                ){\n                    enabled = true;\n                }\n                break;\n            case 'alliance':\n                if(\n                    Init.mapTypes.alliance.defaultConfig.activity_logging &&\n                    Util.getCurrentUserInfo('allianceId')\n                ){\n                    enabled = true;\n                }\n                break;\n        }\n\n        return enabled;\n    };\n\n    /**\n     * show activity stats dialog\n     */\n    $.fn.showStatsDialog = function(){\n        requirejs(['text!templates/dialog/stats.html', 'mustache', 'peityInlineChart'], function(template, Mustache) {\n\n            let data = {\n                id: config.statsDialogId,\n                dialogNavigationClass: config.dialogNavigationClass,\n                dialogNavLiClass: config.dialogNavigationListItemClass,\n                enablePrivateTab: isTabTypeEnabled('private'),\n                enableCorporationTab: isTabTypeEnabled('corporation'),\n                enableAllianceTab: isTabTypeEnabled('alliance'),\n                statsContainerId: config.statsContainerId,\n                statsTableId: config.statsTableId,\n                dialogNavigationOffsetClass: config.dialogNavigationOffsetClass,\n                dialogNavigationPrevClass: config.dialogNavigationPrevClass,\n                dialogNavigationNextClass: config.dialogNavigationNextClass\n            };\n\n            let content = Mustache.render(template, data);\n\n            let statsDialog = bootbox.dialog({\n                title: 'Statistics',\n                message: content,\n                size: 'large',\n                show: false,\n                buttons: {\n                    close: {\n                        label: 'close',\n                        className: 'btn-default'\n                    }\n                }\n            });\n\n            // model events\n            statsDialog.on('show.bs.modal', function(e) {\n                let dialogElement = $(e.target);\n\n                initStatsTable(dialogElement);\n            });\n\n            // Tab module events\n            statsDialog.find('a[data-toggle=\"tab\"]').on('show.bs.tab', function (e, b, c) {\n                if( $(e.target).parent().hasClass('disabled') ){\n                    // no action on \"disabled\" tabs\n                    return false;\n                }\n            });\n\n            statsDialog.find('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n                let requestData = getRequestDataFromTabPanels(statsDialog);\n                let tableApi = statsDialog.find('#' + config.statsTableId).DataTable();\n\n                getStatsData(requestData, {tableApi: tableApi, callback: drawStatsTable});\n            });\n\n            // offset change links\n            statsDialog.find('.' + config.dialogNavigationPrevClass + ', .' + config.dialogNavigationNextClass).on('click', function(){\n                let offsetData = $(this).data('newOffset');\n                if(offsetData){\n                    // this should NEVER fail!\n                    // get \"base\" request data (e.g. typeId, period)\n                    // --> overwrite period data with new period data\n                    let tmpRequestData = getRequestDataFromTabPanels(statsDialog);\n                    let requestData =  $.extend({}, tmpRequestData, offsetData);\n                    let tableApi = statsDialog.find('#' + config.statsTableId).DataTable();\n\n                    getStatsData(requestData, {tableApi: tableApi, callback: drawStatsTable});\n                }\n            });\n\n            // show dialog\n            statsDialog.modal('show');\n        });\n    };\n});\n",
    "/**\n * map info dialog\n */\n\ndefine('dialog/map_info',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'bootbox',\n    'app/map/util'\n], function($, Init, Util, bootbox, MapUtil) {\n\n    'use strict';\n\n    let config = {\n        // global dialog\n        dialogNavigationClass: 'pf-dialog-navigation-list',                     // class for dialog navigation bar\n\n        // map info dialog/tabs\n        dialogMapInfoSummaryId: 'pf-map-info-dialog-summary',                   // id for map \"summary\" container\n        dialogMapInfoUsersId: 'pf-map-info-dialog-users',                       // id for map \"user\" container\n        dialogMapInfoRefreshId: 'pf-map-info-dialog-refresh',                   // id for map \"refresh\" container\n\n        // \"summary\" container\n        mapInfoId: 'pf-map-info',                                               // id for map info\n        mapInfoSystemsId: 'pf-map-info-systems',                                // id for map info systems box\n        mapInfoConnectionsId: 'pf-map-info-connections',                        // id for map info connections box\n        mapInfoUsersId: 'pf-map-info-users',                                    // id for map info users box\n\n        mapInfoTableClass: 'pf-map-info-table',                                 // class for data\n        mapInfoLifetimeCounterClass: 'pf-map-info-lifetime-counter',            // class for map lifetime counter\n\n        // dataTable\n        tableImageCellClass: 'pf-table-image-cell',                             // class for table \"image\" cells\n        tableImageSmallCellClass: 'pf-table-image-small-cell',                  // class for table \"small image\" cells\n        tableActionCellClass: 'pf-table-action-cell',                           // class for table \"action\" cells\n        tableCounterCellClass: 'pf-table-counter-cell',                         // class for table \"counter\" cells\n        tableActionCellIconClass: 'pf-table-action-icon-cell',                  // class for table \"action\" icon (icon is part of cell content)\n\n        loadingOptions: {                                                       // config for loading overlay\n            icon: {\n                size: 'fa-2x'\n            }\n        }\n    };\n\n    // confirmation dialog settings (e.g. delete row)\n    let confirmationSettings = {\n        container: 'body',\n        placement: 'left',\n        btnCancelClass: 'btn btn-sm btn-default',\n        btnCancelLabel: 'cancel',\n        btnCancelIcon: 'fa fa-fw fa-ban',\n        btnOkClass: 'btn btn-sm btn-danger',\n        btnOkLabel: 'delete',\n        btnOkIcon: 'fa fa-fw fa-close'\n    };\n\n    /**\n     * loads the map info data into an element\n     * @param mapData\n     */\n    $.fn.loadMapInfoData = function(mapData){\n        let mapElement = $(this);\n\n        mapElement.empty();\n        mapElement.showLoadingAnimation(config.loadingOptions);\n\n        let countSystems = mapData.data.systems.length;\n        let countConnections = mapData.data.connections.length;\n\n        // map type\n        let mapTypes = MapUtil.getMapTypes();\n        let mapType = null;\n\n        for(let i = 0; i < mapTypes.length; i++){\n            if(mapTypes[i].id === mapData.config.type.id){\n                mapType = mapTypes[i];\n                break;\n            }\n        }\n\n        // check max map limits (e.g. max systems per map) ============================================================\n        let percentageSystems = (100 / mapType.defaultConfig.max_systems) * countSystems;\n        let maxSystemsClass = (percentageSystems < 90) ? 'txt-color-success' : (percentageSystems < 100) ? 'txt-color-warning' : 'txt-color-danger';\n\n        // build content ==============================================================================================\n\n        let dlElementLeft = $('<dl>', {\n            class: 'dl-horizontal',\n            css: {'float': 'left'}\n        }).append(\n                $('<dt>').text( 'Icon' )\n            ).append(\n                $('<dd>').append(\n                    $('<i>', {\n                        class: ['fa', 'fa-fw', mapData.config.icon].join(' ')\n                    })\n                )\n            ).append(\n                $('<dt>').text( 'Name' )\n            ).append(\n                $('<dd>').text( mapData.config.name )\n            ).append(\n                $('<dt>').text( 'Type' )\n            ).append(\n                $('<dd>', {\n                    class: mapType.class\n                }).text( mapType.name )\n            );\n\n        mapElement.append(dlElementLeft);\n\n        let dlElementRight = $('<dl>', {\n            class: 'dl-horizontal',\n            css: {'float': 'right'}\n            }).append(\n                $('<dt>').text( 'Lifetime' )\n            ).append(\n                $('<dd>', {\n                    class: config.mapInfoLifetimeCounterClass,\n                    text: mapData.config.created\n                })\n            ).append(\n                $('<dt>').text( 'Systems' )\n            ).append(\n                $('<dd>', {\n                    class: ['txt-color', maxSystemsClass].join(' ')\n                }).text( countSystems + ' / ' + mapType.defaultConfig.max_systems )\n            ).append(\n                $('<dt>').text( 'Connections' )\n            ).append(\n                $('<dd>').text( countConnections )\n            );\n\n        mapElement.append(dlElementRight);\n\n        // init map lifetime counter\n        $('.' + config.mapInfoLifetimeCounterClass).initTimestampCounter();\n\n        mapElement.hideLoadingAnimation();\n    };\n\n    /**\n     * loads system info table into an element\n     * @param mapData\n     */\n    $.fn.loadSystemInfoTable = function(mapData){\n\n        let systemsElement = $(this);\n\n        systemsElement.empty();\n\n        let systemTable = $('<table>', {\n            class: ['compact', 'stripe', 'order-column', 'row-border', config.mapInfoTableClass].join(' ')\n        });\n        systemsElement.append(systemTable);\n\n        systemsElement.showLoadingAnimation(config.loadingOptions);\n\n        // table init complete\n        systemTable.on( 'init.dt', function () {\n            systemsElement.hideLoadingAnimation();\n\n            // init table tooltips\n            let tooltipElements = systemsElement.find('[data-toggle=\"tooltip\"]');\n            tooltipElements.tooltip();\n        });\n\n        // prepare data for dataTables\n        let systemsData = [];\n        for(let i = 0; i < mapData.data.systems.length; i++){\n            let tempSystemData = mapData.data.systems[i];\n\n            let tempData = {};\n\n            // system id\n            tempData.id = tempSystemData.id;\n\n            // current position\n            if(tempSystemData.currentUser === true){\n                tempData.position = {\n                    position: '<i class=\"fa fa fa-map-marker fa-lg fa-fw\"></i>',\n                    position_sort: 1\n                };\n            }else{\n                tempData.position = {\n                    position: '',\n                    position_sort: 0\n                };\n            }\n\n            // active pilots\n            if(tempSystemData.userCount > 0){\n                tempData.userCount = tempSystemData.userCount;\n            }else{\n                tempData.userCount = '';\n            }\n\n            // type\n            tempData.type = {\n                type: MapUtil.getSystemTypeInfo(tempSystemData.type.id, 'name'),\n                type_sort: tempSystemData.type.id\n            };\n\n            // security\n            let securityClass = Util.getSecurityClassForSystem(tempSystemData.security);\n            tempData.security = {\n                security: '<span class=\"' + securityClass + '\">' + tempSystemData.security + '</span>',\n                security_sort: tempSystemData.security\n            };\n\n            // name\n            tempData.name = tempSystemData.name;\n\n            // alias\n            tempData.alias = (tempSystemData.alias === tempSystemData.name) ? '' : tempSystemData.alias;\n\n            // region\n            tempData.region = tempSystemData.region.name;\n\n            // static\n            let statics = [];\n            for(let j = 0; j < tempSystemData.statics.length; j++){\n                let security = tempSystemData.statics[j].security;\n                let secClass = Util.getSecurityClassForSystem(security);\n                statics.push('<span class=\"' + secClass + '\">' + security + '</span>');\n            }\n            tempData.static = statics.join('&nbsp;&nbsp;');\n\n            // status\n            let systemStatusClass = Util.getStatusInfoForSystem(tempSystemData.status.id, 'class');\n            if(systemStatusClass !== ''){\n                tempData.status = {\n                    status: '<i class=\"fa fa fa-square-o fa-lg fa-fw ' + systemStatusClass + '\"></i>',\n                    status_sort: tempSystemData.status.id\n                };\n            }else{\n                tempData.status = {\n                    status: '',\n                    status_sort: tempSystemData.status.id\n                };\n            }\n\n            // effect\n            let systemEffectClass = MapUtil.getEffectInfoForSystem(tempSystemData.effect, 'class');\n            if(systemEffectClass !== ''){\n                tempData.effect = {\n                    effect: '<i class=\"fa fa fa-square fa-lg fa-fw ' + systemEffectClass + '\"></i>',\n                    effect_sort: tempSystemData.effect\n                };\n            }else{\n                tempData.effect = {\n                    effect: '',\n                    effect_sort: ''\n                };\n            }\n\n            // trueSec\n            let systemTrueSecClass = Util.getTrueSecClassForSystem(tempSystemData.trueSec);\n            if(systemTrueSecClass !== ''){\n                tempData.trueSec = {\n                    trueSec: '<span class=\"' + systemTrueSecClass + '\">' + tempSystemData.trueSec.toFixed(1) + '</span>',\n                    trueSec_sort: tempSystemData.trueSec\n                };\n            }else{\n                tempData.trueSec = {\n                    trueSec: '',\n                    trueSec_sort: tempSystemData.trueSec\n                };\n            }\n\n            // locked\n            if(tempSystemData.locked === 1){\n                tempData.locked = {\n                    locked: '<i class=\"fa fa-lock fa-lg fa-fw\"></i>',\n                    locked_sort: tempSystemData.locked\n                };\n            }else{\n                tempData.locked = {\n                    locked: '',\n                    locked_sort: 0\n                };\n            }\n\n            // updated\n            tempData.updated = tempSystemData.updated.updated;\n\n            // delete row\n            tempData.clear = '<i class=\"fa fa-close txt-color txt-color-redDarker\"></i>';\n\n            systemsData.push(tempData);\n        }\n\n        let systemsDataTable = systemTable.dataTable( {\n            pageLength: 20,\n            paging: true,\n            lengthMenu: [[5, 10, 20, 50, -1], [5, 10, 20, 50, 'All']],\n            ordering: true,\n            order: [[ 9, 'desc' ], [ 3, 'asc' ]],\n            autoWidth: false,\n            responsive: {\n                breakpoints: Init.breakpoints,\n                details: false\n            },\n            hover: false,\n            data: systemsData,\n            columnDefs: [],\n            language: {\n                emptyTable:  'Map is empty',\n                zeroRecords: 'No systems found',\n                lengthMenu:  'Show _MENU_ systems',\n                info:        'Showing _START_ to _END_ of _TOTAL_ systems'\n            },\n            columns: [\n                {\n                    title: 'type',\n                    width: '25px',\n                    className: ['min-desktop'].join(' '),\n                    data: 'type',\n                    render: {\n                        _: 'type',\n                        sort: 'type_sort'\n                    }\n                },{\n                    title: '',\n                    width: '1px',\n                    searchable: false,\n                    data: 'security',\n                    render: {\n                        _: 'security',\n                        sort: 'security_sort'\n                    }\n                },{\n                    title: 'sec',\n                    width: '18px',\n                    className: ['text-center', 'min-desktop'].join(' '),\n                    searchable: false,\n                    data: 'trueSec',\n                    render: {\n                        _: 'trueSec',\n                        sort: 'trueSec_sort'\n                    }\n                },{\n                    title: 'system',\n                    data: 'name'\n                },{\n                    title: 'alias',\n                    data: 'alias'\n                },{\n                    title: 'region',\n                    data: 'region'\n                },{\n                    title: '<i class=\"fa fa-square-o fa-lg\" title=\"system&nbsp;status\" data-toggle=\"tooltip\"></i>',\n                    width: '12px',\n                    searchable: false,\n                    data: 'status',\n                    render: {\n                        _: 'status',\n                        sort: 'status_sort'\n                    }\n                },{\n                    title: '<i class=\"fa fa-square fa-lg\" title=\"system&nbsp;effect\" data-toggle=\"tooltip\"></i>',\n                    width: '12px',\n                    className: 'text-center',\n                    searchable: false,\n                    data: 'effect',\n                    render: {\n                        _: 'effect',\n                        sort: 'effect_sort'\n                    }\n                },{\n                    title: 'static',\n                    width: '30px',\n                    data: 'static'\n                },{\n                    title: '<i class=\"fa fa-map-marker fa-lg\" title=\"your&nbsp;position\" data-toggle=\"tooltip\"></i>',\n                    width: '8px',\n                    searchable: false,\n                    data: 'position',\n                    render: {\n                        _: 'position',\n                        sort: 'position_sort'\n                    }\n                },{\n                    title: '<i class=\"fa fa-plane fa-lg\" title=\"active&nbsp;pilots\" data-toggle=\"tooltip\"></i>',\n                    width: '12px',\n                    className: 'text-center',\n                    searchable: false,\n                    data: 'userCount'\n                },{\n                    title: '<i class=\"fa fa-lock fa-lg\" title=\"system&nbsp;locked\" data-toggle=\"tooltip\"></i>',\n                    width: '10px',\n                    searchable: false,\n                    data: 'locked',\n                    render: {\n                        _: 'locked',\n                        sort: 'locked_sort'\n                    }\n                },{\n                    title: 'updated',\n                    width: '80px',\n                    searchable: false,\n                    className: ['text-right', config.tableCounterCellClass, 'min-desktop'].join(' '),\n                    data: 'updated',\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        $(cell).initTimestampCounter();\n\n                        // highlight cell\n                        let diff = new Date().getTime() - cellData * 1000;\n                        let dateDiff = new Date(diff);\n                        if(dateDiff.getUTCDate() > 1){\n                            $(cell).addClass('txt-color txt-color-warning');\n                        }\n                    }\n                },{\n                    title: '',\n                    orderable: false,\n                    searchable: false,\n                    width: '10px',\n                    className: ['text-center', config.tableActionCellClass].join(' '),\n                    data: 'clear',\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex) {\n                        let tempTableElement = this;\n\n                        let tempConfirmationSettings = confirmationSettings;\n                        tempConfirmationSettings.title = 'Delete system';\n                        tempConfirmationSettings.onConfirm = function(e, target){\n                            let deleteRowElement = $(target).parents('tr');\n\n                            let activeMap = Util.getMapModule().getActiveMap();\n                            let systemElement = $('#' + MapUtil.getSystemId(mapData.config.id, rowData.id) );\n\n                            if(systemElement.length){\n                                // trigger system delete event\n                                activeMap.trigger('pf:deleteSystems', [{\n                                    systems: [systemElement[0]],\n                                    callback: function(deletedSystems){\n                                        // callback function after ajax \"delete\" success\n                                        // check if system was deleted\n                                        if(deletedSystems.length === 1){\n                                            // remove table row\n                                            tempTableElement.DataTable().rows(deleteRowElement).remove().draw();\n\n                                            Util.showNotify({title: 'System deleted', text: rowData.name, type: 'success'});\n\n                                            // refresh connection table (connections might have changed) ==================\n                                            let connectionsElement = $('#' + config.mapInfoConnectionsId);\n                                            let mapDataNew = activeMap.getMapDataFromClient({forceData: true});\n\n                                            connectionsElement.loadConnectionInfoTable(mapDataNew);\n                                        }else{\n                                            // error\n                                            Util.showNotify({title: 'Failed to delete system', text: rowData.name, type: 'error'});\n                                        }\n                                    }\n                                }]);\n                            }\n                        };\n\n                        // init confirmation dialog\n                        $(cell).confirmation(tempConfirmationSettings);\n\n                    }\n                }\n            ]\n        });\n\n    };\n\n    /**\n     * loads connection info table into an element\n     * @param mapData\n     */\n    $.fn.loadConnectionInfoTable = function(mapData){\n        let connectionsElement = $(this);\n\n        connectionsElement.empty();\n\n        let connectionTable = $('<table>', {\n            class: ['compact', 'stripe', 'order-column', 'row-border', config.mapInfoTableClass].join(' ')\n        });\n        connectionsElement.append(connectionTable);\n\n        connectionsElement.showLoadingAnimation(config.loadingOptions);\n\n        // table init complete\n        connectionTable.on( 'init.dt', function () {\n            connectionsElement.hideLoadingAnimation();\n        });\n\n        // connections table ==========================================================================================\n\n        // prepare data for dataTables\n        let connectionData = [];\n        for(let j = 0; j < mapData.data.connections.length; j++){\n            let tempConnectionData = mapData.data.connections[j];\n\n            let tempConData = {};\n\n            tempConData.id = tempConnectionData.id;\n\n            tempConData.scope = {\n                scope: MapUtil.getScopeInfoForConnection(tempConnectionData.scope, 'label'),\n                scope_sort: tempConnectionData.scope\n            };\n\n            // source system name\n            tempConData.source = tempConnectionData.sourceName;\n\n            // connection\n            let connectionClasses = [];\n            for(let k = 0; k < tempConnectionData.type.length; k++){\n                connectionClasses.push( MapUtil.getConnectionInfo( tempConnectionData.type[k], 'cssClass') );\n\n            }\n\n            connectionClasses = connectionClasses.join(' ');\n\n            tempConData.connection = '<div class=\"pf-fake-connection ' + connectionClasses + '\"></div>';\n\n\n            tempConData.target = tempConnectionData.targetName;\n\n            tempConData.updated = tempConnectionData.updated;\n\n            tempConData.clear = '<i class=\"fa fa-close txt-color txt-color-redDarker\"></i>';\n\n            connectionData.push(tempConData);\n        }\n\n        let connectionDataTable = connectionTable.dataTable( {\n            pageLength: 20,\n            paging: true,\n            lengthMenu: [[5, 10, 20, 50, -1], [5, 10, 20, 50, 'All']],\n            ordering: true,\n            order: [ 0, 'desc' ],\n            autoWidth: false,\n            hover: false,\n            data: connectionData,\n            columnDefs: [],\n            language: {\n                emptyTable:  'No connections',\n                zeroRecords: 'No connections found',\n                lengthMenu:  'Show _MENU_ connections',\n                info:        'Showing _START_ to _END_ of _TOTAL_ connections'\n            },\n            columns: [\n                {\n                    title: 'scope',\n                    width: '50px',\n                    orderable: true,\n                    data: 'scope',\n                    render: {\n                        _: 'scope',\n                        sort: 'scope_sort'\n                    }\n                },{\n                    title: 'source system',\n                    data: 'source'\n                },{\n                    title: 'connection',\n                    width: '80px',\n                    className: 'text-center',\n                    orderable: false,\n                    searchable: false,\n                    data: 'connection'\n                }, {\n                    title: 'target system',\n                    data: 'target'\n                },{\n                    title: 'updated',\n                    width: '80px',\n                    searchable: false,\n                    className: ['text-right', config.tableCounterCellClass].join(' '),\n                    data: 'updated',\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        $(cell).initTimestampCounter();\n\n                        // highlight cell\n                        let diff = new Date().getTime() - cellData * 1000;\n                        let dateDiff = new Date(diff);\n                        if(dateDiff.getUTCDate() > 1){\n                            $(cell).addClass('txt-color txt-color-warning');\n                        }\n                    }\n                },{\n                    title: '',\n                    orderable: false,\n                    searchable: false,\n                    width: '10px',\n                    className: ['text-center', config.tableActionCellClass].join(' '),\n                    data: 'clear',\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex) {\n                        let tempTableElement = this;\n\n                        let tempConfirmationSettings = confirmationSettings;\n                        tempConfirmationSettings.title = 'Delete connection';\n                        tempConfirmationSettings.onConfirm = function(e, target){\n                            let deleteRowElement = $(target).parents('tr');\n\n                            // deleteSignatures(row);\n                            let connection = $().getConnectionById(mapData.config.id, rowData.id);\n\n                            $().deleteConnections([connection], function(){\n                                // callback function after ajax \"delete\" success\n                                // remove table row\n                                tempTableElement.DataTable().rows(deleteRowElement).remove().draw();\n                            });\n                        };\n\n                        // init confirmation dialog\n                        $(cell).confirmation(tempConfirmationSettings);\n                    }\n                }\n            ]\n        });\n    };\n\n    /**\n     * loads user info table into an element\n     * @param mapData\n     */\n    $.fn.loadUsersInfoTable = function(mapData){\n        let usersElement = $(this);\n\n        usersElement.empty();\n\n        let userTable = $('<table>', {\n            class: ['compact', 'stripe', 'order-column', 'row-border', config.mapInfoTableClass].join(' ')\n        });\n        usersElement.append(userTable);\n\n        usersElement.showLoadingAnimation(config.loadingOptions);\n\n        // table init complete\n        userTable.on( 'init.dt', function () {\n            usersElement.hideLoadingAnimation();\n\n            // init table tooltips\n            let tooltipElements = usersElement.find('[data-toggle=\"tooltip\"]');\n            tooltipElements.tooltip({\n                container: usersElement.parent()\n            });\n        });\n\n        let getIconForInformationWindow = () => {\n            return '<i class=\"fa fa-fw fa-id-card ' + config.tableActionCellIconClass + '\" title=\"open ingame\" data-toggle=\"tooltip\"></i>';\n        };\n\n        // users table ================================================================================================\n        // prepare users data for dataTables\n        let currentMapUserData = Util.getCurrentMapUserData( mapData.config.id );\n        let usersData = [];\n\n        if(\n            currentMapUserData &&\n            currentMapUserData.data &&\n            currentMapUserData.data.systems\n        ){\n            for(let i = 0; i < currentMapUserData.data.systems.length; i++){\n                let tempSystemUserData = currentMapUserData.data.systems[i];\n                for(let j = 0; j < tempSystemUserData.user.length; j++){\n                    usersData.push( tempSystemUserData.user[j] );\n                }\n            }\n        }\n\n        let userDataTable = userTable.dataTable( {\n            pageLength: 20,\n            paging: true,\n            lengthMenu: [[5, 10, 20, 50, -1], [5, 10, 20, 50, 'All']],\n            ordering: true,\n            order: [[ 3, 'asc' ]],\n            autoWidth: false,\n            hover: false,\n            data: usersData,\n            language: {\n                emptyTable:  'No active pilots',\n                zeroRecords: 'No active pilots found',\n                lengthMenu:  'Show _MENU_ pilots',\n                info:        'Showing _START_ to _END_ of _TOTAL_ pilots'\n            },\n            columnDefs: [\n                {\n                    targets: 0,\n                    title: '',\n                    width: '26px',\n                    orderable: false,\n                    searchable: false,\n                    className: ['pf-help-default', 'text-center', config.tableImageCellClass].join(' '),\n                    data: 'log.ship',\n                    render: {\n                        _: function(data, type, row, meta){\n                            let value = data;\n                            if(type === 'display'){\n                                value = '<img src=\"' + Init.url.ccpImageServer + 'Render/' + value.typeId + '_32.png\" title=\"' + value.typeName + '\" data-toggle=\"tooltip\" />';\n                            }\n                            return value;\n                        }\n                    }\n                },{\n                    targets: 1,\n                    title: 'ship name',\n                    width: '100px',\n                    orderable: true,\n                    searchable: true,\n                    data: 'log.ship',\n                    render: {\n                        _: function(data, type, row){\n                            let value = data.name;\n                            if(type === 'display'){\n                                value = '<div class=\"' + MapUtil.config.tableCellEllipsisClass + ' ' + MapUtil.config.tableCellEllipsis100Class + '\">' + data.name + '</div>';\n                            }\n                            return value;\n                        }\n                    }\n                },{\n                    targets: 2,\n                    title: '',\n                    width: '26px',\n                    orderable: false,\n                    searchable: false,\n                    className: [config.tableImageCellClass].join(' '),\n                    data: 'id',\n                    render: {\n                        _: function(data, type, row, meta){\n                            let value = data;\n                            if(type === 'display'){\n                                value = '<img src=\"' + Init.url.ccpImageServer + 'Character/' + value + '_32.jpg\" />';\n                            }\n                            return value;\n                        }\n                    }\n                },{\n                    targets: 3,\n                    title: 'pilot',\n                    orderable: true,\n                    searchable: true,\n                    className: [config.tableActionCellClass].join(' '),\n                    data: 'name',\n                    render: {\n                        _: function(data, type, row, meta){\n                            let value = data;\n                            if(type === 'display'){\n                                value += '&nbsp;' + getIconForInformationWindow();\n                            }\n                            return value;\n                        }\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        // open character information window (ingame)\n                        $(cell).on('click', { tableApi: this.DataTable() }, function(e) {\n                            let rowData = e.data.tableApi.row(this).data();\n                            Util.openIngameWindow(rowData.id);\n                        });\n                    }\n                },{\n                    targets: 4,\n                    title: '',\n                    width: '26px',\n                    orderable: false,\n                    searchable: false,\n                    className: [config.tableImageCellClass, config.tableImageSmallCellClass].join(' '),\n                    data: 'corporation',\n                    render: {\n                        _: function(data, type, row, meta){\n                            let value = data;\n                            if(type === 'display'){\n                                value = '<img src=\"' + Init.url.ccpImageServer + 'Corporation/' + value.id + '_32.png\" />';\n                            }\n                            return value;\n                        }\n                    }\n                },{\n                    targets: 5,\n                    title: 'corporation',\n                    orderable: true,\n                    searchable: true,\n                    className: [config.tableActionCellClass].join(' '),\n                    data: 'corporation',\n                    render: {\n                        _: function (data, type, row, meta) {\n                            let value = data.name;\n                            if(type === 'display'){\n                                value += '&nbsp;' + getIconForInformationWindow();\n                            }\n                            return value;\n                        }\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        // open character information window (ingame)\n                        $(cell).on('click', { tableApi: this.DataTable() }, function(e) {\n                            let cellData = e.data.tableApi.cell(this).data();\n                            Util.openIngameWindow(cellData.id);\n                        });\n                    }\n                },{\n                    targets: 6,\n                    title: 'system',\n                    orderable: true,\n                    searchable: true,\n                    data: 'log.system',\n                    render: {\n                        _: 'name',\n                        sort: 'name'\n                    }\n                },{\n                    targets: 7,\n                    title: 'station',\n                    orderable: true,\n                    searchable: true,\n                    data: 'log.station',\n                    render: {\n                        _: 'name',\n                        sort: 'name'\n                    }\n                }\n            ]\n        });\n\n    };\n\n    /**\n     * shows the map information modal dialog\n     * @param options\n     */\n    $.fn.showMapInfoDialog = function(options){\n        let activeMap = Util.getMapModule().getActiveMap();\n        let mapData = activeMap.getMapDataFromClient({forceData: true});\n\n        if(mapData !== false){\n            requirejs(['text!templates/dialog/map_info.html', 'mustache'], function(template, Mustache) {\n\n                let data = {\n                    dialogSummaryContainerId: config.dialogMapInfoSummaryId,\n                    dialogUsersContainerId: config.dialogMapInfoUsersId,\n                    dialogRefreshContainerId: config.dialogMapInfoRefreshId,\n                    dialogNavigationClass: config.dialogNavigationClass,\n                    mapInfoId: config.mapInfoId,\n                    mapInfoSystemsId: config.mapInfoSystemsId,\n                    mapInfoConnectionsId: config.mapInfoConnectionsId,\n                    mapInfoUsersId: config.mapInfoUsersId,\n\n                    // default open tab ----------\n                    openTabInformation: options.tab === 'information',\n                    openTabActivity: options.tab === 'activity'\n                };\n\n                let content = Mustache.render(template, data);\n\n                let mapInfoDialog = bootbox.dialog({\n                    title: 'Map information',\n                    message: content,\n                    size: 'large',\n                    buttons: {\n                        success: {\n                            label: 'close',\n                            className: 'btn-primary',\n                            callback: function() {\n                                $(mapInfoDialog).modal('hide');\n                            }\n                        }\n                    }\n                });\n\n                mapInfoDialog.on('shown.bs.modal', function(e) {\n                    // modal on open\n\n                    let mapElement = $('#' + config.mapInfoId);\n                    let systemsElement = $('#' + config.mapInfoSystemsId);\n                    let connectionsElement = $('#' + config.mapInfoConnectionsId);\n                    let usersElement = $('#' + config.mapInfoUsersId);\n\n\n                    // set refresh button observer\n                    $('#' + config.dialogMapInfoRefreshId).on('click', function(){\n                        let menuAction = $(this).attr('data-action');\n                        if(menuAction === 'refresh'){\n                            // get new map data\n                            let mapData = activeMap.getMapDataFromClient({forceData: true});\n\n                            mapElement.loadMapInfoData(mapData);\n                            systemsElement.loadSystemInfoTable(mapData);\n                            connectionsElement.loadConnectionInfoTable(mapData);\n                            usersElement.loadUsersInfoTable(mapData);\n                        }\n                    });\n\n                    // load map data\n                    mapElement.loadMapInfoData(mapData);\n\n                    // load system table\n                    systemsElement.loadSystemInfoTable(mapData);\n\n                    // load connection table\n                    connectionsElement.loadConnectionInfoTable(mapData);\n\n                    // load users table\n                    usersElement.loadUsersInfoTable(mapData);\n                });\n\n            });\n        }\n\n    };\n});\n",
    "/**\n *  user settings/share dialog\n */\n\ndefine('dialog/account_settings',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox'\n], function($, Init, Util, Render, bootbox) {\n    'use strict';\n\n    var config = {\n        // select character dialog\n        settingsDialogId: 'pf-settings-dialog',                                 // id for \"settings\" dialog\n        settingsAccountContainerId: 'pf-settings-dialog-account',               // id for the \"account\" container\n        settingsShareContainerId: 'pf-settings-dialog-share',                   // id for the \"share\" container\n        settingsCharacterContainerId: 'pf-settings-dialog-character',           // id for the \"character\" container\n\n        // captcha\n        captchaKeyUpdateAccount: 'SESSION.CAPTCHA.ACCOUNT.UPDATE',              // key for captcha reason\n        captchaImageWrapperId: 'pf-dialog-captcha-wrapper',                     // id for \"captcha image\" wrapper\n        captchaImageId: 'pf-dialog-captcha-image',                              // id for \"captcha image\"\n\n        loadingOptions: {                                                       // config for loading overlay\n            icon: {\n                size: 'fa-2x'\n            }\n        }\n    };\n\n    /**\n     * show \"register/settings\" dialog\n     * @returns {boolean}\n     */\n    $.fn.showSettingsDialog = function(){\n\n        // check if there are other dialogs open\n        var openDialogs = Util.getOpenDialogs();\n        if(openDialogs.length > 0){\n            return false;\n        }\n\n        requirejs(['text!templates/dialog/settings.html', 'mustache'], function(template, Mustache) {\n\n            var data = {\n                id: config.settingsDialogId,\n                settingsAccountContainerId: config.settingsAccountContainerId,\n                settingsShareContainerId: config.settingsShareContainerId,\n                settingsCharacterContainerId: config.settingsCharacterContainerId,\n                userData: Init.currentUserData,\n                captchaImageWrapperId: config.captchaImageWrapperId,\n                captchaImageId: config.captchaImageId,\n                formErrorContainerClass: Util.config.formErrorContainerClass,\n                ccpImageServer: Init.url.ccpImageServer\n            };\n\n            var content = Mustache.render(template, data);\n\n            var accountSettingsDialog = bootbox.dialog({\n                title: 'Account settings',\n                message: content,\n                buttons: {\n                    close: {\n                        label: 'cancel',\n                        className: 'btn-default'\n                    },\n                    success: {\n                        label: '<i class=\"fa fa-check fa-fw\"></i>&nbsp;save',\n                        className: 'btn-success',\n                        callback: function() {\n\n                            // get the current active form\n                            var form = $('#' + config.settingsDialogId).find('form').filter(':visible');\n\n                            // validate form\n                            form.validator('validate');\n\n                            // check whether the form is valid\n                            var formValid = form.isValidForm();\n\n                            if(formValid === true){\n                                var tabFormValues = form.getFormValues();\n\n                                // send Tab data and store values\n                                var requestData = {\n                                    formData: tabFormValues\n                                };\n\n                                accountSettingsDialog.find('.modal-content').showLoadingAnimation();\n\n                                $.ajax({\n                                    type: 'POST',\n                                    url: Init.path.saveUserConfig,\n                                    data: requestData,\n                                    dataType: 'json'\n                                }).done(function(responseData){\n                                    accountSettingsDialog.find('.modal-content').hideLoadingAnimation();\n\n                                    // set new captcha for any request\n                                    // captcha is required for sensitive data (not for all data)\n                                    if(\n                                        responseData.error &&\n                                        responseData.error.length > 0\n                                    ){\n                                        form.showFormMessage(responseData.error);\n\n                                        $('#' + config.captchaImageWrapperId).showCaptchaImage(config.captchaKeyUpdateAccount, function(){\n                                            $('#captcha').resetFormFields();\n                                        });\n                                    }else{\n                                        // store new/updated user data -> update head\n                                        if(responseData.userData){\n                                            Util.setCurrentUserData(responseData.userData);\n                                        }\n\n                                        form.find('.alert').velocity('transition.slideDownOut',{\n                                            duration: 500,\n                                            complete: function(){\n                                                $('#' + config.captchaImageWrapperId).showCaptchaImage(config.captchaKeyUpdateAccount, function(){\n                                                    $('#captcha').resetFormFields();\n                                                });\n                                            }\n                                        });\n\n                                        Util.showNotify({title: 'Account saved', type: 'success'});\n\n                                        // close dialog/menu\n                                        $(document).trigger('pf:closeMenu', [{}]);\n                                        accountSettingsDialog.modal('hide');\n                                    }\n\n                                }).fail(function( jqXHR, status, error) {\n                                    accountSettingsDialog.find('.modal-content').hideLoadingAnimation();\n\n                                    var reason = status + ' ' + error;\n                                    Util.showNotify({title: jqXHR.status + ': saveAccountSettings', text: reason, type: 'error'});\n\n                                    // set new captcha for any request\n                                    // captcha is required for sensitive data (not for all)\n                                    $('#' + config.captchaImageWrapperId).showCaptchaImage(config.captchaKeyUpdateAccount, function(){\n                                        $('#captcha').resetFormFields();\n                                    });\n\n                                    // check for DB errors\n                                    if(jqXHR.status === 500){\n\n                                        if(jqXHR.responseText){\n                                            var errorObj = $.parseJSON(jqXHR.responseText);\n\n                                            if(\n                                                errorObj.error &&\n                                                errorObj.error.length > 0\n                                            ){\n                                                form.showFormMessage(errorObj.error);\n                                            }\n                                        }\n                                    }\n\n                                    $(document).setProgramStatus('problem');\n\n                                });\n                            }\n\n                            return false;\n                        }\n                    }\n                }\n            });\n\n            // after modal is shown =======================================================================\n            accountSettingsDialog.on('shown.bs.modal', function(e) {\n\n                var dialogElement = $(this);\n                var form = dialogElement.find('form');\n\n                // request captcha image and show\n                var captchaImageWrapperContainer = $('#' + config.captchaImageWrapperId);\n                captchaImageWrapperContainer.showCaptchaImage(config.captchaKeyUpdateAccount);\n\n                // init captcha refresh button\n                captchaImageWrapperContainer.find('i').on('click', function(){\n                    captchaImageWrapperContainer.showCaptchaImage(config.captchaKeyUpdateAccount);\n                });\n\n\n                // init dialog tooltips\n                dialogElement.initTooltips();\n\n                form.initFormValidation();\n            });\n\n            // events for tab change\n            accountSettingsDialog.find('.navbar a').on('shown.bs.tab', function(e){\n\n                // init \"toggle\" switches on current active tab\n                accountSettingsDialog.find( $(this).attr('href') ).find('input[data-toggle=\"toggle\"][type=\"checkbox\"]').bootstrapToggle({\n                    on: '<i class=\"fa fa-fw fa-check\"></i>&nbsp;Enable',\n                    off: 'Disable&nbsp;<i class=\"fa fa-fw fa-ban\"></i>',\n                    onstyle: 'success',\n                    offstyle: 'warning',\n                    width: 90,\n                    height: 30\n                });\n\n            });\n\n        });\n    };\n});\n",
    "/**\n *  map manual dialog\n */\n\ndefine('dialog/manual',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n], function($, Init, Util, Render, bootbox) {\n\n    'use strict';\n\n    let config = {\n        // global dialog\n        dialogNavigationClass: 'pf-dialog-navigation-list',                     // class for dialog navigation bar\n        dialogNavigationListItemClass: 'pf-dialog-navigation-list-item',        // class for map manual li main navigation elements\n\n        // map manual dialog\n        mapManualScrollspyId: 'pf-manual-scrollspy'                             // id for map manual scrollspy\n    };\n\n    /**\n     * shows the map manual modal dialog\n     */\n    $.fn.showMapManual = function(){\n\n        requirejs(['text!templates/dialog/map_manual.html', 'mustache'], function(template, Mustache) {\n\n            let data = {\n                dialogNavigationClass: config.dialogNavigationClass,\n                dialogNavLiClass: config.dialogNavigationListItemClass,\n                scrollspyId: config.mapManualScrollspyId,\n                pieChartClass : Init.classes.pieChart.pieChartMapCounterClass,\n                mapCounterClass : Init.classes.pieChart.pieChartMapCounterClass\n            };\n\n            let content = Mustache.render(template, data);\n\n            // show dialog\n            let mapManualDialog = bootbox.dialog({\n                title: 'Manual',\n                message: content,\n                size: 'large',\n                buttons: {\n                    success: {\n                        label: 'close',\n                        className: 'btn-default',\n                        callback: function() {\n                            $(mapManualDialog).modal('hide');\n                        }\n                    }\n                },\n                show: true\n            });\n\n            // modal offset top\n            let modalOffsetTop = 200;\n\n            // disable on scroll event\n            let disableOnScrollEvent = false;\n\n            // scroll breakpoints\n            let scrolLBreakpointElements = null;\n            // scroll navigation links\n            let scrollNavLiElements = null;\n\n            mapManualDialog.on('shown.bs.modal', function(e) {\n                // modal on open\n                scrolLBreakpointElements = $('.pf-manual-scroll-break');\n                scrollNavLiElements = $('.' + config.dialogNavigationListItemClass);\n            });\n\n            let scrollspyElement = $('#' + config.mapManualScrollspyId);\n\n            let whileScrolling = function(){\n\n                if(disableOnScrollEvent === false){\n                    for(let i = 0; i < scrolLBreakpointElements.length; i++){\n                        let offset = $(scrolLBreakpointElements[i]).offset().top;\n\n                        if( (offset - modalOffsetTop) > 0){\n\n                            if(! $( scrollNavLiElements[i]).hasClass('active')){\n                                // remove all active classes\n                                scrollNavLiElements.removeClass('active');\n                                // remove focus on links\n                                scrollNavLiElements.find('a').blur();\n\n                                $( scrollNavLiElements[i]).addClass('active');\n                            }\n                            break;\n                        }\n                    }\n                }\n            };\n\n            // init scrollbar\n            scrollspyElement.mCustomScrollbar({\n                axis: 'y',\n                theme: 'light-thick',\n                scrollInertia: 200,\n                autoExpandScrollbar: false,\n                scrollButtons:{\n                    scrollAmount: 30,\n                    enable: true\n                },\n                advanced: {\n                    updateOnBrowserResize: true,\n                    updateOnContentResize: true\n                },\n                callbacks:{\n                    onInit: function(){\n                        // init fake-map update counter\n                        scrollspyElement.find('.' + data.mapCounterClass).initMapUpdateCounter();\n\n                        // set navigation button observer\n                        let mainNavigationLinks = $('.' + config.dialogNavigationClass).find('a');\n                        // text anchor links\n                        let subNavigationLinks = scrollspyElement.find('a[data-target]');\n\n                        let navigationLinks = mainNavigationLinks.add(subNavigationLinks);\n\n                        navigationLinks.on('click', function(e){\n                            e.preventDefault();\n\n                            disableOnScrollEvent = true;\n\n                            // scroll to anchor\n                            scrollspyElement.mCustomScrollbar('scrollTo', $(this).attr('data-target'));\n\n                            let mainNavigationLiElement = $(this).parent('.' + config.dialogNavigationListItemClass);\n\n\n                            whileScrolling();\n\n                            // if link is a main navigation link (not an anchor link)\n\n                            if(mainNavigationLiElement.length > 0){\n                                // remove all active classes\n                                scrollNavLiElements.removeClass('active');\n\n                                // set new active class\n                                $(this).parent().addClass('active');\n                            }\n\n                        });\n\n                    },\n                    onScroll: function(){\n                        disableOnScrollEvent = false;\n\n                        whileScrolling();\n                    },\n                    whileScrolling: whileScrolling\n                },\n                mouseWheel:{\n                    enable: true,\n                    scrollAmount: 200,\n                    axis: 'y',\n                    preventDefault: true // do not scroll parent at the end\n                },\n                scrollbarPosition: 'outsite',\n                autoDraggerLength: true\n            });\n\n        });\n\n    };\n\n});\n",
    "define('app/key',[\n    'jquery'\n], function($) {\n    'use strict';\n\n    let allCombo = {\n        // global -------------------------------------------------------------------------------------------\n        tabReload: {\n            group:      'global',\n            label:      'Close open dialog',\n            keyNames:   ['ESC']\n        },\n        // signature ----------------------------------------------------------------------------------------\n        signatureSelect: {\n            group:      'signatures',\n            label:      'Select multiple rows',\n            keyNames:   ['CONTROL', 'CLICK']\n        }\n    };\n\n    let allEvents = {\n        // global -------------------------------------------------------------------------------------------\n        tabReload: {\n            group:      'global',\n            label:      'Reload tab',\n            keyNames:   ['CONTROL', 'R']\n        },\n        signaturePaste: {\n            group:      'global',\n            label:      'Paste signatures from clipboard',\n            keyNames:   ['CONTROL', 'V'],\n            alias:  'paste'\n        },\n\n        // map ----------------------------------------------------------------------------------------------\n        mapSystemAdd: {\n            group:      'map',\n            label:      'Add new system',\n            keyNames:   ['CONTROL', 'S']\n        },\n        mapSystemsSelect: {\n            group:      'map',\n            label:      'Select all systems',\n            keyNames:   ['CONTROL', 'A']\n        },\n        mapSystemsDelete: {\n            group:      'map',\n            label:      'Delete selected systems',\n            keyNames:   ['CONTROL', 'D']\n        }\n    };\n\n    let groups = {\n        global: {\n            label: 'Global'\n        },\n        map: {\n          label: 'Map'\n        },\n        signatures: {\n            label: 'Signature'\n        }\n    };\n\n    /**\n     * enables some console.log() information\n     * @type {boolean}\n     */\n    let debug                                   = false;\n\n    /**\n     * check interval for \"new\" active keys\n     * @type {number}\n     */\n    let keyWatchPeriod                          = 100;\n\n    /**\n     * DOM data key for an element that lists all active events (comma separated)\n     * @type {string}\n     */\n    let dataKeyEvents                           = 'key-events';\n\n    /**\n     * DOM data key prefix whether domElement that holds the trigger needs to be \"focused\"\n     * @type {string}\n     */\n    let dataKeyFocusPrefix                      = 'key-focus-';\n\n    /**\n     * DOM data key that holds the callback function for that element\n     * @type {string}\n     */\n    let dataKeyCallbackPrefix                   = 'key-callback-';\n\n    /**\n     * check if module is initiated\n     */\n    let isInit                                  = false;\n\n    /**\n     * global key map holds all active (hold down) keys\n     * @type {{}}\n     */\n    let map                                     = {};\n\n    /**\n     * show debug information in console\n     * @param msg\n     * @param element\n     */\n    let debugWatchKey = (msg, element) => {\n        if(debug){\n            console.info(msg, element);\n        }\n    };\n\n    /**\n     * get all active (hold down) keys at this moment\n     * @returns {Array}\n     */\n    let getActiveKeys = () => {\n        return Object.keys(map);\n    };\n\n    /**\n     * callback function that compares two arrays\n     * @param element\n     * @param index\n     * @param array\n     */\n    let compareKeyLists = function(element, index, array) {\n        return this.find(x => x === element);\n    };\n\n    /**\n     * get event names that COULD lead to a \"full\" event (not all keys pressed yet)\n     * @param keyList\n     * @returns {Array}\n     */\n    let checkEventNames = (keyList) => {\n        let incompleteEvents = [];\n        for(let event in allEvents){\n            // check if \"some\" or \"all\" keys are pressed for en event\n            if( keyList.every(compareKeyLists, allEvents[event].keyNames) ){\n                incompleteEvents.push(event);\n            }\n        }\n\n        return incompleteEvents;\n    };\n\n    /**\n     * get all event names\n     * @returns {Array}\n     */\n    let getAllEventNames = () => {\n        let eventNames = [];\n        for(let event in allEvents){\n            eventNames.push(event);\n        }\n        return eventNames;\n    };\n\n    /**\n     * get all event names that matches a given keyList\n     * @param keyList\n     * @param checkEvents\n     * @returns {Array}\n     */\n    let getMatchingEventNames = (keyList, checkEvents) => {\n        checkEvents = checkEvents || getAllEventNames();\n        let events = [];\n\n        for(let event of checkEvents){\n            // check if both key arrays are equal\n            if(\n                allEvents[event].keyNames.every(compareKeyLists, keyList) &&\n                keyList.every(compareKeyLists, allEvents[event].keyNames)\n            ){\n                events.push(event);\n            }\n        }\n\n        return events;\n    };\n\n    /**\n     * init global keyWatch interval and check for event trigger (hotKey combinations)\n     */\n    let init = () => {\n        if( !isInit ){\n            // key watch loop -------------------------------------------------------------------------------\n            let prevActiveKeys = [];\n\n            /**\n             *\n             * @param e\n             * @returns {number} 0: no keys hold, 1: invalid match, 2: partial match, 3: match, 4: alias match, 5: event(s) fired\n             */\n            let checkForEvents = (e) => {\n                let status = 0;\n\n                // get all pressed keys\n                let activeKeys = getActiveKeys();\n                debugWatchKey('activeKeys', activeKeys);\n\n                // check if \"active\" keys has changes since last loop\n                if(activeKeys.length){\n                    // check for \"incomplete\" events (not all keys pressed yet)\n                    let incompleteEvents = checkEventNames(activeKeys);\n                    if(incompleteEvents.length){\n                        // \"some\" event keys pressed OR \"all\" keys pressed\n                        status = 2;\n\n                        // check if key combo matches a registered (valid) event\n                        let events = getMatchingEventNames(activeKeys, incompleteEvents);\n                        if(events.length){\n                            status = 3;\n                            // check events if there are attached elements to it\n                            events.forEach((event) => {\n                                // skip events that has an alias and should not be triggered by key combo\n                                if( !allEvents[event].alias ){\n                                    if(allEvents[event].elements){\n                                        // search for callback functions attached to each element\n                                        allEvents[event].elements.forEach((domElement) => {\n                                            let domElementObj = $(domElement);\n                                            // check if event on this element requires active \"focus\"\n                                            let optFocus = domElementObj.data(dataKeyFocusPrefix + event);\n\n                                            if( !(\n                                                    optFocus &&\n                                                    document.activeElement !== domElement\n                                                )\n                                            ){\n                                                // execute callback if valid\n                                                let callback = domElementObj.data(dataKeyCallbackPrefix + event);\n                                                if(typeof callback === 'function'){\n                                                    status = 5;\n                                                    callback.call(domElement, domElement, e);\n                                                }\n                                            }\n                                        });\n                                    }\n                                }else{\n                                    status = 4;\n                                }\n\n                            });\n                        }\n                    }else{\n                        // invalid combo\n                        status = 1;\n                    }\n                }\n\n                // store current keys for next loop check\n                prevActiveKeys = activeKeys;\n\n                return status;\n            };\n\n            // set key-events -------------------------------------------------------------------------------\n            let evKeyDown = (e) => {\n                // exclude some HTML Tags from watcher\n                if(\n                    e.target.tagName !== 'INPUT' &&\n                    e.target.tagName !== 'TEXTAREA'\n                ){\n                    let key = e.key.toUpperCase();\n                    map[key] = true;\n\n                    // check for any shortcut combo that triggers an event\n                    let status = checkForEvents(e);\n\n                    if(\n                        status === 2 ||\n                        status === 3 ||\n                        status === 5\n                    ){\n                        // prevent SOME browser default actions -> we want 'Pathfinder' shortcuts :)\n                        e.preventDefault();\n                    }\n                }\n            };\n\n            let evKeyUp = (e) => {\n                let key = e.key.toUpperCase();\n\n                if(map.hasOwnProperty(key)){\n                    delete map[key];\n                }\n            };\n\n            let container = $('body');\n            container.on('keydown', evKeyDown);\n            container.on('keyup', evKeyUp);\n\n            // global dom remove listener -------------------------------------------------------------------\n            // -> check whether the removed element had an event listener active and removes them.\n            document.body.addEventListener ('DOMNodeRemoved', function(e){\n                if(typeof e.target.getAttribute === 'function'){\n                    let eventNames = e.target.getAttribute(dataKeyEvents);\n                    if(eventNames){\n                        eventNames.split(',').forEach((event) => {\n                            let index = allEvents[event].elements.indexOf(e.target);\n                            if(index > -1){\n                                // remove element from event list\n                                allEvents[event].elements.splice(index, 1);\n                            }\n                        });\n                    }\n                }\n            }, false);\n\n            isInit = true;\n        }\n    };\n\n    /**\n     * add a new \"shortCut\" combination (event) to a DOM element\n     * @param event\n     * @param callback\n     * @param options\n     */\n    $.fn.watchKey = function(event, callback, options){\n\n        // default options for keyWatcher on elements\n        let defaultOptions = {\n            focus:              false,      // element must be focused (active)\n            bubbling:           true        // elements deeper (children) in the DOM can bubble the event up\n        };\n\n        let customOptions = $.extend(true, {}, defaultOptions, options );\n\n        return this.each((i, domElement) => {\n            let element = $(domElement);\n\n            // init global key events\n            init();\n\n            // check if event is \"valid\" (exists) and is not already set for this element\n            let validEvent = false;\n            if(allEvents[event].elements){\n                if(allEvents[event].elements.indexOf(domElement) === -1){\n                    validEvent = true;\n                }else{\n                    console.warn('Event \"' + event + '\" already set');\n                }\n            }else{\n                validEvent = true;\n                allEvents[event].elements = [];\n            }\n\n            if(validEvent){\n                // store callback options to dom element\n                if(customOptions.focus){\n                    let dataAttr = dataKeyFocusPrefix + event;\n                    element.data(dataAttr, true);\n\n                    // check if DOM element has \"tabindex\" attr -> required to manually set focus() to it\n                    if(!domElement.hasAttribute('tabindex')){\n                        domElement.setAttribute('tabindex', 0);\n                    }\n\n                    // element requires a \"focus\" listener\n                    element.off('click.focusKeyWatcher').on('click.focusKeyWatcher', function(e){\n                        if(\n                            e.target === this ||\n                            customOptions.bubbling\n                        ){\n                            this.focus();\n                            debugWatchKey('focus set:', this);\n                        }\n                    });\n                }\n\n                // check if is key combo has a native JS event that should be used instead\n                if(allEvents[event].alias){\n                    element.on(allEvents[event].alias, callback);\n                }else{\n                    // store callback function to dom element\n                    let dataAttr = dataKeyCallbackPrefix + event;\n                    element.data(dataAttr, callback);\n                }\n\n                // add eventName to dom element as attribute ----------------------------------------------------\n                let currentEventNames = element.attr(dataKeyEvents) ?  element.attr(dataKeyEvents).split(',') : [];\n                currentEventNames.push(event);\n                element.attr(dataKeyEvents, currentEventNames.join(','));\n\n                // store domElement to event (global)\n                allEvents[event].elements.push(domElement);\n\n                debugWatchKey('new event \"' + event + '\" registered', domElement);\n            }\n        });\n    };\n\n    /**\n     * get a array with all available shortcut groups and their events\n     * @returns {Array}\n     */\n    let getGroupedShortcuts = () => {\n        let result = $.extend(true, {}, groups);\n\n        // add combos and events to groups\n        let allEntries = [allCombo, allEvents];\n        for(let i = 0; i < allEntries.length; i++){\n            for(let event in allEntries[i]){\n                let data = allEntries[i][event];\n\n                //format keyNames for UI\n                let keyNames = data.keyNames.map( (key) => {\n                    if(key === 'CONTROL'){\n                        key = 'ctrl';\n                    }\n                    return key;\n                });\n\n                let newEventData = {\n                    label:      data.label,\n                    keyNames:   keyNames\n                };\n\n                if( result[data.group].events ){\n                    result[data.group].events.push(newEventData);\n                }else{\n                    result[data.group].events = [newEventData];\n                }\n            }\n        }\n\n        // convert obj into array\n        result = Object.values(result);\n\n        return result;\n    };\n\n    return {\n        getGroupedShortcuts: getGroupedShortcuts\n    };\n});\n",
    "/**\n *  shortcuts dialog\n */\n\ndefine('dialog/shortcuts',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n    'app/key',\n], function($, Init, Util, Render, bootbox, Key) {\n\n    'use strict';\n\n    let config = {\n        // map dialog\n        shortcutsDialogId: 'pf-shortcuts-dialog',                                       // id for shortcuts dialog\n    };\n\n    /**\n     * shows the map manual modal dialog\n     */\n    $.fn.showShortcutsDialog = function(){\n        requirejs(['text!templates/dialog/shortcuts.html', 'mustache'], function(template, Mustache){\n\n            let data = {\n                id:                     config.shortcutsDialogId,\n                shortcuts:              Key.getGroupedShortcuts()\n            };\n\n            let content = Mustache.render(template, data);\n\n            // show dialog\n            let shortcutsDialog = bootbox.dialog({\n                title: 'Keyboard Shortcuts',\n                message: content,\n                size: 'large',\n                buttons: {\n                    success: {\n                        label: 'close',\n                        className: 'btn-default'\n                    }\n                },\n                show: true\n            });\n\n        });\n    };\n});\n",
    "/**\n *  map settings dialogs\n */\n\ndefine('dialog/map_settings',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n    'app/map/util'\n], function($, Init, Util, Render, bootbox, MapUtil) {\n    'use strict';\n\n    let config = {\n        // map dialog\n        newMapDialogId: 'pf-map-dialog',                                                // id for map settings dialog\n        dialogMapCreateContainerId: 'pf-map-dialog-create',                             // id for the \"new map\" container\n        dialogMapEditContainerId: 'pf-map-dialog-edit',                                 // id for the \"edit\" container\n        dialogMapSettingsContainerId: 'pf-map-dialog-settings',                         // id for the \"settings\" container\n        dialogMapDownloadContainerId: 'pf-map-dialog-download',                         // id for the \"download\" container\n\n        deleteExpiredConnectionsId: 'pf-map-dialog-delete-connections-expired',         // id for \"deleteExpiredConnections\" checkbox\n        deleteEolConnectionsId: 'pf-map-dialog-delete-connections-eol',                 // id for \"deleteEOLConnections\" checkbox\n        persistentAliasesId: 'pf-map-dialog-persistent-aliases',                        // id for \"persistentAliases\" checkbox\n\n        characterSelectId: 'pf-map-dialog-character-select',                            // id for \"character\" select\n        corporationSelectId: 'pf-map-dialog-corporation-select',                        // id for \"corporation\" select\n        allianceSelectId: 'pf-map-dialog-alliance-select',                              // id for \"alliance\" select\n\n        dialogMapExportFormId: 'pf-map-dialog-form-export',                             // id for \"export\" form\n        dialogMapImportFormId: 'pf-map-dialog-form-import',                             // id for \"import\" form\n\n        buttonExportId: 'pf-map-dialog-button-export',                                  // id for \"export\" button\n        buttonImportId: 'pf-map-dialog-button-import',                                  // id for \"import\" button\n\n        fieldExportId: 'pf-map-filename-export',                                        // id for \"export\" filename field\n        fieldImportId: 'pf-map-filename-import',                                        // id for \"import\" filename field\n        dialogMapImportInfoId: 'pf-map-import-container',                               // id for \"info\" container\n        dragDropElementClass: 'pf-form-dropzone'                                        // class for \"drag&drop\" zone\n    };\n\n    /**\n     * format a given string into a valid filename\n     * @param filename\n     * @returns {string}\n     */\n    let formatFilename = function(filename){\n        filename = filename.replace(/[^a-zA-Z0-9]/g,'_');\n\n        let nowDate = new Date();\n        let filenameDate = nowDate.toISOString().slice(0,10).replace(/-/g, '_');\n\n        return  (filename + '_' + filenameDate).replace(/__/g,'_');\n    };\n\n    /**\n     * shows the add/edit map dialog\n     * @param mapData\n     * @param options\n     */\n    $.fn.showMapSettingsDialog = function(mapData, options){\n\n        // check if dialog is already open\n        let mapInfoDialogElement = $('#' + config.newMapDialogId);\n        if(!mapInfoDialogElement.is(':visible')){\n\n            requirejs([\n                'text!templates/dialog/map.html',\n                'text!templates/form/map_settings.html',\n                'mustache'\n            ], function(templateMapDialog, templateMapSettings, Mustache) {\n\n                let dialogTitle = 'Map settings';\n\n                // if there are no maps -> hide settings tab\n                let hideSettingsTab = false;\n                let hideEditTab = false;\n                let hideDownloadTab = false;\n\n                if(mapData === false){\n                    hideSettingsTab = true;\n                    hideEditTab = true;\n                    hideDownloadTab = true;\n                }\n\n                // available map \"types\" for a new or existing map\n                let mapTypes = MapUtil.getMapTypes(true);\n\n                let data = {\n                    scope: MapUtil.getMapScopes(),\n                    type: mapTypes,\n                    icon: MapUtil.getMapIcons(),\n                    formErrorContainerClass: Util.config.formErrorContainerClass,\n                    formWarningContainerClass: Util.config.formWarningContainerClass,\n                    formInfoContainerClass: Util.config.formInfoContainerClass\n                };\n\n                // render \"new map\" tab content -------------------------------------------\n                let contentNewMap = Mustache.render(templateMapSettings, data);\n\n                // render \"edit map\" tab content ------------------------------------------\n                let contentEditMap = Mustache.render(templateMapSettings, data);\n                contentEditMap = $(contentEditMap);\n\n                // current map access info\n                let accessCharacter = [];\n                let accessCorporation = [];\n                let accessAlliance = [];\n                let deleteExpiredConnections = true;\n                let deleteEolConnections = true;\n                let persistentAliases = true;\n\n                if(mapData !== false){\n                    // set current map information\n                    contentEditMap.find('input[name=\"id\"]').val( mapData.config.id );\n                    contentEditMap.find('select[name=\"icon\"]').val( mapData.config.icon );\n                    contentEditMap.find('input[name=\"name\"]').val( mapData.config.name );\n                    contentEditMap.find('select[name=\"scopeId\"]').val( mapData.config.scope.id );\n                    contentEditMap.find('select[name=\"typeId\"]').val( mapData.config.type.id );\n\n                    accessCharacter = mapData.config.access.character;\n                    accessCorporation = mapData.config.access.corporation;\n                    accessAlliance = mapData.config.access.alliance;\n\n                    deleteExpiredConnections = mapData.config.deleteExpiredConnections;\n                    deleteEolConnections = mapData.config.deleteEolConnections;\n                    persistentAliases = mapData.config.persistentAliases;\n                }\n\n                // render main dialog -----------------------------------------------------\n                data = {\n                    id: config.newMapDialogId,\n                    mapData: mapData,\n                    type: mapTypes,\n\n                    // message container\n                    formErrorContainerClass: Util.config.formErrorContainerClass,\n                    formWarningContainerClass: Util.config.formWarningContainerClass,\n                    formInfoContainerClass: Util.config.formInfoContainerClass,\n\n                    // default open tab ----------\n                    openTabNew: options.tab === 'new',\n                    openTabEdit: options.tab === 'edit',\n                    openTabSettings: options.tab === 'settings',\n                    openTabDownload: options.tab === 'download',\n\n                    dialogMapCreateContainerId: config.dialogMapCreateContainerId,\n                    dialogMapEditContainerId: config.dialogMapEditContainerId,\n                    dialogMapSettingsContainerId: config.dialogMapSettingsContainerId,\n                    dialogMapDownloadContainerId: config.dialogMapDownloadContainerId,\n\n                    hideEditTab: hideEditTab,\n                    hideSettingsTab: hideSettingsTab,\n                    hideDownloadTab: hideDownloadTab,\n\n                    // settings tab --------------\n                    deleteExpiredConnectionsId : config.deleteExpiredConnectionsId,\n                    deleteEolConnectionsId : config.deleteEolConnectionsId,\n                    persistentAliasesId : config.persistentAliasesId,\n                    deleteExpiredConnections: deleteExpiredConnections,\n                    deleteEolConnections: deleteEolConnections,\n                    persistentAliases: persistentAliases,\n\n                    characterSelectId: config.characterSelectId,\n                    corporationSelectId: config.corporationSelectId,\n                    allianceSelectId: config.allianceSelectId,\n\n                    // map access objects --------\n                    accessCharacter: accessCharacter,\n                    accessCorporation: accessCorporation,\n                    accessAlliance: accessAlliance,\n\n                    // access limitations --------\n                    maxCharacter: Init.mapTypes.private.defaultConfig.max_shared,\n                    maxCorporation: Init.mapTypes.corporation.defaultConfig.max_shared,\n                    maxAlliance: Init.mapTypes.alliance.defaultConfig.max_shared,\n\n                    // download tab --------------\n                    dialogMapExportFormId: config.dialogMapExportFormId,\n                    dialogMapImportFormId: config.dialogMapImportFormId,\n                    buttonExportId: config.buttonExportId,\n                    buttonImportId: config.buttonImportId,\n                    fieldExportId: config.fieldExportId,\n                    fieldImportId: config.fieldImportId,\n                    dialogMapImportInfoId: config.dialogMapImportInfoId,\n\n                    formatFilename: function(){\n                        // format filename from \"map name\" (initial)\n                        return function (mapName, render) {\n                            let filename = render(mapName);\n                            return formatFilename(filename);\n                        };\n                    }\n                };\n\n                let contentDialog = Mustache.render(templateMapDialog, data);\n                contentDialog = $(contentDialog);\n\n                // set tab content\n                $('#' + config.dialogMapCreateContainerId, contentDialog).html(contentNewMap);\n                $('#' + config.dialogMapEditContainerId, contentDialog).html(contentEditMap);\n\n                let mapInfoDialog = bootbox.dialog({\n                    title: dialogTitle,\n                    message: contentDialog,\n                    buttons: {\n                        close: {\n                            label: 'cancel',\n                            className: 'btn-default'\n                        },\n                        success: {\n                            label: '<i class=\"fa fa-check fa-fw\"></i>&nbsp;save',\n                            className: 'btn-success',\n                            callback: function() {\n\n                                // get the current active form\n                                let form = $('#' + config.newMapDialogId).find('form').filter(':visible');\n\n                                // validate form\n                                form.validator('validate');\n\n                                // validate select2 fields (settings tab)\n                                form.find('select').each(function(){\n                                    let selectField = $(this);\n                                    let selectValues = selectField.val();\n\n                                    if(selectValues.length > 0){\n                                        selectField.parents('.form-group').removeClass('has-error');\n                                    }else{\n                                        selectField.parents('.form-group').addClass('has-error');\n                                    }\n                                });\n\n                                // check whether the form is valid\n                                let formValid = form.isValidForm();\n\n                                if(formValid === true){\n\n                                    // lock dialog\n                                    let dialogContent = mapInfoDialog.find('.modal-content');\n                                    dialogContent.showLoadingAnimation();\n\n                                    // get form data\n                                    let formData = form.getFormValues();\n\n                                    // checkbox fix -> settings tab\n                                    if( form.find('#' + config.deleteExpiredConnectionsId).length ){\n                                        formData.deleteExpiredConnections = formData.hasOwnProperty('deleteExpiredConnections') ? parseInt( formData.deleteExpiredConnections ) : 0;\n                                    }\n                                    if( form.find('#' + config.deleteEolConnectionsId).length ){\n                                        formData.deleteEolConnections = formData.hasOwnProperty('deleteEolConnections') ? parseInt( formData.deleteEolConnections ) : 0;\n                                    }\n                                    if( form.find('#' + config.persistentAliasesId).length ){\n                                        formData.persistentAliases = formData.hasOwnProperty('persistentAliases') ? parseInt( formData.persistentAliases ) : 0;\n                                    }\n\n                                    let requestData = {formData: formData};\n\n                                    $.ajax({\n                                        type: 'POST',\n                                        url: Init.path.saveMap,\n                                        data: requestData,\n                                        dataType: 'json'\n                                    }).done(function(responseData){\n\n                                        dialogContent.hideLoadingAnimation();\n\n                                        if(responseData.error.length){\n                                            form.showFormMessage(responseData.error);\n                                        }else{\n                                            // success\n                                            Util.showNotify({title: dialogTitle, text: 'Map: ' + responseData.mapData.mapData.name, type: 'success'});\n\n                                            // update map-tab Element\n                                            let tabLinkElement = Util.getMapModule().getMapTabElements(responseData.mapData.mapData.id);\n\n                                            if(tabLinkElement.length === 1){\n                                                tabLinkElement.updateTabData(responseData.mapData.mapData);\n                                            }\n\n                                            $(mapInfoDialog).modal('hide');\n                                            $(document).trigger('pf:closeMenu', [{}]);\n                                        }\n                                    }).fail(function( jqXHR, status, error) {\n                                        let reason = status + ' ' + error;\n                                        Util.showNotify({title: jqXHR.status + ': saveMap', text: reason, type: 'warning'});\n                                        $(document).setProgramStatus('problem');\n\n                                    });\n                                }\n\n                                return false;\n                            }\n                        }\n                    }\n                });\n\n\n                // after modal is shown =======================================================================\n                mapInfoDialog.on('shown.bs.modal', function(e){\n                    mapInfoDialog.initTooltips();\n\n                    // prevent \"disabled\" tabs from being clicked... \"bootstrap\" bugFix...\n                    mapInfoDialog.find('.navbar a[data-toggle=tab]').on('click', function(e){\n                        if ($(this).hasClass('disabled')){\n                            e.preventDefault();\n                            return false;\n                        }\n                    });\n\n                    // set form validator\n                    mapInfoDialog.find('form').initFormValidation();\n\n                    // show form messages -------------------------------------\n                    // get current active form(tab)\n                    let form = $('#' + config.newMapDialogId).find('form').filter(':visible');\n\n                    form.showFormMessage([{type: 'info', message: 'Creating new maps or change settings may take a few seconds'}]);\n\n                    if(mapData === false){\n                        // no map data found (probably new user\n                        form.showFormMessage([{type: 'warning', message: 'No maps found. Create a new map before you can start'}]);\n                    }\n\n                    // init select fields in case \"settings\" tab is open by default\n                    if(options.tab === 'settings'){\n                        initSettingsSelectFields(mapInfoDialog);\n                    }\n\n                    // init \"download tab\" ========================================================================\n                    let downloadTabElement = mapInfoDialog.find('#' + config.dialogMapDownloadContainerId);\n                    if(downloadTabElement.length){\n                        // tab exists\n\n                        // export map data ------------------------------------------------------------------------\n                        downloadTabElement.find('#' + config.buttonExportId).on('click', { mapData: mapData }, function(e){\n\n                            let exportForm = $('#' + config.dialogMapExportFormId);\n                            let validExportForm = exportForm.isValidForm();\n\n                            if(validExportForm){\n                                let mapElement = Util.getMapModule().getActiveMap();\n\n                                if(mapElement){\n                                    // IMPORTANT: Get map data from client (NOT from global mapData which is available in here)\n                                    // -> This excludes some data (e.g. wh statics)\n                                    // -> Bring export inline with main map toggle requests\n                                    let exportMapData = mapElement.getMapDataFromClient({\n                                        forceData: true,\n                                        getAll: true\n                                    });\n\n                                    // set map data right before download\n                                    $(this).setExportMapData(exportMapData);\n\n                                    // disable button\n                                    $(this).attr('disabled', true);\n                                }else{\n                                    console.error('Map not found');\n                                }\n                            }else{\n                                e.preventDefault();\n                            }\n                        });\n\n                        // import map data ------------------------------------------------------------------------\n                        // check if \"FileReader\" API is supported\n                        let importFormElement = downloadTabElement.find('#' + config.dialogMapImportFormId);\n                        if(window.File && window.FileReader && window.FileList && window.Blob){\n\n                            // show file info in UI\n                            downloadTabElement.find('#' + config.fieldImportId).on('change', function(e){\n                                e.stopPropagation();\n                                e.preventDefault();\n\n                                let infoContainerElement = importFormElement.find('#' + config.dialogMapImportInfoId);\n                                infoContainerElement.hide().empty();\n                                importFormElement.hideFormMessage('all');\n\n                                let output = [];\n                                let files = e.target.files;\n\n                                for (let i = 0, f; !!(f = files[i]); i++) {\n                                    output.push(( i + 1 ) + '. file: ' + f.name + ' - ' +\n                                        f.size + ' bytes; last modified: ' +\n                                        f.lastModifiedDate.toLocaleDateString() );\n                                }\n\n                                if(output.length > 0){\n                                    infoContainerElement.html( output ).show();\n                                }\n\n                                importFormElement.validator('validate');\n                            });\n\n                            // drag&drop\n                            let importData = {};\n                            importData.mapData = [];\n                            let files = [];\n                            let filesCount = 0;\n                            let filesCountFail = 0;\n\n                            // onLoad for FileReader API\n                            let readerOnLoad = function(readEvent) {\n\n                                // get file content\n                                try{\n                                    importData.mapData.push( JSON.parse( readEvent.target.result ) );\n                                }catch(error){\n                                    filesCountFail++;\n                                    importFormElement.showFormMessage([{type: 'error', message: 'File can not be parsed'}]);\n                                }\n\n                                // start import when all files are parsed\n                                if(\n                                    filesCount === files.length &&\n                                    filesCountFail === 0\n                                ){\n                                    importMaps(importData);\n                                }\n                            };\n\n                            let handleDragOver = function(dragEvent) {\n                                dragEvent.stopPropagation();\n                                dragEvent.preventDefault();\n                                dragEvent.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\n                            };\n\n                            let handleFileSelect = function(evt){\n                                evt.stopPropagation();\n                                evt.preventDefault();\n\n                                importData = importFormElement.getFormValues();\n                                importData.mapData = [];\n                                filesCount = 0;\n                                filesCountFail = 0;\n\n                                files = evt.dataTransfer.files; // FileList object.\n\n                                for (let file; !!(file = files[filesCount]); filesCount++){\n                                    let reader = new FileReader();\n                                    reader.onload = readerOnLoad;\n                                    reader.readAsText(file);\n                                }\n                            };\n\n                            let dropZone = downloadTabElement.find('.' + config.dragDropElementClass);\n                            dropZone[0].addEventListener('dragover', handleDragOver, false);\n                            dropZone[0].addEventListener('drop', handleFileSelect, false);\n\n                            // import \"button\"\n                            downloadTabElement.find('#' + config.buttonImportId).on('click', function(e) {\n\n                                importFormElement.validator('validate');\n                                let validImportForm = importFormElement.isValidForm();\n\n                                if(validImportForm){\n                                    importData = importFormElement.getFormValues();\n                                    importData.mapData = [];\n\n                                    let fileElement = downloadTabElement.find('#' + config.fieldImportId);\n                                    files = fileElement[0].files;\n                                    filesCount = 0;\n                                    filesCountFail = 0;\n\n                                    for (let file; !!(file = files[filesCount]); filesCount++){\n                                        let reader = new FileReader();\n                                        reader.onload = readerOnLoad;\n                                        reader.readAsText(file);\n                                    }\n                                }\n                            });\n                        }else{\n                            importFormElement.showFormMessage([{type: 'error', message: 'The File APIs are not fully supported in this browser.'}]);\n                        }\n                    }\n                });\n\n                // events for tab change\n                mapInfoDialog.find('.navbar a').on('shown.bs.tab', function(e){\n                    let selectElementCharacter = mapInfoDialog.find('#' + config.characterSelectId);\n                    let selectElementCorporation = mapInfoDialog.find('#' + config.corporationSelectId);\n                    let selectElementAlliance = mapInfoDialog.find('#' + config.allianceSelectId);\n\n                    if($(e.target).attr('href') === '#' + config.dialogMapSettingsContainerId){\n                        // \"settings\" tab\n                        initSettingsSelectFields(mapInfoDialog);\n                    }else{\n                        if( $(selectElementCharacter).data('select2') !== undefined ){\n                            $(selectElementCharacter).select2('destroy');\n                        }\n\n                        if( $(selectElementCorporation).data('select2') !== undefined ){\n                            $(selectElementCorporation).select2('destroy');\n                        }\n\n                        if( $(selectElementAlliance).data('select2') !== undefined ){\n                            $(selectElementAlliance).select2('destroy');\n                        }\n                    }\n\n                    // no \"save\" dialog  button on \"in/export\" tab\n                    if($(e.target).attr('href') === '#' + config.dialogMapDownloadContainerId){\n                        mapInfoDialog.find('button.btn-success').hide();\n                    }else{\n                        mapInfoDialog.find('button.btn-success').show();\n                    }\n                });\n            });\n        }\n    };\n\n    /**\n     * import new map(s) data\n     * @param importData\n     */\n    let importMaps = function(importData){\n\n        let importForm = $('#' + config.dialogMapImportFormId);\n        importForm.hideFormMessage('all');\n\n        // lock dialog\n        let dialogContent = importForm.parents('.modal-content');\n        dialogContent.showLoadingAnimation();\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.importMap,\n            data: importData,\n            dataType: 'json'\n        }).done(function(responseData){\n            if(responseData.error.length){\n                //   form.showFormMessage(responseData.error);\n                importForm.showFormMessage(responseData.error);\n            }else{\n                // success\n                if(responseData.warning.length){\n                    importForm.showFormMessage(responseData.warning);\n                }\n\n                Util.showNotify({title: 'Import finished', text: 'Map(s) imported', type: 'success'});\n            }\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            Util.showNotify({title: jqXHR.status + ': importMap', text: reason, type: 'error'});\n        }).always(function() {\n            importForm.find('input, select').resetFormFields().trigger('change');\n            dialogContent.hideLoadingAnimation();\n        });\n    };\n\n    /**\n     * set json map data for export to an element (e.g. <a>-Tag or button) for download\n     * @param mapData\n     * @returns {*}\n     */\n    $.fn.setExportMapData = function(mapData){\n\n        let fieldExport = $('#' + config.fieldExportId);\n        let filename = '';\n        let mapDataEncoded = '';\n\n        if(fieldExport.length){\n            filename = fieldExport.val();\n\n            if(filename.length > 0){\n                mapDataEncoded = 'text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify( mapData ));\n            }\n        }\n\n        return this.each(function(){\n            let exportButton = $(this);\n            exportButton.attr('href', 'data:' + mapDataEncoded);\n            exportButton.attr('download', filename + '.json');\n        });\n    };\n\n\n    /**\n     * init select2 fields within the settings dialog\n     * @param mapInfoDialog\n     */\n    let initSettingsSelectFields = function(mapInfoDialog){\n\n        let selectElementCharacter = mapInfoDialog.find('#' + config.characterSelectId);\n        let selectElementCorporation = mapInfoDialog.find('#' + config.corporationSelectId);\n        let selectElementAlliance = mapInfoDialog.find('#' + config.allianceSelectId);\n\n        // init character select live search\n        selectElementCharacter.initAccessSelect({\n            type: 'character',\n            maxSelectionLength: Init.mapTypes.private.defaultConfig.max_shared\n        });\n\n        // init corporation select live search\n        selectElementCorporation.initAccessSelect({\n            type: 'corporation',\n            maxSelectionLength: Init.mapTypes.corporation.defaultConfig.max_shared\n        });\n\n        // init alliance select live search\n        selectElementAlliance.initAccessSelect({\n            type: 'alliance',\n            maxSelectionLength: Init.mapTypes.alliance.defaultConfig.max_shared\n        });\n    };\n\n    /**\n     * shows the delete map Dialog\n     * @param mapData\n     */\n    $.fn.showDeleteMapDialog = function(mapData){\n\n        let mapName = mapData.config.name;\n\n        let mapDeleteDialog = bootbox.confirm('Delete map \"' + mapName + '\"?', function(result){\n            if(result){\n                let data = {mapData: mapData.config};\n\n                $.ajax({\n                    type: 'POST',\n                    url: Init.path.deleteMap,\n                    data: data,\n                    dataType: 'json'\n                }).done(function(data){\n                    Util.showNotify({title: 'Map deleted', text: 'Map: ' + mapName, type: 'success'});\n                }).fail(function( jqXHR, status, error) {\n                    let reason = status + ' ' + error;\n                    Util.showNotify({title: jqXHR.status + ': deleteMap', text: reason, type: 'warning'});\n                    $(document).setProgramStatus('problem');\n                }).always(function() {\n                    $(mapDeleteDialog).modal('hide');\n                });\n\n                return false;\n            }\n        });\n\n    };\n\n\n});\n",
    "/**\n *  system effects dialog\n */\n\n\ndefine('dialog/system_effects',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n    'app/map/util'\n], function($, Init, Util, Render, bootbox, MapUtil) {\n    'use strict';\n\n    let config = {\n        // system effect dialog\n        systemEffectDialogWrapperClass: 'pf-system-effect-dialog-wrapper'       // class for system effect dialog\n    };\n\n    let cache = {\n        systemEffectDialog: false                                               // system effect info dialog\n    };\n\n    /**\n     * show system effect dialog\n     */\n    $.fn.showSystemEffectInfoDialog = function(){\n\n        // cache table structure\n        if(!cache.systemEffectDialog){\n\n            let dialogWrapperElement = $('<div>', {\n                class: config.systemEffectDialogWrapperClass\n            });\n\n            let systemEffectData = Util.getSystemEffectData();\n\n            $.each( systemEffectData.wh, function( effectName, effectData ) {\n\n                let table = $('<table>', {\n                    class: ['table', 'table-condensed'].join(' ')\n                });\n\n                let tbody = $('<tbody>');\n                let thead = $('<thead>');\n\n                let rows = [];\n\n                // get formatted system effect name\n                let systemEffectName = MapUtil.getEffectInfoForSystem(effectName, 'name');\n                let systemEffectClass = MapUtil.getEffectInfoForSystem(effectName, 'class');\n\n                $.each( effectData, function( areaId, areaData ) {\n\n                    let systemType = 'C' + areaId;\n                    let securityClass = Util.getSecurityClassForSystem( systemType );\n\n                    if(areaId === '1'){\n                        rows.push( $('<tr>') );\n                        thead.append( rows[0] );\n\n                        rows[0].append(\n                            $('<td>').html( '&nbsp;&nbsp;' + systemEffectName).prepend(\n                                $('<i>', {\n                                    class: ['fa', 'fa-square', 'fa-fw', systemEffectClass].join(' ')\n                                })\n                            )\n                        );\n                    }\n\n                    rows[0].append( $('<td>', {\n                        class: ['text-right', 'col-xs-1', securityClass].join(' ')\n                    }).text( systemType ));\n\n                    $.each( areaData, function( i, data ) {\n\n                        if(areaId === '1'){\n                            rows.push( $('<tr>') );\n                            tbody.append(rows[i + 1]);\n\n                            // add label\n                            rows[i + 1].append( $('<td>').text( data.effect ));\n                        }\n\n\n                        rows[i + 1].append( $('<td>', {\n                            class: 'text-right'\n                        }).text( data.value ));\n                    });\n\n\n                });\n\n                dialogWrapperElement.append( table.append( thead ).append( tbody ) );\n\n                cache.systemEffectDialog = dialogWrapperElement;\n            });\n        }\n\n        bootbox.dialog({\n            title: 'System effect information',\n            message: cache.systemEffectDialog\n        });\n\n    };\n});\n",
    "/**\n *  jump info dialog\n */\n\ndefine('dialog/jump_info',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n], function($, Init, Util, Render, bootbox) {\n\n    'use strict';\n\n    let config = {\n        // jump info dialog\n        jumpInfoDialogClass: 'pf-jump-info-dialog'                              // class for jump info dialog\n    };\n\n    /**\n     * show jump info dialog\n     */\n    $.fn.showJumpInfoDialog = function(){\n\n        requirejs(['text!templates/dialog/jump_info.html', 'mustache'], function(template, Mustache) {\n            let data = {};\n            let content = Mustache.render(template, data);\n\n            let signatureReaderDialog = bootbox.dialog({\n                className: config.jumpInfoDialogClass,\n                title: 'Wormhole jump information',\n                message: content\n            });\n\n        });\n\n    };\n});\n",
    "/**\n * delete account dialog\n */\n\ndefine('dialog/delete_account',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'bootbox'\n], function($, Init, Util, bootbox) {\n    'use strict';\n\n    var config = {\n        // global dialog\n        deleteAccountId: 'pf-dialog-delete-account',                            // dialog id\n\n        // captcha\n        captchaKeyDeleteAccount: 'SESSION.CAPTCHA.ACCOUNT.DELETE',              // key for captcha reason\n        captchaImageWrapperId: 'pf-dialog-captcha-wrapper'                      // id for \"captcha image\" wrapper\n    };\n\n    /**\n     * shows delete account dialog\n     */\n    $.fn.showDeleteAccountDialog = function(){\n\n\n        requirejs(['text!templates/dialog/delete_account.html', 'mustache'], function(template, Mustache) {\n\n            var data = {\n                deleteAccountId: config.deleteAccountId,\n                userData: Util.getCurrentUserData(),\n                captchaImageWrapperId: config.captchaImageWrapperId,\n                formErrorContainerClass: Util.config.formErrorContainerClass\n            };\n\n            var content = Mustache.render(template, data);\n\n            var deleteAccountDialog = bootbox.dialog({\n                title: 'Delete account',\n                message: content,\n                buttons: {\n                    close: {\n                        label: 'cancel',\n                        className: 'btn-default'\n                    },\n                    success: {\n                        label: '<i class=\"fa fa-user-times fa-fw\"></i>&nbsp;delete account',\n                        className: 'btn-danger',\n                        callback: function() {\n                            var dialogElement = $(this);\n                            var form = dialogElement.find('form');\n\n                            // validate form\n                            form.validator('validate');\n                            var formValid = form.isValidForm();\n\n                            if(formValid){\n\n                                var formValues = form.getFormValues();\n\n                                if(! $.isEmptyObject(formValues) ){\n                                    // send Tab data and store values\n                                    var requestData = {\n                                        formData: formValues\n                                    };\n\n                                    dialogElement.find('.modal-content').showLoadingAnimation();\n\n                                    $.ajax({\n                                        type: 'POST',\n                                        url: Init.path.deleteAccount,\n                                        data: requestData,\n                                        dataType: 'json'\n                                    }).done(function(responseData){\n                                        dialogElement.find('.modal-content').hideLoadingAnimation();\n\n                                        if(responseData.reroute !== undefined){\n                                            Util.redirect(responseData.reroute, []);\n                                        }else if(\n                                            responseData.error &&\n                                            responseData.error.length > 0\n                                        ){\n                                            form.showFormMessage(responseData.error);\n\n                                            $('#' + config.captchaImageWrapperId).showCaptchaImage(config.captchaKeyDeleteAccount, function(){\n                                                form.find('[name=\"captcha\"]').resetFormFields();\n                                            });\n                                        }\n\n                                    }).fail(function( jqXHR, status, error) {\n                                        dialogElement.find('.modal-content').hideLoadingAnimation();\n\n                                        var reason = status + ' ' + error;\n                                        Util.showNotify({title: jqXHR.status + ': deleteAccount', text: reason, type: 'error'});\n\n                                    });\n                                }\n                            }\n\n                            return false;\n                        }\n                    }\n                }\n            });\n\n            // after modal is shown =======================================================================\n            deleteAccountDialog.on('shown.bs.modal', function(e) {\n                // request captcha image and show\n                $('#' + config.captchaImageWrapperId).showCaptchaImage(config.captchaKeyDeleteAccount);\n            });\n\n        });\n\n    };\n});\n",
    "/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/camoconnell/lazy-line-painter\n * http://www.camoconnell.com\n *\n * Licensed under the MIT license.\n *\n */\n(function(e){var g={init:function(a){return this.each(function(){var b=e(this),c=b.data(\"lazyLinePainter\");b.addClass(\"lazy-line\");if(!c){var c=e.extend({width:null,height:null,strokeWidth:2,strokeColor:\"#000\",strokeOverColor:null,strokeCap:\"round\",strokeJoin:\"round\",strokeOpacity:1,arrowEnd:\"none\",onComplete:null,onStart:null,delay:null,overrideKey:null,drawSequential:!0,speedMultiplier:1,reverse:!1,responsive:!1},a),d=c.overrideKey?c.overrideKey:b.attr(\"id\").replace(\"#\",\"\"),f=c.svgData[d].dimensions.width,\nl=c.svgData[d].dimensions.height;c.svgData=c.svgData[d].strokepath;null===c.width&&(c.width=f);null===c.height&&(c.height=l);c.responsive||b.css({width:c.width,height:c.height});d=\"0 0 \"+f+\" \"+l;f=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");f.setAttributeNS(null,\"viewBox\",d);f.setAttribute(\"xmlns\",\"http://www.w3.org/2000/svg\");c.svg=e(f);b.append(c.svg);b.data(\"lazyLinePainter\",c)}})},paint:function(){return this.each(function(){var a=e(this).data(\"lazyLinePainter\"),b=function(){a.paths=\n[];a.longestDuration=0;for(var b=a.playhead=0,d=0,f=0,d=0;d<a.svgData.length;d++)b=a.svgData[d].duration*a.speedMultiplier,f+=b;for(d=0;d<a.svgData.length;d++){var e=m(a,d),h=e.getTotalLength();e.style.strokeDasharray=h+\" \"+h;e.style.strokeDashoffset=h;e.style.display=\"block\";e.getBoundingClientRect();b=a.svgData[d].duration*a.speedMultiplier;b>a.longestDuration&&(a.longestDuration=b);var g;g=a.reverse?f-=b:a.playhead;a.paths.push({duration:b,drawStartTime:g,path:e,length:h});a.playhead+=b}a.totalDuration=\na.drawSequential?a.playhead:a.longestDuration;a.rAF=requestAnimationFrame(function(b){k(b,a)});if(null!==a.onStart)a.onStart()};null===a.delay?b():setTimeout(b,a.delay)})},pauseResume:function(){return this.each(function(){var a=e(this).data(\"lazyLinePainter\");a.paused?(a.paused=!1,requestAnimationFrame(function(b){n(b,a)})):(a.paused=!0,cancelAnimationFrame(a.rAF))})},erase:function(){return this.each(function(){var a=e(this).data(\"lazyLinePainter\");a.startTime=null;a.elapsedTime=null;cancelAnimationFrame(a.rAF);\na.svg.empty()})},destroy:function(){return this.each(function(){var a=e(this);a.removeData(\"lazyLinePainter\");a.remove()})}},n=function(a,b){b.startTime=a-b.elapsedTime;requestAnimationFrame(function(a){k(a,b)})},k=function(a,b){b.startTime||(b.startTime=a);b.elapsedTime=a-b.startTime;for(var c=0;c<b.paths.length;c++){var d;b.drawSequential?(d=b.elapsedTime-b.paths[c].drawStartTime,0>d&&(d=0)):d=b.elapsedTime;d<b.paths[c].duration&&0<d?(d=d/b.paths[c].duration*b.paths[c].length,b.paths[c].path.style.strokeDashoffset=\nb.reverse||b.svgData[c].reverse?-b.paths[c].length+d:b.paths[c].length-d):d>b.paths[c].duration&&(b.paths[c].path.style.strokeDashoffset=0)}if(b.elapsedTime<b.totalDuration)b.rAF=requestAnimationFrame(function(a){k(a,b)});else if(null!==b.onComplete)b.onComplete()},m=function(a,b){var c=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\"),d=e(c);a.svg.append(d);d.attr(p(a,a.svgData[b]));return c},p=function(a,b){return{d:b.path,stroke:b.strokeColor?b.strokeColor:a.strokeColor,\"fill-opacity\":0,\n\"stroke-opacity\":b.strokeOpacity?b.strokeOpacity:a.strokeOpacity,\"stroke-width\":b.strokeWidth?b.strokeWidth:a.strokeWidth,\"stroke-linecap\":b.strokeCap?b.strokeCap:a.strokeCap,\"stroke-linejoin\":b.strokeJoin?b.strokeJoin:a.strokeJoin}};e.fn.lazylinepainter=function(a){if(g[a])return g[a].apply(this,Array.prototype.slice.call(arguments,1));if(\"object\"!==typeof a&&a)console.log(\"opps - issue finding method\");else return g.init.apply(this,arguments)}})(jQuery);\ndefine(\"lazylinepainter\", [\"jquery\",\"bootstrap\"], function(){});\n\n",
    "/**\n * Logo\n */\n\ndefine('app/ui/logo',[\n    'jquery',\n    'lazylinepainter'\n], function($) {\n\n    'use strict';\n\n    let config = {\n\n        staticLogoId: 'pf-static-logo-svg',                                     // id for \"static\" logo\n\n        logoPartTopRightClass: 'logo-ploygon-top-right',                        // class for logo part \"top right\"\n        logoPartBottomLeftClass: 'logo-ploygon-bottom-left',                    // class for logo part \"bottom left\"\n        logoPartBottomRightClass: 'logo-ploygon-bottom-right',                  // class for logo part \"bottom right\"\n        logoPartTopLeftClass: 'logo-ploygon-top-left'\n    };\n\n\n    /**\n     * draws the pathfinder logo to an element and add some animation features\n     * @param callback\n     * @param enableHover\n     */\n    $.fn.drawLogo = function(callback, enableHover){\n        let canvasElement = $(this);\n\n        let pathObj = {\n            logo: {\n                strokepath: [\n                    {\n                        path: 'M195.9 9.6 226.9 297.1 354.2 365 196.2 9.8 ',\n                        strokeColor: '#477372',\n                        duration: 1600\n                    },\n                    {\n                        path: 'M1.7 361.3 73.9 284.9 178.6 286.7 2.2 361.4 ',\n                        strokeColor: '#5cb85c',\n                        duration: 1000\n                    },\n                    {\n                        path: 'M192.9 286.7 121.2 318.6 335.6 363.5 193.4 286.7 ',\n                        strokeColor: '#375959',\n                        duration: 900\n                    },\n                    {\n                        path: 'M202.8 141.9 0.2 352.6 189.1 0.8 202.7 141.3 ',\n                        strokeColor: '#63676a',\n                        duration: 1500\n                    }\n                ],\n                dimensions: {\n                    width: 355,\n                    height: 366\n                }\n            }\n        };\n\n        // load Logo svg\n        requirejs(['text!templates/ui/logo.html', 'mustache'], function(template, Mustache) {\n            let logoData = {\n                staticLogoId: config.staticLogoId,\n                logoPartTopRightClass: config.logoPartTopRightClass,\n                logoPartBottomLeftClass: config.logoPartBottomLeftClass,\n                logoPartBottomRightClass: config.logoPartBottomRightClass,\n                logoPartTopLeftClass: config.logoPartTopLeftClass\n            };\n\n            let logoContent = Mustache.render(template, logoData);\n\n            canvasElement.html(logoContent);\n\n            // draw the logo\n            canvasElement.lazylinepainter(\n                {\n                    svgData: pathObj,\n                    strokeWidth: 2,\n                    drawSequential: false,\n                    delay: 300,\n                    overrideKey: 'logo',\n                    strokeJoin: 'bevel',\n                    onComplete: function(){\n\n                        // hide lines\n                        canvasElement.find('svg:not(#' + config.staticLogoId + ')').velocity({\n                            opacity: 0\n                        },{\n                            delay: 100\n                        });\n\n                        // show full logo\n                        canvasElement.find('#' + config.staticLogoId + '').velocity({\n                            opacity: 1\n                        },{\n                            delay: 100,\n                            duration: 200,\n                            complete: function(){\n\n                                // execute callback\n                                if(typeof callback === 'function'){\n                                    callback();\n                                }\n\n                                // init logo animation\n                                if(enableHover === true){\n                                    let logoElements = $('#' + config.staticLogoId + ' path');\n\n                                    let animate = [];\n                                    logoElements.on('mouseover', function(e){\n                                        let currentLogoElement = $(e.target);\n                                        let currentLogoElementIndex = logoElements.index(currentLogoElement);\n\n                                        let animationXValue = currentLogoElement.attr('data-animationX');\n                                        let animationYValue = currentLogoElement.attr('data-animationY');\n\n                                        let animationConfig = {};\n                                        animationConfig.opacity = [1, 1];\n                                        animationConfig.translateZ = [0, 0];\n                                        animationConfig.translateX = [animationXValue, 0 ];\n                                        animationConfig.translateY = [animationYValue, 0];\n\n                                        if(animate[currentLogoElementIndex] !== false){\n                                            $(this).velocity(animationConfig,{\n                                                duration: 120,\n                                                begin: function(){\n                                                    animate[currentLogoElementIndex] = false;\n                                                }\n                                            }).velocity('reverse',{\n                                                delay: 240,\n                                                complete: function(){\n                                                    animate[currentLogoElementIndex] = true;\n                                                }\n                                            });\n                                        }\n\n                                    });\n                                }\n\n\n                            }\n                        });\n                    }\n                }).lazylinepainter('paint');\n        });\n    };\n\n});\n",
    "/**\n *  credits dialog\n */\n\ndefine('dialog/credit',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n    'app/ui/logo'\n], function($, Init, Util, Render, bootbox) {\n    'use strict';\n\n    var config = {\n        // jump info dialog\n        creditsDialogClass: 'pf-credits-dialog',                                // class for credits dialog\n        creditsDialogLogoContainerId: 'pf-logo-container'                       // id for logo element\n    };\n\n    /**\n     * show jump info dialog\n     */\n    $.fn.showCreditsDialog = function(callback, enableHover){\n\n        requirejs(['text!templates/dialog/credit.html', 'mustache'], function(template, Mustache) {\n\n            var data = {\n                logoContainerId: config.creditsDialogLogoContainerId,\n                version: Util.getVersion()\n            };\n\n            var content = Mustache.render(template, data);\n\n            var creditDialog = bootbox.dialog({\n                className: config.creditsDialogClass,\n                title: 'Licence',\n                message: content\n            });\n\n            // after modal is shown =======================================================================\n            creditDialog.on('shown.bs.modal', function(e) {\n\n                // load Logo svg\n                creditDialog.find('#' + config.creditsDialogLogoContainerId).drawLogo(callback, enableHover);\n            });\n\n        });\n\n    };\n});\n",
    "/*! X-editable - v1.5.1 \n* In-place editing with Twitter Bootstrap, jQuery UI or pure jQuery\n* http://github.com/vitalets/x-editable\n* Copyright (c) 2013 Vitaliy Potapov; Licensed MIT */\n!function(a){\"use strict\";var b=function(b,c){this.options=a.extend({},a.fn.editableform.defaults,c),this.$div=a(b),this.options.scope||(this.options.scope=this)};b.prototype={constructor:b,initInput:function(){this.input=this.options.input,this.value=this.input.str2value(this.options.value),this.input.prerender()},initTemplate:function(){this.$form=a(a.fn.editableform.template)},initButtons:function(){var b=this.$form.find(\".editable-buttons\");b.append(a.fn.editableform.buttons),\"bottom\"===this.options.showbuttons&&b.addClass(\"editable-buttons-bottom\")},render:function(){this.$loading=a(a.fn.editableform.loading),this.$div.empty().append(this.$loading),this.initTemplate(),this.options.showbuttons?this.initButtons():this.$form.find(\".editable-buttons\").remove(),this.showLoading(),this.isSaving=!1,this.$div.triggerHandler(\"rendering\"),this.initInput(),this.$form.find(\"div.editable-input\").append(this.input.$tpl),this.$div.append(this.$form),a.when(this.input.render()).then(a.proxy(function(){if(this.options.showbuttons||this.input.autosubmit(),this.$form.find(\".editable-cancel\").click(a.proxy(this.cancel,this)),this.input.error)this.error(this.input.error),this.$form.find(\".editable-submit\").attr(\"disabled\",!0),this.input.$input.attr(\"disabled\",!0),this.$form.submit(function(a){a.preventDefault()});else{this.error(!1),this.input.$input.removeAttr(\"disabled\"),this.$form.find(\".editable-submit\").removeAttr(\"disabled\");var b=null===this.value||void 0===this.value||\"\"===this.value?this.options.defaultValue:this.value;this.input.value2input(b),this.$form.submit(a.proxy(this.submit,this))}this.$div.triggerHandler(\"rendered\"),this.showForm(),this.input.postrender&&this.input.postrender()},this))},cancel:function(){this.$div.triggerHandler(\"cancel\")},showLoading:function(){var a,b;this.$form?(a=this.$form.outerWidth(),b=this.$form.outerHeight(),a&&this.$loading.width(a),b&&this.$loading.height(b),this.$form.hide()):(a=this.$loading.parent().width(),a&&this.$loading.width(a)),this.$loading.show()},showForm:function(a){this.$loading.hide(),this.$form.show(),a!==!1&&this.input.activate(),this.$div.triggerHandler(\"show\")},error:function(b){var c,d=this.$form.find(\".control-group\"),e=this.$form.find(\".editable-error-block\");if(b===!1)d.removeClass(a.fn.editableform.errorGroupClass),e.removeClass(a.fn.editableform.errorBlockClass).empty().hide();else{if(b){c=(\"\"+b).split(\"\\n\");for(var f=0;f<c.length;f++)c[f]=a(\"<div>\").text(c[f]).html();b=c.join(\"<br>\")}d.addClass(a.fn.editableform.errorGroupClass),e.addClass(a.fn.editableform.errorBlockClass).html(b).show()}},submit:function(b){b.stopPropagation(),b.preventDefault();var c=this.input.input2value(),d=this.validate(c);if(\"object\"===a.type(d)&&void 0!==d.newValue){if(c=d.newValue,this.input.value2input(c),\"string\"==typeof d.msg)return this.error(d.msg),this.showForm(),void 0}else if(d)return this.error(d),this.showForm(),void 0;if(!this.options.savenochange&&this.input.value2str(c)==this.input.value2str(this.value))return this.$div.triggerHandler(\"nochange\"),void 0;var e=this.input.value2submit(c);this.isSaving=!0,a.when(this.save(e)).done(a.proxy(function(a){this.isSaving=!1;var b=\"function\"==typeof this.options.success?this.options.success.call(this.options.scope,a,c):null;return b===!1?(this.error(!1),this.showForm(!1),void 0):\"string\"==typeof b?(this.error(b),this.showForm(),void 0):(b&&\"object\"==typeof b&&b.hasOwnProperty(\"newValue\")&&(c=b.newValue),this.error(!1),this.value=c,this.$div.triggerHandler(\"save\",{newValue:c,submitValue:e,response:a}),void 0)},this)).fail(a.proxy(function(a){this.isSaving=!1;var b;b=\"function\"==typeof this.options.error?this.options.error.call(this.options.scope,a,c):\"string\"==typeof a?a:a.responseText||a.statusText||\"Unknown error!\",this.error(b),this.showForm()},this))},save:function(b){this.options.pk=a.fn.editableutils.tryParseJson(this.options.pk,!0);var c,d=\"function\"==typeof this.options.pk?this.options.pk.call(this.options.scope):this.options.pk,e=!!(\"function\"==typeof this.options.url||this.options.url&&(\"always\"===this.options.send||\"auto\"===this.options.send&&null!==d&&void 0!==d));return e?(this.showLoading(),c={name:this.options.name||\"\",value:b,pk:d},\"function\"==typeof this.options.params?c=this.options.params.call(this.options.scope,c):(this.options.params=a.fn.editableutils.tryParseJson(this.options.params,!0),a.extend(c,this.options.params)),\"function\"==typeof this.options.url?this.options.url.call(this.options.scope,c):a.ajax(a.extend({url:this.options.url,data:c,type:\"POST\"},this.options.ajaxOptions))):void 0},validate:function(a){return void 0===a&&(a=this.value),\"function\"==typeof this.options.validate?this.options.validate.call(this.options.scope,a):void 0},option:function(a,b){a in this.options&&(this.options[a]=b),\"value\"===a&&this.setValue(b)},setValue:function(a,b){this.value=b?this.input.str2value(a):a,this.$form&&this.$form.is(\":visible\")&&this.input.value2input(this.value)}},a.fn.editableform=function(c){var d=arguments;return this.each(function(){var e=a(this),f=e.data(\"editableform\"),g=\"object\"==typeof c&&c;f||e.data(\"editableform\",f=new b(this,g)),\"string\"==typeof c&&f[c].apply(f,Array.prototype.slice.call(d,1))})},a.fn.editableform.Constructor=b,a.fn.editableform.defaults={type:\"text\",url:null,params:null,name:null,pk:null,value:null,defaultValue:null,send:\"auto\",validate:null,success:null,error:null,ajaxOptions:null,showbuttons:!0,scope:null,savenochange:!1},a.fn.editableform.template='<form class=\"form-inline editableform\"><div class=\"control-group\"><div><div class=\"editable-input\"></div><div class=\"editable-buttons\"></div></div><div class=\"editable-error-block\"></div></div></form>',a.fn.editableform.loading='<div class=\"editableform-loading\"></div>',a.fn.editableform.buttons='<button type=\"submit\" class=\"editable-submit\">ok</button><button type=\"button\" class=\"editable-cancel\">cancel</button>',a.fn.editableform.errorGroupClass=null,a.fn.editableform.errorBlockClass=\"editable-error\",a.fn.editableform.engine=\"jquery\"}(window.jQuery),function(a){\"use strict\";a.fn.editableutils={inherit:function(a,b){var c=function(){};c.prototype=b.prototype,a.prototype=new c,a.prototype.constructor=a,a.superclass=b.prototype},setCursorPosition:function(a,b){if(a.setSelectionRange)a.setSelectionRange(b,b);else if(a.createTextRange){var c=a.createTextRange();c.collapse(!0),c.moveEnd(\"character\",b),c.moveStart(\"character\",b),c.select()}},tryParseJson:function(a,b){if(\"string\"==typeof a&&a.length&&a.match(/^[\\{\\[].*[\\}\\]]$/))if(b)try{a=new Function(\"return \"+a)()}catch(c){}finally{return a}else a=new Function(\"return \"+a)();return a},sliceObj:function(b,c,d){var e,f,g={};if(!a.isArray(c)||!c.length)return g;for(var h=0;h<c.length;h++)e=c[h],b.hasOwnProperty(e)&&(g[e]=b[e]),d!==!0&&(f=e.toLowerCase(),b.hasOwnProperty(f)&&(g[e]=b[f]));return g},getConfigData:function(b){var c={};return a.each(b.data(),function(a,b){(\"object\"!=typeof b||b&&\"object\"==typeof b&&(b.constructor===Object||b.constructor===Array))&&(c[a]=b)}),c},objectKeys:function(a){if(Object.keys)return Object.keys(a);if(a!==Object(a))throw new TypeError(\"Object.keys called on a non-object\");var b,c=[];for(b in a)Object.prototype.hasOwnProperty.call(a,b)&&c.push(b);return c},escape:function(b){return a(\"<div>\").text(b).html()},itemsByValue:function(b,c,d){if(!c||null===b)return[];if(\"function\"!=typeof d){var e=d||\"value\";d=function(a){return a[e]}}var f=a.isArray(b),g=[],h=this;return a.each(c,function(c,e){if(e.children)g=g.concat(h.itemsByValue(b,e.children,d));else if(f)a.grep(b,function(a){return a==(e&&\"object\"==typeof e?d(e):e)}).length&&g.push(e);else{var i=e&&\"object\"==typeof e?d(e):e;b==i&&g.push(e)}}),g},createInput:function(b){var c,d,e,f=b.type;return\"date\"===f&&(\"inline\"===b.mode?a.fn.editabletypes.datefield?f=\"datefield\":a.fn.editabletypes.dateuifield&&(f=\"dateuifield\"):a.fn.editabletypes.date?f=\"date\":a.fn.editabletypes.dateui&&(f=\"dateui\"),\"date\"!==f||a.fn.editabletypes.date||(f=\"combodate\")),\"datetime\"===f&&\"inline\"===b.mode&&(f=\"datetimefield\"),\"wysihtml5\"!==f||a.fn.editabletypes[f]||(f=\"textarea\"),\"function\"==typeof a.fn.editabletypes[f]?(c=a.fn.editabletypes[f],d=this.sliceObj(b,this.objectKeys(c.defaults)),e=new c(d)):(a.error(\"Unknown type: \"+f),!1)},supportsTransitions:function(){var a=document.body||document.documentElement,b=a.style,c=\"transition\",d=[\"Moz\",\"Webkit\",\"Khtml\",\"O\",\"ms\"];if(\"string\"==typeof b[c])return!0;c=c.charAt(0).toUpperCase()+c.substr(1);for(var e=0;e<d.length;e++)if(\"string\"==typeof b[d[e]+c])return!0;return!1}}}(window.jQuery),function(a){\"use strict\";var b=function(a,b){this.init(a,b)},c=function(a,b){this.init(a,b)};b.prototype={containerName:null,containerDataName:null,innerCss:null,containerClass:\"editable-container editable-popup\",defaults:{},init:function(c,d){this.$element=a(c),this.options=a.extend({},a.fn.editableContainer.defaults,d),this.splitOptions(),this.formOptions.scope=this.$element[0],this.initContainer(),this.delayedHide=!1,this.$element.on(\"destroyed\",a.proxy(function(){this.destroy()},this)),a(document).data(\"editable-handlers-attached\")||(a(document).on(\"keyup.editable\",function(b){27===b.which&&a(\".editable-open\").editableContainer(\"hide\")}),a(document).on(\"click.editable\",function(c){var d,e=a(c.target),f=[\".editable-container\",\".ui-datepicker-header\",\".datepicker\",\".modal-backdrop\",\".bootstrap-wysihtml5-insert-image-modal\",\".bootstrap-wysihtml5-insert-link-modal\"];if(a.contains(document.documentElement,c.target)&&!e.is(document)){for(d=0;d<f.length;d++)if(e.is(f[d])||e.parents(f[d]).length)return;b.prototype.closeOthers(c.target)}}),a(document).data(\"editable-handlers-attached\",!0))},splitOptions:function(){if(this.containerOptions={},this.formOptions={},!a.fn[this.containerName])throw new Error(this.containerName+\" not found. Have you included corresponding js file?\");for(var b in this.options)b in this.defaults?this.containerOptions[b]=this.options[b]:this.formOptions[b]=this.options[b]},tip:function(){return this.container()?this.container().$tip:null},container:function(){var a;return this.containerDataName&&(a=this.$element.data(this.containerDataName))?a:a=this.$element.data(this.containerName)},call:function(){this.$element[this.containerName].apply(this.$element,arguments)},initContainer:function(){this.call(this.containerOptions)},renderForm:function(){this.$form.editableform(this.formOptions).on({save:a.proxy(this.save,this),nochange:a.proxy(function(){this.hide(\"nochange\")},this),cancel:a.proxy(function(){this.hide(\"cancel\")},this),show:a.proxy(function(){this.delayedHide?(this.hide(this.delayedHide.reason),this.delayedHide=!1):this.setPosition()},this),rendering:a.proxy(this.setPosition,this),resize:a.proxy(this.setPosition,this),rendered:a.proxy(function(){this.$element.triggerHandler(\"shown\",a(this.options.scope).data(\"editable\"))},this)}).editableform(\"render\")},show:function(b){this.$element.addClass(\"editable-open\"),b!==!1&&this.closeOthers(this.$element[0]),this.innerShow(),this.tip().addClass(this.containerClass),this.$form,this.$form=a(\"<div>\"),this.tip().is(this.innerCss)?this.tip().append(this.$form):this.tip().find(this.innerCss).append(this.$form),this.renderForm()},hide:function(a){if(this.tip()&&this.tip().is(\":visible\")&&this.$element.hasClass(\"editable-open\")){if(this.$form.data(\"editableform\").isSaving)return this.delayedHide={reason:a},void 0;this.delayedHide=!1,this.$element.removeClass(\"editable-open\"),this.innerHide(),this.$element.triggerHandler(\"hidden\",a||\"manual\")}},innerShow:function(){},innerHide:function(){},toggle:function(a){this.container()&&this.tip()&&this.tip().is(\":visible\")?this.hide():this.show(a)},setPosition:function(){},save:function(a,b){this.$element.triggerHandler(\"save\",b),this.hide(\"save\")},option:function(a,b){this.options[a]=b,a in this.containerOptions?(this.containerOptions[a]=b,this.setContainerOption(a,b)):(this.formOptions[a]=b,this.$form&&this.$form.editableform(\"option\",a,b))},setContainerOption:function(a,b){this.call(\"option\",a,b)},destroy:function(){this.hide(),this.innerDestroy(),this.$element.off(\"destroyed\"),this.$element.removeData(\"editableContainer\")},innerDestroy:function(){},closeOthers:function(b){a(\".editable-open\").each(function(c,d){if(d!==b&&!a(d).find(b).length){var e=a(d),f=e.data(\"editableContainer\");f&&(\"cancel\"===f.options.onblur?e.data(\"editableContainer\").hide(\"onblur\"):\"submit\"===f.options.onblur&&e.data(\"editableContainer\").tip().find(\"form\").submit())}})},activate:function(){this.tip&&this.tip().is(\":visible\")&&this.$form&&this.$form.data(\"editableform\").input.activate()}},a.fn.editableContainer=function(d){var e=arguments;return this.each(function(){var f=a(this),g=\"editableContainer\",h=f.data(g),i=\"object\"==typeof d&&d,j=\"inline\"===i.mode?c:b;h||f.data(g,h=new j(this,i)),\"string\"==typeof d&&h[d].apply(h,Array.prototype.slice.call(e,1))})},a.fn.editableContainer.Popup=b,a.fn.editableContainer.Inline=c,a.fn.editableContainer.defaults={value:null,placement:\"top\",autohide:!0,onblur:\"cancel\",anim:!1,mode:\"popup\"},jQuery.event.special.destroyed={remove:function(a){a.handler&&a.handler()}}}(window.jQuery),function(a){\"use strict\";a.extend(a.fn.editableContainer.Inline.prototype,a.fn.editableContainer.Popup.prototype,{containerName:\"editableform\",innerCss:\".editable-inline\",containerClass:\"editable-container editable-inline\",initContainer:function(){this.$tip=a(\"<span></span>\"),this.options.anim||(this.options.anim=0)},splitOptions:function(){this.containerOptions={},this.formOptions=this.options},tip:function(){return this.$tip},innerShow:function(){this.$element.hide(),this.tip().insertAfter(this.$element).show()},innerHide:function(){this.$tip.hide(this.options.anim,a.proxy(function(){this.$element.show(),this.innerDestroy()},this))},innerDestroy:function(){this.tip()&&this.tip().empty().remove()}})}(window.jQuery),function(a){\"use strict\";var b=function(b,c){this.$element=a(b),this.options=a.extend({},a.fn.editable.defaults,c,a.fn.editableutils.getConfigData(this.$element)),this.options.selector?this.initLive():this.init(),this.options.highlight&&!a.fn.editableutils.supportsTransitions()&&(this.options.highlight=!1)};b.prototype={constructor:b,init:function(){var b,c=!1;if(this.options.name=this.options.name||this.$element.attr(\"id\"),this.options.scope=this.$element[0],this.input=a.fn.editableutils.createInput(this.options),this.input){switch(void 0===this.options.value||null===this.options.value?(this.value=this.input.html2value(a.trim(this.$element.html())),c=!0):(this.options.value=a.fn.editableutils.tryParseJson(this.options.value,!0),this.value=\"string\"==typeof this.options.value?this.input.str2value(this.options.value):this.options.value),this.$element.addClass(\"editable\"),\"textarea\"===this.input.type&&this.$element.addClass(\"editable-pre-wrapped\"),\"manual\"!==this.options.toggle?(this.$element.addClass(\"editable-click\"),this.$element.on(this.options.toggle+\".editable\",a.proxy(function(a){if(this.options.disabled||a.preventDefault(),\"mouseenter\"===this.options.toggle)this.show();else{var b=\"click\"!==this.options.toggle;this.toggle(b)}},this))):this.$element.attr(\"tabindex\",-1),\"function\"==typeof this.options.display&&(this.options.autotext=\"always\"),this.options.autotext){case\"always\":b=!0;break;case\"auto\":b=!a.trim(this.$element.text()).length&&null!==this.value&&void 0!==this.value&&!c;break;default:b=!1}a.when(b?this.render():!0).then(a.proxy(function(){this.options.disabled?this.disable():this.enable(),this.$element.triggerHandler(\"init\",this)},this))}},initLive:function(){var b=this.options.selector;this.options.selector=!1,this.options.autotext=\"never\",this.$element.on(this.options.toggle+\".editable\",b,a.proxy(function(b){var c=a(b.target);c.data(\"editable\")||(c.hasClass(this.options.emptyclass)&&c.empty(),c.editable(this.options).trigger(b))},this))},render:function(a){return this.options.display!==!1?this.input.value2htmlFinal?this.input.value2html(this.value,this.$element[0],this.options.display,a):\"function\"==typeof this.options.display?this.options.display.call(this.$element[0],this.value,a):this.input.value2html(this.value,this.$element[0]):void 0},enable:function(){this.options.disabled=!1,this.$element.removeClass(\"editable-disabled\"),this.handleEmpty(this.isEmpty),\"manual\"!==this.options.toggle&&\"-1\"===this.$element.attr(\"tabindex\")&&this.$element.removeAttr(\"tabindex\")},disable:function(){this.options.disabled=!0,this.hide(),this.$element.addClass(\"editable-disabled\"),this.handleEmpty(this.isEmpty),this.$element.attr(\"tabindex\",-1)},toggleDisabled:function(){this.options.disabled?this.enable():this.disable()},option:function(b,c){return b&&\"object\"==typeof b?(a.each(b,a.proxy(function(b,c){this.option(a.trim(b),c)},this)),void 0):(this.options[b]=c,\"disabled\"===b?c?this.disable():this.enable():(\"value\"===b&&this.setValue(c),this.container&&this.container.option(b,c),this.input.option&&this.input.option(b,c),void 0))},handleEmpty:function(b){this.options.display!==!1&&(this.isEmpty=void 0!==b?b:\"function\"==typeof this.input.isEmpty?this.input.isEmpty(this.$element):\"\"===a.trim(this.$element.html()),this.options.disabled?this.isEmpty&&(this.$element.empty(),this.options.emptyclass&&this.$element.removeClass(this.options.emptyclass)):this.isEmpty?(this.$element.html(this.options.emptytext),this.options.emptyclass&&this.$element.addClass(this.options.emptyclass)):this.options.emptyclass&&this.$element.removeClass(this.options.emptyclass))},show:function(b){if(!this.options.disabled){if(this.container){if(this.container.tip().is(\":visible\"))return}else{var c=a.extend({},this.options,{value:this.value,input:this.input});this.$element.editableContainer(c),this.$element.on(\"save.internal\",a.proxy(this.save,this)),this.container=this.$element.data(\"editableContainer\")}this.container.show(b)}},hide:function(){this.container&&this.container.hide()},toggle:function(a){this.container&&this.container.tip().is(\":visible\")?this.hide():this.show(a)},save:function(a,b){if(this.options.unsavedclass){var c=!1;c=c||\"function\"==typeof this.options.url,c=c||this.options.display===!1,c=c||void 0!==b.response,c=c||this.options.savenochange&&this.input.value2str(this.value)!==this.input.value2str(b.newValue),c?this.$element.removeClass(this.options.unsavedclass):this.$element.addClass(this.options.unsavedclass)}if(this.options.highlight){var d=this.$element,e=d.css(\"background-color\");d.css(\"background-color\",this.options.highlight),setTimeout(function(){\"transparent\"===e&&(e=\"\"),d.css(\"background-color\",e),d.addClass(\"editable-bg-transition\"),setTimeout(function(){d.removeClass(\"editable-bg-transition\")},1700)},10)}this.setValue(b.newValue,!1,b.response)},validate:function(){return\"function\"==typeof this.options.validate?this.options.validate.call(this,this.value):void 0},setValue:function(b,c,d){this.value=c?this.input.str2value(b):b,this.container&&this.container.option(\"value\",this.value),a.when(this.render(d)).then(a.proxy(function(){this.handleEmpty()},this))},activate:function(){this.container&&this.container.activate()},destroy:function(){this.disable(),this.container&&this.container.destroy(),this.input.destroy(),\"manual\"!==this.options.toggle&&(this.$element.removeClass(\"editable-click\"),this.$element.off(this.options.toggle+\".editable\")),this.$element.off(\"save.internal\"),this.$element.removeClass(\"editable editable-open editable-disabled\"),this.$element.removeData(\"editable\")}},a.fn.editable=function(c){var d={},e=arguments,f=\"editable\";switch(c){case\"validate\":return this.each(function(){var b,c=a(this),e=c.data(f);e&&(b=e.validate())&&(d[e.options.name]=b)}),d;case\"getValue\":return 2===arguments.length&&arguments[1]===!0?d=this.eq(0).data(f).value:this.each(function(){var b=a(this),c=b.data(f);c&&void 0!==c.value&&null!==c.value&&(d[c.options.name]=c.input.value2submit(c.value))}),d;case\"submit\":var g=arguments[1]||{},h=this,i=this.editable(\"validate\");if(a.isEmptyObject(i)){var j={};if(1===h.length){var k=h.data(\"editable\"),l={name:k.options.name||\"\",value:k.input.value2submit(k.value),pk:\"function\"==typeof k.options.pk?k.options.pk.call(k.options.scope):k.options.pk};\"function\"==typeof k.options.params?l=k.options.params.call(k.options.scope,l):(k.options.params=a.fn.editableutils.tryParseJson(k.options.params,!0),a.extend(l,k.options.params)),j={url:k.options.url,data:l,type:\"POST\"},g.success=g.success||k.options.success,g.error=g.error||k.options.error}else{var m=this.editable(\"getValue\");j={url:g.url,data:m,type:\"POST\"}}j.success=\"function\"==typeof g.success?function(a){g.success.call(h,a,g)}:a.noop,j.error=\"function\"==typeof g.error?function(){g.error.apply(h,arguments)}:a.noop,g.ajaxOptions&&a.extend(j,g.ajaxOptions),g.data&&a.extend(j.data,g.data),a.ajax(j)}else\"function\"==typeof g.error&&g.error.call(h,i);return this}return this.each(function(){var d=a(this),g=d.data(f),h=\"object\"==typeof c&&c;return h&&h.selector?(g=new b(this,h),void 0):(g||d.data(f,g=new b(this,h)),\"string\"==typeof c&&g[c].apply(g,Array.prototype.slice.call(e,1)),void 0)})},a.fn.editable.defaults={type:\"text\",disabled:!1,toggle:\"click\",emptytext:\"Empty\",autotext:\"auto\",value:null,display:null,emptyclass:\"editable-empty\",unsavedclass:\"editable-unsaved\",selector:null,highlight:\"#FFFF80\"}}(window.jQuery),function(a){\"use strict\";a.fn.editabletypes={};var b=function(){};b.prototype={init:function(b,c,d){this.type=b,this.options=a.extend({},d,c)},prerender:function(){this.$tpl=a(this.options.tpl),this.$input=this.$tpl,this.$clear=null,this.error=null},render:function(){},value2html:function(b,c){a(c)[this.options.escape?\"text\":\"html\"](a.trim(b))},html2value:function(b){return a(\"<div>\").html(b).text()},value2str:function(a){return a},str2value:function(a){return a},value2submit:function(a){return a},value2input:function(a){this.$input.val(a)},input2value:function(){return this.$input.val()},activate:function(){this.$input.is(\":visible\")&&this.$input.focus()},clear:function(){this.$input.val(null)},escape:function(b){return a(\"<div>\").text(b).html()},autosubmit:function(){},destroy:function(){},setClass:function(){this.options.inputclass&&this.$input.addClass(this.options.inputclass)},setAttr:function(a){void 0!==this.options[a]&&null!==this.options[a]&&this.$input.attr(a,this.options[a])},option:function(a,b){this.options[a]=b}},b.defaults={tpl:\"\",inputclass:null,escape:!0,scope:null,showbuttons:!0},a.extend(a.fn.editabletypes,{abstractinput:b})}(window.jQuery),function(a){\"use strict\";var b=function(){};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{render:function(){var b=a.Deferred();return this.error=null,this.onSourceReady(function(){this.renderList(),b.resolve()},function(){this.error=this.options.sourceError,b.resolve()}),b.promise()},html2value:function(){return null},value2html:function(b,c,d,e){var f=a.Deferred(),g=function(){\"function\"==typeof d?d.call(c,b,this.sourceData,e):this.value2htmlFinal(b,c),f.resolve()};return null===b?g.call(this):this.onSourceReady(g,function(){f.resolve()}),f.promise()},onSourceReady:function(b,c){var d;if(a.isFunction(this.options.source)?(d=this.options.source.call(this.options.scope),this.sourceData=null):d=this.options.source,this.options.sourceCache&&a.isArray(this.sourceData))return b.call(this),void 0;try{d=a.fn.editableutils.tryParseJson(d,!1)}catch(e){return c.call(this),void 0}if(\"string\"==typeof d){if(this.options.sourceCache){var f,g=d;if(a(document).data(g)||a(document).data(g,{}),f=a(document).data(g),f.loading===!1&&f.sourceData)return this.sourceData=f.sourceData,this.doPrepend(),b.call(this),void 0;if(f.loading===!0)return f.callbacks.push(a.proxy(function(){this.sourceData=f.sourceData,this.doPrepend(),b.call(this)},this)),f.err_callbacks.push(a.proxy(c,this)),void 0;f.loading=!0,f.callbacks=[],f.err_callbacks=[]}var h=a.extend({url:d,type:\"get\",cache:!1,dataType:\"json\",success:a.proxy(function(d){f&&(f.loading=!1),this.sourceData=this.makeArray(d),a.isArray(this.sourceData)?(f&&(f.sourceData=this.sourceData,a.each(f.callbacks,function(){this.call()})),this.doPrepend(),b.call(this)):(c.call(this),f&&a.each(f.err_callbacks,function(){this.call()}))},this),error:a.proxy(function(){c.call(this),f&&(f.loading=!1,a.each(f.err_callbacks,function(){this.call()}))},this)},this.options.sourceOptions);a.ajax(h)}else this.sourceData=this.makeArray(d),a.isArray(this.sourceData)?(this.doPrepend(),b.call(this)):c.call(this)},doPrepend:function(){null!==this.options.prepend&&void 0!==this.options.prepend&&(a.isArray(this.prependData)||(a.isFunction(this.options.prepend)&&(this.options.prepend=this.options.prepend.call(this.options.scope)),this.options.prepend=a.fn.editableutils.tryParseJson(this.options.prepend,!0),\"string\"==typeof this.options.prepend&&(this.options.prepend={\"\":this.options.prepend}),this.prependData=this.makeArray(this.options.prepend)),a.isArray(this.prependData)&&a.isArray(this.sourceData)&&(this.sourceData=this.prependData.concat(this.sourceData)))},renderList:function(){},value2htmlFinal:function(){},makeArray:function(b){var c,d,e,f,g=[];if(!b||\"string\"==typeof b)return null;if(a.isArray(b)){f=function(a,b){return d={value:a,text:b},c++>=2?!1:void 0};for(var h=0;h<b.length;h++)e=b[h],\"object\"==typeof e?(c=0,a.each(e,f),1===c?g.push(d):c>1&&(e.children&&(e.children=this.makeArray(e.children)),g.push(e))):g.push({value:e,text:e})}else a.each(b,function(a,b){g.push({value:a,text:b})});return g},option:function(a,b){this.options[a]=b,\"source\"===a&&(this.sourceData=null),\"prepend\"===a&&(this.prependData=null)}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{source:null,prepend:!1,sourceError:\"Error when loading list\",sourceCache:!0,sourceOptions:null}),a.fn.editabletypes.list=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"text\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{render:function(){this.renderClear(),this.setClass(),this.setAttr(\"placeholder\")},activate:function(){this.$input.is(\":visible\")&&(this.$input.focus(),a.fn.editableutils.setCursorPosition(this.$input.get(0),this.$input.val().length),this.toggleClear&&this.toggleClear())},renderClear:function(){this.options.clear&&(this.$clear=a('<span class=\"editable-clear-x\"></span>'),this.$input.after(this.$clear).css(\"padding-right\",24).keyup(a.proxy(function(b){if(!~a.inArray(b.keyCode,[40,38,9,13,27])){clearTimeout(this.t);var c=this;this.t=setTimeout(function(){c.toggleClear(b)},100)}},this)).parent().css(\"position\",\"relative\"),this.$clear.click(a.proxy(this.clear,this)))},postrender:function(){},toggleClear:function(){if(this.$clear){var a=this.$input.val().length,b=this.$clear.is(\":visible\");a&&!b&&this.$clear.show(),!a&&b&&this.$clear.hide()}},clear:function(){this.$clear.hide(),this.$input.val(\"\").focus()}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:'<input type=\"text\">',placeholder:null,clear:!0}),a.fn.editabletypes.text=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"textarea\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{render:function(){this.setClass(),this.setAttr(\"placeholder\"),this.setAttr(\"rows\"),this.$input.keydown(function(b){b.ctrlKey&&13===b.which&&a(this).closest(\"form\").submit()})},activate:function(){a.fn.editabletypes.text.prototype.activate.call(this)}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:\"<textarea></textarea>\",inputclass:\"input-large\",placeholder:null,rows:7}),a.fn.editabletypes.textarea=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"select\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.list),a.extend(b.prototype,{renderList:function(){this.$input.empty();var b=function(c,d){var e;if(a.isArray(d))for(var f=0;f<d.length;f++)e={},d[f].children?(e.label=d[f].text,c.append(b(a(\"<optgroup>\",e),d[f].children))):(e.value=d[f].value,d[f].disabled&&(e.disabled=!0),c.append(a(\"<option>\",e).text(d[f].text)));return c};b(this.$input,this.sourceData),this.setClass(),this.$input.on(\"keydown.editable\",function(b){13===b.which&&a(this).closest(\"form\").submit()})},value2htmlFinal:function(b,c){var d=\"\",e=a.fn.editableutils.itemsByValue(b,this.sourceData);e.length&&(d=e[0].text),a.fn.editabletypes.abstractinput.prototype.value2html.call(this,d,c)},autosubmit:function(){this.$input.off(\"keydown.editable\").on(\"change.editable\",function(){a(this).closest(\"form\").submit()})}}),b.defaults=a.extend({},a.fn.editabletypes.list.defaults,{tpl:\"<select></select>\"}),a.fn.editabletypes.select=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"checklist\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.list),a.extend(b.prototype,{renderList:function(){var b;if(this.$tpl.empty(),a.isArray(this.sourceData)){for(var c=0;c<this.sourceData.length;c++)b=a(\"<label>\").append(a(\"<input>\",{type:\"checkbox\",value:this.sourceData[c].value})).append(a(\"<span>\").text(\" \"+this.sourceData[c].text)),a(\"<div>\").append(b).appendTo(this.$tpl);this.$input=this.$tpl.find('input[type=\"checkbox\"]'),this.setClass()}},value2str:function(b){return a.isArray(b)?b.sort().join(a.trim(this.options.separator)):\"\"},str2value:function(b){var c,d=null;return\"string\"==typeof b&&b.length?(c=new RegExp(\"\\\\s*\"+a.trim(this.options.separator)+\"\\\\s*\"),d=b.split(c)):d=a.isArray(b)?b:[b],d},value2input:function(b){this.$input.prop(\"checked\",!1),a.isArray(b)&&b.length&&this.$input.each(function(c,d){var e=a(d);a.each(b,function(a,b){e.val()==b&&e.prop(\"checked\",!0)})})},input2value:function(){var b=[];return this.$input.filter(\":checked\").each(function(c,d){b.push(a(d).val())}),b},value2htmlFinal:function(b,c){var d=[],e=a.fn.editableutils.itemsByValue(b,this.sourceData),f=this.options.escape;e.length?(a.each(e,function(b,c){var e=f?a.fn.editableutils.escape(c.text):c.text;d.push(e)}),a(c).html(d.join(\"<br>\"))):a(c).empty()},activate:function(){this.$input.first().focus()},autosubmit:function(){this.$input.on(\"keydown\",function(b){13===b.which&&a(this).closest(\"form\").submit()})}}),b.defaults=a.extend({},a.fn.editabletypes.list.defaults,{tpl:'<div class=\"editable-checklist\"></div>',inputclass:null,separator:\",\"}),a.fn.editabletypes.checklist=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"password\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.text),a.extend(b.prototype,{value2html:function(b,c){b?a(c).text(\"[hidden]\"):a(c).empty()},html2value:function(){return null}}),b.defaults=a.extend({},a.fn.editabletypes.text.defaults,{tpl:'<input type=\"password\">'}),a.fn.editabletypes.password=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"email\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.text),b.defaults=a.extend({},a.fn.editabletypes.text.defaults,{tpl:'<input type=\"email\">'}),a.fn.editabletypes.email=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"url\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.text),b.defaults=a.extend({},a.fn.editabletypes.text.defaults,{tpl:'<input type=\"url\">'}),a.fn.editabletypes.url=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"tel\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.text),b.defaults=a.extend({},a.fn.editabletypes.text.defaults,{tpl:'<input type=\"tel\">'}),a.fn.editabletypes.tel=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"number\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.text),a.extend(b.prototype,{render:function(){b.superclass.render.call(this),this.setAttr(\"min\"),this.setAttr(\"max\"),this.setAttr(\"step\")},postrender:function(){this.$clear&&this.$clear.css({right:24})}}),b.defaults=a.extend({},a.fn.editabletypes.text.defaults,{tpl:'<input type=\"number\">',inputclass:\"input-mini\",min:null,max:null,step:null}),a.fn.editabletypes.number=b}(window.jQuery),function(a){\"use strict\";\nvar b=function(a){this.init(\"range\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.number),a.extend(b.prototype,{render:function(){this.$input=this.$tpl.filter(\"input\"),this.setClass(),this.setAttr(\"min\"),this.setAttr(\"max\"),this.setAttr(\"step\"),this.$input.on(\"input\",function(){a(this).siblings(\"output\").text(a(this).val())})},activate:function(){this.$input.focus()}}),b.defaults=a.extend({},a.fn.editabletypes.number.defaults,{tpl:'<input type=\"range\"><output style=\"width: 30px; display: inline-block\"></output>',inputclass:\"input-medium\"}),a.fn.editabletypes.range=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"time\",a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{render:function(){this.setClass()}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:'<input type=\"time\">'}),a.fn.editabletypes.time=b}(window.jQuery),function(a){\"use strict\";var b=function(c){if(this.init(\"select2\",c,b.defaults),c.select2=c.select2||{},this.sourceData=null,c.placeholder&&(c.select2.placeholder=c.placeholder),!c.select2.tags&&c.source){var d=c.source;a.isFunction(c.source)&&(d=c.source.call(c.scope)),\"string\"==typeof d?(c.select2.ajax=c.select2.ajax||{},c.select2.ajax.data||(c.select2.ajax.data=function(a){return{query:a}}),c.select2.ajax.results||(c.select2.ajax.results=function(a){return{results:a}}),c.select2.ajax.url=d):(this.sourceData=this.convertSource(d),c.select2.data=this.sourceData)}if(this.options.select2=a.extend({},b.defaults.select2,c.select2),this.isMultiple=this.options.select2.tags||this.options.select2.multiple,this.isRemote=\"ajax\"in this.options.select2,this.idFunc=this.options.select2.id,\"function\"!=typeof this.idFunc){var e=this.idFunc||\"id\";this.idFunc=function(a){return a[e]}}this.formatSelection=this.options.select2.formatSelection,\"function\"!=typeof this.formatSelection&&(this.formatSelection=function(a){return a.text})};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{render:function(){this.setClass(),this.isRemote&&this.$input.on(\"select2-loaded\",a.proxy(function(a){this.sourceData=a.items.results},this)),this.isMultiple&&this.$input.on(\"change\",function(){a(this).closest(\"form\").parent().triggerHandler(\"resize\")})},value2html:function(c,d){var e,f=\"\",g=this;this.options.select2.tags?e=c:this.sourceData&&(e=a.fn.editableutils.itemsByValue(c,this.sourceData,this.idFunc)),a.isArray(e)?(f=[],a.each(e,function(a,b){f.push(b&&\"object\"==typeof b?g.formatSelection(b):b)})):e&&(f=g.formatSelection(e)),f=a.isArray(f)?f.join(this.options.viewseparator):f,b.superclass.value2html.call(this,f,d)},html2value:function(a){return this.options.select2.tags?this.str2value(a,this.options.viewseparator):null},value2input:function(b){if(a.isArray(b)&&(b=b.join(this.getSeparator())),this.$input.data(\"select2\")?this.$input.val(b).trigger(\"change\",!0):(this.$input.val(b),this.$input.select2(this.options.select2)),this.isRemote&&!this.isMultiple&&!this.options.select2.initSelection){var c=this.options.select2.id,d=this.options.select2.formatSelection;if(!c&&!d){var e=a(this.options.scope);if(!e.data(\"editable\").isEmpty){var f={id:b,text:e.text()};this.$input.select2(\"data\",f)}}}},input2value:function(){return this.$input.select2(\"val\")},str2value:function(b,c){if(\"string\"!=typeof b||!this.isMultiple)return b;c=c||this.getSeparator();var d,e,f;if(null===b||b.length<1)return null;for(d=b.split(c),e=0,f=d.length;f>e;e+=1)d[e]=a.trim(d[e]);return d},autosubmit:function(){this.$input.on(\"change\",function(b,c){c||a(this).closest(\"form\").submit()})},getSeparator:function(){return this.options.select2.separator||a.fn.select2.defaults.separator},convertSource:function(b){if(a.isArray(b)&&b.length&&void 0!==b[0].value)for(var c=0;c<b.length;c++)void 0!==b[c].value&&(b[c].id=b[c].value,delete b[c].value);return b},destroy:function(){this.$input.data(\"select2\")&&this.$input.select2(\"destroy\")}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:'<input type=\"hidden\">',select2:null,placeholder:null,source:null,viewseparator:\", \"}),a.fn.editabletypes.select2=b}(window.jQuery),function(a){var b=function(b,c){return this.$element=a(b),this.$element.is(\"input\")?(this.options=a.extend({},a.fn.combodate.defaults,c,this.$element.data()),this.init(),void 0):(a.error(\"Combodate should be applied to INPUT element\"),void 0)};b.prototype={constructor:b,init:function(){this.map={day:[\"D\",\"date\"],month:[\"M\",\"month\"],year:[\"Y\",\"year\"],hour:[\"[Hh]\",\"hours\"],minute:[\"m\",\"minutes\"],second:[\"s\",\"seconds\"],ampm:[\"[Aa]\",\"\"]},this.$widget=a('<span class=\"combodate\"></span>').html(this.getTemplate()),this.initCombos(),this.$widget.on(\"change\",\"select\",a.proxy(function(b){this.$element.val(this.getValue()).change(),this.options.smartDays&&(a(b.target).is(\".month\")||a(b.target).is(\".year\"))&&this.fillCombo(\"day\")},this)),this.$widget.find(\"select\").css(\"width\",\"auto\"),this.$element.hide().after(this.$widget),this.setValue(this.$element.val()||this.options.value)},getTemplate:function(){var b=this.options.template;return a.each(this.map,function(a,c){c=c[0];var d=new RegExp(c+\"+\"),e=c.length>1?c.substring(1,2):c;b=b.replace(d,\"{\"+e+\"}\")}),b=b.replace(/ /g,\"&nbsp;\"),a.each(this.map,function(a,c){c=c[0];var d=c.length>1?c.substring(1,2):c;b=b.replace(\"{\"+d+\"}\",'<select class=\"'+a+'\"></select>')}),b},initCombos:function(){for(var a in this.map){var b=this.$widget.find(\".\"+a);this[\"$\"+a]=b.length?b:null,this.fillCombo(a)}},fillCombo:function(a){var b=this[\"$\"+a];if(b){var c=\"fill\"+a.charAt(0).toUpperCase()+a.slice(1),d=this[c](),e=b.val();b.empty();for(var f=0;f<d.length;f++)b.append('<option value=\"'+d[f][0]+'\">'+d[f][1]+\"</option>\");b.val(e)}},fillCommon:function(a){var b,c=[];if(\"name\"===this.options.firstItem){b=moment.relativeTime||moment.langData()._relativeTime;var d=\"function\"==typeof b[a]?b[a](1,!0,a,!1):b[a];d=d.split(\" \").reverse()[0],c.push([\"\",d])}else\"empty\"===this.options.firstItem&&c.push([\"\",\"\"]);return c},fillDay:function(){var a,b,c=this.fillCommon(\"d\"),d=-1!==this.options.template.indexOf(\"DD\"),e=31;if(this.options.smartDays&&this.$month&&this.$year){var f=parseInt(this.$month.val(),10),g=parseInt(this.$year.val(),10);isNaN(f)||isNaN(g)||(e=moment([g,f]).daysInMonth())}for(b=1;e>=b;b++)a=d?this.leadZero(b):b,c.push([b,a]);return c},fillMonth:function(){var a,b,c=this.fillCommon(\"M\"),d=-1!==this.options.template.indexOf(\"MMMM\"),e=-1!==this.options.template.indexOf(\"MMM\"),f=-1!==this.options.template.indexOf(\"MM\");for(b=0;11>=b;b++)a=d?moment().date(1).month(b).format(\"MMMM\"):e?moment().date(1).month(b).format(\"MMM\"):f?this.leadZero(b+1):b+1,c.push([b,a]);return c},fillYear:function(){var a,b,c=[],d=-1!==this.options.template.indexOf(\"YYYY\");for(b=this.options.maxYear;b>=this.options.minYear;b--)a=d?b:(b+\"\").substring(2),c[this.options.yearDescending?\"push\":\"unshift\"]([b,a]);return c=this.fillCommon(\"y\").concat(c)},fillHour:function(){var a,b,c=this.fillCommon(\"h\"),d=-1!==this.options.template.indexOf(\"h\"),e=(-1!==this.options.template.indexOf(\"H\"),-1!==this.options.template.toLowerCase().indexOf(\"hh\")),f=d?1:0,g=d?12:23;for(b=f;g>=b;b++)a=e?this.leadZero(b):b,c.push([b,a]);return c},fillMinute:function(){var a,b,c=this.fillCommon(\"m\"),d=-1!==this.options.template.indexOf(\"mm\");for(b=0;59>=b;b+=this.options.minuteStep)a=d?this.leadZero(b):b,c.push([b,a]);return c},fillSecond:function(){var a,b,c=this.fillCommon(\"s\"),d=-1!==this.options.template.indexOf(\"ss\");for(b=0;59>=b;b+=this.options.secondStep)a=d?this.leadZero(b):b,c.push([b,a]);return c},fillAmpm:function(){var a=-1!==this.options.template.indexOf(\"a\"),b=(-1!==this.options.template.indexOf(\"A\"),[[\"am\",a?\"am\":\"AM\"],[\"pm\",a?\"pm\":\"PM\"]]);return b},getValue:function(b){var c,d={},e=this,f=!1;return a.each(this.map,function(a){if(\"ampm\"!==a){var b=\"day\"===a?1:0;return d[a]=e[\"$\"+a]?parseInt(e[\"$\"+a].val(),10):b,isNaN(d[a])?(f=!0,!1):void 0}}),f?\"\":(this.$ampm&&(d.hour=12===d.hour?\"am\"===this.$ampm.val()?0:12:\"am\"===this.$ampm.val()?d.hour:d.hour+12),c=moment([d.year,d.month,d.day,d.hour,d.minute,d.second]),this.highlight(c),b=void 0===b?this.options.format:b,null===b?c.isValid()?c:null:c.isValid()?c.format(b):\"\")},setValue:function(b){function c(b,c){var d={};return b.children(\"option\").each(function(b,e){var f,g=a(e).attr(\"value\");\"\"!==g&&(f=Math.abs(g-c),(\"undefined\"==typeof d.distance||f<d.distance)&&(d={value:g,distance:f}))}),d.value}if(b){var d=\"string\"==typeof b?moment(b,this.options.format):moment(b),e=this,f={};d.isValid()&&(a.each(this.map,function(a,b){\"ampm\"!==a&&(f[a]=d[b[1]]())}),this.$ampm&&(f.hour>=12?(f.ampm=\"pm\",f.hour>12&&(f.hour-=12)):(f.ampm=\"am\",0===f.hour&&(f.hour=12))),a.each(f,function(a,b){e[\"$\"+a]&&(\"minute\"===a&&e.options.minuteStep>1&&e.options.roundTime&&(b=c(e[\"$\"+a],b)),\"second\"===a&&e.options.secondStep>1&&e.options.roundTime&&(b=c(e[\"$\"+a],b)),e[\"$\"+a].val(b))}),this.options.smartDays&&this.fillCombo(\"day\"),this.$element.val(d.format(this.options.format)).change())}},highlight:function(a){a.isValid()?this.options.errorClass?this.$widget.removeClass(this.options.errorClass):this.$widget.find(\"select\").css(\"border-color\",this.borderColor):this.options.errorClass?this.$widget.addClass(this.options.errorClass):(this.borderColor||(this.borderColor=this.$widget.find(\"select\").css(\"border-color\")),this.$widget.find(\"select\").css(\"border-color\",\"red\"))},leadZero:function(a){return 9>=a?\"0\"+a:a},destroy:function(){this.$widget.remove(),this.$element.removeData(\"combodate\").show()}},a.fn.combodate=function(c){var d,e=Array.apply(null,arguments);return e.shift(),\"getValue\"===c&&this.length&&(d=this.eq(0).data(\"combodate\"))?d.getValue.apply(d,e):this.each(function(){var d=a(this),f=d.data(\"combodate\"),g=\"object\"==typeof c&&c;f||d.data(\"combodate\",f=new b(this,g)),\"string\"==typeof c&&\"function\"==typeof f[c]&&f[c].apply(f,e)})},a.fn.combodate.defaults={format:\"DD-MM-YYYY HH:mm\",template:\"D / MMM / YYYY   H : mm\",value:null,minYear:1970,maxYear:2015,yearDescending:!0,minuteStep:5,secondStep:1,firstItem:\"empty\",errorClass:null,roundTime:!0,smartDays:!1}}(window.jQuery),function(a){\"use strict\";var b=function(c){this.init(\"combodate\",c,b.defaults),this.options.viewformat||(this.options.viewformat=this.options.format),c.combodate=a.fn.editableutils.tryParseJson(c.combodate,!0),this.options.combodate=a.extend({},b.defaults.combodate,c.combodate,{format:this.options.format,template:this.options.template})};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{render:function(){this.$input.combodate(this.options.combodate),\"bs3\"===a.fn.editableform.engine&&this.$input.siblings().find(\"select\").addClass(\"form-control\"),this.options.inputclass&&this.$input.siblings().find(\"select\").addClass(this.options.inputclass)},value2html:function(a,c){var d=a?a.format(this.options.viewformat):\"\";b.superclass.value2html.call(this,d,c)},html2value:function(a){return a?moment(a,this.options.viewformat):null},value2str:function(a){return a?a.format(this.options.format):\"\"},str2value:function(a){return a?moment(a,this.options.format):null},value2submit:function(a){return this.value2str(a)},value2input:function(a){this.$input.combodate(\"setValue\",a)},input2value:function(){return this.$input.combodate(\"getValue\",null)},activate:function(){this.$input.siblings(\".combodate\").find(\"select\").eq(0).focus()},autosubmit:function(){}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:'<input type=\"text\">',inputclass:null,format:\"YYYY-MM-DD\",viewformat:null,template:\"D / MMM / YYYY\",combodate:null}),a.fn.editabletypes.combodate=b}(window.jQuery),function(a){\"use strict\";var b=a.fn.editableform.Constructor.prototype.initInput;a.extend(a.fn.editableform.Constructor.prototype,{initTemplate:function(){this.$form=a(a.fn.editableform.template),this.$form.find(\".control-group\").addClass(\"form-group\"),this.$form.find(\".editable-error-block\").addClass(\"help-block\")},initInput:function(){b.apply(this);var c=null===this.input.options.inputclass||this.input.options.inputclass===!1,d=\"input-sm\",e=\"text,select,textarea,password,email,url,tel,number,range,time,typeaheadjs\".split(\",\");~a.inArray(this.input.type,e)&&(this.input.$input.addClass(\"form-control\"),c&&(this.input.options.inputclass=d,this.input.$input.addClass(d)));for(var f=this.$form.find(\".editable-buttons\"),g=c?[d]:this.input.options.inputclass.split(\" \"),h=0;h<g.length;h++)\"input-lg\"===g[h].toLowerCase()&&f.find(\"button\").removeClass(\"btn-sm\").addClass(\"btn-lg\")}}),a.fn.editableform.buttons='<button type=\"submit\" class=\"btn btn-primary btn-sm editable-submit\"><i class=\"glyphicon glyphicon-ok\"></i></button><button type=\"button\" class=\"btn btn-default btn-sm editable-cancel\"><i class=\"glyphicon glyphicon-remove\"></i></button>',a.fn.editableform.errorGroupClass=\"has-error\",a.fn.editableform.errorBlockClass=null,a.fn.editableform.engine=\"bs3\"}(window.jQuery),function(a){\"use strict\";a.extend(a.fn.editableContainer.Popup.prototype,{containerName:\"popover\",containerDataName:\"bs.popover\",innerCss:\".popover-content\",defaults:a.fn.popover.Constructor.DEFAULTS,initContainer:function(){a.extend(this.containerOptions,{trigger:\"manual\",selector:!1,content:\" \",template:this.defaults.template});var b;this.$element.data(\"template\")&&(b=this.$element.data(\"template\"),this.$element.removeData(\"template\")),this.call(this.containerOptions),b&&this.$element.data(\"template\",b)},innerShow:function(){this.call(\"show\")},innerHide:function(){this.call(\"hide\")},innerDestroy:function(){this.call(\"destroy\")},setContainerOption:function(a,b){this.container().options[a]=b},setPosition:function(){!function(){var a=this.tip(),b=\"function\"==typeof this.options.placement?this.options.placement.call(this,a[0],this.$element[0]):this.options.placement,c=/\\s?auto?\\s?/i,d=c.test(b);d&&(b=b.replace(c,\"\")||\"top\");var e=this.getPosition(),f=a[0].offsetWidth,g=a[0].offsetHeight;if(d){var h=this.$element.parent(),i=b,j=document.documentElement.scrollTop||document.body.scrollTop,k=\"body\"==this.options.container?window.innerWidth:h.outerWidth(),l=\"body\"==this.options.container?window.innerHeight:h.outerHeight(),m=\"body\"==this.options.container?0:h.offset().left;b=\"bottom\"==b&&e.top+e.height+g-j>l?\"top\":\"top\"==b&&e.top-j-g<0?\"bottom\":\"right\"==b&&e.right+f>k?\"left\":\"left\"==b&&e.left-f<m?\"right\":b,a.removeClass(i).addClass(b)}var n=this.getCalculatedOffset(b,e,f,g);this.applyPlacement(n,b)}.call(this.container())}})}(window.jQuery),function(a){function b(){return new Date(Date.UTC.apply(Date,arguments))}function c(b,c){var d,e=a(b).data(),f={},g=new RegExp(\"^\"+c.toLowerCase()+\"([A-Z])\"),c=new RegExp(\"^\"+c.toLowerCase());for(var h in e)c.test(h)&&(d=h.replace(g,function(a,b){return b.toLowerCase()}),f[d]=e[h]);return f}function d(b){var c={};if(k[b]||(b=b.split(\"-\")[0],k[b])){var d=k[b];return a.each(j,function(a,b){b in d&&(c[b]=d[b])}),c}}var e=function(b,c){this._process_options(c),this.element=a(b),this.isInline=!1,this.isInput=this.element.is(\"input\"),this.component=this.element.is(\".date\")?this.element.find(\".add-on, .btn\"):!1,this.hasInput=this.component&&this.element.find(\"input\").length,this.component&&0===this.component.length&&(this.component=!1),this.picker=a(l.template),this._buildEvents(),this._attachEvents(),this.isInline?this.picker.addClass(\"datepicker-inline\").appendTo(this.element):this.picker.addClass(\"datepicker-dropdown dropdown-menu\"),this.o.rtl&&(this.picker.addClass(\"datepicker-rtl\"),this.picker.find(\".prev i, .next i\").toggleClass(\"icon-arrow-left icon-arrow-right\")),this.viewMode=this.o.startView,this.o.calendarWeeks&&this.picker.find(\"tfoot th.today\").attr(\"colspan\",function(a,b){return parseInt(b)+1}),this._allow_update=!1,this.setStartDate(this.o.startDate),this.setEndDate(this.o.endDate),this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled),this.fillDow(),this.fillMonths(),this._allow_update=!0,this.update(),this.showMode(),this.isInline&&this.show()};e.prototype={constructor:e,_process_options:function(b){this._o=a.extend({},this._o,b);var c=this.o=a.extend({},this._o),d=c.language;switch(k[d]||(d=d.split(\"-\")[0],k[d]||(d=i.language)),c.language=d,c.startView){case 2:case\"decade\":c.startView=2;break;case 1:case\"year\":c.startView=1;break;default:c.startView=0}switch(c.minViewMode){case 1:case\"months\":c.minViewMode=1;break;case 2:case\"years\":c.minViewMode=2;break;default:c.minViewMode=0}c.startView=Math.max(c.startView,c.minViewMode),c.weekStart%=7,c.weekEnd=(c.weekStart+6)%7;var e=l.parseFormat(c.format);c.startDate!==-1/0&&(c.startDate=l.parseDate(c.startDate,e,c.language)),1/0!==c.endDate&&(c.endDate=l.parseDate(c.endDate,e,c.language)),c.daysOfWeekDisabled=c.daysOfWeekDisabled||[],a.isArray(c.daysOfWeekDisabled)||(c.daysOfWeekDisabled=c.daysOfWeekDisabled.split(/[,\\s]*/)),c.daysOfWeekDisabled=a.map(c.daysOfWeekDisabled,function(a){return parseInt(a,10)})},_events:[],_secondaryEvents:[],_applyEvents:function(a){for(var b,c,d=0;d<a.length;d++)b=a[d][0],c=a[d][1],b.on(c)},_unapplyEvents:function(a){for(var b,c,d=0;d<a.length;d++)b=a[d][0],c=a[d][1],b.off(c)},_buildEvents:function(){this.isInput?this._events=[[this.element,{focus:a.proxy(this.show,this),keyup:a.proxy(this.update,this),keydown:a.proxy(this.keydown,this)}]]:this.component&&this.hasInput?this._events=[[this.element.find(\"input\"),{focus:a.proxy(this.show,this),keyup:a.proxy(this.update,this),keydown:a.proxy(this.keydown,this)}],[this.component,{click:a.proxy(this.show,this)}]]:this.element.is(\"div\")?this.isInline=!0:this._events=[[this.element,{click:a.proxy(this.show,this)}]],this._secondaryEvents=[[this.picker,{click:a.proxy(this.click,this)}],[a(window),{resize:a.proxy(this.place,this)}],[a(document),{mousedown:a.proxy(function(a){this.element.is(a.target)||this.element.find(a.target).size()||this.picker.is(a.target)||this.picker.find(a.target).size()||this.hide()},this)}]]},_attachEvents:function(){this._detachEvents(),this._applyEvents(this._events)},_detachEvents:function(){this._unapplyEvents(this._events)},_attachSecondaryEvents:function(){this._detachSecondaryEvents(),this._applyEvents(this._secondaryEvents)},_detachSecondaryEvents:function(){this._unapplyEvents(this._secondaryEvents)},_trigger:function(b,c){var d=c||this.date,e=new Date(d.getTime()+6e4*d.getTimezoneOffset());this.element.trigger({type:b,date:e,format:a.proxy(function(a){var b=a||this.o.format;return l.formatDate(d,b,this.o.language)},this)})},show:function(a){this.isInline||this.picker.appendTo(\"body\"),this.picker.show(),this.height=this.component?this.component.outerHeight():this.element.outerHeight(),this.place(),this._attachSecondaryEvents(),a&&a.preventDefault(),this._trigger(\"show\")},hide:function(){this.isInline||this.picker.is(\":visible\")&&(this.picker.hide().detach(),this._detachSecondaryEvents(),this.viewMode=this.o.startView,this.showMode(),this.o.forceParse&&(this.isInput&&this.element.val()||this.hasInput&&this.element.find(\"input\").val())&&this.setValue(),this._trigger(\"hide\"))},remove:function(){this.hide(),this._detachEvents(),this._detachSecondaryEvents(),this.picker.remove(),delete this.element.data().datepicker,this.isInput||delete this.element.data().date},getDate:function(){var a=this.getUTCDate();return new Date(a.getTime()+6e4*a.getTimezoneOffset())},getUTCDate:function(){return this.date},setDate:function(a){this.setUTCDate(new Date(a.getTime()-6e4*a.getTimezoneOffset()))},setUTCDate:function(a){this.date=a,this.setValue()},setValue:function(){var a=this.getFormattedDate();this.isInput?this.element.val(a):this.component&&this.element.find(\"input\").val(a)},getFormattedDate:function(a){return void 0===a&&(a=this.o.format),l.formatDate(this.date,a,this.o.language)},setStartDate:function(a){this._process_options({startDate:a}),this.update(),this.updateNavArrows()},setEndDate:function(a){this._process_options({endDate:a}),this.update(),this.updateNavArrows()},setDaysOfWeekDisabled:function(a){this._process_options({daysOfWeekDisabled:a}),this.update(),this.updateNavArrows()},place:function(){if(!this.isInline){var b=parseInt(this.element.parents().filter(function(){return\"auto\"!=a(this).css(\"z-index\")}).first().css(\"z-index\"))+10,c=this.component?this.component.parent().offset():this.element.offset(),d=this.component?this.component.outerHeight(!0):this.element.outerHeight(!0);this.picker.css({top:c.top+d,left:c.left,zIndex:b})}},_allow_update:!0,update:function(){if(this._allow_update){var a,b=!1;arguments&&arguments.length&&(\"string\"==typeof arguments[0]||arguments[0]instanceof Date)?(a=arguments[0],b=!0):(a=this.isInput?this.element.val():this.element.data(\"date\")||this.element.find(\"input\").val(),delete this.element.data().date),this.date=l.parseDate(a,this.o.format,this.o.language),b&&this.setValue(),this.viewDate=this.date<this.o.startDate?new Date(this.o.startDate):this.date>this.o.endDate?new Date(this.o.endDate):new Date(this.date),this.fill()}},fillDow:function(){var a=this.o.weekStart,b=\"<tr>\";if(this.o.calendarWeeks){var c='<th class=\"cw\">&nbsp;</th>';b+=c,this.picker.find(\".datepicker-days thead tr:first-child\").prepend(c)}for(;a<this.o.weekStart+7;)b+='<th class=\"dow\">'+k[this.o.language].daysMin[a++%7]+\"</th>\";b+=\"</tr>\",this.picker.find(\".datepicker-days thead\").append(b)},fillMonths:function(){for(var a=\"\",b=0;12>b;)a+='<span class=\"month\">'+k[this.o.language].monthsShort[b++]+\"</span>\";this.picker.find(\".datepicker-months td\").html(a)},setRange:function(b){b&&b.length?this.range=a.map(b,function(a){return a.valueOf()}):delete this.range,this.fill()},getClassNames:function(b){var c=[],d=this.viewDate.getUTCFullYear(),e=this.viewDate.getUTCMonth(),f=this.date.valueOf(),g=new Date;return b.getUTCFullYear()<d||b.getUTCFullYear()==d&&b.getUTCMonth()<e?c.push(\"old\"):(b.getUTCFullYear()>d||b.getUTCFullYear()==d&&b.getUTCMonth()>e)&&c.push(\"new\"),this.o.todayHighlight&&b.getUTCFullYear()==g.getFullYear()&&b.getUTCMonth()==g.getMonth()&&b.getUTCDate()==g.getDate()&&c.push(\"today\"),f&&b.valueOf()==f&&c.push(\"active\"),(b.valueOf()<this.o.startDate||b.valueOf()>this.o.endDate||-1!==a.inArray(b.getUTCDay(),this.o.daysOfWeekDisabled))&&c.push(\"disabled\"),this.range&&(b>this.range[0]&&b<this.range[this.range.length-1]&&c.push(\"range\"),-1!=a.inArray(b.valueOf(),this.range)&&c.push(\"selected\")),c},fill:function(){var c,d=new Date(this.viewDate),e=d.getUTCFullYear(),f=d.getUTCMonth(),g=this.o.startDate!==-1/0?this.o.startDate.getUTCFullYear():-1/0,h=this.o.startDate!==-1/0?this.o.startDate.getUTCMonth():-1/0,i=1/0!==this.o.endDate?this.o.endDate.getUTCFullYear():1/0,j=1/0!==this.o.endDate?this.o.endDate.getUTCMonth():1/0;this.date&&this.date.valueOf(),this.picker.find(\".datepicker-days thead th.datepicker-switch\").text(k[this.o.language].months[f]+\" \"+e),this.picker.find(\"tfoot th.today\").text(k[this.o.language].today).toggle(this.o.todayBtn!==!1),this.picker.find(\"tfoot th.clear\").text(k[this.o.language].clear).toggle(this.o.clearBtn!==!1),this.updateNavArrows(),this.fillMonths();var m=b(e,f-1,28,0,0,0,0),n=l.getDaysInMonth(m.getUTCFullYear(),m.getUTCMonth());m.setUTCDate(n),m.setUTCDate(n-(m.getUTCDay()-this.o.weekStart+7)%7);var o=new Date(m);o.setUTCDate(o.getUTCDate()+42),o=o.valueOf();for(var p,q=[];m.valueOf()<o;){if(m.getUTCDay()==this.o.weekStart&&(q.push(\"<tr>\"),this.o.calendarWeeks)){var r=new Date(+m+864e5*((this.o.weekStart-m.getUTCDay()-7)%7)),s=new Date(+r+864e5*((11-r.getUTCDay())%7)),t=new Date(+(t=b(s.getUTCFullYear(),0,1))+864e5*((11-t.getUTCDay())%7)),u=(s-t)/864e5/7+1;q.push('<td class=\"cw\">'+u+\"</td>\")}p=this.getClassNames(m),p.push(\"day\");var v=this.o.beforeShowDay(m);void 0===v?v={}:\"boolean\"==typeof v?v={enabled:v}:\"string\"==typeof v&&(v={classes:v}),v.enabled===!1&&p.push(\"disabled\"),v.classes&&(p=p.concat(v.classes.split(/\\s+/))),v.tooltip&&(c=v.tooltip),p=a.unique(p),q.push('<td class=\"'+p.join(\" \")+'\"'+(c?' title=\"'+c+'\"':\"\")+\">\"+m.getUTCDate()+\"</td>\"),m.getUTCDay()==this.o.weekEnd&&q.push(\"</tr>\"),m.setUTCDate(m.getUTCDate()+1)}this.picker.find(\".datepicker-days tbody\").empty().append(q.join(\"\"));var w=this.date&&this.date.getUTCFullYear(),x=this.picker.find(\".datepicker-months\").find(\"th:eq(1)\").text(e).end().find(\"span\").removeClass(\"active\");w&&w==e&&x.eq(this.date.getUTCMonth()).addClass(\"active\"),(g>e||e>i)&&x.addClass(\"disabled\"),e==g&&x.slice(0,h).addClass(\"disabled\"),e==i&&x.slice(j+1).addClass(\"disabled\"),q=\"\",e=10*parseInt(e/10,10);var y=this.picker.find(\".datepicker-years\").find(\"th:eq(1)\").text(e+\"-\"+(e+9)).end().find(\"td\");e-=1;for(var z=-1;11>z;z++)q+='<span class=\"year'+(-1==z?\" old\":10==z?\" new\":\"\")+(w==e?\" active\":\"\")+(g>e||e>i?\" disabled\":\"\")+'\">'+e+\"</span>\",e+=1;y.html(q)},updateNavArrows:function(){if(this._allow_update){var a=new Date(this.viewDate),b=a.getUTCFullYear(),c=a.getUTCMonth();switch(this.viewMode){case 0:this.o.startDate!==-1/0&&b<=this.o.startDate.getUTCFullYear()&&c<=this.o.startDate.getUTCMonth()?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),1/0!==this.o.endDate&&b>=this.o.endDate.getUTCFullYear()&&c>=this.o.endDate.getUTCMonth()?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"});break;case 1:case 2:this.o.startDate!==-1/0&&b<=this.o.startDate.getUTCFullYear()?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),1/0!==this.o.endDate&&b>=this.o.endDate.getUTCFullYear()?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"})}}},click:function(c){c.preventDefault();var d=a(c.target).closest(\"span, td, th\");if(1==d.length)switch(d[0].nodeName.toLowerCase()){case\"th\":switch(d[0].className){case\"datepicker-switch\":this.showMode(1);break;case\"prev\":case\"next\":var e=l.modes[this.viewMode].navStep*(\"prev\"==d[0].className?-1:1);switch(this.viewMode){case 0:this.viewDate=this.moveMonth(this.viewDate,e);break;case 1:case 2:this.viewDate=this.moveYear(this.viewDate,e)}this.fill();break;case\"today\":var f=new Date;f=b(f.getFullYear(),f.getMonth(),f.getDate(),0,0,0),this.showMode(-2);var g=\"linked\"==this.o.todayBtn?null:\"view\";this._setDate(f,g);break;case\"clear\":var h;this.isInput?h=this.element:this.component&&(h=this.element.find(\"input\")),h&&h.val(\"\").change(),this._trigger(\"changeDate\"),this.update(),this.o.autoclose&&this.hide()}break;case\"span\":if(!d.is(\".disabled\")){if(this.viewDate.setUTCDate(1),d.is(\".month\")){var i=1,j=d.parent().find(\"span\").index(d),k=this.viewDate.getUTCFullYear();this.viewDate.setUTCMonth(j),this._trigger(\"changeMonth\",this.viewDate),1===this.o.minViewMode&&this._setDate(b(k,j,i,0,0,0,0))}else{var k=parseInt(d.text(),10)||0,i=1,j=0;this.viewDate.setUTCFullYear(k),this._trigger(\"changeYear\",this.viewDate),2===this.o.minViewMode&&this._setDate(b(k,j,i,0,0,0,0))}this.showMode(-1),this.fill()}break;case\"td\":if(d.is(\".day\")&&!d.is(\".disabled\")){var i=parseInt(d.text(),10)||1,k=this.viewDate.getUTCFullYear(),j=this.viewDate.getUTCMonth();d.is(\".old\")?0===j?(j=11,k-=1):j-=1:d.is(\".new\")&&(11==j?(j=0,k+=1):j+=1),this._setDate(b(k,j,i,0,0,0,0))}}},_setDate:function(a,b){b&&\"date\"!=b||(this.date=new Date(a)),b&&\"view\"!=b||(this.viewDate=new Date(a)),this.fill(),this.setValue(),this._trigger(\"changeDate\");var c;this.isInput?c=this.element:this.component&&(c=this.element.find(\"input\")),c&&(c.change(),!this.o.autoclose||b&&\"date\"!=b||this.hide())},moveMonth:function(a,b){if(!b)return a;var c,d,e=new Date(a.valueOf()),f=e.getUTCDate(),g=e.getUTCMonth(),h=Math.abs(b);if(b=b>0?1:-1,1==h)d=-1==b?function(){return e.getUTCMonth()==g}:function(){return e.getUTCMonth()!=c},c=g+b,e.setUTCMonth(c),(0>c||c>11)&&(c=(c+12)%12);else{for(var i=0;h>i;i++)e=this.moveMonth(e,b);c=e.getUTCMonth(),e.setUTCDate(f),d=function(){return c!=e.getUTCMonth()}}for(;d();)e.setUTCDate(--f),e.setUTCMonth(c);return e},moveYear:function(a,b){return this.moveMonth(a,12*b)},dateWithinRange:function(a){return a>=this.o.startDate&&a<=this.o.endDate},keydown:function(a){if(this.picker.is(\":not(:visible)\"))return 27==a.keyCode&&this.show(),void 0;var b,c,d,e=!1;switch(a.keyCode){case 27:this.hide(),a.preventDefault();break;case 37:case 39:if(!this.o.keyboardNavigation)break;b=37==a.keyCode?-1:1,a.ctrlKey?(c=this.moveYear(this.date,b),d=this.moveYear(this.viewDate,b)):a.shiftKey?(c=this.moveMonth(this.date,b),d=this.moveMonth(this.viewDate,b)):(c=new Date(this.date),c.setUTCDate(this.date.getUTCDate()+b),d=new Date(this.viewDate),d.setUTCDate(this.viewDate.getUTCDate()+b)),this.dateWithinRange(c)&&(this.date=c,this.viewDate=d,this.setValue(),this.update(),a.preventDefault(),e=!0);break;case 38:case 40:if(!this.o.keyboardNavigation)break;b=38==a.keyCode?-1:1,a.ctrlKey?(c=this.moveYear(this.date,b),d=this.moveYear(this.viewDate,b)):a.shiftKey?(c=this.moveMonth(this.date,b),d=this.moveMonth(this.viewDate,b)):(c=new Date(this.date),c.setUTCDate(this.date.getUTCDate()+7*b),d=new Date(this.viewDate),d.setUTCDate(this.viewDate.getUTCDate()+7*b)),this.dateWithinRange(c)&&(this.date=c,this.viewDate=d,this.setValue(),this.update(),a.preventDefault(),e=!0);break;case 13:this.hide(),a.preventDefault();break;case 9:this.hide()}if(e){this._trigger(\"changeDate\");var f;this.isInput?f=this.element:this.component&&(f=this.element.find(\"input\")),f&&f.change()}},showMode:function(a){a&&(this.viewMode=Math.max(this.o.minViewMode,Math.min(2,this.viewMode+a))),this.picker.find(\">div\").hide().filter(\".datepicker-\"+l.modes[this.viewMode].clsName).css(\"display\",\"block\"),this.updateNavArrows()}};var f=function(b,c){this.element=a(b),this.inputs=a.map(c.inputs,function(a){return a.jquery?a[0]:a}),delete c.inputs,a(this.inputs).datepicker(c).bind(\"changeDate\",a.proxy(this.dateUpdated,this)),this.pickers=a.map(this.inputs,function(b){return a(b).data(\"datepicker\")}),this.updateDates()};f.prototype={updateDates:function(){this.dates=a.map(this.pickers,function(a){return a.date}),this.updateRanges()},updateRanges:function(){var b=a.map(this.dates,function(a){return a.valueOf()});a.each(this.pickers,function(a,c){c.setRange(b)})},dateUpdated:function(b){var c=a(b.target).data(\"datepicker\"),d=c.getUTCDate(),e=a.inArray(b.target,this.inputs),f=this.inputs.length;if(-1!=e){if(d<this.dates[e])for(;e>=0&&d<this.dates[e];)this.pickers[e--].setUTCDate(d);else if(d>this.dates[e])for(;f>e&&d>this.dates[e];)this.pickers[e++].setUTCDate(d);this.updateDates()}},remove:function(){a.map(this.pickers,function(a){a.remove()}),delete this.element.data().datepicker}};var g=a.fn.datepicker,h=a.fn.datepicker=function(b){var g=Array.apply(null,arguments);g.shift();var h;return this.each(function(){var j=a(this),k=j.data(\"datepicker\"),l=\"object\"==typeof b&&b;if(!k){var m=c(this,\"date\"),n=a.extend({},i,m,l),o=d(n.language),p=a.extend({},i,o,m,l);if(j.is(\".input-daterange\")||p.inputs){var q={inputs:p.inputs||j.find(\"input\").toArray()};j.data(\"datepicker\",k=new f(this,a.extend(p,q)))}else j.data(\"datepicker\",k=new e(this,p))}return\"string\"==typeof b&&\"function\"==typeof k[b]&&(h=k[b].apply(k,g),void 0!==h)?!1:void 0}),void 0!==h?h:this},i=a.fn.datepicker.defaults={autoclose:!1,beforeShowDay:a.noop,calendarWeeks:!1,clearBtn:!1,daysOfWeekDisabled:[],endDate:1/0,forceParse:!0,format:\"mm/dd/yyyy\",keyboardNavigation:!0,language:\"en\",minViewMode:0,rtl:!1,startDate:-1/0,startView:0,todayBtn:!1,todayHighlight:!1,weekStart:0},j=a.fn.datepicker.locale_opts=[\"format\",\"rtl\",\"weekStart\"];a.fn.datepicker.Constructor=e;var k=a.fn.datepicker.dates={en:{days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"],daysShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"],daysMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\",\"Su\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthsShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],today:\"Today\",clear:\"Clear\"}},l={modes:[{clsName:\"days\",navFnc:\"Month\",navStep:1},{clsName:\"months\",navFnc:\"FullYear\",navStep:1},{clsName:\"years\",navFnc:\"FullYear\",navStep:10}],isLeapYear:function(a){return 0===a%4&&0!==a%100||0===a%400\n},getDaysInMonth:function(a,b){return[31,l.isLeapYear(a)?29:28,31,30,31,30,31,31,30,31,30,31][b]},validParts:/dd?|DD?|mm?|MM?|yy(?:yy)?/g,nonpunctuation:/[^ -\\/:-@\\[\\u3400-\\u9fff-`{-~\\t\\n\\r]+/g,parseFormat:function(a){var b=a.replace(this.validParts,\"\\0\").split(\"\\0\"),c=a.match(this.validParts);if(!b||!b.length||!c||0===c.length)throw new Error(\"Invalid date format.\");return{separators:b,parts:c}},parseDate:function(c,d,f){if(c instanceof Date)return c;if(\"string\"==typeof d&&(d=l.parseFormat(d)),/^[\\-+]\\d+[dmwy]([\\s,]+[\\-+]\\d+[dmwy])*$/.test(c)){var g,h,i=/([\\-+]\\d+)([dmwy])/,j=c.match(/([\\-+]\\d+)([dmwy])/g);c=new Date;for(var m=0;m<j.length;m++)switch(g=i.exec(j[m]),h=parseInt(g[1]),g[2]){case\"d\":c.setUTCDate(c.getUTCDate()+h);break;case\"m\":c=e.prototype.moveMonth.call(e.prototype,c,h);break;case\"w\":c.setUTCDate(c.getUTCDate()+7*h);break;case\"y\":c=e.prototype.moveYear.call(e.prototype,c,h)}return b(c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate(),0,0,0)}var n,o,g,j=c&&c.match(this.nonpunctuation)||[],c=new Date,p={},q=[\"yyyy\",\"yy\",\"M\",\"MM\",\"m\",\"mm\",\"d\",\"dd\"],r={yyyy:function(a,b){return a.setUTCFullYear(b)},yy:function(a,b){return a.setUTCFullYear(2e3+b)},m:function(a,b){for(b-=1;0>b;)b+=12;for(b%=12,a.setUTCMonth(b);a.getUTCMonth()!=b;)a.setUTCDate(a.getUTCDate()-1);return a},d:function(a,b){return a.setUTCDate(b)}};r.M=r.MM=r.mm=r.m,r.dd=r.d,c=b(c.getFullYear(),c.getMonth(),c.getDate(),0,0,0);var s=d.parts.slice();if(j.length!=s.length&&(s=a(s).filter(function(b,c){return-1!==a.inArray(c,q)}).toArray()),j.length==s.length){for(var m=0,t=s.length;t>m;m++){if(n=parseInt(j[m],10),g=s[m],isNaN(n))switch(g){case\"MM\":o=a(k[f].months).filter(function(){var a=this.slice(0,j[m].length),b=j[m].slice(0,a.length);return a==b}),n=a.inArray(o[0],k[f].months)+1;break;case\"M\":o=a(k[f].monthsShort).filter(function(){var a=this.slice(0,j[m].length),b=j[m].slice(0,a.length);return a==b}),n=a.inArray(o[0],k[f].monthsShort)+1}p[g]=n}for(var u,m=0;m<q.length;m++)u=q[m],u in p&&!isNaN(p[u])&&r[u](c,p[u])}return c},formatDate:function(b,c,d){\"string\"==typeof c&&(c=l.parseFormat(c));var e={d:b.getUTCDate(),D:k[d].daysShort[b.getUTCDay()],DD:k[d].days[b.getUTCDay()],m:b.getUTCMonth()+1,M:k[d].monthsShort[b.getUTCMonth()],MM:k[d].months[b.getUTCMonth()],yy:b.getUTCFullYear().toString().substring(2),yyyy:b.getUTCFullYear()};e.dd=(e.d<10?\"0\":\"\")+e.d,e.mm=(e.m<10?\"0\":\"\")+e.m;for(var b=[],f=a.extend([],c.separators),g=0,h=c.parts.length;h>=g;g++)f.length&&b.push(f.shift()),b.push(e[c.parts[g]]);return b.join(\"\")},headTemplate:'<thead><tr><th class=\"prev\"><i class=\"icon-arrow-left\"/></th><th colspan=\"5\" class=\"datepicker-switch\"></th><th class=\"next\"><i class=\"icon-arrow-right\"/></th></tr></thead>',contTemplate:'<tbody><tr><td colspan=\"7\"></td></tr></tbody>',footTemplate:'<tfoot><tr><th colspan=\"7\" class=\"today\"></th></tr><tr><th colspan=\"7\" class=\"clear\"></th></tr></tfoot>'};l.template='<div class=\"datepicker\"><div class=\"datepicker-days\"><table class=\" table-condensed\">'+l.headTemplate+\"<tbody></tbody>\"+l.footTemplate+\"</table>\"+\"</div>\"+'<div class=\"datepicker-months\">'+'<table class=\"table-condensed\">'+l.headTemplate+l.contTemplate+l.footTemplate+\"</table>\"+\"</div>\"+'<div class=\"datepicker-years\">'+'<table class=\"table-condensed\">'+l.headTemplate+l.contTemplate+l.footTemplate+\"</table>\"+\"</div>\"+\"</div>\",a.fn.datepicker.DPGlobal=l,a.fn.datepicker.noConflict=function(){return a.fn.datepicker=g,this},a(document).on(\"focus.datepicker.data-api click.datepicker.data-api\",'[data-provide=\"datepicker\"]',function(b){var c=a(this);c.data(\"datepicker\")||(b.preventDefault(),h.call(c,\"show\"))}),a(function(){h.call(a('[data-provide=\"datepicker-inline\"]'))})}(window.jQuery),function(a){\"use strict\";a.fn.bdatepicker=a.fn.datepicker.noConflict(),a.fn.datepicker||(a.fn.datepicker=a.fn.bdatepicker);var b=function(a){this.init(\"date\",a,b.defaults),this.initPicker(a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{initPicker:function(b,c){this.options.viewformat||(this.options.viewformat=this.options.format),b.datepicker=a.fn.editableutils.tryParseJson(b.datepicker,!0),this.options.datepicker=a.extend({},c.datepicker,b.datepicker,{format:this.options.viewformat}),this.options.datepicker.language=this.options.datepicker.language||\"en\",this.dpg=a.fn.bdatepicker.DPGlobal,this.parsedFormat=this.dpg.parseFormat(this.options.format),this.parsedViewFormat=this.dpg.parseFormat(this.options.viewformat)},render:function(){this.$input.bdatepicker(this.options.datepicker),this.options.clear&&(this.$clear=a('<a href=\"#\"></a>').html(this.options.clear).click(a.proxy(function(a){a.preventDefault(),a.stopPropagation(),this.clear()},this)),this.$tpl.parent().append(a('<div class=\"editable-clear\">').append(this.$clear)))},value2html:function(a,c){var d=a?this.dpg.formatDate(a,this.parsedViewFormat,this.options.datepicker.language):\"\";b.superclass.value2html.call(this,d,c)},html2value:function(a){return this.parseDate(a,this.parsedViewFormat)},value2str:function(a){return a?this.dpg.formatDate(a,this.parsedFormat,this.options.datepicker.language):\"\"},str2value:function(a){return this.parseDate(a,this.parsedFormat)},value2submit:function(a){return this.value2str(a)},value2input:function(a){this.$input.bdatepicker(\"update\",a)},input2value:function(){return this.$input.data(\"datepicker\").date},activate:function(){},clear:function(){this.$input.data(\"datepicker\").date=null,this.$input.find(\".active\").removeClass(\"active\"),this.options.showbuttons||this.$input.closest(\"form\").submit()},autosubmit:function(){this.$input.on(\"mouseup\",\".day\",function(b){if(!a(b.currentTarget).is(\".old\")&&!a(b.currentTarget).is(\".new\")){var c=a(this).closest(\"form\");setTimeout(function(){c.submit()},200)}})},parseDate:function(a,b){var c,d=null;return a&&(d=this.dpg.parseDate(a,b,this.options.datepicker.language),\"string\"==typeof a&&(c=this.dpg.formatDate(d,b,this.options.datepicker.language),a!==c&&(d=null))),d}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:'<div class=\"editable-date well\"></div>',inputclass:null,format:\"yyyy-mm-dd\",viewformat:null,datepicker:{weekStart:0,startView:0,minViewMode:0,autoclose:!1},clear:\"&times; clear\"}),a.fn.editabletypes.date=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"datefield\",a,b.defaults),this.initPicker(a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.date),a.extend(b.prototype,{render:function(){this.$input=this.$tpl.find(\"input\"),this.setClass(),this.setAttr(\"placeholder\"),this.$tpl.bdatepicker(this.options.datepicker),this.$input.off(\"focus keydown\"),this.$input.keyup(a.proxy(function(){this.$tpl.removeData(\"date\"),this.$tpl.bdatepicker(\"update\")},this))},value2input:function(a){this.$input.val(a?this.dpg.formatDate(a,this.parsedViewFormat,this.options.datepicker.language):\"\"),this.$tpl.bdatepicker(\"update\")},input2value:function(){return this.html2value(this.$input.val())},activate:function(){a.fn.editabletypes.text.prototype.activate.call(this)},autosubmit:function(){}}),b.defaults=a.extend({},a.fn.editabletypes.date.defaults,{tpl:'<div class=\"input-append date\"><input type=\"text\"/><span class=\"add-on\"><i class=\"icon-th\"></i></span></div>',inputclass:\"input-small\",datepicker:{weekStart:0,startView:0,minViewMode:0,autoclose:!0}}),a.fn.editabletypes.datefield=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"datetime\",a,b.defaults),this.initPicker(a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.abstractinput),a.extend(b.prototype,{initPicker:function(b,c){this.options.viewformat||(this.options.viewformat=this.options.format),b.datetimepicker=a.fn.editableutils.tryParseJson(b.datetimepicker,!0),this.options.datetimepicker=a.extend({},c.datetimepicker,b.datetimepicker,{format:this.options.viewformat}),this.options.datetimepicker.language=this.options.datetimepicker.language||\"en\",this.dpg=a.fn.datetimepicker.DPGlobal,this.parsedFormat=this.dpg.parseFormat(this.options.format,this.options.formatType),this.parsedViewFormat=this.dpg.parseFormat(this.options.viewformat,this.options.formatType)},render:function(){this.$input.datetimepicker(this.options.datetimepicker),this.$input.on(\"changeMode\",function(){var b=a(this).closest(\"form\").parent();setTimeout(function(){b.triggerHandler(\"resize\")},0)}),this.options.clear&&(this.$clear=a('<a href=\"#\"></a>').html(this.options.clear).click(a.proxy(function(a){a.preventDefault(),a.stopPropagation(),this.clear()},this)),this.$tpl.parent().append(a('<div class=\"editable-clear\">').append(this.$clear)))},value2html:function(a,c){var d=a?this.dpg.formatDate(this.toUTC(a),this.parsedViewFormat,this.options.datetimepicker.language,this.options.formatType):\"\";return c?(b.superclass.value2html.call(this,d,c),void 0):d},html2value:function(a){var b=this.parseDate(a,this.parsedViewFormat);return b?this.fromUTC(b):null},value2str:function(a){return a?this.dpg.formatDate(this.toUTC(a),this.parsedFormat,this.options.datetimepicker.language,this.options.formatType):\"\"},str2value:function(a){var b=this.parseDate(a,this.parsedFormat);return b?this.fromUTC(b):null},value2submit:function(a){return this.value2str(a)},value2input:function(a){a&&this.$input.data(\"datetimepicker\").setDate(a)},input2value:function(){var a=this.$input.data(\"datetimepicker\");return a.date?a.getDate():null},activate:function(){},clear:function(){this.$input.data(\"datetimepicker\").date=null,this.$input.find(\".active\").removeClass(\"active\"),this.options.showbuttons||this.$input.closest(\"form\").submit()},autosubmit:function(){this.$input.on(\"mouseup\",\".minute\",function(){var b=a(this).closest(\"form\");setTimeout(function(){b.submit()},200)})},toUTC:function(a){return a?new Date(a.valueOf()-6e4*a.getTimezoneOffset()):a},fromUTC:function(a){return a?new Date(a.valueOf()+6e4*a.getTimezoneOffset()):a},parseDate:function(a,b){var c,d=null;return a&&(d=this.dpg.parseDate(a,b,this.options.datetimepicker.language,this.options.formatType),\"string\"==typeof a&&(c=this.dpg.formatDate(d,b,this.options.datetimepicker.language,this.options.formatType),a!==c&&(d=null))),d}}),b.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:'<div class=\"editable-date well\"></div>',inputclass:null,format:\"yyyy-mm-dd hh:ii\",formatType:\"standard\",viewformat:null,datetimepicker:{todayHighlight:!1,autoclose:!1},clear:\"&times; clear\"}),a.fn.editabletypes.datetime=b}(window.jQuery),function(a){\"use strict\";var b=function(a){this.init(\"datetimefield\",a,b.defaults),this.initPicker(a,b.defaults)};a.fn.editableutils.inherit(b,a.fn.editabletypes.datetime),a.extend(b.prototype,{render:function(){this.$input=this.$tpl.find(\"input\"),this.setClass(),this.setAttr(\"placeholder\"),this.$tpl.datetimepicker(this.options.datetimepicker),this.$input.off(\"focus keydown\"),this.$input.keyup(a.proxy(function(){this.$tpl.removeData(\"date\"),this.$tpl.datetimepicker(\"update\")},this))},value2input:function(a){this.$input.val(this.value2html(a)),this.$tpl.datetimepicker(\"update\")},input2value:function(){return this.html2value(this.$input.val())},activate:function(){a.fn.editabletypes.text.prototype.activate.call(this)},autosubmit:function(){}}),b.defaults=a.extend({},a.fn.editabletypes.datetime.defaults,{tpl:'<div class=\"input-append date\"><input type=\"text\"/><span class=\"add-on\"><i class=\"icon-th\"></i></span></div>',inputclass:\"input-medium\",datetimepicker:{todayHighlight:!1,autoclose:!0}}),a.fn.editabletypes.datetimefield=b}(window.jQuery);\ndefine(\"xEditable\", [\"bootstrap\"], function(){});\n\n",
    "// -----------------------------------\n// Slidebars\n// Version 0.10\n// http://plugins.adchsm.me/slidebars/\n//\n// Written by Adam Smith\n// http://www.adchsm.me/\n//\n// Released under MIT License\n// http://plugins.adchsm.me/slidebars/license.txt\n//\n// ---------------------\n// Index of Slidebars.js\n//\n// 001 - Default Settings\n// 002 - Feature Detection\n// 003 - User Agents\n// 004 - Setup\n// 005 - Animation\n// 006 - Operations\n// 007 - API\n// 008 - User Input\n\n;(function($) {\n\n\t$.slidebars = function(options) {\n\n\t\t// ----------------------\n\t\t// 001 - Default Settings\n\n\t\tvar settings = $.extend({\n\t\t\tsiteClose: true, // true or false - Enable closing of Slidebars by clicking on #sb-site.\n\t\t\tscrollLock: false, // true or false - Prevent scrolling of site when a Slidebar is open.\n\t\t\tdisableOver: false, // integer or false - Hide Slidebars over a specific width.\n\t\t\thideControlClasses: false // true or false - Hide controls at same width as disableOver.\n\t\t}, options);\n\n\t\t// -----------------------\n\t\t// 002 - Feature Detection\n\n\t\tvar test = document.createElement('div').style, // Create element to test on.\n\t\tsupportTransition = false, // Variable for testing transitions.\n\t\tsupportTransform = false; // variable for testing transforms.\n\n\t\t// Test for CSS Transitions\n\t\tif (test.MozTransition === '' || test.WebkitTransition === '' || test.OTransition === '' || test.transition === '') supportTransition = true;\n\n\t\t// Test for CSS Transforms\n\t\tif (test.MozTransform === '' || test.WebkitTransform === '' || test.OTransform === '' || test.transform === '') supportTransform = true;\n\n\t\t// -----------------\n\t\t// 003 - User Agents\n\n\t\tvar ua = navigator.userAgent, // Get user agent string.\n\t\tandroid = false, // Variable for storing android version.\n\t\tiOS = false; // Variable for storing iOS version.\n\t\t\n\t\tif (/Android/.test(ua)) { // Detect Android in user agent string.\n\t\t\tandroid = ua.substr(ua.indexOf('Android')+8, 3); // Set version of Android.\n\t\t} else if (/(iPhone|iPod|iPad)/.test(ua)) { // Detect iOS in user agent string.\n\t\t\tiOS = ua.substr(ua.indexOf('OS ')+3, 3).replace('_', '.'); // Set version of iOS.\n\t\t}\n\t\t\n\t\tif (android && android < 3 || iOS && iOS < 5) $('html').addClass('sb-static'); // Add helper class for older versions of Android & iOS.\n\n\t\t// -----------\n\t\t// 004 - Setup\n\n\t\t// Site container\n\t\tvar $site = $('#sb-site, .sb-site-container'); // Cache the selector.\n\n\t\t// Left Slidebar\t\n\t\tif ($('.sb-left').length) { // Check if the left Slidebar exists.\n\t\t\tvar $left = $('.sb-left'), // Cache the selector.\n\t\t\tleftActive = false; // Used to check whether the left Slidebar is open or closed.\n\t\t}\n\n\t\t// Right Slidebar\n\t\tif ($('.sb-right').length) { // Check if the right Slidebar exists.\n\t\t\tvar $right = $('.sb-right'), // Cache the selector.\n\t\t\trightActive = false; // Used to check whether the right Slidebar is open or closed.\n\t\t}\n\t\t\t\t\n\t\tvar init = false, // Initialisation variable.\n\t\twindowWidth = $(window).width(), // Get width of window.\n\t\t$controls = $('.sb-toggle-left, .sb-toggle-right, .sb-open-left, .sb-open-right, .sb-close'), // Cache the control classes.\n\t\t$slide = $('.sb-slide'); // Cache users elements to animate.\n\t\t\n\t\t// Initailise Slidebars\n\t\tfunction initialise() {\n\t\t\tif (!settings.disableOver || (typeof settings.disableOver === 'number' && settings.disableOver >= windowWidth)) { // False or larger than window size. \n\t\t\t\tinit = true; // true enabled Slidebars to open.\n\t\t\t\t$('html').addClass('sb-init'); // Add helper class.\n\t\t\t\tif (settings.hideControlClasses) $controls.removeClass('sb-hide'); // Remove class just incase Slidebars was originally disabled.\n\t\t\t\tcss(); // Set required inline styles.\n\t\t\t} else if (typeof settings.disableOver === 'number' && settings.disableOver < windowWidth) { // Less than window size.\n\t\t\t\tinit = false; // false stop Slidebars from opening.\n\t\t\t\t$('html').removeClass('sb-init'); // Remove helper class.\n\t\t\t\tif (settings.hideControlClasses) $controls.addClass('sb-hide'); // Hide controls\n\t\t\t\t$site.css('minHeight', ''); // Remove minimum height.\n\t\t\t\tif (leftActive || rightActive) close(); // Close Slidebars if open.\n\t\t\t}\n\t\t}\n\t\tinitialise();\n\t\t\n\t\t// Inline CSS\n\t\tfunction css() {\n\t\t\t// Set minimum height.\n\t\t\t$site.css('minHeight', ''); // Reset minimum height.\n\t\t\t$site.css('minHeight', $('html').height() + 'px'); // Set minimum height of the site to the minimum height of the html.\n\t\t\t\n\t\t\t// Custom Slidebar widths.\n\t\t\tif ($left && $left.hasClass('sb-width-custom')) $left.css('width', $left.attr('data-sb-width')); // Set user custom width.\n\t\t\tif ($right && $right.hasClass('sb-width-custom')) $right.css('width', $right.attr('data-sb-width')); // Set user custom width.\n\t\t\t\n\t\t\t// Set off-canvas margins for Slidebars with push and overlay animations.\n\t\t\tif ($left && ($left.hasClass('sb-style-push') || $left.hasClass('sb-style-overlay'))) $left.css('marginLeft', '-' + $left.css('width'));\n\t\t\tif ($right && ($right.hasClass('sb-style-push') || $right.hasClass('sb-style-overlay'))) $right.css('marginRight', '-' + $right.css('width'));\n\t\t\t\n\t\t\t// Site scroll locking.\n\t\t\tif (settings.scrollLock) $('html').addClass('sb-scroll-lock');\n\t\t}\n\t\t\n\t\t// Resize Functions\n\t\t$(window).resize(function() {\n\t\t\tvar resizedWindowWidth = $(window).width(); // Get resized window width.\n\t\t\tif (windowWidth !== resizedWindowWidth) { // Slidebars is running and window was actually resized.\n\t\t\t\twindowWidth = resizedWindowWidth; // Set the new window width.\n\t\t\t\tinitialise(); // Call initalise to see if Slidebars should still be running.\n\t\t\t\tif (leftActive) open('left'); // If left Slidebar is open, calling open will ensure it is the correct size.\n\t\t\t\tif (rightActive) open('right'); // If right Slidebar is open, calling open will ensure it is the correct size.\n\t\t\t}\n\t\t});\n\t\t// I may include a height check along side a width check here in future.\n\n\t\t// ---------------\n\t\t// 005 - Animation\n\n\t\tvar animation; // Animation type.\n\n\t\t// Set animation type.\n\t\tif (supportTransition && supportTransform) { // Browser supports css transitions and transforms.\n\t\t\tanimation = 'translate'; // Translate for browsers that support it.\n\t\t\tif (android && android < 4.4) animation = 'side'; // Android supports both, but can't translate any fixed positions, so use left instead.\n\t\t} else {\n\t\t\tanimation = 'jQuery'; // Browsers that don't support css transitions and transitions.\n\t\t}\n\n\t\t// Animate mixin.\n\t\tfunction animate(object, amount, side) {\n\t\t\t// Choose selectors depending on animation style.\n\t\t\tvar selector;\n\t\t\t\n\t\t\tif (object.hasClass('sb-style-push')) {\n\t\t\t\tselector = $site.add(object).add($slide); // Push - Animate site, Slidebar and user elements.\n\t\t\t} else if (object.hasClass('sb-style-overlay')) {\n\t\t\t\tselector = object; // Overlay - Animate Slidebar only.\n\t\t\t} else {\n\t\t\t\tselector = $site.add($slide); // Reveal - Animate site and user elements.\n\t\t\t}\n\t\t\t\n\t\t\t// Apply animation\n\t\t\tif (animation === 'translate') {\n\t\t\t\tselector.css('transform', 'translate(' + amount + ')'); // Apply the animation.\n\n\t\t\t} else if (animation === 'side') {\t\t\n\t\t\t\tif (amount[0] === '-') amount = amount.substr(1); // Remove the '-' from the passed amount for side animations.\n\t\t\t\tif (amount !== '0px') selector.css(side, '0px'); // Add a 0 value so css transition works.\n\t\t\t\tsetTimeout(function() { // Set a timeout to allow the 0 value to be applied above.\n\t\t\t\t\tselector.css(side, amount); // Apply the animation.\n\t\t\t\t}, 1);\n\n\t\t\t} else if (animation === 'jQuery') {\n\t\t\t\tif (amount[0] === '-') amount = amount.substr(1); // Remove the '-' from the passed amount for jQuery animations.\n\t\t\t\tvar properties = {};\n\t\t\t\tproperties[side] = amount;\n\t\t\t\tselector.stop().animate(properties, 400); // Stop any current jQuery animation before starting another.\n\t\t\t}\n\t\t\t\n\t\t\t// If closed, remove the inline styling on completion of the animation.\n\t\t\tsetTimeout(function() {\n\t\t\t\tif (amount === '0px') {\n\t\t\t\t\tselector.removeAttr('style');\n\t\t\t\t\tcss();\n\t\t\t\t}\n\t\t\t}, 400);\n\t\t}\n\n\t\t// ----------------\n\t\t// 006 - Operations\n\n\t\t// Open a Slidebar\n\t\tfunction open(side) {\n\t\t\t// Check to see if opposite Slidebar is open.\n\t\t\tif (side === 'left' && $left && rightActive || side === 'right' && $right && leftActive) { // It's open, close it, then continue.\n\t\t\t\tclose();\n\t\t\t\tsetTimeout(proceed, 400);\n\t\t\t} else { // Its not open, continue.\n\t\t\t\tproceed();\n\t\t\t}\n\n\t\t\t// Open\n\t\t\tfunction proceed() {\n\t\t\t\tif (init && side === 'left' && $left) { // Slidebars is initiated, left is in use and called to open.\n\t\t\t\t\t$('html').addClass('sb-active sb-active-left'); // Add active classes.\n\t\t\t\t\t$left.addClass('sb-active');\n\t\t\t\t\tanimate($left, $left.css('width'), 'left'); // Animation\n\t\t\t\t\tsetTimeout(function() { leftActive = true; }, 400); // Set active variables.\n\t\t\t\t} else if (init && side === 'right' && $right) { // Slidebars is initiated, right is in use and called to open.\n\t\t\t\t\t$('html').addClass('sb-active sb-active-right'); // Add active classes.\n\t\t\t\t\t$right.addClass('sb-active');\n\t\t\t\t\tanimate($right, '-' + $right.css('width'), 'right'); // Animation\n\t\t\t\t\tsetTimeout(function() { rightActive = true; }, 400); // Set active variables.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t// Close either Slidebar\n\t\tfunction close(link) {\n\t\t\tif (leftActive || rightActive) { // If a Slidebar is open.\n\t\t\t\tif (leftActive) {\n\t\t\t\t\tanimate($left, '0px', 'left'); // Animation\n\t\t\t\t\tleftActive = false;\n\t\t\t\t}\n\t\t\t\tif (rightActive) {\n\t\t\t\t\tanimate($right, '0px', 'right'); // Animation\n\t\t\t\t\trightActive = false;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tsetTimeout(function() { // Wait for closing animation to finish.\n\t\t\t\t\t$('html').removeClass('sb-active sb-active-left sb-active-right'); // Remove active classes.\n\t\t\t\t\tif ($left) $left.removeClass('sb-active');\n\t\t\t\t\tif ($right) $right.removeClass('sb-active');\n\t\t\t\t\tif (typeof link !== 'undefined') window.location = link; // If a link has been passed to the function, go to it.\n\t\t\t\t}, 400);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Toggle either Slidebar\n\t\tfunction toggle(side) {\n\t\t\tif (side === 'left' && $left) { // If left Slidebar is called and in use.\n\t\t\t\tif (!leftActive) {\n\t\t\t\t\topen('left'); // Slidebar is closed, open it.\n\t\t\t\t} else {\n\t\t\t\t\tclose(); // Slidebar is open, close it.\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (side === 'right' && $right) { // If right Slidebar is called and in use.\n\t\t\t\tif (!rightActive) {\n\t\t\t\t\topen('right'); // Slidebar is closed, open it.\n\t\t\t\t} else {\n\t\t\t\t\tclose(); // Slidebar is open, close it.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// ---------\n\t\t// 007 - API\n\t\t\n\t\tthis.slidebars = {\n\t\t\topen: open, // Maps user variable name to the open method.\n\t\t\tclose: close, // Maps user variable name to the close method.\n\t\t\ttoggle: toggle, // Maps user variable name to the toggle method.\n\t\t\tinit: function() { // Returns true or false whether Slidebars are running or not.\n\t\t\t\treturn init; // Returns true or false whether Slidebars are running.\n\t\t\t},\n\t\t\tactive: function(side) { // Returns true or false whether Slidebar is open or closed.\n\t\t\t\tif (side === 'left' && $left) return leftActive;\n\t\t\t\tif (side === 'right' && $right) return rightActive;\n\t\t\t},\n\t\t\tdestroy: function(side) { // Removes the Slidebar from the DOM.\n\t\t\t\tif (side === 'left' && $left) {\n\t\t\t\t\tif (leftActive) close(); // Close if its open.\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t$left.remove(); // Remove it.\n\t\t\t\t\t\t$left = false; // Set variable to false so it cannot be opened again.\n\t\t\t\t\t}, 400);\n\t\t\t\t}\n\t\t\t\tif (side === 'right' && $right) {\n\t\t\t\t\tif (rightActive) close(); // Close if its open.\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t$right.remove(); // Remove it.\n\t\t\t\t\t\t$right = false; // Set variable to false so it cannot be opened again.\n\t\t\t\t\t}, 400);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// ----------------\n\t\t// 008 - User Input\n\t\t\n\t\tfunction eventHandler(event, selector) {\n\t\t\tevent.stopPropagation(); // Stop event bubbling.\n\t\t\tevent.preventDefault(); // Prevent default behaviour\n\t\t\tif (event.type === 'touchend') selector.off('click'); // If event type was touch turn off clicks to prevent phantom clicks.\n\t\t}\n\t\t\n\t\t// Toggle left Slidebar\n\t\t$('.sb-toggle-left').on('touchend click', function(event) {\n\t\t\teventHandler(event, $(this)); // Handle the event.\n\t\t\ttoggle('left'); // Toggle the left Slidbar.\n\t\t});\n\t\t\n\t\t// Toggle right Slidebar\n\t\t$('.sb-toggle-right').on('touchend click', function(event) {\n\t\t\teventHandler(event, $(this)); // Handle the event.\n\t\t\ttoggle('right'); // Toggle the right Slidbar.\n\t\t});\n\t\t\n\t\t// Open left Slidebar\n\t\t$('.sb-open-left').on('touchend click', function(event) {\n\t\t\teventHandler(event, $(this)); // Handle the event.\n\t\t\topen('left'); // Open the left Slidebar.\n\t\t});\n\t\t\n\t\t// Open right Slidebar\n\t\t$('.sb-open-right').on('touchend click', function(event) {\n\t\t\teventHandler(event, $(this)); // Handle the event.\n\t\t\topen('right'); // Open the right Slidebar.\n\t\t});\n\t\t\n\t\t// Close a Slidebar\n\t\t$('.sb-close').on('touchend click', function(event) {\n\t\t\teventHandler(event, $(this)); // Handle the event.\n\t\t\tvar link;\n\t\t\t\n\t\t\t// Close Slidebar via link\n\t\t\tif ( $(this).parents('.sb-slidebar') ) {\n\t\t\t\tif ( $(this).is('a') ) {\n\t\t\t\t\tlink = $(this).attr('href');\n\t\t\t\t} else if ( $(this).children('a') ) {\n\t\t\t\t\tlink = $(this).children('a').attr('href');\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tclose(link); // Close Slidebar and pass link.\n\t\t});\n\t\t\n\t\t// Close Slidebar via site\n\t\t$site.on('touchend click', function(event) {\n\t\t\tif (settings.siteClose && (leftActive || rightActive)) { // If settings permit closing by site and left or right Slidebar is open.\n\t\t\t\teventHandler(event, $(this)); // Handle the event.\n\t\t\t\tclose(); // Close it.\n\t\t\t}\n\t\t});\n\t\t\n\t}; // End Slidebars function.\n\n}) (jQuery);\ndefine(\"slidebars\", [\"jquery\"], function(){});\n\n",
    "/**\n *  map system functions\n */\n\n\ndefine('app/map/system',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'bootbox',\n    'app/map/util'\n], ($, Init, Util, bootbox, MapUtil) => {\n    'use strict';\n\n    let config = {\n        newSystemOffset: {\n            x: 130,\n            y: 0\n        },\n\n        systemActiveClass: 'pf-system-active'                           // class for an active system in a map\n    };\n\n    /**\n     * show \"set rally point\" dialog for system\n     * @param system\n     */\n    $.fn.showRallyPointDialog = (system) => {\n        requirejs(['text!templates/dialog/system_rally.html', 'mustache'], function(template, Mustache) {\n            let data = {\n                notificationStatus: Init.notificationStatus.rallySet\n            };\n\n            let content = Mustache.render(template, data);\n\n            let rallyDialog = bootbox.dialog({\n                message: content,\n                title: 'Set rally point for \"' + system.getSystemInfo( ['alias'] ) + '\"',\n                buttons: {\n                    close: {\n                        label: 'cancel',\n                        className: 'btn-default'\n                    },\n                    setRallyPoke: {\n                        label: '<i class=\"fa fa-fw fa-volume-up\"></i> set rally and poke',\n                        className: 'btn-primary',\n                        callback: function() {\n                            system.setSystemRally(1, {\n                                poke: true\n                            });\n                            system.markAsChanged();\n                        }\n                    },\n                    success: {\n                        label: '<i class=\"fa fa-fw fa-users\"></i> set rally',\n                        className: 'btn-success',\n                        callback: function() {\n                            system.setSystemRally(1);\n                            system.markAsChanged();\n                        }\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * shows delete dialog for systems that should be deleted\n     * @param map\n     * @param systems\n     * @returns {*}\n     */\n    $.fn.showDeleteSystemDialog = (map, systems = []) => {\n        let mapContainer = $( map.getContainer() );\n        let validDeleteSystems = [];\n        let activeCharacters = 0;\n        // check if systems belong to map -> security check\n        for (let system of systems) {\n            let systemElement = $(system);\n            if(\n                systemElement.data('mapid') === mapContainer.data('id')  &&\n                !systemElement.data('locked')\n            ){\n                // system belongs to map -> valid system\n                validDeleteSystems.push(system);\n\n                activeCharacters += (systemElement.data('userCount') ? parseInt( systemElement.data('userCount') ) : 0);\n            }\n        }\n\n        if(validDeleteSystems.length){\n            let msg = '';\n            if(validDeleteSystems.length === 1){\n                let deleteSystem = $(validDeleteSystems[0]);\n                let systemName = deleteSystem.data('name');\n                let systemAlias = deleteSystem.getSystemInfo( ['alias'] );\n\n                let systemNameStr = (systemName === systemAlias) ? '\"' + systemName + '\"' : '\"' + systemAlias + '\" (' + systemName + ')';\n                systemNameStr = '<span class=\"txt-color txt-color-warning\">' + systemNameStr + '</span>';\n                msg = 'Delete system ' + systemNameStr + ' and all its connections?';\n            }else{\n                msg = 'Delete ' + validDeleteSystems.length + ' selected systems and their connections?';\n            }\n\n            // add warning for active characters\n            if(activeCharacters > 0){\n                msg += ' <span class=\"txt-color txt-color-warning\">Warning: ' + activeCharacters + ' active characters</span>';\n            }\n\n            let systemDeleteDialog = bootbox.confirm(msg, result => {\n                if(result){\n                    deleteSystems(map, validDeleteSystems, (deletedSystems) => {\n                        // callback function after deleted -> close dialog\n                        systemDeleteDialog.modal('hide');\n\n                        // check whether all systems were deleted properly\n                        if(deletedSystems.length !== validDeleteSystems.length){\n                            let notDeletedCount = validDeleteSystems.length - deletedSystems.length;\n\n                            Util.showNotify({\n                                title: 'Failed to delete systems',\n                                text: '(' + notDeletedCount + '/' +  validDeleteSystems.length + ') systems could not be deleted',\n                                type: 'warning'}\n                            );\n                        }else if(deletedSystems.length === 1){\n                            Util.showNotify({title: 'System deleted', text: $(deletedSystems[0]).data('name'), type: 'success'});\n                        }else{\n                            Util.showNotify({title: systems.length + ' systems deleted', type: 'success'});\n                        }\n                    });\n                }\n            });\n        }else{\n            Util.showNotify({title: 'No systems selected', type: 'warning'});\n        }\n\n        return this;\n    };\n\n    /**\n     * delete system(s) with all their connections\n     * (ajax call) remove system from DB\n     * @param map\n     * @param systems\n     * @param callback function\n     */\n    let deleteSystems = (map, systems = [], callback = (systems) => {}) => {\n        let mapContainer = $( map.getContainer() );\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.deleteSystem,\n            data: {\n                mapId: mapContainer.data('id'),\n                systemIds: systems.map( system => $(system).data('id') )\n            },\n            dataType: 'json',\n            context: {\n                map: map,\n                systems: systems\n            }\n        }).done(function(data){\n            // check if all systems were deleted that should get deleted\n            let deletedSystems = this.systems.filter(\n                function(system){\n                    return this.indexOf( $(system).data('id') ) !== -1;\n                }, data.deletedSystemIds\n            );\n\n            // remove systems from map\n            removeSystems(this.map,  deletedSystems);\n\n            callback(deletedSystems);\n        }).fail(function(jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            Util.showNotify({title: jqXHR.status + ': deleteSystem', text: reason, type: 'warning'});\n            $(document).setProgramStatus('problem');\n        });\n    };\n\n    /**\n     * remove system(s) from map (no backend requests)\n     * @param map\n     * @param systems\n     */\n    let removeSystems = (map, systems) => {\n\n        let removeSystemCallbak = function(deleteSystem){\n            map.remove(deleteSystem);\n        };\n\n        for (let system of systems){\n            system = $(system);\n\n            // check if system is \"active\"\n            if( system.hasClass(config.systemActiveClass) ){\n                // get parent Tab Content and fire clear modules event\n                let tabContentElement = MapUtil.getTabContentElementByMapElement( system );\n                $(tabContentElement).trigger('pf:removeSystemModules');\n            }\n\n            // remove endpoints and their connections\n            // do not fire a \"connectionDetached\" event\n            map.detachAllConnections(system, {fireEvent: false});\n\n            // hide tooltip\n            system.toggleSystemTooltip('destroy', {});\n\n            // remove system\n            system.velocity('transition.whirlOut', {\n                duration: Init.animationSpeed.mapDeleteSystem,\n                complete: removeSystemCallbak\n            });\n        }\n    };\n\n    /**\n     * calculate the x/y coordinates for a new system - relativ to a source system\n     * @param sourceSystem\n     * @returns {{x: *, y: *}}\n     */\n    let calculateNewSystemPosition = function(sourceSystem){\n\n        // related system is available\n        let currentX = sourceSystem.css('left');\n        let currentY = sourceSystem.css('top');\n\n        // remove \"px\"\n        currentX = parseInt( currentX.substring(0, currentX.length - 2) );\n        currentY = parseInt( currentY.substring(0, currentY.length - 2) );\n\n        let newPosition = {\n            x: currentX + config.newSystemOffset.x,\n            y: currentY + config.newSystemOffset.y\n        };\n\n        return newPosition;\n    };\n\n    return {\n        deleteSystems: deleteSystems,\n        removeSystems: removeSystems,\n        calculateNewSystemPosition: calculateNewSystemPosition\n    };\n});\n",
    "/**\n * jsBezier-0.7\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * licensed under the MIT license.\n *\n * a set of Bezier curve functions that deal with Beziers, used by jsPlumb, and perhaps useful for other people.  These functions work with Bezier\n * curves of arbitrary degree.\n *\n * - functions are all in the 'jsBezier' namespace.\n *\n * - all input points should be in the format {x:.., y:..}. all output points are in this format too.\n *\n * - all input curves should be in the format [ {x:.., y:..}, {x:.., y:..}, {x:.., y:..}, {x:.., y:..} ]\n *\n * - 'location' as used as an input here refers to a decimal in the range 0-1 inclusive, which indicates a point some proportion along the length\n * of the curve.  location as output has the same format and meaning.\n *\n *\n * Function List:\n * --------------\n *\n * distanceFromCurve(point, curve)\n *\n * \tCalculates the distance that the given point lies from the given Bezier.  Note that it is computed relative to the center of the Bezier,\n * so if you have stroked the curve with a wide pen you may wish to take that into account!  The distance returned is relative to the values\n * of the curve and the point - it will most likely be pixels.\n *\n * gradientAtPoint(curve, location)\n *\n * \tCalculates the gradient to the curve at the given location, as a decimal between 0 and 1 inclusive.\n *\n * gradientAtPointAlongCurveFrom (curve, location)\n *\n *\tCalculates the gradient at the point on the given curve that is 'distance' units from location.\n *\n * nearestPointOnCurve(point, curve)\n *\n *\tCalculates the nearest point to the given point on the given curve.  The return value of this is a JS object literal, containing both the\n *point's coordinates and also the 'location' of the point (see above), for example:  { point:{x:551,y:150}, location:0.263365 }.\n *\n * pointOnCurve(curve, location)\n *\n * \tCalculates the coordinates of the point on the given Bezier curve at the given location.\n *\n * pointAlongCurveFrom(curve, location, distance)\n *\n * \tCalculates the coordinates of the point on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n *\n * locationAlongCurveFrom(curve, location, distance)\n *\n * \tCalculates the location on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n *\n * perpendicularToCurveAt(curve, location, length, distance)\n *\n * \tCalculates the perpendicular to the given curve at the given location.  length is the length of the line you wish for (it will be centered\n * on the point at 'location'). distance is optional, and allows you to specify a point along the path from the given location as the center of\n * the perpendicular returned.  The return value of this is an array of two points: [ {x:...,y:...}, {x:...,y:...} ].\n *\n *\n */\n\n(function() {\n\n    var root = this;\n\n    if(typeof Math.sgn == \"undefined\") {\n        Math.sgn = function(x) { return x == 0 ? 0 : x > 0 ? 1 :-1; };\n    }\n\n    var Vectors = {\n            subtract \t: \tfunction(v1, v2) { return {x:v1.x - v2.x, y:v1.y - v2.y }; },\n            dotProduct\t: \tfunction(v1, v2) { return (v1.x * v2.x)  + (v1.y * v2.y); },\n            square\t\t:\tfunction(v) { return Math.sqrt((v.x * v.x) + (v.y * v.y)); },\n            scale\t\t:\tfunction(v, s) { return {x:v.x * s, y:v.y * s }; }\n        },\n\n        maxRecursion = 64,\n        flatnessTolerance = Math.pow(2.0,-maxRecursion-1);\n\n    /**\n     * Calculates the distance that the point lies from the curve.\n     *\n     * @param point a point in the form {x:567, y:3342}\n     * @param curve a Bezier curve in the form [{x:..., y:...}, {x:..., y:...}, {x:..., y:...}, {x:..., y:...}].  note that this is currently\n     * hardcoded to assume cubiz beziers, but would be better off supporting any degree.\n     * @return a JS object literal containing location and distance, for example: {location:0.35, distance:10}.  Location is analogous to the location\n     * argument you pass to the pointOnPath function: it is a ratio of distance travelled along the curve.  Distance is the distance in pixels from\n     * the point to the curve.\n     */\n    var _distanceFromCurve = function(point, curve) {\n        var candidates = [],\n            w = _convertToBezier(point, curve),\n            degree = curve.length - 1, higherDegree = (2 * degree) - 1,\n            numSolutions = _findRoots(w, higherDegree, candidates, 0),\n            v = Vectors.subtract(point, curve[0]), dist = Vectors.square(v), t = 0.0;\n\n        for (var i = 0; i < numSolutions; i++) {\n            v = Vectors.subtract(point, _bezier(curve, degree, candidates[i], null, null));\n            var newDist = Vectors.square(v);\n            if (newDist < dist) {\n                dist = newDist;\n                t = candidates[i];\n            }\n        }\n        v = Vectors.subtract(point, curve[degree]);\n        newDist = Vectors.square(v);\n        if (newDist < dist) {\n            dist = newDist;\n            t = 1.0;\n        }\n        return {location:t, distance:dist};\n    };\n    /**\n     * finds the nearest point on the curve to the given point.\n     */\n    var _nearestPointOnCurve = function(point, curve) {\n        var td = _distanceFromCurve(point, curve);\n        return {point:_bezier(curve, curve.length - 1, td.location, null, null), location:td.location};\n    };\n    var _convertToBezier = function(point, curve) {\n        var degree = curve.length - 1, higherDegree = (2 * degree) - 1,\n            c = [], d = [], cdTable = [], w = [],\n            z = [ [1.0, 0.6, 0.3, 0.1], [0.4, 0.6, 0.6, 0.4], [0.1, 0.3, 0.6, 1.0] ];\n\n        for (var i = 0; i <= degree; i++) c[i] = Vectors.subtract(curve[i], point);\n        for (var i = 0; i <= degree - 1; i++) {\n            d[i] = Vectors.subtract(curve[i+1], curve[i]);\n            d[i] = Vectors.scale(d[i], 3.0);\n        }\n        for (var row = 0; row <= degree - 1; row++) {\n            for (var column = 0; column <= degree; column++) {\n                if (!cdTable[row]) cdTable[row] = [];\n                cdTable[row][column] = Vectors.dotProduct(d[row], c[column]);\n            }\n        }\n        for (i = 0; i <= higherDegree; i++) {\n            if (!w[i]) w[i] = [];\n            w[i].y = 0.0;\n            w[i].x = parseFloat(i) / higherDegree;\n        }\n        var n = degree, m = degree-1;\n        for (var k = 0; k <= n + m; k++) {\n            var lb = Math.max(0, k - m),\n                ub = Math.min(k, n);\n            for (i = lb; i <= ub; i++) {\n                j = k - i;\n                w[i+j].y += cdTable[j][i] * z[j][i];\n            }\n        }\n        return w;\n    };\n    /**\n     * counts how many roots there are.\n     */\n    var _findRoots = function(w, degree, t, depth) {\n        var left = [], right = [],\n            left_count, right_count,\n            left_t = [], right_t = [];\n\n        switch (_getCrossingCount(w, degree)) {\n            case 0 : {\n                return 0;\n            }\n            case 1 : {\n                if (depth >= maxRecursion) {\n                    t[0] = (w[0].x + w[degree].x) / 2.0;\n                    return 1;\n                }\n                if (_isFlatEnough(w, degree)) {\n                    t[0] = _computeXIntercept(w, degree);\n                    return 1;\n                }\n                break;\n            }\n        }\n        _bezier(w, degree, 0.5, left, right);\n        left_count  = _findRoots(left,  degree, left_t, depth+1);\n        right_count = _findRoots(right, degree, right_t, depth+1);\n        for (var i = 0; i < left_count; i++) t[i] = left_t[i];\n        for (var i = 0; i < right_count; i++) t[i+left_count] = right_t[i];\n        return (left_count+right_count);\n    };\n    var _getCrossingCount = function(curve, degree) {\n        var n_crossings = 0, sign, old_sign;\n        sign = old_sign = Math.sgn(curve[0].y);\n        for (var i = 1; i <= degree; i++) {\n            sign = Math.sgn(curve[i].y);\n            if (sign != old_sign) n_crossings++;\n            old_sign = sign;\n        }\n        return n_crossings;\n    };\n    var _isFlatEnough = function(curve, degree) {\n        var  error,\n            intercept_1, intercept_2, left_intercept, right_intercept,\n            a, b, c, det, dInv, a1, b1, c1, a2, b2, c2;\n        a = curve[0].y - curve[degree].y;\n        b = curve[degree].x - curve[0].x;\n        c = curve[0].x * curve[degree].y - curve[degree].x * curve[0].y;\n\n        var max_distance_above = max_distance_below = 0.0;\n\n        for (var i = 1; i < degree; i++) {\n            var value = a * curve[i].x + b * curve[i].y + c;\n            if (value > max_distance_above)\n                max_distance_above = value;\n            else if (value < max_distance_below)\n                max_distance_below = value;\n        }\n\n        a1 = 0.0; b1 = 1.0; c1 = 0.0; a2 = a; b2 = b;\n        c2 = c - max_distance_above;\n        det = a1 * b2 - a2 * b1;\n        dInv = 1.0/det;\n        intercept_1 = (b1 * c2 - b2 * c1) * dInv;\n        a2 = a; b2 = b; c2 = c - max_distance_below;\n        det = a1 * b2 - a2 * b1;\n        dInv = 1.0/det;\n        intercept_2 = (b1 * c2 - b2 * c1) * dInv;\n        left_intercept = Math.min(intercept_1, intercept_2);\n        right_intercept = Math.max(intercept_1, intercept_2);\n        error = right_intercept - left_intercept;\n        return (error < flatnessTolerance)? 1 : 0;\n    };\n    var _computeXIntercept = function(curve, degree) {\n        var XLK = 1.0, YLK = 0.0,\n            XNM = curve[degree].x - curve[0].x, YNM = curve[degree].y - curve[0].y,\n            XMK = curve[0].x - 0.0, YMK = curve[0].y - 0.0,\n            det = XNM*YLK - YNM*XLK, detInv = 1.0/det,\n            S = (XNM*YMK - YNM*XMK) * detInv;\n        return 0.0 + XLK * S;\n    };\n    var _bezier = function(curve, degree, t, left, right) {\n        var temp = [[]];\n        for (var j =0; j <= degree; j++) temp[0][j] = curve[j];\n        for (var i = 1; i <= degree; i++) {\n            for (var j =0 ; j <= degree - i; j++) {\n                if (!temp[i]) temp[i] = [];\n                if (!temp[i][j]) temp[i][j] = {};\n                temp[i][j].x = (1.0 - t) * temp[i-1][j].x + t * temp[i-1][j+1].x;\n                temp[i][j].y = (1.0 - t) * temp[i-1][j].y + t * temp[i-1][j+1].y;\n            }\n        }\n        if (left != null)\n            for (j = 0; j <= degree; j++) left[j]  = temp[j][0];\n        if (right != null)\n            for (j = 0; j <= degree; j++) right[j] = temp[degree-j][j];\n\n        return (temp[degree][0]);\n    };\n\n    var _curveFunctionCache = {};\n    var _getCurveFunctions = function(order) {\n        var fns = _curveFunctionCache[order];\n        if (!fns) {\n            fns = [];\n            var f_term = function() { return function(t) { return Math.pow(t, order); }; },\n                l_term = function() { return function(t) { return Math.pow((1-t), order); }; },\n                c_term = function(c) { return function(t) { return c; }; },\n                t_term = function() { return function(t) { return t; }; },\n                one_minus_t_term = function() { return function(t) { return 1-t; }; },\n                _termFunc = function(terms) {\n                    return function(t) {\n                        var p = 1;\n                        for (var i = 0; i < terms.length; i++) p = p * terms[i](t);\n                        return p;\n                    };\n                };\n\n            fns.push(new f_term());  // first is t to the power of the curve order\n            for (var i = 1; i < order; i++) {\n                var terms = [new c_term(order)];\n                for (var j = 0 ; j < (order - i); j++) terms.push(new t_term());\n                for (var j = 0 ; j < i; j++) terms.push(new one_minus_t_term());\n                fns.push(new _termFunc(terms));\n            }\n            fns.push(new l_term());  // last is (1-t) to the power of the curve order\n\n            _curveFunctionCache[order] = fns;\n        }\n\n        return fns;\n    };\n\n\n    /**\n     * calculates a point on the curve, for a Bezier of arbitrary order.\n     * @param curve an array of control points, eg [{x:10,y:20}, {x:50,y:50}, {x:100,y:100}, {x:120,y:100}].  For a cubic bezier this should have four points.\n     * @param location a decimal indicating the distance along the curve the point should be located at.  this is the distance along the curve as it travels, taking the way it bends into account.  should be a number from 0 to 1, inclusive.\n     */\n    var _pointOnPath = function(curve, location) {\n        var cc = _getCurveFunctions(curve.length - 1),\n            _x = 0, _y = 0;\n        for (var i = 0; i < curve.length ; i++) {\n            _x = _x + (curve[i].x * cc[i](location));\n            _y = _y + (curve[i].y * cc[i](location));\n        }\n\n        return {x:_x, y:_y};\n    };\n\n    var _dist = function(p1,p2) {\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n    };\n\n    var _isPoint = function(curve) {\n        return curve[0].x == curve[1].x && curve[0].y == curve[1].y;\n    };\n\n    /**\n     * finds the point that is 'distance' along the path from 'location'.  this method returns both the x,y location of the point and also\n     * its 'location' (proportion of travel along the path); the method below - _pointAlongPathFrom - calls this method and just returns the\n     * point.\n     */\n    var _pointAlongPath = function(curve, location, distance) {\n\n        if (_isPoint(curve)) {\n            return {\n                point:curve[0],\n                location:location\n            };\n        }\n\n        var prev = _pointOnPath(curve, location),\n            tally = 0,\n            curLoc = location,\n            direction = distance > 0 ? 1 : -1,\n            cur = null;\n\n        while (tally < Math.abs(distance)) {\n            curLoc += (0.005 * direction);\n            cur = _pointOnPath(curve, curLoc);\n            tally += _dist(cur, prev);\n            prev = cur;\n        }\n        return {point:cur, location:curLoc};\n    };\n\n    var _length = function(curve) {\n        if (_isPoint(curve)) return 0;\n\n        var prev = _pointOnPath(curve, 0),\n            tally = 0,\n            curLoc = 0,\n            direction = 1,\n            cur = null;\n\n        while (curLoc < 1) {\n            curLoc += (0.005 * direction);\n            cur = _pointOnPath(curve, curLoc);\n            tally += _dist(cur, prev);\n            prev = cur;\n        }\n        return tally;\n    };\n\n    /**\n     * finds the point that is 'distance' along the path from 'location'.\n     */\n    var _pointAlongPathFrom = function(curve, location, distance) {\n        return _pointAlongPath(curve, location, distance).point;\n    };\n\n    /**\n     * finds the location that is 'distance' along the path from 'location'.\n     */\n    var _locationAlongPathFrom = function(curve, location, distance) {\n        return _pointAlongPath(curve, location, distance).location;\n    };\n\n    /**\n     * returns the gradient of the curve at the given location, which is a decimal between 0 and 1 inclusive.\n     *\n     * thanks // http://bimixual.org/AnimationLibrary/beziertangents.html\n     */\n    var _gradientAtPoint = function(curve, location) {\n        var p1 = _pointOnPath(curve, location),\n            p2 = _pointOnPath(curve.slice(0, curve.length - 1), location),\n            dy = p2.y - p1.y, dx = p2.x - p1.x;\n        return dy == 0 ? Infinity : Math.atan(dy / dx);\n    };\n\n    /**\n     returns the gradient of the curve at the point which is 'distance' from the given location.\n     if this point is greater than location 1, the gradient at location 1 is returned.\n     if this point is less than location 0, the gradient at location 0 is returned.\n     */\n    var _gradientAtPointAlongPathFrom = function(curve, location, distance) {\n        var p = _pointAlongPath(curve, location, distance);\n        if (p.location > 1) p.location = 1;\n        if (p.location < 0) p.location = 0;\n        return _gradientAtPoint(curve, p.location);\n    };\n\n    /**\n     * calculates a line that is 'length' pixels long, perpendicular to, and centered on, the path at 'distance' pixels from the given location.\n     * if distance is not supplied, the perpendicular for the given location is computed (ie. we set distance to zero).\n     */\n    var _perpendicularToPathAt = function(curve, location, length, distance) {\n        distance = distance == null ? 0 : distance;\n        var p = _pointAlongPath(curve, location, distance),\n            m = _gradientAtPoint(curve, p.location),\n            _theta2 = Math.atan(-1 / m),\n            y =  length / 2 * Math.sin(_theta2),\n            x =  length / 2 * Math.cos(_theta2);\n        return [{x:p.point.x + x, y:p.point.y + y}, {x:p.point.x - x, y:p.point.y - y}];\n    };\n\n    this.jsBezier = {\n        distanceFromCurve : _distanceFromCurve,\n        gradientAtPoint : _gradientAtPoint,\n        gradientAtPointAlongCurveFrom : _gradientAtPointAlongPathFrom,\n        nearestPointOnCurve : _nearestPointOnCurve,\n        pointOnCurve : _pointOnPath,\n        pointAlongCurveFrom : _pointAlongPathFrom,\n        perpendicularToCurveAt : _perpendicularToPathAt,\n        locationAlongCurveFrom:_locationAlongPathFrom,\n        getLength:_length\n    };\n}).call(this);\n\n/**\n * Biltong v0.2\n *\n * Various geometry functions written as part of jsPlumb and perhaps useful for others.\n *\n * Copyright (c) 2014 Simon Porritt\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n;(function() {\n\n\t\n\t\"use strict\";\n\n\tvar Biltong = this.Biltong = {};\n\n\tvar _isa = function(a) { return Object.prototype.toString.call(a) === \"[object Array]\"; },\n\t\t_pointHelper = function(p1, p2, fn) {\n\t\t    p1 = _isa(p1) ? p1 : [p1.x, p1.y];\n\t\t    p2 = _isa(p2) ? p2 : [p2.x, p2.y];    \n\t\t    return fn(p1, p2);\n\t\t},\n\t\t/**\n\t\t* @name Biltong.gradient\n\t\t* @function\n\t\t* @desc Calculates the gradient of a line between the two points.\n\t\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @return {Float} The gradient of a line between the two points.\n\t\t*/\n\t\t_gradient = Biltong.gradient = function(p1, p2) {\n\t\t    return _pointHelper(p1, p2, function(_p1, _p2) { \n\t\t        if (_p2[0] == _p1[0])\n\t\t            return _p2[1] > _p1[1] ? Infinity : -Infinity;\n\t\t        else if (_p2[1] == _p1[1]) \n\t\t            return _p2[0] > _p1[0] ? 0 : -0;\n\t\t        else \n\t\t            return (_p2[1] - _p1[1]) / (_p2[0] - _p1[0]); \n\t\t    });\t\t\n\t\t},\n\t\t/**\n\t\t* @name Biltong.normal\n\t\t* @function\n\t\t* @desc Calculates the gradient of a normal to a line between the two points.\n\t\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @return {Float} The gradient of a normal to a line between the two points.\n\t\t*/\n\t\t_normal = Biltong.normal = function(p1, p2) {\n\t\t    return -1 / _gradient(p1, p2);\n\t\t},\n\t\t/**\n\t\t* @name Biltong.lineLength\n\t\t* @function\n\t\t* @desc Calculates the length of a line between the two points.\n\t\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @return {Float} The length of a line between the two points.\n\t\t*/\n\t\t_lineLength = Biltong.lineLength = function(p1, p2) {\n\t\t    return _pointHelper(p1, p2, function(_p1, _p2) {\n\t\t        return Math.sqrt(Math.pow(_p2[1] - _p1[1], 2) + Math.pow(_p2[0] - _p1[0], 2));\t\t\t\n\t\t    });\n\t\t},\n\t\t/**\n\t\t* @name Biltong.quadrant\n\t\t* @function\n\t\t* @desc Calculates the quadrant in which the angle between the two points lies. \n\t\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @return {Integer} The quadrant - 1 for upper right, 2 for lower right, 3 for lower left, 4 for upper left.\n\t\t*/\n\t\t_quadrant = Biltong.quadrant = function(p1, p2) {\n\t\t    return _pointHelper(p1, p2, function(_p1, _p2) {\n\t\t        if (_p2[0] > _p1[0]) {\n\t\t            return (_p2[1] > _p1[1]) ? 2 : 1;\n\t\t        }\n\t\t        else if (_p2[0] == _p1[0]) {\n\t\t            return _p2[1] > _p1[1] ? 2 : 1;    \n\t\t        }\n\t\t        else {\n\t\t            return (_p2[1] > _p1[1]) ? 3 : 4;\n\t\t        }\n\t\t    });\n\t\t},\n\t\t/**\n\t\t* @name Biltong.theta\n\t\t* @function\n\t\t* @desc Calculates the angle between the two points. \n\t\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @return {Float} The angle between the two points.\n\t\t*/\n\t\t_theta = Biltong.theta = function(p1, p2) {\n\t\t    return _pointHelper(p1, p2, function(_p1, _p2) {\n\t\t        var m = _gradient(_p1, _p2),\n\t\t            t = Math.atan(m),\n\t\t            s = _quadrant(_p1, _p2);\n\t\t        if ((s == 4 || s== 3)) t += Math.PI;\n\t\t        if (t < 0) t += (2 * Math.PI);\n\t\t    \n\t\t        return t;\n\t\t    });\n\t\t},\n\t\t/**\n\t\t* @name Biltong.intersects\n\t\t* @function\n\t\t* @desc Calculates whether or not the two rectangles intersect.\n\t\t* @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n\t\t* @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n\t\t* @return {Boolean} True if the rectangles intersect, false otherwise.\n\t\t*/\n\t\t_intersects = Biltong.intersects = function(r1, r2) {\n\t\t    var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\n\t\t        a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h;\n\t\t\n\t\t\treturn  ( (x1 <= a1 && a1 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\n\t\t\t        ( (x1 <= a2 && a2 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\n\t\t\t        ( (x1 <= a1 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\n\t\t\t        ( (x1 <= a2 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\t\n\t\t\t        ( (a1 <= x1 && x1 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\n\t\t\t        ( (a1 <= x2 && x2 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\n\t\t\t        ( (a1 <= x1 && x1 <= a2) && (b1 <= y2 && y2 <= b2) ) ||\n\t\t\t        ( (a1 <= x2 && x1 <= a2) && (b1 <= y2 && y2 <= b2) );\n\t\t},\n\t\t/**\n\t\t* @name Biltong.encloses\n\t\t* @function\n\t\t* @desc Calculates whether or not r2 is completely enclosed by r1.\n\t\t* @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n\t\t* @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n\t\t* @param {Boolean} [allowSharedEdges=false] If true, the concept of enclosure allows for one or more edges to be shared by the two rectangles.\n\t\t* @return {Boolean} True if r1 encloses r2, false otherwise.\n\t\t*/\n\t\t_encloses = Biltong.encloses = function(r1, r2, allowSharedEdges) {\n\t\t\tvar x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\n\t\t        a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h,\n\t\t\t\tc = function(v1, v2, v3, v4) { return allowSharedEdges ? v1 <= v2 && v3>= v4 : v1 < v2 && v3 > v4; };\n\t\t\t\t\n\t\t\treturn c(x1,a1,x2,a2) && c(y1,b1,y2,b2);\n\t\t},\n\t\t_segmentMultipliers = [null, [1, -1], [1, 1], [-1, 1], [-1, -1] ],\n\t\t_inverseSegmentMultipliers = [null, [-1, -1], [-1, 1], [1, 1], [1, -1] ],\n\t\t/**\n\t\t* @name Biltong.pointOnLine\n\t\t* @function\n\t\t* @desc Calculates a point on the line from `fromPoint` to `toPoint` that is `distance` units along the length of the line.\n\t\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @return {Point} Point on the line, in the form `{ x:..., y:... }`.\n\t\t*/\n\t\t_pointOnLine = Biltong.pointOnLine = function(fromPoint, toPoint, distance) {\n\t\t    var m = _gradient(fromPoint, toPoint),\n\t\t        s = _quadrant(fromPoint, toPoint),\n\t\t        segmentMultiplier = distance > 0 ? _segmentMultipliers[s] : _inverseSegmentMultipliers[s],\n\t\t        theta = Math.atan(m),\n\t\t        y = Math.abs(distance * Math.sin(theta)) * segmentMultiplier[1],\n\t\t        x =  Math.abs(distance * Math.cos(theta)) * segmentMultiplier[0];\n\t\t    return { x:fromPoint.x + x, y:fromPoint.y + y };\n\t\t},\n\t\t/**\n\t\t* @name Biltong.perpendicularLineTo\n\t\t* @function\n\t\t* @desc Calculates a line of length `length` that is perpendicular to the line from `fromPoint` to `toPoint` and passes through `toPoint`.\n\t\t* @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n\t\t* @return {Line} Perpendicular line, in the form `[ { x:..., y:... }, { x:..., y:... } ]`.\n\t\t*/        \n\t\t_perpendicularLineTo = Biltong.perpendicularLineTo = function(fromPoint, toPoint, length) {\n\t\t    var m = _gradient(fromPoint, toPoint),\n\t\t        theta2 = Math.atan(-1 / m),\n\t\t        y =  length / 2 * Math.sin(theta2),\n\t\t        x =  length / 2 * Math.cos(theta2);\n\t\t    return [{x:toPoint.x + x, y:toPoint.y + y}, {x:toPoint.x - x, y:toPoint.y - y}];\n\t\t};\t\n}).call(this);\n;\n(function () {\n\n    \"use strict\";\n\n    var Sniff = {\n        android: navigator.userAgent.toLowerCase().indexOf(\"android\") > -1\n    };\n\n    var matchesSelector = function (el, selector, ctx) {\n            ctx = ctx || el.parentNode;\n            var possibles = ctx.querySelectorAll(selector);\n            for (var i = 0; i < possibles.length; i++) {\n                if (possibles[i] === el) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        _gel = function (el) {\n            return typeof el == \"string\" ? document.getElementById(el) : el;\n        },\n        _t = function (e) {\n            return e.srcElement || e.target;\n        },\n        _d = function (l, fn) {\n            for (var i = 0, j = l.length; i < j; i++) {\n                if (l[i] == fn) break;\n            }\n            if (i < l.length) l.splice(i, 1);\n        },\n        guid = 1,\n    //\n    // this function generates a guid for every handler, sets it on the handler, then adds\n    // it to the associated object's map of handlers for the given event. this is what enables us\n    // to unbind all events of some type, or all events (the second of which can be requested by the user,\n    // but it also used by Mottle when an element is removed.)\n        _store = function (obj, event, fn) {\n            var g = guid++;\n            obj.__ta = obj.__ta || {};\n            obj.__ta[event] = obj.__ta[event] || {};\n            // store each handler with a unique guid.\n            obj.__ta[event][g] = fn;\n            // set the guid on the handler.\n            fn.__tauid = g;\n            return g;\n        },\n        _unstore = function (obj, event, fn) {\n            obj.__ta && obj.__ta[event] && delete obj.__ta[event][fn.__tauid];\n            // a handler might have attached extra functions, so we unbind those too.\n            if (fn.__taExtra) {\n                for (var i = 0; i < fn.__taExtra.length; i++) {\n                    _unbind(obj, fn.__taExtra[i][0], fn.__taExtra[i][1]);\n                }\n                fn.__taExtra.length = 0;\n            }\n            // a handler might have attached an unstore callback\n            fn.__taUnstore && fn.__taUnstore();\n        },\n        _curryChildFilter = function (children, obj, fn, evt) {\n            if (children == null) return fn;\n            else {\n                var c = children.split(\",\"),\n                    _fn = function (e) {\n                        _fn.__tauid = fn.__tauid;\n                        var t = _t(e);\n                        for (var i = 0; i < c.length; i++) {\n                            if (matchesSelector(t, c[i], obj)) {\n                                fn.apply(t, arguments);\n                            }\n                        }\n                    };\n                registerExtraFunction(fn, evt, _fn);\n                return _fn;\n            }\n        },\n    //\n    // registers an 'extra' function on some event listener function we were given - a function that we\n    // created and bound to the element as part of our housekeeping, and which we want to unbind and remove\n    // whenever the given function is unbound.\n        registerExtraFunction = function (fn, evt, newFn) {\n            fn.__taExtra = fn.__taExtra || [];\n            fn.__taExtra.push([evt, newFn]);\n        },\n        DefaultHandler = function (obj, evt, fn, children) {\n            if (isTouchDevice && touchMap[evt]) {\n                var tfn = _curryChildFilter(children, obj, fn, touchMap[evt]);\n                _bind(obj, touchMap[evt], tfn , fn);\n            }\n            if (evt === \"focus\" && obj.getAttribute(\"tabindex\") == null) {\n                obj.setAttribute(\"tabindex\", \"1\");\n            }\n            _bind(obj, evt, _curryChildFilter(children, obj, fn, evt), fn);\n        },\n        SmartClickHandler = function (obj, evt, fn, children) {\n            if (obj.__taSmartClicks == null) {\n                var down = function (e) {\n                        obj.__tad = _pageLocation(e);\n                    },\n                    up = function (e) {\n                        obj.__tau = _pageLocation(e);\n                    },\n                    click = function (e) {\n                        if (obj.__tad && obj.__tau && obj.__tad[0] === obj.__tau[0] && obj.__tad[1] === obj.__tau[1]) {\n                            for (var i = 0; i < obj.__taSmartClicks.length; i++)\n                                obj.__taSmartClicks[i].apply(_t(e), [ e ]);\n                        }\n                    };\n                DefaultHandler(obj, \"mousedown\", down, children);\n                DefaultHandler(obj, \"mouseup\", up, children);\n                DefaultHandler(obj, \"click\", click, children);\n                obj.__taSmartClicks = [];\n            }\n\n            // store in the list of callbacks\n            obj.__taSmartClicks.push(fn);\n            // the unstore function removes this function from the object's listener list for this type.\n            fn.__taUnstore = function () {\n                _d(obj.__taSmartClicks, fn);\n            };\n        },\n        _tapProfiles = {\n            \"tap\": {touches: 1, taps: 1},\n            \"dbltap\": {touches: 1, taps: 2},\n            \"contextmenu\": {touches: 2, taps: 1}\n        },\n        TapHandler = function (clickThreshold, dblClickThreshold) {\n            return function (obj, evt, fn, children) {\n                // if event is contextmenu, for devices which are mouse only, we want to\n                // use the default bind.\n                if (evt == \"contextmenu\" && isMouseDevice)\n                    DefaultHandler(obj, evt, fn, children);\n                else {\n                    // the issue here is that this down handler gets registered only for the\n                    // child nodes in the first registration. in fact it should be registered with\n                    // no child selector and then on down we should cycle through the regustered\n                    // functions to see if one of them matches. on mouseup we should execute ALL of\n                    // the functions whose children are either null or match the element.\n                    if (obj.__taTapHandler == null) {\n                        var tt = obj.__taTapHandler = {\n                            tap: [],\n                            dbltap: [],\n                            contextmenu: [],\n                            down: false,\n                            taps: 0,\n                            downSelectors: []\n                        };\n                        var down = function (e) {\n                                var target = e.srcElement || e.target;\n                                for (var i = 0; i < tt.downSelectors.length; i++) {\n                                    if (tt.downSelectors[i] == null || matchesSelector(target, tt.downSelectors[i], obj)) {\n                                        tt.down = true;\n                                        setTimeout(clearSingle, clickThreshold);\n                                        setTimeout(clearDouble, dblClickThreshold);\n                                        break; // we only need one match on mousedown\n                                    }\n                                }\n                            },\n                            up = function (e) {\n                                if (tt.down) {\n                                    var target = e.srcElement || e.target;\n                                    tt.taps++;\n                                    var tc = _touchCount(e);\n                                    for (var eventId in _tapProfiles) {\n                                        var p = _tapProfiles[eventId];\n                                        if (p.touches === tc && (p.taps === 1 || p.taps === tt.taps)) {\n                                            for (var i = 0; i < tt[eventId].length; i++) {\n                                                if (tt[eventId][i][1] == null || matchesSelector(target, tt[eventId][i][1], obj))\n                                                    tt[eventId][i][0].apply(_t(e), [ e ]);\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            clearSingle = function () {\n                                tt.down = false;\n                            },\n                            clearDouble = function () {\n                                tt.taps = 0;\n                            };\n\n                        DefaultHandler(obj, \"mousedown\", down/*, children*/);\n                        DefaultHandler(obj, \"mouseup\", up/*, children*/);\n                    }\n                    // add this child selector (it can be null, that's fine).\n                    obj.__taTapHandler.downSelectors.push(children);\n\n                    obj.__taTapHandler[evt].push([fn, children]);\n                    // the unstore function removes this function from the object's listener list for this type.\n                    fn.__taUnstore = function () {\n                        _d(obj.__taTapHandler[evt], fn);\n                    };\n                }\n            };\n        },\n        meeHelper = function (type, evt, obj, target) {\n            for (var i in obj.__tamee[type]) {\n                obj.__tamee[type][i].apply(target, [ evt ]);\n            }\n        },\n        MouseEnterExitHandler = function () {\n            var activeElements = [];\n            return function (obj, evt, fn, children) {\n                if (!obj.__tamee) {\n                    // __tamee holds a flag saying whether the mouse is currently \"in\" the element, and a list of\n                    // both mouseenter and mouseexit functions.\n                    obj.__tamee = { over: false, mouseenter: [], mouseexit: [] };\n                    // register over and out functions\n                    var over = function (e) {\n                            var t = _t(e);\n                            if ((children == null && (t == obj && !obj.__tamee.over)) || (matchesSelector(t, children, obj) && (t.__tamee == null || !t.__tamee.over))) {\n                                meeHelper(\"mouseenter\", e, obj, t);\n                                t.__tamee = t.__tamee || {};\n                                t.__tamee.over = true;\n                                activeElements.push(t);\n                            }\n                        },\n                        out = function (e) {\n                            var t = _t(e);\n                            // is the current target one of the activeElements? and is the\n                            // related target NOT a descendant of it?\n                            for (var i = 0; i < activeElements.length; i++) {\n                                if (t == activeElements[i] && !matchesSelector((e.relatedTarget || e.toElement), \"*\", t)) {\n                                    t.__tamee.over = false;\n                                    activeElements.splice(i, 1);\n                                    meeHelper(\"mouseexit\", e, obj, t);\n                                }\n                            }\n                        };\n\n                    _bind(obj, \"mouseover\", _curryChildFilter(children, obj, over, \"mouseover\"), over);\n                    _bind(obj, \"mouseout\", _curryChildFilter(children, obj, out, \"mouseout\"), out);\n                }\n\n                fn.__taUnstore = function () {\n                    delete obj.__tamee[evt][fn.__tauid];\n                };\n\n                _store(obj, evt, fn);\n                obj.__tamee[evt][fn.__tauid] = fn;\n            };\n        },\n        isTouchDevice = \"ontouchstart\" in document.documentElement,\n        isMouseDevice = \"onmousedown\" in document.documentElement,\n        touchMap = { \"mousedown\": \"touchstart\", \"mouseup\": \"touchend\", \"mousemove\": \"touchmove\" },\n        touchstart = \"touchstart\", touchend = \"touchend\", touchmove = \"touchmove\",\n        iev = (function () {\n            var rv = -1;\n            if (navigator.appName == 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent,\n                    re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n                if (re.exec(ua) != null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv;\n        })(),\n        isIELT9 = iev > -1 && iev < 9,\n        _genLoc = function (e, prefix) {\n            if (e == null) return [ 0, 0 ];\n            var ts = _touches(e), t = _getTouch(ts, 0);\n            return [t[prefix + \"X\"], t[prefix + \"Y\"]];\n        },\n        _pageLocation = function (e) {\n            if (e == null) return [ 0, 0 ];\n            if (isIELT9) {\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\n            }\n            else {\n                return _genLoc(e, \"page\");\n            }\n        },\n        _screenLocation = function (e) {\n            return _genLoc(e, \"screen\");\n        },\n        _clientLocation = function (e) {\n            return _genLoc(e, \"client\");\n        },\n        _getTouch = function (touches, idx) {\n            return touches.item ? touches.item(idx) : touches[idx];\n        },\n        _touches = function (e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        },\n        _touchCount = function (e) {\n            return _touches(e).length;\n        },\n    //http://www.quirksmode.org/blog/archives/2005/10/_and_the_winner_1.html\n        _bind = function (obj, type, fn, originalFn) {\n            _store(obj, type, fn);\n            originalFn.__tauid = fn.__tauid;\n            if (obj.addEventListener)\n                obj.addEventListener(type, fn, false);\n            else if (obj.attachEvent) {\n                var key = type + fn.__tauid;\n                obj[\"e\" + key] = fn;\n                // TODO look at replacing with .call(..)\n                obj[key] = function () {\n                    obj[\"e\" + key] && obj[\"e\" + key](window.event);\n                };\n                obj.attachEvent(\"on\" + type, obj[key]);\n            }\n        },\n        _unbind = function (obj, type, fn) {\n            if (fn == null) return;\n            _each(obj, function () {\n                var _el = _gel(this);\n                _unstore(_el, type, fn);\n                // it has been bound if there is a tauid. otherwise it was not bound and we can ignore it.\n                if (fn.__tauid != null) {\n                    if (_el.removeEventListener) {\n                        _el.removeEventListener(type, fn, false);\n                        if (isTouchDevice && touchMap[type]) _el.removeEventListener(touchMap[type], fn, false);\n                    }\n                    else if (this.detachEvent) {\n                        var key = type + fn.__tauid;\n                        _el[key] && _el.detachEvent(\"on\" + type, _el[key]);\n                        _el[key] = null;\n                        _el[\"e\" + key] = null;\n                    }\n                }\n\n                // if a touch event was also registered, deregister now.\n                if (fn.__taTouchProxy) {\n                    _unbind(obj, fn.__taTouchProxy[1], fn.__taTouchProxy[0]);\n                }\n            });\n        },\n        _devNull = function () {\n        },\n        _each = function (obj, fn) {\n            if (obj == null) return;\n            // if a list (or list-like), use it. if a string, get a list\n            // by running the string through querySelectorAll. else, assume\n            // it's an Element.\n            // obj.top is \"unknown\" in IE8.\n            obj = (typeof Window !== \"undefined\" && (typeof obj.top !== \"unknown\" && obj == obj.top)) ? [ obj ] :\n                    (typeof obj !== \"string\") && (obj.tagName == null && obj.length != null) ? obj :\n                    typeof obj === \"string\" ? document.querySelectorAll(obj)\n                : [ obj ];\n\n            for (var i = 0; i < obj.length; i++)\n                fn.apply(obj[i]);\n        };\n\n    /**\n     * Mottle offers support for abstracting out the differences\n     * between touch and mouse devices, plus \"smart click\" functionality\n     * (don't fire click if the mouse has moved between mousedown and mouseup),\n     * and synthesized click/tap events.\n     * @class Mottle\n     * @constructor\n     * @param {Object} params Constructor params\n     * @param {Integer} [params.clickThreshold=150] Threshold, in milliseconds beyond which a touchstart followed by a touchend is not considered to be a click.\n     * @param {Integer} [params.dblClickThreshold=350] Threshold, in milliseconds beyond which two successive tap events are not considered to be a click.\n     * @param {Boolean} [params.smartClicks=false] If true, won't fire click events if the mouse has moved between mousedown and mouseup. Note that this functionality\n     * requires that Mottle consume the mousedown event, and so may not be viable in all use cases.\n     */\n    this.Mottle = function (params) {\n        params = params || {};\n        var clickThreshold = params.clickThreshold || 150,\n            dblClickThreshold = params.dblClickThreshold || 350,\n            mouseEnterExitHandler = new MouseEnterExitHandler(),\n            tapHandler = new TapHandler(clickThreshold, dblClickThreshold),\n            _smartClicks = params.smartClicks,\n            _doBind = function (obj, evt, fn, children) {\n                if (fn == null) return;\n                _each(obj, function () {\n                    var _el = _gel(this);\n                    if (_smartClicks && evt === \"click\")\n                        SmartClickHandler(_el, evt, fn, children);\n                    else if (evt === \"tap\" || evt === \"dbltap\" || evt === \"contextmenu\") {\n                        tapHandler(_el, evt, fn, children);\n                    }\n                    else if (evt === \"mouseenter\" || evt == \"mouseexit\")\n                        mouseEnterExitHandler(_el, evt, fn, children);\n                    else\n                        DefaultHandler(_el, evt, fn, children);\n                });\n            };\n\n        /**\n         * Removes an element from the DOM, and deregisters all event handlers for it. You should use this\n         * to ensure you don't leak memory.\n         * @method remove\n         * @param {String|Element} el Element, or id of the element, to remove.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.remove = function (el) {\n            _each(el, function () {\n                var _el = _gel(this);\n                if (_el.__ta) {\n                    for (var evt in _el.__ta) {\n                        for (var h in _el.__ta[evt]) {\n                            _unbind(_el, evt, _el.__ta[evt][h]);\n                        }\n                    }\n                }\n                _el.parentNode && _el.parentNode.removeChild(_el);\n            });\n            return this;\n        };\n\n        /**\n         * Register an event handler, optionally as a delegate for some set of descendant elements. Note\n         * that this method takes either 3 or 4 arguments - if you supply 3 arguments it is assumed you have\n         * omitted the `children` parameter, and that the event handler should be bound directly to the given element.\n         * @method on\n         * @param {Element[]|Element|String} el Either an Element, or a CSS spec for a list of elements, or an array of Elements.\n         * @param {String} [children] Comma-delimited list of selectors identifying allowed children.\n         * @param {String} event Event ID.\n         * @param {Function} fn Event handler function.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.on = function (el, event, children, fn) {\n            var _el = arguments[0],\n                _c = arguments.length == 4 ? arguments[2] : null,\n                _e = arguments[1],\n                _f = arguments[arguments.length - 1];\n\n            _doBind(_el, _e, _f, _c);\n            return this;\n        };\n\n        /**\n         * Cancel delegate event handling for the given function. Note that unlike with 'on' you do not supply\n         * a list of child selectors here: it removes event delegation from all of the child selectors for which the\n         * given function was registered (if any).\n         * @method off\n         * @param {Element[]|Element|String} el Element - or ID of element - from which to remove event listener.\n         * @param {String} event Event ID.\n         * @param {Function} fn Event handler function.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.off = function (el, event, fn) {\n            _unbind(el, event, fn);\n            return this;\n        };\n\n        /**\n         * Triggers some event for a given element.\n         * @method trigger\n         * @param {Element} el Element for which to trigger the event.\n         * @param {String} event Event ID.\n         * @param {Event} originalEvent The original event. Should be optional of course, but currently is not, due\n         * to the jsPlumb use case that caused this method to be added.\n         * @param {Object} [payload] Optional object to set as `payload` on the generated event; useful for message passing.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.trigger = function (el, event, originalEvent, payload) {\n            // MouseEvent undefined in old IE; that's how we know it's a mouse event.  A fine Microsoft paradox.\n            var originalIsMouse = isMouseDevice && (typeof MouseEvent === \"undefined\" || originalEvent == null || originalEvent.constructor === MouseEvent);\n\n            var eventToBind = (isTouchDevice && !isMouseDevice && touchMap[event]) ? touchMap[event] : event,\n                bindingAMouseEvent = !(isTouchDevice && !isMouseDevice && touchMap[event]);\n\n            var pl = _pageLocation(originalEvent), sl = _screenLocation(originalEvent), cl = _clientLocation(originalEvent);\n            _each(el, function () {\n                var _el = _gel(this), evt;\n                originalEvent = originalEvent || {\n                    screenX: sl[0],\n                    screenY: sl[1],\n                    clientX: cl[0],\n                    clientY: cl[1]\n                };\n\n                var _decorate = function (_evt) {\n                    if (payload) _evt.payload = payload;\n                };\n\n                var eventGenerators = {\n                    \"TouchEvent\": function (evt) {\n                        var touch = document.createTouch(window, _el, 0, pl[0], pl[1],\n                            sl[0], sl[1],\n                            cl[0], cl[1],\n                            0, 0, 0, 0);\n\n                        // https://gist.github.com/sstephenson/448808\n                        var touches = document.createTouchList(touch);\n                        var targetTouches = document.createTouchList(touch);\n                        var changedTouches = document.createTouchList(touch);\n                        evt.initTouchEvent(eventToBind, true, true, window, null, sl[0], sl[1],\n                            cl[0], cl[1], false, false, false, false,\n                            touches, targetTouches, changedTouches, 1, 0);\n                    },\n                    \"MouseEvents\": function (evt) {\n                        evt.initMouseEvent(eventToBind, true, true, window, 0,\n                            sl[0], sl[1],\n                            cl[0], cl[1],\n                            false, false, false, false, 1, _el);\n\n                        if (Sniff.android) {\n                            // Android's touch events are not standard.\n                            var t = document.createTouch(window, _el, 0, pl[0], pl[1],\n                                sl[0], sl[1],\n                                cl[0], cl[1],\n                                0, 0, 0, 0);\n\n                            evt.touches = evt.targetTouches = evt.changedTouches = document.createTouchList(t);\n                        }\n                    }\n                };\n\n                if (document.createEvent) {\n\n                    var ite = !bindingAMouseEvent && !originalIsMouse && (isTouchDevice && touchMap[event] && !Sniff.android),\n                        evtName = ite ? \"TouchEvent\" : \"MouseEvents\";\n\n                    evt = document.createEvent(evtName);\n                    eventGenerators[evtName](evt);\n                    _decorate(evt);\n                    _el.dispatchEvent(evt);\n                }\n                else if (document.createEventObject) {\n                    evt = document.createEventObject();\n                    evt.eventType = evt.eventName = eventToBind;\n                    evt.screenX = sl[0];\n                    evt.screenY = sl[1];\n                    evt.clientX = cl[0];\n                    evt.clientY = cl[1];\n                    _decorate(evt);\n                    _el.fireEvent('on' + eventToBind, evt);\n                }\n            });\n            return this;\n        }\n    };\n\n    /**\n     * Static method to assist in 'consuming' an element: uses `stopPropagation` where available, or sets `e.returnValue=false` where it is not.\n     * @method Mottle.consume\n     * @param {Event} e Event to consume\n     * @param {Boolean} [doNotPreventDefault=false] If true, does not call `preventDefault()` on the event.\n     */\n    Mottle.consume = function (e, doNotPreventDefault) {\n        if (e.stopPropagation)\n            e.stopPropagation();\n        else\n            e.returnValue = false;\n\n        if (!doNotPreventDefault && e.preventDefault)\n            e.preventDefault();\n    };\n\n    /**\n     * Gets the page location corresponding to the given event. For touch events this means get the page location of the first touch.\n     * @method Mottle.pageLocation\n     * @param {Event} e Event to get page location for.\n     * @return {Integer[]} [left, top] for the given event.\n     */\n    Mottle.pageLocation = _pageLocation;\n\n    /**\n     * Forces touch events to be turned \"on\". Useful for testing: even if you don't have a touch device, you can still\n     * trigger a touch event when this is switched on and it will be captured and acted on.\n     * @method setForceTouchEvents\n     * @param {Boolean} value If true, force touch events to be on.\n     */\n    Mottle.setForceTouchEvents = function (value) {\n        isTouchDevice = value;\n    };\n\n    /**\n     * Forces mouse events to be turned \"on\". Useful for testing: even if you don't have a mouse, you can still\n     * trigger a mouse event when this is switched on and it will be captured and acted on.\n     * @method setForceMouseEvents\n     * @param {Boolean} value If true, force mouse events to be on.\n     */\n    Mottle.setForceMouseEvents = function (value) {\n        isMouseDevice = value;\n    };\n\n}).call(this);\n\n/**\n drag/drop functionality for use with jsPlumb but with\n no knowledge of jsPlumb. supports multiple scopes (separated by whitespace), dragging\n multiple elements, constrain to parent, drop filters, drag start filters, custom\n css classes.\n\n a lot of the functionality of this script is expected to be plugged in:\n\n addClass\n removeClass\n\n addEvent\n removeEvent\n\n getPosition\n setPosition\n getSize\n\n indexOf\n intersects\n\n the name came from here:\n\n http://mrsharpoblunto.github.io/foswig.js/\n\n copyright 2015 jsPlumb\n */\n\n;(function() {\n\n    \"use strict\";\n\n    var getOffsetRect = function (elem) {\n        // (1)\n        var box = elem.getBoundingClientRect();\n\n        var body = document.body;\n        var docElem = document.documentElement;\n\n        // (2)\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\n        // (3)\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\n        // (4)\n        var top  = box.top +  scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n\n    var matchesSelector = function(el, selector, ctx) {\n        ctx = ctx || el.parentNode;\n        var possibles = ctx.querySelectorAll(selector);\n        for (var i = 0; i < possibles.length; i++) {\n            if (possibles[i] === el)\n                return true;\n        }\n        return false;\n    };\n\n    var iev = (function() {\n            var rv = -1;\n            if (navigator.appName == 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent,\n                    re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n                if (re.exec(ua) != null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv;\n        })(),\n        DEFAULT_GRID_X = 50,\n        DEFAULT_GRID_Y = 50,\n        isIELT9 = iev > -1 && iev < 9,\n        _pl = function(e) {\n            if (isIELT9) {\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\n            }\n            else {\n                var ts = _touches(e), t = _getTouch(ts, 0);\n                // this is for iPad. may not fly for Android.\n                return [t.pageX, t.pageY];\n            }\n        },\n        _getTouch = function(touches, idx) { return touches.item ? touches.item(idx) : touches[idx]; },\n        _touches = function(e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        },\n        _classes = {\n            draggable:\"katavorio-draggable\",    // draggable elements\n            droppable:\"katavorio-droppable\",    // droppable elements\n            drag : \"katavorio-drag\",            // elements currently being dragged\n            selected:\"katavorio-drag-selected\", // elements in current drag selection\n            active : \"katavorio-drag-active\",   // droppables that are targets of a currently dragged element\n            hover : \"katavorio-drag-hover\",     // droppables over which a matching drag element is hovering\n            noSelect : \"katavorio-drag-no-select\" // added to the body to provide a hook to suppress text selection\n        },\n        _defaultScope = \"katavorio-drag-scope\",\n        _events = [ \"stop\", \"start\", \"drag\", \"drop\", \"over\", \"out\" ],\n        _devNull = function() {},\n        _true = function() { return true; },\n        _foreach = function(l, fn, from) {\n            for (var i = 0; i < l.length; i++) {\n                if (l[i] != from)\n                    fn(l[i]);\n            }\n        },\n        _setDroppablesActive = function(dd, val, andHover, drag) {\n            _foreach(dd, function(e) {\n                e.setActive(val);\n                if (val) e.updatePosition();\n                if (andHover) e.setHover(drag, val);\n            });\n        },\n        _each = function(obj, fn) {\n            if (obj == null) return;\n            obj = (typeof obj !== \"string\") && (obj.tagName == null && obj.length != null) ? obj : [ obj ];\n            for (var i = 0; i < obj.length; i++)\n                fn.apply(obj[i], [ obj[i] ]);\n        },\n        _consume = function(e) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            else {\n                e.returnValue = false;\n            }\n        },\n        _defaultInputFilterSelector = \"input,textarea,select,button,option\",\n    //\n    // filters out events on all input elements, like textarea, checkbox, input, select.\n        _inputFilter = function(e, el, _katavorio) {\n            var t = e.srcElement || e.target;\n            return !matchesSelector(t, _katavorio.getInputFilterSelector(), el);\n        };\n\n    var Super = function(el, params, css, scope) {\n        this.params = params || {};\n        this.el = el;\n        this.params.addClass(this.el, this._class);\n        this.uuid = _uuid();\n        var enabled = true;\n        this.setEnabled = function(e) { enabled = e; };\n        this.isEnabled = function() { return enabled; };\n        this.toggleEnabled = function() { enabled = !enabled; };\n        this.setScope = function(scopes) {\n            this.scopes = scopes ? scopes.split(/\\s+/) : [ scope ];\n        };\n        this.addScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) { m[s] = true;});\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.removeScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) { delete m[s];});\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.toggleScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) {\n                if (m[s]) delete m[s];\n                else m[s] = true;\n            });\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.setScope(params.scope);\n        this.k = params.katavorio;\n        return params.katavorio;\n    };\n\n    var Drag = function(el, params, css, scope) {\n        this._class = css.draggable;\n        var k = Super.apply(this, arguments);\n        this.rightButtonCanDrag = this.params.rightButtonCanDrag;\n        var downAt = [0,0], posAtDown = null, moving = false,\n            consumeStartEvent = this.params.consumeStartEvent !== false,\n            dragEl = this.el,\n            clone = this.params.clone,\n            scroll = this.params.scroll,\n            _multipleDrop = params.multipleDrop !== false;\n\n        var snapThreshold = params.snapThreshold || 5,\n            _snap = function(pos, x, y, thresholdX, thresholdY) {\n                thresholdX = thresholdX || snapThreshold;\n                thresholdY = thresholdY || snapThreshold;\n                var _dx = Math.floor(pos[0] / x),\n                    _dxl = x * _dx,\n                    _dxt = _dxl + x,\n                    _x = Math.abs(pos[0] - _dxl) <= thresholdX ? _dxl : Math.abs(_dxt - pos[0]) <= thresholdX ? _dxt : pos[0];\n\n                var _dy = Math.floor(pos[1] / y),\n                    _dyl = y * _dy,\n                    _dyt = _dyl + y,\n                    _y = Math.abs(pos[1] - _dyl) <= thresholdY ? _dyl : Math.abs(_dyt - pos[1]) <= thresholdY ? _dyt : pos[1];\n\n                return [ _x, _y];\n            };\n\n        this.toGrid = function(pos) {\n            if (this.params.grid == null) {\n                return pos;\n            }\n            else {\n                return _snap(pos, this.params.grid[0], this.params.grid[1]);\n            }\n        };\n\n        this.snap = function(x, y) {\n            if (dragEl == null) return;\n            x = x || (this.params.grid ? this.params.grid[0] : DEFAULT_GRID_X);\n            y = y || (this.params.grid ? this.params.grid[1] : DEFAULT_GRID_Y);\n            var p = this.params.getPosition(dragEl);\n            this.params.setPosition(dragEl, _snap(p, x, y, x, y));\n        };\n\n        this.constrain = typeof this.params.constrain === \"function\" ? this.params.constrain  : (this.params.constrain || this.params.containment) ? function(pos) {\n            return [\n                Math.max(0, Math.min(constrainRect.w - this.size[0], pos[0])),\n                Math.max(0, Math.min(constrainRect.h - this.size[1], pos[1]))\n            ];\n        } : function(pos) { return pos; };\n\n        var _assignId = function(obj) {\n                if (typeof obj == \"function\") {\n                    obj._katavorioId = _uuid();\n                    return obj._katavorioId;\n                } else {\n                    return obj;\n                }\n            },\n        // a map of { spec -> [ fn, exclusion ] } entries.\n            _filters = {},\n            _testFilter = function(e) {\n                for (var key in _filters) {\n                    var f = _filters[key];\n                    var rv = f[0](e);\n                    if (f[1]) rv = !rv;\n                    if (!rv) return false;\n                }\n                return true;\n            },\n            _setFilter = this.setFilter = function(f, _exclude) {\n                if (f) {\n                    var key = _assignId(f);\n                    _filters[key] = [\n                        function(e) {\n                            var t = e.srcElement || e.target, m;\n                            if (typeof f === \"string\") {\n                                m = matchesSelector(t, f, el);\n                            }\n                            else if (typeof f === \"function\") {\n                                m = f(e, el);\n                            }\n                            return m;\n                        },\n                            _exclude !== false\n                    ];\n\n                }\n            },\n            _addFilter = this.addFilter = _setFilter,\n            _removeFilter = this.removeFilter = function(f) {\n                var key = typeof f == \"function\" ? f._katavorioId : f;\n                delete _filters[key];\n            };\n\n        this.clearAllFilters = function() {\n            _filters = {};\n        };\n\n        this.canDrag = this.params.canDrag || _true;\n\n        var constrainRect,\n            matchingDroppables = [], intersectingDroppables = [];\n\n        this.downListener = function(e) {\n            var isNotRightClick = this.rightButtonCanDrag || (e.which !== 3 && e.button !== 2);\n            if (isNotRightClick && this.isEnabled() && this.canDrag()) {\n                var _f =  _testFilter(e) && _inputFilter(e, this.el, this.k);\n                if (_f) {\n                    if (!clone)\n                        dragEl = this.el;\n                    else {\n                        dragEl = this.el.cloneNode(true);\n                        dragEl.setAttribute(\"id\", null);\n                        dragEl.style.position = \"absolute\";\n                        // the clone node is added to the body; getOffsetRect gives us a value\n                        // relative to the body.\n                        var b = getOffsetRect(this.el);\n                        dragEl.style.left = b.left + \"px\";\n                        dragEl.style.top = b.top + \"px\";\n                        document.body.appendChild(dragEl);\n                    }\n                    consumeStartEvent && _consume(e);\n                    downAt = _pl(e);\n                    //\n                    this.params.bind(document, \"mousemove\", this.moveListener);\n                    this.params.bind(document, \"mouseup\", this.upListener);\n                    k.markSelection(this);\n                    this.params.addClass(document.body, css.noSelect);\n                }\n                else if (this.params.consumeFilteredEvents) {\n                    _consume(e);\n                }\n            }\n        }.bind(this);\n\n        this.moveListener = function(e) {\n            if (downAt) {\n                if (!moving) {\n                    var _continue = this.params.events[\"start\"]({el:this.el, pos:posAtDown, e:e, drag:this});\n                    if (_continue !== false) {\n                        if (!downAt) return;\n                        this.mark(true);\n                        moving = true;\n                    }\n                }\n\n                // it is possible that the start event caused the drag to be aborted. So we check\n                // again that we are currently dragging.\n                if (downAt) {\n                    intersectingDroppables.length = 0;\n                    var pos = _pl(e), dx = pos[0] - downAt[0], dy = pos[1] - downAt[1],\n                        z = this.params.ignoreZoom ? 1 : k.getZoom();\n                    dx /= z;\n                    dy /= z;\n                    this.moveBy(dx, dy, e);\n                    k.updateSelection(dx, dy, this);\n                }\n            }\n        }.bind(this);\n\n        this.upListener = function(e) {\n            if (downAt) {\n                downAt = null;\n                this.params.unbind(document, \"mousemove\", this.moveListener);\n                this.params.unbind(document, \"mouseup\", this.upListener);\n                this.params.removeClass(document.body, css.noSelect);\n                this.unmark(e);\n                k.unmarkSelection(this, e);\n                this.stop(e);\n                k.notifySelectionDragStop(this, e);\n                moving = false;\n                if (clone) {\n                    dragEl && dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n                    dragEl = null;\n                }\n            }\n        }.bind(this);\n\n        this.getFilters = function() { return _filters; };\n\n        this.abort = function() {\n            if (downAt != null)\n                this.upListener();\n        };\n\n        this.getDragElement = function() {\n            return dragEl || this.el;\n        };\n\n        this.notifyStart = function(e) {\n            this.params.events[\"start\"]({el:this.el, pos:this.params.getPosition(dragEl), e:e, drag:this});\n        };\n\n        this.stop = function(e, force) {\n            if (force || moving) {\n                var positions = [],\n                    sel = k.getSelection(),\n                    dPos = this.params.getPosition(dragEl);\n\n                if (sel.length > 1) {\n                    for (var i = 0; i < sel.length; i++) {\n                        var p = this.params.getPosition(sel[i].el);\n                        positions.push([ sel[i].el, { left: p[0], top: p[1] }, sel[i] ]);\n                    }\n                }\n                else {\n                    positions.push([ dragEl, {left:dPos[0], top:dPos[1]}, this ]);\n                }\n\n                this.params.events[\"stop\"]({\n                    el: dragEl, pos: dPos, e: e, drag: this, selection:positions\n                });\n            }\n        };\n\n        this.mark = function(andNotify) {\n            posAtDown = this.params.getPosition(dragEl);\n            this.size = this.params.getSize(dragEl);\n            matchingDroppables = k.getMatchingDroppables(this);\n            _setDroppablesActive(matchingDroppables, true, false, this);\n            this.params.addClass(dragEl, this.params.dragClass || css.drag);\n            if (this.params.constrain || this.params.containment) {\n                var cs = this.params.getSize(dragEl.parentNode);\n                constrainRect = { w:cs[0], h:cs[1] };\n            }\n            if (andNotify) {\n                k.notifySelectionDragStart(this);\n            }\n        };\n        this.unmark = function(e) {\n            _setDroppablesActive(matchingDroppables, false, true, this);\n            this.params.removeClass(dragEl, this.params.dragClass || css.drag);\n            matchingDroppables.length = 0;\n            for (var i = 0; i < intersectingDroppables.length; i++) {\n                var retVal = intersectingDroppables[i].drop(this, e);\n                if (retVal === true) break;\n            }\n        };\n        this.moveBy = function(dx, dy, e) {\n            intersectingDroppables.length = 0;\n            var cPos = this.constrain(this.toGrid(([posAtDown[0] + dx, posAtDown[1] + dy])), dragEl),\n                rect = { x:cPos[0], y:cPos[1], w:this.size[0], h:this.size[1]};\n            this.params.setPosition(dragEl, cPos);\n            for (var i = 0; i < matchingDroppables.length; i++) {\n                var r2 = { x:matchingDroppables[i].position[0], y:matchingDroppables[i].position[1], w:matchingDroppables[i].size[0], h:matchingDroppables[i].size[1]};\n                //if (this.params.intersects(rect, r2) && matchingDroppables[i].canDrop(this) && (_multipleDrop || intersectingDroppables.length == 0)) {\n                if (this.params.intersects(rect, r2) && matchingDroppables[i].canDrop(this)) {\n                    intersectingDroppables.push(matchingDroppables[i]);\n                    matchingDroppables[i].setHover(this, true, e);\n                }\n                else if (matchingDroppables[i].isHover()) {\n                    matchingDroppables[i].setHover(this, false, e);\n                }\n            }\n            this.params.events[\"drag\"]({el:this.el, pos:cPos, e:e, drag:this});\n\n            /* test to see if the parent needs to be scrolled\n             if (scroll) {\n             var pnsl = dragEl.parentNode.scrollLeft, pnst = dragEl.parentNode.scrollTop;\n             console.log(\"scroll!\", pnsl, pnst);\n             }*/\n        };\n        this.destroy = function() {\n            this.params.unbind(this.el, \"mousedown\", this.downListener);\n            this.params.unbind(document, \"mousemove\", this.moveListener);\n            this.params.unbind(document, \"mouseup\", this.upListener);\n            this.downListener = null;\n            this.upListener = null;\n            this.moveListener = null;\n            //this.params = null;\n            //this.el = null;\n            //dragEl = null;\n        };\n\n        // init:register mousedown, and perhaps set a filter\n        this.params.bind(this.el, \"mousedown\", this.downListener);\n\n        // if handle provded, use that.  otherwise, try to set a filter.\n        // note that a `handle` selector always results in filterExclude being set to false, ie.\n        // the selector defines the handle element(s).\n        if (this.params.handle)\n            _setFilter(this.params.handle, false);\n        else\n            _setFilter(this.params.filter, this.params.filterExclude);\n    };\n\n    var Drop = function(el, params, css, scope) {\n        this._class = css.droppable;\n        this.params = params || {};\n        this._activeClass = params.activeClass || css.active;\n        this._hoverClass = params.hoverClass || css.hover;\n        Super.apply(this, arguments);\n        var hover = false;\n\n        this.setActive = function(val) {\n            this.params[val ? \"addClass\" : \"removeClass\"](this.el, this._activeClass);\n        };\n\n        this.updatePosition = function() {\n            this.position = this.params.getPosition(this.el);\n            this.size = this.params.getSize(this.el);\n        };\n\n        this.canDrop = this.params.canDrop || function(drag) {\n            return true;\n        };\n\n        this.isHover = function() { return hover; };\n\n        this.setHover = function(drag, val, e) {\n            // if turning off hover but this was not the drag that caused the hover, ignore.\n            if (val || this.el._katavorioDragHover == null || this.el._katavorioDragHover == drag.el._katavorio) {\n                this.params[val ? \"addClass\" : \"removeClass\"](this.el, this._hoverClass);\n                //this.el._katavorioDragHover = val ? drag.el._katavorio : null;\n                this.el._katavorioDragHover = val ? drag.el._katavorio : null;\n                if (hover !== val)\n                    this.params.events[val ? \"over\" : \"out\"]({el:this.el, e:e, drag:drag, drop:this});\n                hover = val;\n            }\n        };\n\n        this.drop = function(drag, event) {\n            return this.params.events[\"drop\"]({ drag:drag, e:event, drop:this });\n        };\n\n        this.destroy = function() {\n            this._class = null;\n            this._activeClass = null;\n            this._hoverClass = null;\n            //this.params = null;\n            hover = null;\n            //this.el = null;\n        };\n    };\n\n    var _uuid = function() {\n        return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        }));\n    };\n\n    var _gel = function(el) {\n        if (el == null) return null;\n        el = typeof el === \"string\" ? document.getElementById(el) : el;\n        if (el == null) return null;\n        el._katavorio = el._katavorio || _uuid();\n        return el;\n    };\n\n    this.Katavorio = function(katavorioParams) {\n\n        var _selection = [],\n            _selectionMap = {};\n        this._dragsByScope = {};\n        this._dropsByScope = {};\n        var _zoom = 1,\n            _reg = function(obj, map) {\n                for(var i = 0; i < obj.scopes.length; i++) {\n                    map[obj.scopes[i]] = map[obj.scopes[i]] || [];\n                    map[obj.scopes[i]].push(obj);\n                }\n            },\n            _unreg = function(obj, map) {\n                var c = 0;\n                for(var i = 0; i < obj.scopes.length; i++) {\n                    if (map[obj.scopes[i]]) {\n                        var idx = katavorioParams.indexOf(map[obj.scopes[i]], obj);\n                        if (idx != -1) {\n                            map[obj.scopes[i]].splice(idx, 1);\n                            c++;\n                        }\n                    }\n                }\n                return c > 0 ;\n            },\n            _getMatchingDroppables = this.getMatchingDroppables = function(drag) {\n                var dd = [], _m = {};\n                for (var i = 0; i < drag.scopes.length; i++) {\n                    var _dd = this._dropsByScope[drag.scopes[i]];\n                    if (_dd) {\n                        for (var j = 0; j < _dd.length; j++) {\n                            //if (_dd[j].canDrop(drag) &&  !_m[_dd[j].el._katavorio] && _dd[j].el !== drag.el) {\n                            if (_dd[j].canDrop(drag) &&  !_m[_dd[j].uuid] && _dd[j].el !== drag.el) {\n                                _m[_dd[j].uuid] = true;\n                                dd.push(_dd[j]);\n                            }\n                        }\n                    }\n                }\n                return dd;\n            },\n            _prepareParams = function(p) {\n                p = p || {};\n                var _p = {\n                    events:{}\n                };\n                for (var i in katavorioParams) _p[i] = katavorioParams[i];\n                for (var i in p) _p[i] = p[i];\n                // events\n\n                for (var i = 0; i < _events.length; i++) {\n                    _p.events[_events[i]] = p[_events[i]] || _devNull;\n                }\n                _p.katavorio = this;\n                return _p;\n            }.bind(this),\n            _css = {},\n            overrideCss = katavorioParams.css || {},\n            _scope = katavorioParams.scope || _defaultScope;\n\n        // prepare map of css classes based on defaults frst, then optional overrides\n        for (var i in _classes) _css[i] = _classes[i];\n        for (var i in overrideCss) _css[i] = overrideCss[i];\n\n        var inputFilterSelector = katavorioParams.inputFilterSelector || _defaultInputFilterSelector;\n        /**\n         * Gets the selector identifying which input elements to filter from drag events.\n         * @method getInputFilterSelector\n         * @return {String} Current input filter selector.\n         */\n        this.getInputFilterSelector = function() { return inputFilterSelector; };\n\n        /**\n         * Sets the selector identifying which input elements to filter from drag events.\n         * @method setInputFilterSelector\n         * @param {String} selector Input filter selector to set.\n         * @return {Katavorio} Current instance; method may be chained.\n         */\n        this.setInputFilterSelector = function(selector) {\n            inputFilterSelector = selector;\n            return this;\n        };\n\n        this.draggable = function(el, params) {\n            var o = [];\n            _each(el, function(_el) {\n                _el = _gel(_el);\n                if (_el != null) {\n                    var p = _prepareParams(params);\n                    _el._katavorioDrag = new Drag(_el, p, _css, _scope);\n                    _reg(_el._katavorioDrag, this._dragsByScope);\n                    o.push(_el._katavorioDrag);\n                    katavorioParams.addClass(_el, _css.draggable);\n                }\n            }.bind(this));\n            return o;\n\n        };\n\n        this.droppable = function(el, params) {\n            var o = [];\n            _each(el, function(_el) {\n                _el = _gel(_el);\n                if (_el != null) {\n                    _el._katavorioDrop = new Drop(_el, _prepareParams(params), _css, _scope);\n                    _reg(_el._katavorioDrop, this._dropsByScope);\n                    o.push(_el._katavorioDrop);\n                    katavorioParams.addClass(_el, _css.droppable);\n                }\n            }.bind(this));\n            return o;\n        };\n\n        /**\n         * @name Katavorio#select\n         * @function\n         * @desc Adds an element to the current selection (for multiple node drag)\n         * @param {Element|String} DOM element - or id of the element - to add.\n         */\n        this.select = function(el) {\n            _each(el, function() {\n                var _el = _gel(this);\n                if (_el && _el._katavorioDrag) {\n                    if (!_selectionMap[_el._katavorio]) {\n                        _selection.push(_el._katavorioDrag);\n                        _selectionMap[_el._katavorio] = [ _el, _selection.length - 1 ];\n                        katavorioParams.addClass(_el, _css.selected);\n                    }\n                }\n            });\n            return this;\n        };\n\n        /**\n         * @name Katavorio#deselect\n         * @function\n         * @desc Removes an element from the current selection (for multiple node drag)\n         * @param {Element|String} DOM element - or id of the element - to remove.\n         */\n        this.deselect = function(el) {\n            _each(el, function() {\n                var _el = _gel(this);\n                if (_el && _el._katavorio) {\n                    var e = _selectionMap[_el._katavorio];\n                    if (e) {\n                        var _s = [];\n                        for (var i = 0; i < _selection.length; i++)\n                            if (_selection[i].el !== _el) _s.push(_selection[i]);\n                        _selection = _s;\n                        delete _selectionMap[_el._katavorio];\n                        katavorioParams.removeClass(_el, _css.selected);\n                    }\n                }\n            });\n            return this;\n        };\n\n        this.deselectAll = function() {\n            for (var i in _selectionMap) {\n                var d = _selectionMap[i];\n                katavorioParams.removeClass(d[0], _css.selected);\n            }\n\n            _selection.length = 0;\n            _selectionMap = {};\n        };\n\n        this.markSelection = function(drag) {\n            _foreach(_selection, function(e) { e.mark(); }, drag);\n        };\n\n        this.unmarkSelection = function(drag, event) {\n            _foreach(_selection, function(e) { e.unmark(event); }, drag);\n        };\n\n        this.getSelection = function() { return _selection.slice(0); };\n\n        this.updateSelection = function(dx, dy, drag) {\n            _foreach(_selection, function(e) { e.moveBy(dx, dy); }, drag);\n        };\n\n        this.notifySelectionDragStop = function(drag, evt) {\n            _foreach(_selection, function(e) { e.stop(evt, true); }, drag);\n        };\n\n        this.notifySelectionDragStart = function(drag, evt) {\n            _foreach(_selection, function(e) { e.notifyStart(evt);}, drag);\n        };\n\n        this.setZoom = function(z) { _zoom = z; };\n        this.getZoom = function() { return _zoom; };\n\n        // does the work of changing scopes\n        var _scopeManip = function(kObj, scopes, map, fn) {\n            if (kObj != null) {\n                _unreg(kObj, map);  // deregister existing scopes\n                kObj[fn](scopes); // set scopes\n                _reg(kObj, map); // register new ones\n            }\n        };\n\n        _each([ \"set\", \"add\", \"remove\", \"toggle\"], function(v) {\n            this[v + \"Scope\"] = function(el, scopes) {\n                _scopeManip(el._katavorioDrag, scopes, this._dragsByScope, v + \"Scope\");\n                _scopeManip(el._katavorioDrop, scopes, this._dropsByScope, v + \"Scope\");\n            }.bind(this);\n            this[v + \"DragScope\"] = function(el, scopes) {\n                _scopeManip(el._katavorioDrag, scopes, this._dragsByScope, v + \"Scope\");\n            }.bind(this);\n            this[v + \"DropScope\"] = function(el, scopes) {\n                _scopeManip(el._katavorioDrop, scopes, this._dropsByScope, v + \"Scope\");\n            }.bind(this);\n        }.bind(this));\n\n        this.snapToGrid = function(x, y) {\n            for (var s in this._dragsByScope) {\n                _foreach(this._dragsByScope[s], function(d) { d.snap(x, y); });\n            }\n        };\n\n        this.getDragsForScope = function(s) { return this._dragsByScope[s]; };\n        this.getDropsForScope = function(s) { return this._dropsByScope[s]; };\n\n        var _destroy = function(el, type, map) {\n            el = _gel(el);\n            if (el[type]) {\n                if (_unreg(el[type], map))\n                    el[type].destroy();\n                el[type] = null;\n            }\n        };\n\n        this.elementRemoved = function(el) {\n            this.destroyDraggable(el);\n            this.destroyDroppable(el);\n        };\n\n        this.destroyDraggable = function(el) {\n            _destroy(el, \"_katavorioDrag\", this._dragsByScope);\n        };\n\n        this.destroyDroppable = function(el) {\n            _destroy(el, \"_katavorioDrop\", this._dropsByScope);\n        };\n\n        this.reset = function() {\n            this._dragsByScope = {};\n            this._dropsByScope = {};\n            _selection = [];\n            _selectionMap = {};\n        };\n    };\n}).call(this);\n\n/*\n * jsPlumb\n *\n * Title:jsPlumb 1.7.6\n *\n * Provides a way to visually connect elements on an HTML page, using SVG or VML.\n *\n * This file contains utility functions that run in both browsers and headless.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n\n;\n(function () {\n\n    var _isa = function (a) {\n            return Object.prototype.toString.call(a) === \"[object Array]\";\n        },\n        _isnum = function (n) {\n            return Object.prototype.toString.call(n) === \"[object Number]\";\n        },\n        _iss = function (s) {\n            return typeof s === \"string\";\n        },\n        _isb = function (s) {\n            return typeof s === \"boolean\";\n        },\n        _isnull = function (s) {\n            return s == null;\n        },\n        _iso = function (o) {\n            return o == null ? false : Object.prototype.toString.call(o) === \"[object Object]\";\n        },\n        _isd = function (o) {\n            return Object.prototype.toString.call(o) === \"[object Date]\";\n        },\n        _isf = function (o) {\n            return Object.prototype.toString.call(o) === \"[object Function]\";\n        },\n        _ise = function (o) {\n            for (var i in o) {\n                if (o.hasOwnProperty(i)) return false;\n            }\n            return true;\n        };\n\n    var root = this;\n    var exports = root.jsPlumbUtil = {\n        isArray: _isa,\n        isString: _iss,\n        isBoolean: _isb,\n        isNull: _isnull,\n        isObject: _iso,\n        isDate: _isd,\n        isFunction: _isf,\n        isEmpty: _ise,\n        isNumber: _isnum,\n        clone: function (a) {\n            if (_iss(a)) return \"\" + a;\n            else if (_isb(a)) return !!a;\n            else if (_isd(a)) return new Date(a.getTime());\n            else if (_isf(a)) return a;\n            else if (_isa(a)) {\n                var b = [];\n                for (var i = 0; i < a.length; i++)\n                    b.push(this.clone(a[i]));\n                return b;\n            }\n            else if (_iso(a)) {\n                var c = {};\n                for (var j in a)\n                    c[j] = this.clone(a[j]);\n                return c;\n            }\n            else return a;\n        },\n        merge: function (a, b, collations) {\n            // first change the collations array - if present - into a lookup table, because its faster.\n            var cMap = {}, ar, i;\n            collations = collations || [];\n            for (i = 0; i < collations.length; i++)\n                cMap[collations[i]] = true;\n\n            var c = this.clone(a);\n            for (i in b) {\n                if (c[i] == null) {\n                    c[i] = b[i];\n                }\n                else if (_iss(b[i]) || _isb(b[i])) {\n                    if (!cMap[i]) {\n                        c[i] = b[i]; // if we dont want to collate, just copy it in.\n                    }\n                    else {\n                        ar = [];\n                        // if c's object is also an array we can keep its values.\n                        ar.push.apply(ar, _isa(c[i]) ? c[i] : [ c[i] ]);\n                        ar.push.apply(ar, _isa(b[i]) ? b[i] : [ b[i] ]);\n                        c[i] = ar;\n                    }\n                }\n                else {\n                    if (_isa(b[i])) {\n                        ar = [];\n                        // if c's object is also an array we can keep its values.\n                        if (_isa(c[i])) ar.push.apply(ar, c[i]);\n                        ar.push.apply(ar, b[i]);\n                        c[i] = ar;\n                    }\n                    else if (_iso(b[i])) {\n                        // overwite c's value with an object if it is not already one.\n                        if (!_iso(c[i]))\n                            c[i] = {};\n                        for (var j in b[i]) {\n                            c[i][j] = b[i][j];\n                        }\n                    }\n                }\n\n            }\n            return c;\n        },\n        replace: function (inObj, path, value) {\n            if (inObj == null) return;\n            var q = inObj, t = q;\n            path.replace(/([^\\.])+/g, function (term, lc, pos, str) {\n                var array = term.match(/([^\\[0-9]+){1}(\\[)([0-9+])/),\n                    last = pos + term.length >= str.length,\n                    _getArray = function () {\n                        return t[array[1]] || (function () {\n                            t[array[1]] = [];\n                            return t[array[1]];\n                        })();\n                    };\n\n                if (last) {\n                    // set term = value on current t, creating term as array if necessary.\n                    if (array)\n                        _getArray()[array[3]] = value;\n                    else\n                        t[term] = value;\n                }\n                else {\n                    // set to current t[term], creating t[term] if necessary.\n                    if (array) {\n                        var a = _getArray();\n                        t = a[array[3]] || (function () {\n                            a[array[3]] = {};\n                            return a[array[3]];\n                        })();\n                    }\n                    else\n                        t = t[term] || (function () {\n                            t[term] = {};\n                            return t[term];\n                        })();\n                }\n            });\n\n            return inObj;\n        },\n        //\n        // chain a list of functions, supplied by [ object, method name, args ], and return on the first\n        // one that returns the failValue. if none return the failValue, return the successValue.\n        //\n        functionChain: function (successValue, failValue, fns) {\n            for (var i = 0; i < fns.length; i++) {\n                var o = fns[i][0][fns[i][1]].apply(fns[i][0], fns[i][2]);\n                if (o === failValue) {\n                    return o;\n                }\n            }\n            return successValue;\n        },\n        // take the given model and expand out any parameters.\n        populate: function (model, values) {\n            // for a string, see if it has parameter matches, and if so, try to make the substitutions.\n            var getValue = function (fromString) {\n                    var matches = fromString.match(/(\\${.*?})/g);\n                    if (matches != null) {\n                        for (var i = 0; i < matches.length; i++) {\n                            var val = values[matches[i].substring(2, matches[i].length - 1)] || \"\";\n                            if (val != null) {\n                                fromString = fromString.replace(matches[i], val);\n                            }\n                        }\n                    }\n                    return fromString;\n                },\n            // process one entry.\n                _one = function (d) {\n                    if (d != null) {\n                        if (_iss(d)) {\n                            return getValue(d);\n                        }\n                        else if (_isa(d)) {\n                            var r = [];\n                            for (var i = 0; i < d.length; i++)\n                                r.push(_one(d[i]));\n                            return r;\n                        }\n                        else if (_iso(d)) {\n                            var s = {};\n                            for (var j in d) {\n                                s[j] = _one(d[j]);\n                            }\n                            return s;\n                        }\n                        else {\n                            return d;\n                        }\n                    }\n                };\n\n            return _one(model);\n        },\n        convertStyle: function (s, ignoreAlpha) {\n            // TODO: jsPlumb should support a separate 'opacity' style member.\n            if (\"transparent\" === s) return s;\n            var o = s,\n                pad = function (n) {\n                    return n.length == 1 ? \"0\" + n : n;\n                },\n                hex = function (k) {\n                    return pad(Number(k).toString(16));\n                },\n                pattern = /(rgb[a]?\\()(.*)(\\))/;\n            if (s.match(pattern)) {\n                var parts = s.match(pattern)[2].split(\",\");\n                o = \"#\" + hex(parts[0]) + hex(parts[1]) + hex(parts[2]);\n                if (!ignoreAlpha && parts.length == 4)\n                    o = o + hex(parts[3]);\n            }\n            return o;\n        },\n        findWithFunction: function (a, f) {\n            if (a)\n                for (var i = 0; i < a.length; i++) if (f(a[i])) return i;\n            return -1;\n        },\n        indexOf: function (l, v) {\n            return l.indexOf ? l.indexOf(v) : exports.findWithFunction(l, function (_v) {\n                return _v == v;\n            });\n        },\n        removeWithFunction: function (a, f) {\n            var idx = exports.findWithFunction(a, f);\n            if (idx > -1) a.splice(idx, 1);\n            return idx != -1;\n        },\n        remove: function (l, v) {\n            var idx = exports.indexOf(l, v);\n            if (idx > -1) l.splice(idx, 1);\n            return idx != -1;\n        },\n        // TODO support insert index\n        addWithFunction: function (list, item, hashFunction) {\n            if (exports.findWithFunction(list, hashFunction) == -1) list.push(item);\n        },\n        addToList: function (map, key, value, insertAtStart) {\n            var l = map[key];\n            if (l == null) {\n                l = [];\n                map[key] = l;\n            }\n            l[insertAtStart ? \"unshift\" : \"push\"](value);\n            return l;\n        },\n        //\n        // extends the given obj (which can be an array) with the given constructor function, prototype functions, and\n        // class members, any of which may be null.\n        //\n        extend: function (child, parent, _protoFn) {\n            var i;\n            parent = _isa(parent) ? parent : [ parent ];\n\n            for (i = 0; i < parent.length; i++) {\n                for (var j in parent[i].prototype) {\n                    if (parent[i].prototype.hasOwnProperty(j)) {\n                        child.prototype[j] = parent[i].prototype[j];\n                    }\n                }\n            }\n\n            var _makeFn = function (name, protoFn) {\n                return function () {\n                    for (i = 0; i < parent.length; i++) {\n                        if (parent[i].prototype[name])\n                            parent[i].prototype[name].apply(this, arguments);\n                    }\n                    return protoFn.apply(this, arguments);\n                };\n            };\n\n            var _oneSet = function (fns) {\n                for (var k in fns) {\n                    child.prototype[k] = _makeFn(k, fns[k]);\n                }\n            };\n\n            if (arguments.length > 2) {\n                for (i = 2; i < arguments.length; i++)\n                    _oneSet(arguments[i]);\n            }\n\n            return child;\n        },\n        uuid: function () {\n            return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            }));\n        },\n        logEnabled: true,\n        log: function () {\n            if (exports.logEnabled && typeof console != \"undefined\") {\n                try {\n                    var msg = arguments[arguments.length - 1];\n                    console.log(msg);\n                }\n                catch (e) {\n                }\n            }\n        },\n\n        /**\n         * Wraps one function with another, creating a placeholder for the\n         * wrapped function if it was null. this is used to wrap the various\n         * drag/drop event functions - to allow jsPlumb to be notified of\n         * important lifecycle events without imposing itself on the user's\n         * drag/drop functionality.\n         * @method jsPlumbUtil.wrap\n         * @param {Function} wrappedFunction original function to wrap; may be null.\n         * @param {Function} newFunction function to wrap the original with.\n         * @param {Object} [returnOnThisValue] Optional. Indicates that the wrappedFunction should\n         * not be executed if the newFunction returns a value matching 'returnOnThisValue'.\n         * note that this is a simple comparison and only works for primitives right now.\n         */\n        wrap: function (wrappedFunction, newFunction, returnOnThisValue) {\n            wrappedFunction = wrappedFunction || function () {\n            };\n            newFunction = newFunction || function () {\n            };\n            return function () {\n                var r = null;\n                try {\n                    r = newFunction.apply(this, arguments);\n                } catch (e) {\n                    exports.log(\"jsPlumb function failed : \" + e);\n                }\n                if (returnOnThisValue == null || (r !== returnOnThisValue)) {\n                    try {\n                        r = wrappedFunction.apply(this, arguments);\n                    } catch (e) {\n                        exports.log(\"wrapped function failed : \" + e);\n                    }\n                }\n                return r;\n            };\n        }\n    };\n\n    exports.EventGenerator = function () {\n        var _listeners = {},\n            eventsSuspended = false,\n        // this is a list of events that should re-throw any errors that occur during their dispatch. it is current private.\n            eventsToDieOn = { \"ready\": true };\n\n        this.bind = function (event, listener, insertAtStart) {\n            var _one = function(evt) {\n                exports.addToList(_listeners, evt, listener, insertAtStart);\n                listener.__jsPlumb = listener.__jsPlumb || {};\n                listener.__jsPlumb[jsPlumbUtil.uuid()] = evt;\n            };\n\n            if (typeof event === \"string\") _one(event);\n            else if (event.length != null) {\n                for (var i = 0; i < event.length; i++) {\n                    _one(event[i]);\n                }\n            }\n\n            return this;\n        };\n\n        this.fire = function (event, value, originalEvent) {\n            if (!eventsSuspended && _listeners[event]) {\n                var l = _listeners[event].length, i = 0, _gone = false, ret = null;\n                if (!this.shouldFireEvent || this.shouldFireEvent(event, value, originalEvent)) {\n                    while (!_gone && i < l && ret !== false) {\n                        // doing it this way rather than catching and then possibly re-throwing means that an error propagated by this\n                        // method will have the whole call stack available in the debugger.\n                        if (eventsToDieOn[event])\n                            _listeners[event][i].apply(this, [ value, originalEvent]);\n                        else {\n                            try {\n                                ret = _listeners[event][i].apply(this, [ value, originalEvent ]);\n                            } catch (e) {\n                                exports.log(\"jsPlumb: fire failed for event \" + event + \" : \" + e);\n                            }\n                        }\n                        i++;\n                        if (_listeners == null || _listeners[event] == null)\n                            _gone = true;\n                    }\n                }\n            }\n            return this;\n        };\n\n        this.unbind = function (eventOrListener, listener) {\n\n            if (arguments.length === 0) {\n                _listeners = {};\n            }\n            else if (arguments.length === 1) {\n                if (typeof eventOrListener === \"string\")\n                    delete _listeners[eventOrListener];\n                else if (eventOrListener.__jsPlumb) {\n                    var evt;\n                    for (var i in eventOrListener.__jsPlumb) {\n                        evt = eventOrListener.__jsPlumb[i];\n                        exports.remove(_listeners[evt] || [], eventOrListener);\n                    }\n                }\n            }\n            else if (arguments.length === 2) {\n                exports.remove(_listeners[eventOrListener] || [], listener);\n            }\n\n            return this;\n        };\n\n        this.getListener = function (forEvent) {\n            return _listeners[forEvent];\n        };\n        this.setSuspendEvents = function (val) {\n            eventsSuspended = val;\n        };\n        this.isSuspendEvents = function () {\n            return eventsSuspended;\n        };\n        this.silently = function(fn) {\n            this.setSuspendEvents(true);\n            try {\n                fn();\n            }\n            catch (e) {\n                jsPlumbUtil.log(\"Cannot execute silent function \" + e);\n            }\n            this.setSuspendEvents(false);\n        };\n        this.cleanupListeners = function () {\n            for (var i in _listeners) {\n                _listeners[i] = null;\n            }\n        };\n    };\n\n    exports.EventGenerator.prototype = {\n        cleanup: function () {\n            this.cleanupListeners();\n        }\n    };\n\n    // thanks MDC\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fbind\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (oThis) {\n            if (typeof this !== \"function\") {\n                // closest thing possible to the ECMAScript 5 internal IsCallable function\n                throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n            }\n\n            var aArgs = Array.prototype.slice.call(arguments, 1),\n                fToBind = this,\n                fNOP = function () {\n                },\n                fBound = function () {\n                    return fToBind.apply(this instanceof fNOP && oThis ? this : oThis,\n                        aArgs.concat(Array.prototype.slice.call(arguments)));\n                };\n\n            fNOP.prototype = this.prototype;\n            fBound.prototype = new fNOP();\n\n            return fBound;\n        };\n    }\n\n}).call(this);\n\n/*\n * jsPlumb\n *\n * Title:jsPlumb 1.7.6\n *\n * Provides a way to visually connect elements on an HTML page, using SVG or VML.\n *\n * This file contains utility functions that run in browsers only.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n ;(function() {\n\n  \"use strict\";\n\n   var root = this;\n   var exports = root.jsPlumbUtil;\n\n   exports.ieVersion = /MSIE\\s([\\d.]+)/.test(navigator.userAgent) ? (new Number(RegExp.$1)) : -1;\n\n   exports.oldIE = exports.ieVersion > -1 && exports.ieVersion < 9;\n\n   exports.matchesSelector = function(el, selector, ctx) {\n       ctx = ctx || el.parentNode;\n       var possibles = ctx.querySelectorAll(selector);\n       for (var i = 0; i < possibles.length; i++) {\n           if (possibles[i] === el)\n               return true;\n       }\n       return false;\n   };\n\n   exports.consume = function(e, doNotPreventDefault) {\n       if (e.stopPropagation)\n           e.stopPropagation();\n       else\n           e.returnValue = false;\n\n       if (!doNotPreventDefault && e.preventDefault)\n            e.preventDefault();\n   };\n\n   /*\n    * Function: sizeElement\n    * Helper to size and position an element. You would typically use\n    * this when writing your own Connector or Endpoint implementation.\n    *\n    * Parameters:\n    *  x - [int] x position for the element origin\n    *  y - [int] y position for the element origin\n    *  w - [int] width of the element\n    *  h - [int] height of the element\n    *\n    */\n   exports.sizeElement = function(el, x, y, w, h) {\n       if (el) {\n           el.style.height = h + \"px\";\n           el.height = h;\n           el.style.width = w + \"px\";\n           el.width = w;\n           el.style.left = x + \"px\";\n           el.style.top = y + \"px\";\n       }\n   };\n\n\n }).call(this);\n\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the core code.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n(function () {\n\n    \"use strict\";\n\n    var root = this;\n    var connectorTypes = [], rendererTypes;\n\n    var _ju = root.jsPlumbUtil,\n        _getOffset = function (el, _instance, relativeToRoot) {\n            return _instance.getOffset(el, relativeToRoot);\n        },\n\n        /**\n         * creates a timestamp, using milliseconds since 1970, but as a string.\n         */\n        _timestamp = function () {\n            return \"\" + (new Date()).getTime();\n        },\n\n    // helper method to update the hover style whenever it, or paintStyle, changes.\n    // we use paintStyle as the foundation and merge hoverPaintStyle over the\n    // top.\n        _updateHoverStyle = function (component) {\n            if (component._jsPlumb.paintStyle && component._jsPlumb.hoverPaintStyle) {\n                var mergedHoverStyle = {};\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.paintStyle);\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.hoverPaintStyle);\n                delete component._jsPlumb.hoverPaintStyle;\n                // we want the fillStyle of paintStyle to override a gradient, if possible.\n                if (mergedHoverStyle.gradient && component._jsPlumb.paintStyle.fillStyle)\n                    delete mergedHoverStyle.gradient;\n                component._jsPlumb.hoverPaintStyle = mergedHoverStyle;\n            }\n        },\n        events = [\"tap\", \"dbltap\", \"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"mousemove\", \"mousedown\", \"mouseup\", \"contextmenu\" ],\n        eventFilters = { \"mouseout\": \"mouseleave\", \"mouseexit\": \"mouseleave\" },\n        _updateAttachedElements = function (component, state, timestamp, sourceElement) {\n            var affectedElements = component.getAttachedElements();\n            if (affectedElements) {\n                for (var i = 0, j = affectedElements.length; i < j; i++) {\n                    if (!sourceElement || sourceElement != affectedElements[i])\n                        affectedElements[i].setHover(state, true, timestamp);\t\t\t// tell the attached elements not to inform their own attached elements.\n                }\n            }\n        },\n        _splitType = function (t) {\n            return t == null ? null : t.split(\" \");\n        },\n        _mapType = function(map, obj, typeId) {\n            for (var i in obj)\n                map[i] = typeId;\n        },\n        _applyTypes = function (component, params, doNotRepaint) {\n            if (component.getDefaultType) {\n                var td = component.getTypeDescriptor(), map = {};\n                var defType = component.getDefaultType();\n                var o = _ju.merge({}, defType);\n                _mapType(map, defType, \"__default\");\n                for (var i = 0, j = component._jsPlumb.types.length; i < j; i++) {\n                    var tid = component._jsPlumb.types[i];\n                    if (tid !== \"__default\") {\n                        var _t = component._jsPlumb.instance.getType(tid, td);\n                        if (_t != null) {\n                            o = _ju.merge(o, _t, [ \"cssClass\" ]);\n                            _mapType(map, _t, tid);\n                        }\n                    }\n                }\n\n                if (params) {\n                    o = _ju.populate(o, params);\n                }\n\n                component.applyType(o, doNotRepaint, map);\n                if (!doNotRepaint) component.repaint();\n            }\n        },\n\n// ------------------------------ BEGIN jsPlumbUIComponent --------------------------------------------\n\n        jsPlumbUIComponent = window.jsPlumbUIComponent = function (params) {\n\n            jsPlumbUtil.EventGenerator.apply(this, arguments);\n\n            var self = this,\n                a = arguments,\n                idPrefix = self.idPrefix,\n                id = idPrefix + (new Date()).getTime();\n\n            this._jsPlumb = {\n                instance: params._jsPlumb,\n                parameters: params.parameters || {},\n                paintStyle: null,\n                hoverPaintStyle: null,\n                paintStyleInUse: null,\n                hover: false,\n                beforeDetach: params.beforeDetach,\n                beforeDrop: params.beforeDrop,\n                overlayPlacements: [],\n                hoverClass: params.hoverClass || params._jsPlumb.Defaults.HoverClass,\n                types: [],\n                typeCache:{}\n            };\n\n            this.cacheTypeItem = function(key, item, typeId) {\n                this._jsPlumb.typeCache[typeId] = this._jsPlumb.typeCache[typeId] || {};\n                this._jsPlumb.typeCache[typeId][key] = item;\n            };\n            this.getCachedTypeItem = function(key, typeId) {\n                return this._jsPlumb.typeCache[typeId] ? this._jsPlumb.typeCache[typeId][key] : null;\n            };\n\n            this.getId = function () {\n                return id;\n            };\n\n// ----------------------------- default type --------------------------------------------\n\n\n            var o = params.overlays || [], oo = {};\n            if (this.defaultOverlayKeys) {\n                for (var i = 0; i < this.defaultOverlayKeys.length; i++)\n                    Array.prototype.push.apply(o, this._jsPlumb.instance.Defaults[this.defaultOverlayKeys[i]] || []);\n\n                for (i = 0; i < o.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = jsPlumb.convertToFullOverlaySpec(o[i]);\n                    oo[fo[1].id] = fo;\n                }\n            }\n\n            var _defaultType = {\n                overlays:oo,\n                parameters: params.parameters || {},\n                scope: params.scope || this._jsPlumb.instance.getDefaultScope()\n            };\n            this.getDefaultType = function() {\n                return _defaultType;\n            };\n            this.appendToDefaultType = function(obj) {\n                for (var i in obj) _defaultType[i] = obj[i];\n            };\n\n// ----------------------------- end default type --------------------------------------------\n\n            // all components can generate events\n\n            if (params.events) {\n                for (i in params.events)\n                    self.bind(i, params.events[i]);\n            }\n\n            // all components get this clone function.\n            // TODO issue 116 showed a problem with this - it seems 'a' that is in\n            // the clone function's scope is shared by all invocations of it, the classic\n            // JS closure problem.  for now, jsPlumb does a version of this inline where\n            // it used to call clone.  but it would be nice to find some time to look\n            // further at this.\n            this.clone = function () {\n                var o = {};//new Object();\n                this.constructor.apply(o, a);\n                return o;\n            }.bind(this);\n\n            // user can supply a beforeDetach callback, which will be executed before a detach\n            // is performed; returning false prevents the detach.\n            this.isDetachAllowed = function (connection) {\n                var r = true;\n                if (this._jsPlumb.beforeDetach) {\n                    try {\n                        r = this._jsPlumb.beforeDetach(connection);\n                    }\n                    catch (e) {\n                        _ju.log(\"jsPlumb: beforeDetach callback failed\", e);\n                    }\n                }\n                return r;\n            };\n\n            // user can supply a beforeDrop callback, which will be executed before a dropped\n            // connection is confirmed. user can return false to reject connection.\n            this.isDropAllowed = function (sourceId, targetId, scope, connection, dropEndpoint, source, target) {\n                var r = this._jsPlumb.instance.checkCondition(\"beforeDrop\", {\n                    sourceId: sourceId,\n                    targetId: targetId,\n                    scope: scope,\n                    connection: connection,\n                    dropEndpoint: dropEndpoint,\n                    source: source, target: target\n                });\n                if (this._jsPlumb.beforeDrop) {\n                    try {\n                        r = this._jsPlumb.beforeDrop({\n                            sourceId: sourceId,\n                            targetId: targetId,\n                            scope: scope,\n                            connection: connection,\n                            dropEndpoint: dropEndpoint,\n                            source: source, target: target\n                        });\n                    }\n                    catch (e) {\n                        _ju.log(\"jsPlumb: beforeDrop callback failed\", e);\n                    }\n                }\n                return r;\n            };\n\n            var boundListeners = [],\n                bindAListener = function (obj, type, fn) {\n                    boundListeners.push([obj, type, fn]);\n                    obj.bind(type, fn);\n                },\n                domListeners = [];\n\n            // sets the component associated with listener events. for instance, an overlay delegates\n            // its events back to a connector. but if the connector is swapped on the underlying connection,\n            // then this component must be changed. This is called by setConnector in the Connection class.\n            this.setListenerComponent = function (c) {\n                for (var i = 0; i < domListeners.length; i++)\n                    domListeners[i][3] = c;\n            };\n\n\n        };\n\n    var _removeTypeCssHelper = function (component, typeIndex) {\n        var typeId = component._jsPlumb.types[typeIndex],\n            type = component._jsPlumb.instance.getType(typeId, component.getTypeDescriptor());\n\n        if (type != null) {\n\n            if (type.cssClass && component.canvas)\n                component._jsPlumb.instance.removeClass(component.canvas, type.cssClass);\n        }\n    };\n\n    jsPlumbUtil.extend(jsPlumbUIComponent, jsPlumbUtil.EventGenerator, {\n\n        getParameter: function (name) {\n            return this._jsPlumb.parameters[name];\n        },\n\n        setParameter: function (name, value) {\n            this._jsPlumb.parameters[name] = value;\n        },\n\n        getParameters: function () {\n            return this._jsPlumb.parameters;\n        },\n\n        setParameters: function (p) {\n            this._jsPlumb.parameters = p;\n        },\n\n        hasClass:function(clazz) {\n            return jsPlumb.hasClass(this.canvas, clazz);\n        },\n\n        addClass: function (clazz) {\n            jsPlumb.addClass(this.canvas, clazz);\n        },\n\n        removeClass: function (clazz) {\n            jsPlumb.removeClass(this.canvas, clazz);\n        },\n\n        updateClasses: function (classesToAdd, classesToRemove) {\n            jsPlumb.updateClasses(this.canvas, classesToAdd, classesToRemove);\n        },\n\n        setType: function (typeId, params, doNotRepaint) {\n            this.clearTypes();\n            this._jsPlumb.types = _splitType(typeId) || [];\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        getType: function () {\n            return this._jsPlumb.types;\n        },\n\n        reapplyTypes: function (params, doNotRepaint) {\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        hasType: function (typeId) {\n            return jsPlumbUtil.indexOf(this._jsPlumb.types, typeId) != -1;\n        },\n\n        addType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId), _cont = false;\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    if (!this.hasType(t[i])) {\n                        this._jsPlumb.types.push(t[i]);\n                        _cont = true;\n                    }\n                }\n                if (_cont) _applyTypes(this, params, doNotRepaint);\n            }\n        },\n\n        removeType: function (typeId, doNotRepaint) {\n            var t = _splitType(typeId), _cont = false, _one = function (tt) {\n                var idx = _ju.indexOf(this._jsPlumb.types, tt);\n                if (idx != -1) {\n                    // remove css class if necessary\n                    _removeTypeCssHelper(this, idx);\n                    this._jsPlumb.types.splice(idx, 1);\n                    return true;\n                }\n                return false;\n            }.bind(this);\n\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    _cont = _one(t[i]) || _cont;\n                }\n                if (_cont) _applyTypes(this, null, doNotRepaint);\n            }\n        },\n        clearTypes: function (doNotRepaint) {\n            var i = this._jsPlumb.types.length;\n            for (var j = 0; j < i; j++) {\n                _removeTypeCssHelper(this, 0);\n                this._jsPlumb.types.splice(0, 1);\n            }\n            _applyTypes(this, {}, doNotRepaint);\n        },\n\n        toggleType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId);\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    var idx = jsPlumbUtil.indexOf(this._jsPlumb.types, t[i]);\n                    if (idx != -1) {\n                        _removeTypeCssHelper(this, idx);\n                        this._jsPlumb.types.splice(idx, 1);\n                    }\n                    else\n                        this._jsPlumb.types.push(t[i]);\n                }\n\n                _applyTypes(this, params, doNotRepaint);\n            }\n        },\n        applyType: function (t, doNotRepaint) {\n            this.setPaintStyle(t.paintStyle, doNotRepaint);\n            this.setHoverPaintStyle(t.hoverPaintStyle, doNotRepaint);\n            if (t.parameters) {\n                for (var i in t.parameters)\n                    this.setParameter(i, t.parameters[i]);\n            }\n            this._jsPlumb.paintStyleInUse = this.getPaintStyle();\n        },\n        setPaintStyle: function (style, doNotRepaint) {\n//\t\t    \tthis._jsPlumb.paintStyle = jsPlumb.extend({}, style);\n// TODO figure out if we want components to clone paintStyle so as not to share it.\n            this._jsPlumb.paintStyle = style;\n            this._jsPlumb.paintStyleInUse = this._jsPlumb.paintStyle;\n            _updateHoverStyle(this);\n            if (!doNotRepaint) this.repaint();\n        },\n        getPaintStyle: function () {\n            return this._jsPlumb.paintStyle;\n        },\n        setHoverPaintStyle: function (style, doNotRepaint) {\n            //this._jsPlumb.hoverPaintStyle = jsPlumb.extend({}, style);\n// TODO figure out if we want components to clone paintStyle so as not to share it.\t\t    \t\n            this._jsPlumb.hoverPaintStyle = style;\n            _updateHoverStyle(this);\n            if (!doNotRepaint) this.repaint();\n        },\n        getHoverPaintStyle: function () {\n            return this._jsPlumb.hoverPaintStyle;\n        },\n        destroy: function (force) {\n            if (force || this.typeId == null) {\n                this.cleanupListeners(); // this is on EventGenerator\n                this.clone = null;\n                this._jsPlumb = null;\n            }\n        },\n\n        isHover: function () {\n            return this._jsPlumb.hover;\n        },\n\n        setHover: function (hover, ignoreAttachedElements, timestamp) {\n            // while dragging, we ignore these events.  this keeps the UI from flashing and\n            // swishing and whatevering.\n            if (this._jsPlumb && !this._jsPlumb.instance.currentlyDragging && !this._jsPlumb.instance.isHoverSuspended()) {\n\n                this._jsPlumb.hover = hover;\n\n                if (this.canvas != null) {\n                    if (this._jsPlumb.instance.hoverClass != null) {\n                        var method = hover ? \"addClass\" : \"removeClass\";\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.instance.hoverClass);\n                    }\n                    if (this._jsPlumb.hoverClass != null) {\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.hoverClass);\n                    }\n                }\n                if (this._jsPlumb.hoverPaintStyle != null) {\n                    this._jsPlumb.paintStyleInUse = hover ? this._jsPlumb.hoverPaintStyle : this._jsPlumb.paintStyle;\n                    if (!this._jsPlumb.instance.isSuspendDrawing()) {\n                        timestamp = timestamp || _timestamp();\n                        this.repaint({timestamp: timestamp, recalc: false});\n                    }\n                }\n                // get the list of other affected elements, if supported by this component.\n                // for a connection, its the endpoints.  for an endpoint, its the connections! surprise.\n                if (this.getAttachedElements && !ignoreAttachedElements)\n                    _updateAttachedElements(this, hover, _timestamp(), this);\n            }\n        }\n    });\n\n// ------------------------------ END jsPlumbUIComponent --------------------------------------------\n\n    var _jsPlumbInstanceIndex = 0,\n        getInstanceIndex = function () {\n            var i = _jsPlumbInstanceIndex + 1;\n            _jsPlumbInstanceIndex++;\n            return i;\n        };\n\n    var jsPlumbInstance = window.jsPlumbInstance = function (_defaults) {\n\n        this.Defaults = {\n            Anchor: \"Bottom\",\n            Anchors: [ null, null ],\n            ConnectionsDetachable: true,\n            ConnectionOverlays: [ ],\n            Connector: \"Bezier\",\n            Container: null,\n            DoNotThrowErrors: false,\n            DragOptions: { },\n            DropOptions: { },\n            Endpoint: \"Dot\",\n            EndpointOverlays: [ ],\n            Endpoints: [ null, null ],\n            EndpointStyle: { fillStyle: \"#456\" },\n            EndpointStyles: [ null, null ],\n            EndpointHoverStyle: null,\n            EndpointHoverStyles: [ null, null ],\n            HoverPaintStyle: null,\n            LabelStyle: { color: \"black\" },\n            LogEnabled: false,\n            Overlays: [ ],\n            MaxConnections: 1,\n            PaintStyle: { lineWidth: 4, strokeStyle: \"#456\" },\n            ReattachConnections: false,\n            RenderMode: \"svg\",\n            Scope: \"jsPlumb_DefaultScope\"\n        };\n        if (_defaults) jsPlumb.extend(this.Defaults, _defaults);\n\n        this.logEnabled = this.Defaults.LogEnabled;\n        this._connectionTypes = {};\n        this._endpointTypes = {};\n\n        jsPlumbUtil.EventGenerator.apply(this);\n\n        var _currentInstance = this,\n            _instanceIndex = getInstanceIndex(),\n            _bb = _currentInstance.bind,\n            _initialDefaults = {},\n            _zoom = 1,\n            _info = function (el) {\n                if (el == null) return null;\n                else if (el.nodeType == 3 || el.nodeType == 8) {\n                    return { el:el, text:true };\n                }\n                else {\n                    var _el = _currentInstance.getElement(el);\n                    return { el: _el, id: (jsPlumbUtil.isString(el) && _el == null) ? el : _getId(_el) };\n                }\n            };\n\n        this.getInstanceIndex = function () {\n            return _instanceIndex;\n        };\n\n        this.setZoom = function (z, repaintEverything) {\n            if (!jsPlumbUtil.oldIE) {\n                _zoom = z;\n                _currentInstance.fire(\"zoom\", _zoom);\n                if (repaintEverything) _currentInstance.repaintEverything();\n            }\n            return !jsPlumbUtil.oldIE;\n\n        };\n        this.getZoom = function () {\n            return _zoom;\n        };\n\n        for (var i in this.Defaults)\n            _initialDefaults[i] = this.Defaults[i];\n\n        var _container, _containerDelegations = [];\n        this.unbindContainer = function() {\n            if (_container != null && _containerDelegations.length > 0) {\n                for (var i = 0; i < _containerDelegations.length; i++) {\n                    _currentInstance.off(_container, _containerDelegations[i][0], _containerDelegations[i][1]);\n                }\n            }\n        };\n        this.setContainer = function (c) {\n\n            this.unbindContainer();\n\n            // get container as dom element.\n            c = this.getElement(c);\n            // move existing connections and endpoints, if any.\n            this.select().each(function (conn) {\n                conn.moveParent(c);\n            });\n            this.selectEndpoints().each(function (ep) {\n                ep.moveParent(c);\n            });\n\n            // set container.\n            _container = c;\n            _containerDelegations.length = 0;\n\n            var _oneDelegateHandler = function (id, e) {\n                var t = e.srcElement || e.target,\n                    jp = (t && t.parentNode ? t.parentNode._jsPlumb : null) || (t ? t._jsPlumb : null) || (t && t.parentNode && t.parentNode.parentNode ? t.parentNode.parentNode._jsPlumb : null);\n                if (jp) {\n                    jp.fire(id, jp, e);\n                    // jsplumb also fires every event coming from components/overlays. That's what the test for `jp.component` is for.\n                    _currentInstance.fire(id, jp.component || jp, e);\n                }\n            };\n\n            var _addOneDelegate = function(eventId, selector, fn) {\n                _containerDelegations.push([eventId, fn]);\n                _currentInstance.on(_container, eventId, selector, fn);\n            };\n\n            // delegate one event on the container to jsplumb elements. it might be possible to\n            // abstract this out: each of endpoint, connection and overlay could register themselves with\n            // jsplumb as \"component types\" or whatever, and provide a suitable selector. this would be\n            // done by the renderer (although admittedly from 2.0 onwards we're not supporting vml anymore)\n            var _oneDelegate = function (id) {\n                // connections.\n                //_addOneDelegate(id, \"._jsPlumb_connector, ._jsPlumb_connector > *\", function (e) {\n                _addOneDelegate(id, \".jsplumb-connector > *\", function (e) {\n                    _oneDelegateHandler(id, e);\n                });\n                // endpoints. note they can have an enclosing div, or not.\n                _addOneDelegate(id, \".jsplumb-endpoint, .jsplumb-endpoint > *, .jsplumb-endpoint svg *\", function (e) {\n                    _oneDelegateHandler(id, e);\n                });\n                // overlays\n                _addOneDelegate(id, \".jsplumb-overlay, .jsplumb-overlay *\", function (e) {\n                    _oneDelegateHandler(id, e);\n                });\n            };\n\n            for (var i = 0; i < events.length; i++)\n                _oneDelegate(events[i]);\n\n        };\n        this.getContainer = function () {\n            return _container;\n        };\n\n        this.bind = function (event, fn) {\n            if (\"ready\" === event && initialized) fn();\n            else _bb.apply(_currentInstance, [event, fn]);\n        };\n\n        _currentInstance.importDefaults = function (d) {\n            for (var i in d) {\n                _currentInstance.Defaults[i] = d[i];\n            }\n            if (d.Container)\n                _currentInstance.setContainer(d.Container);\n\n            return _currentInstance;\n        };\n\n        _currentInstance.restoreDefaults = function () {\n            _currentInstance.Defaults = jsPlumb.extend({}, _initialDefaults);\n            return _currentInstance;\n        };\n\n        var log = null,\n            initialized = false,\n        // TODO remove from window scope\n            connections = [],\n        // map of element id -> endpoint lists. an element can have an arbitrary\n        // number of endpoints on it, and not all of them have to be connected\n        // to anything.\n            endpointsByElement = {},\n            endpointsByUUID = {},\n            managedElements = {},\n            offsets = {},\n            offsetTimestamps = {},\n            draggableStates = {},\n            connectionBeingDragged = false,\n            sizes = [],\n            _suspendDrawing = false,\n            _suspendedAt = null,\n            DEFAULT_SCOPE = this.Defaults.Scope,\n            renderMode = null,  // will be set in init()\n            _curIdStamp = 1,\n            _idstamp = function () {\n                return \"\" + _curIdStamp++;\n            },\n\n        //\n        // appends an element to some other element, which is calculated as follows:\n        //\n        // 1. if Container exists, use that element.\n        // 2. if the 'parent' parameter exists, use that.\n        // 3. otherwise just use the root element.\n        //\n        //\n            _appendElement = function (el, parent) {\n                if (_container)\n                    _container.appendChild(el);\n                else if (!parent)\n                    this.appendToRoot(el);\n                else\n                    this.getElement(parent).appendChild(el);\n            }.bind(this),\n\n        //\n        // Draws an endpoint and its connections. this is the main entry point into drawing connections as well\n        // as endpoints, since jsPlumb is endpoint-centric under the hood.\n        //\n        // @param element element to draw (of type library specific element object)\n        // @param ui UI object from current library's event system. optional.\n        // @param timestamp timestamp for this paint cycle. used to speed things up a little by cutting down the amount of offset calculations we do.\n        // @param clearEdits defaults to false; indicates that mouse edits for connectors should be cleared\n        ///\n            _draw = function (element, ui, timestamp, clearEdits) {\n\n                // TODO is it correct to filter by headless at this top level? how would a headless adapter ever repaint?\n                // NO. it is not correct.\n                if (!jsPlumb.headless && !_suspendDrawing) {\n                    var id = _getId(element),\n                        repaintEls = _currentInstance.getDragManager().getElementsForDraggable(id);\n\n                    if (timestamp == null) timestamp = _timestamp();\n\n                    // update the offset of everything _before_ we try to draw anything.\n                    var o = _updateOffset({ elId: id, offset: ui, recalc: false, timestamp: timestamp });\n\n                    if (repaintEls) {\n                        for (var i in repaintEls) {\n                            _updateOffset({\n                                elId: repaintEls[i].id,\n                                offset: {\n                                    left: o.o.left + repaintEls[i].offset.left,\n                                    top: o.o.top + repaintEls[i].offset.top\n                                },\n                                recalc: false,\n                                timestamp: timestamp\n                            });\n                        }\n                    }\n\n                    _currentInstance.anchorManager.redraw(id, ui, timestamp, null, clearEdits);\n\n                    if (repaintEls) {\n                        for (var j in repaintEls) {\n                            _currentInstance.anchorManager.redraw(repaintEls[j].id, ui, timestamp, repaintEls[j].offset, clearEdits, true);\n                        }\n                    }\n                }\n            },\n\n        //\n        // gets an Endpoint by uuid.\n        //\n            _getEndpoint = function (uuid) {\n                return endpointsByUUID[uuid];\n            },\n\n            /**\n             * inits a draggable if it's not already initialised.\n             * TODO: somehow abstract this to the adapter, because the concept of \"draggable\" has no\n             * place on the server.\n             */\n            _initDraggableIfNecessary = function (element, isDraggable, dragOptions, id) {\n                // move to DragManager?\n                if (!jsPlumb.headless) {\n                    var _draggable = isDraggable == null ? false : isDraggable;\n                    if (_draggable) {\n                        if (jsPlumb.isDragSupported(element, _currentInstance) && !jsPlumb.isAlreadyDraggable(element, _currentInstance)) {\n                            var options = dragOptions || _currentInstance.Defaults.DragOptions;\n                            options = jsPlumb.extend({}, options); // make a copy.\n                            var dragEvent = jsPlumb.dragEvents.drag,\n                                stopEvent = jsPlumb.dragEvents.stop,\n                                startEvent = jsPlumb.dragEvents.start,\n                                _del = _currentInstance.getElement(element),\n                                _ancestor = _currentInstance.getDragManager().getDragAncestor(_del),\n                                _noOffset = {left: 0, top: 0},\n                                _ancestorOffset = _noOffset,\n                                _started = false;\n\n                            _manage(id, element);\n\n                            options[startEvent] = _ju.wrap(options[startEvent], function () {\n                                _ancestorOffset = _ancestor != null ? _currentInstance.getOffset(_ancestor) : _noOffset;\n                                _currentInstance.setHoverSuspended(true);\n                                _currentInstance.select({source: element}).addClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.sourceElementDraggingClass, true);\n                                _currentInstance.select({target: element}).addClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.targetElementDraggingClass, true);\n                                _currentInstance.setConnectionBeingDragged(true);\n                                if (options.canDrag) return dragOptions.canDrag();\n                            }, false);\n\n                            options[dragEvent] = _ju.wrap(options[dragEvent], function () {\n                                // TODO: here we could actually use getDragObject, and then compute it ourselves,\n                                // since every adapter does the same thing. but i'm not sure why YUI's getDragObject\n                                // differs from getUIPosition so much\n                                var ui = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom());\n                                // adjust by ancestor offset if there is one: this is for the case that a draggable\n                                // is contained inside some other element that is not the Container.\n                                ui.left += _ancestorOffset.left;\n                                ui.top += _ancestorOffset.top;\n                                _draw(element, ui, null, true);\n                                if (_started) _currentInstance.addClass(element, \"jsPlumb_dragged\");\n                                _started = true;\n                            });\n                            options[stopEvent] = _ju.wrap(options[stopEvent], function () {\n                                var elements = [];\n\n                                // TODO once jquery is no longer supported, remove this, as we will know\n                                // exactly what the method signature is. For now, we need to cater for the\n                                // fact that jquery ui provides two args and katavorio provides only one.\n                                if (arguments.length == 1 && arguments[0].selection && arguments[0].selection.length > 0) {\n                                    elements = arguments[0].selection;\n                                }\n                                else {\n                                    elements = [ [ element, _currentInstance.getUIPosition(arguments, _currentInstance.getZoom(), true) ] ];\n                                }\n\n                                // this is one element\n                                var _one = function(_e) {\n                                    _draw(_e[0], _e[1]);\n                                    _currentInstance.removeClass(_e[0], \"jsPlumb_dragged\");\n                                    _currentInstance.select({source: _e[0]}).removeClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.sourceElementDraggingClass, true);\n                                    _currentInstance.select({target: _e[0]}).removeClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.targetElementDraggingClass, true);\n                                    _currentInstance.getDragManager().dragEnded(_e[0]);\n                                };\n\n                                for (var i = 0; i < elements.length; i++)\n                                    _one(elements[i]);\n\n                                // this is common across all\n                                _started = false;\n                                _currentInstance.setHoverSuspended(false);\n                                _currentInstance.setConnectionBeingDragged(false);\n                            });\n                            var elId = _getId(element); // need ID\n                            draggableStates[elId] = true;\n                            var draggable = draggableStates[elId];\n                            options.disabled = draggable == null ? false : !draggable;\n                            _currentInstance.initDraggable(element, options);\n                            _currentInstance.getDragManager().register(element);\n                        }\n                    }\n                }\n            },\n\n            _scopeMatch = function (e1, e2) {\n                var s1 = e1.scope.split(/\\s/), s2 = e2.scope.split(/\\s/);\n                for (var i = 0; i < s1.length; i++)\n                    for (var j = 0; j < s2.length; j++)\n                        if (s2[j] == s1[i]) return true;\n\n                return false;\n            },\n\n        /*\n         * prepares a final params object that can be passed to _newConnection, taking into account defaults, events, etc.\n         */\n            _prepareConnectionParams = function (params, referenceParams) {\n                var _p = jsPlumb.extend({ }, params);\n                if (referenceParams) jsPlumb.extend(_p, referenceParams);\n\n                // hotwire endpoints passed as source or target to sourceEndpoint/targetEndpoint, respectively.\n                if (_p.source) {\n                    if (_p.source.endpoint)\n                        _p.sourceEndpoint = _p.source;\n                    else\n                        _p.source = _currentInstance.getElement(_p.source);\n                }\n                if (_p.target) {\n                    if (_p.target.endpoint)\n                        _p.targetEndpoint = _p.target;\n                    else\n                        _p.target = _currentInstance.getElement(_p.target);\n                }\n\n                // test for endpoint uuids to connect\n                if (params.uuids) {\n                    _p.sourceEndpoint = _getEndpoint(params.uuids[0]);\n                    _p.targetEndpoint = _getEndpoint(params.uuids[1]);\n                }\n\n                // now ensure that if we do have Endpoints already, they're not full.\n                // source:\n                if (_p.sourceEndpoint && _p.sourceEndpoint.isFull()) {\n                    _ju.log(_currentInstance, \"could not add connection; source endpoint is full\");\n                    return;\n                }\n\n                // target:\n                if (_p.targetEndpoint && _p.targetEndpoint.isFull()) {\n                    _ju.log(_currentInstance, \"could not add connection; target endpoint is full\");\n                    return;\n                }\n\n                // if source endpoint mandates connection type and nothing specified in our params, use it.\n                if (!_p.type && _p.sourceEndpoint)\n                    _p.type = _p.sourceEndpoint.connectionType;\n\n                // copy in any connectorOverlays that were specified on the source endpoint.\n                // it doesnt copy target endpoint overlays.  i'm not sure if we want it to or not.\n                if (_p.sourceEndpoint && _p.sourceEndpoint.connectorOverlays) {\n                    _p.overlays = _p.overlays || [];\n                    for (var i = 0, j = _p.sourceEndpoint.connectorOverlays.length; i < j; i++) {\n                        _p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);\n                    }\n                }\n\n                // pointer events\n                if (!_p[\"pointer-events\"] && _p.sourceEndpoint && _p.sourceEndpoint.connectorPointerEvents)\n                    _p[\"pointer-events\"] = _p.sourceEndpoint.connectorPointerEvents;\n\n                var _mergeOverrides = function (def, values) {\n                    var m = jsPlumb.extend({}, def);\n                    for (var i in values) {\n                        if (values[i]) m[i] = values[i];\n                    }\n                    return m;\n                };\n\n                var _addEndpoint = function (el, def, idx) {\n                    return _currentInstance.addEndpoint(el, _mergeOverrides(def, {\n                        anchor: _p.anchors ? _p.anchors[idx] : _p.anchor,\n                        endpoint: _p.endpoints ? _p.endpoints[idx] : _p.endpoint,\n                        paintStyle: _p.endpointStyles ? _p.endpointStyles[idx] : _p.endpointStyle,\n                        hoverPaintStyle: _p.endpointHoverStyles ? _p.endpointHoverStyles[idx] : _p.endpointHoverStyle\n                    }));\n                };\n\n                // check for makeSource/makeTarget specs.\n\n                var _oneElementDef = function (type, idx, defs) {\n                    if (_p[type] && !_p[type].endpoint && !_p[type + \"Endpoint\"] && !_p.newConnection) {\n                        var tid = _getId(_p[type]), tep = defs[tid];\n\n                        if (tep) {\n                            // if not enabled, return.\n                            if (!tep.enabled) return false;\n                            var newEndpoint = tep.endpoint != null && tep.endpoint._jsPlumb ? tep.endpoint : _addEndpoint(_p[type], tep.def, idx);\n                            if (newEndpoint.isFull()) return false;\n                            _p[type + \"Endpoint\"] = newEndpoint;\n                            newEndpoint._doNotDeleteOnDetach = false; // reset.\n                            newEndpoint._deleteOnDetach = true;\n                            if (tep.uniqueEndpoint) {\n                                if (!tep.endpoint) {\n                                    tep.endpoint = newEndpoint;\n                                    newEndpoint._deleteOnDetach = false;\n                                    newEndpoint._doNotDeleteOnDetach = true;\n                                }\n                                else\n                                    newEndpoint.finalEndpoint = tep.endpoint;\n                            }\n                        }\n                    }\n                };\n\n                if (_oneElementDef(\"source\", 0, this.sourceEndpointDefinitions) === false) return;\n                if (_oneElementDef(\"target\", 1, this.targetEndpointDefinitions) === false) return;\n\n                // last, ensure scopes match\n                if (_p.sourceEndpoint && _p.targetEndpoint)\n                    if (!_scopeMatch(_p.sourceEndpoint, _p.targetEndpoint)) _p = null;\n\n                return _p;\n            }.bind(_currentInstance),\n\n            _newConnection = function (params) {\n                var connectionFunc = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType();\n\n                params._jsPlumb = _currentInstance;\n                params.newConnection = _newConnection;\n                params.newEndpoint = _newEndpoint;\n                params.endpointsByUUID = endpointsByUUID;\n                params.endpointsByElement = endpointsByElement;\n                params.finaliseConnection = _finaliseConnection;\n                params.id = \"con_\" + _idstamp();\n                var con = new connectionFunc(params);\n\n                // if the connection is draggable, then maybe we need to tell the target endpoint to init the\n                // dragging code. it won't run again if it already configured to be draggable.\n                if (con.isDetachable()) {\n                    con.endpoints[0].initDraggable(\"_jsPlumbSource\");\n                    con.endpoints[1].initDraggable(\"_jsPlumbTarget\");\n                }\n\n                return con;\n            },\n\n        //\n        // adds the connection to the backing model, fires an event if necessary and then redraws\n        //\n            _finaliseConnection = _currentInstance.finaliseConnection = function (jpc, params, originalEvent, doInformAnchorManager) {\n                params = params || {};\n                // add to list of connections (by scope).\n                if (!jpc.suspendedEndpoint)\n                    connections.push(jpc);\n\n                // turn off isTemporarySource on the source endpoint (only viable on first draw)\n                jpc.endpoints[0].isTemporarySource = false;\n\n                // always inform the anchor manager\n                // except that if jpc has a suspended endpoint it's not true to say the\n                // connection is new; it has just (possibly) moved. the question is whether\n                // to make that call here or in the anchor manager.  i think perhaps here.\n                if (jpc.suspendedEndpoint == null || doInformAnchorManager)\n                    _currentInstance.anchorManager.newConnection(jpc);\n\n                // force a paint\n                _draw(jpc.source);\n\n                // fire an event\n                if (!params.doNotFireConnectionEvent && params.fireEvent !== false) {\n\n                    var eventArgs = {\n                        connection: jpc,\n                        source: jpc.source, target: jpc.target,\n                        sourceId: jpc.sourceId, targetId: jpc.targetId,\n                        sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\n                    };\n\n                    _currentInstance.fire(\"connection\", eventArgs, originalEvent);\n                }\n            },\n\n        /*\n         factory method to prepare a new endpoint.  this should always be used instead of creating Endpoints\n         manually, since this method attaches event listeners and an id.\n         */\n            _newEndpoint = function (params, id) {\n                var endpointFunc = _currentInstance.Defaults.EndpointType || jsPlumb.Endpoint;\n                var _p = jsPlumb.extend({}, params);\n                _p._jsPlumb = _currentInstance;\n                _p.newConnection = _newConnection;\n                _p.newEndpoint = _newEndpoint;\n                _p.endpointsByUUID = endpointsByUUID;\n                _p.endpointsByElement = endpointsByElement;\n                _p.fireDetachEvent = fireDetachEvent;\n                _p.elementId = id || _getId(_p.source);\n                var ep = new endpointFunc(_p);\n                ep.id = \"ep_\" + _idstamp();\n                _manage(_p.elementId, _p.source);\n\n                if (!jsPlumb.headless)\n                    _currentInstance.getDragManager().endpointAdded(_p.source, id);\n\n                return ep;\n            },\n\n        /*\n         * performs the given function operation on all the connections found\n         * for the given element id; this means we find all the endpoints for\n         * the given element, and then for each endpoint find the connectors\n         * connected to it. then we pass each connection in to the given\n         * function.\n         */\n            _operation = function (elId, func, endpointFunc) {\n                var endpoints = endpointsByElement[elId];\n                if (endpoints && endpoints.length) {\n                    for (var i = 0, ii = endpoints.length; i < ii; i++) {\n                        for (var j = 0, jj = endpoints[i].connections.length; j < jj; j++) {\n                            var retVal = func(endpoints[i].connections[j]);\n                            // if the function passed in returns true, we exit.\n                            // most functions return false.\n                            if (retVal) return;\n                        }\n                        if (endpointFunc) endpointFunc(endpoints[i]);\n                    }\n                }\n            },\n\n            _setDraggable = function (element, draggable) {\n                return jsPlumb.each(element, function (el) {\n                    if (_currentInstance.isDragSupported(el)) {\n                        draggableStates[_currentInstance.getAttribute(el, \"id\")] = draggable;\n                        _currentInstance.setElementDraggable(el, draggable);\n                    }\n                });\n            },\n        /*\n         * private method to do the business of hiding/showing.\n         *\n         * @param el\n         *            either Id of the element in question or a library specific\n         *            object for the element.\n         * @param state\n         *            String specifying a value for the css 'display' property\n         *            ('block' or 'none').\n         */\n            _setVisible = function (el, state, alsoChangeEndpoints) {\n                state = state === \"block\";\n                var endpointFunc = null;\n                if (alsoChangeEndpoints) {\n                    if (state) endpointFunc = function (ep) {\n                        ep.setVisible(true, true, true);\n                    };\n                    else endpointFunc = function (ep) {\n                        ep.setVisible(false, true, true);\n                    };\n                }\n                var info = _info(el);\n                _operation(info.id, function (jpc) {\n                    if (state && alsoChangeEndpoints) {\n                        // this test is necessary because this functionality is new, and i wanted to maintain backwards compatibility.\n                        // this block will only set a connection to be visible if the other endpoint in the connection is also visible.\n                        var oidx = jpc.sourceId === info.id ? 1 : 0;\n                        if (jpc.endpoints[oidx].isVisible()) jpc.setVisible(true);\n                    }\n                    else  // the default behaviour for show, and what always happens for hide, is to just set the visibility without getting clever.\n                        jpc.setVisible(state);\n                }, endpointFunc);\n            },\n        /*\n         * toggles the draggable state of the given element(s).\n         * el is either an id, or an element object, or a list of ids/element objects.\n         */\n            _toggleDraggable = function (el) {\n                return jsPlumb.each(el, function (el) {\n                    var elId = _currentInstance.getAttribute(el, \"id\");\n                    var state = draggableStates[elId] == null ? false : draggableStates[elId];\n                    state = !state;\n                    draggableStates[elId] = state;\n                    _currentInstance.setDraggable(el, state);\n                    return state;\n                }.bind(this));\n            },\n            /**\n             * private method to do the business of toggling hiding/showing.\n             */\n            _toggleVisible = function (elId, changeEndpoints) {\n                var endpointFunc = null;\n                if (changeEndpoints) {\n                    endpointFunc = function (ep) {\n                        var state = ep.isVisible();\n                        ep.setVisible(!state);\n                    };\n                }\n                _operation(elId, function (jpc) {\n                    var state = jpc.isVisible();\n                    jpc.setVisible(!state);\n                }, endpointFunc);\n            },\n\n        // TODO comparison performance\n            _getCachedData = function (elId) {\n                var o = offsets[elId];\n                if (!o)\n                    return _updateOffset({elId: elId});\n                else\n                    return {o: o, s: sizes[elId]};\n            },\n\n            /**\n             * gets an id for the given element, creating and setting one if\n             * necessary.  the id is of the form\n             *\n             *    jsPlumb_<instance index>_<index in instance>\n             *\n             * where \"index in instance\" is a monotonically increasing integer that starts at 0,\n             * for each instance.  this method is used not only to assign ids to elements that do not\n             * have them but also to connections and endpoints.\n             */\n            _getId = function (element, uuid, doNotCreateIfNotFound) {\n                if (jsPlumbUtil.isString(element)) return element;\n                if (element == null) return null;\n                var id = _currentInstance.getAttribute(element, \"id\");\n                if (!id || id === \"undefined\") {\n                    // check if fixed uuid parameter is given\n                    if (arguments.length == 2 && arguments[1] !== undefined)\n                        id = uuid;\n                    else if (arguments.length == 1 || (arguments.length == 3 && !arguments[2]))\n                        id = \"jsPlumb_\" + _instanceIndex + \"_\" + _idstamp();\n\n                    if (!doNotCreateIfNotFound) _currentInstance.setAttribute(element, \"id\", id);\n                }\n                return id;\n            };\n\n        this.setConnectionBeingDragged = function (v) {\n            connectionBeingDragged = v;\n        };\n        this.isConnectionBeingDragged = function () {\n            return connectionBeingDragged;\n        };\n\n        this.connectorClass = \"jsplumb-connector\";\n        this.connectorOutlineClass = \"jsplumb-connector-outline\";\n        this.connectedClass = \"jsplumb-connected\";\n        this.hoverClass = \"jsplumb-hover\";\n        this.endpointClass = \"jsplumb-endpoint\";\n        this.endpointConnectedClass = \"jsplumb-endpoint-connected\";\n        this.endpointFullClass = \"jsplumb-endpoint-full\";\n        this.endpointDropAllowedClass = \"jsplumb-endpoint-drop-allowed\";\n        this.endpointDropForbiddenClass = \"jsplumb-endpoint-drop-forbidden\";\n        this.overlayClass = \"jsplumb-overlay\";\n        this.draggingClass = \"jsplumb-dragging\";\n        this.elementDraggingClass = \"jsplumb-element-dragging\";\n        this.sourceElementDraggingClass = \"jsplumb-source-element-dragging\";\n        this.targetElementDraggingClass = \"jsplumb-target-element-dragging\";\n        this.endpointAnchorClassPrefix = \"jsplumb-endpoint-anchor\";\n        this.hoverSourceClass = \"jsplumb-source-hover\";\n        this.hoverTargetClass = \"jsplumb-target-hover\";\n        this.dragSelectClass = \"jsplumb-drag-select\";\n\n        this.Anchors = {};\n        this.Connectors = {  \"svg\": {}, \"vml\": {} };\n        this.Endpoints = { \"svg\": {}, \"vml\": {} };\n        this.Overlays = { \"svg\": {}, \"vml\": {} } ;\n        this.ConnectorRenderers = {};\n        this.SVG = \"svg\";\n        this.VML = \"vml\";\n\n// --------------------------- jsPlumbInstance public API ---------------------------------------------------------\n\n\n        this.addEndpoint = function (el, params, referenceParams) {\n            referenceParams = referenceParams || {};\n            var p = jsPlumb.extend({}, referenceParams);\n            jsPlumb.extend(p, params);\n            p.endpoint = p.endpoint || _currentInstance.Defaults.Endpoint;\n            p.paintStyle = p.paintStyle || _currentInstance.Defaults.EndpointStyle;\n\n            var results = [],\n                inputs = (_ju.isArray(el) || (el.length != null && !_ju.isString(el))) ? el : [ el ];\n\n            for (var i = 0, j = inputs.length; i < j; i++) {\n                p.source = _currentInstance.getElement(inputs[i]);\n                _ensureContainer(p.source);\n\n                var id = _getId(p.source), e = _newEndpoint(p, id);\n\n                // SP new. here we have introduced a class-wide element manager, which is responsible\n                // for getting object dimensions and width/height, and for updating these values only\n                // when necessary (after a drag, or on a forced refresh call).\n                var myOffset = _manage(id, p.source).info.o;\n                _ju.addToList(endpointsByElement, id, e);\n\n                if (!_suspendDrawing) {\n                    e.paint({\n                        anchorLoc: e.anchor.compute({ xy: [ myOffset.left, myOffset.top ], wh: sizes[id], element: e, timestamp: _suspendedAt }),\n                        timestamp: _suspendedAt\n                    });\n                }\n\n                results.push(e);\n                e._doNotDeleteOnDetach = true; // mark this as being added via addEndpoint.\n            }\n\n            return results.length == 1 ? results[0] : results;\n        };\n\n        this.addEndpoints = function (el, endpoints, referenceParams) {\n            var results = [];\n            for (var i = 0, j = endpoints.length; i < j; i++) {\n                var e = _currentInstance.addEndpoint(el, endpoints[i], referenceParams);\n                if (_ju.isArray(e))\n                    Array.prototype.push.apply(results, e);\n                else results.push(e);\n            }\n            return results;\n        };\n\n        this.animate = function (el, properties, options) {\n            if (!this.animationSupported) return false;\n\n            options = options || {};\n            var del = _currentInstance.getElement(el),\n                id = _getId(del),\n                stepFunction = jsPlumb.animEvents.step,\n                completeFunction = jsPlumb.animEvents.complete;\n\n            options[stepFunction] = _ju.wrap(options[stepFunction], function () {\n                _currentInstance.revalidate(id);\n            });\n\n            // onComplete repaints, just to make sure everything looks good at the end of the animation.\n            options[completeFunction] = _ju.wrap(options[completeFunction], function () {\n                _currentInstance.revalidate(id);\n            });\n\n            _currentInstance.doAnimate(del, properties, options);\n        };\n\n        /**\n         * checks for a listener for the given condition, executing it if found, passing in the given value.\n         * condition listeners would have been attached using \"bind\" (which is, you could argue, now overloaded, since\n         * firing click events etc is a bit different to what this does).  i thought about adding a \"bindCondition\"\n         * or something, but decided against it, for the sake of simplicity. jsPlumb will never fire one of these\n         * condition events anyway.\n         */\n        this.checkCondition = function (conditionName, args) {\n            var l = _currentInstance.getListener(conditionName),\n                r = true;\n\n            if (l && l.length > 0) {\n                var values = Array.prototype.slice.call(arguments, 1);\n                try {\n                    for (var i = 0, j = l.length; i < j; i++) {\n                        r = r && l[i].apply(l[i], values);\n                    }\n                }\n                catch (e) {\n                    _ju.log(_currentInstance, \"cannot check condition [\" + conditionName + \"]\" + e);\n                }\n            }\n            return r;\n        };\n\n        this.connect = function (params, referenceParams) {\n            // prepare a final set of parameters to create connection with\n            var _p = _prepareConnectionParams(params, referenceParams), jpc;\n            // TODO probably a nicer return value if the connection was not made.  _prepareConnectionParams\n            // will return null (and log something) if either endpoint was full.  what would be nicer is to\n            // create a dedicated 'error' object.\n            if (_p) {\n                if (_p.source == null && _p.sourceEndpoint == null) {\n                    jsPlumbUtil.log(\"Cannot establish connection - source does not exist\");\n                    return;\n                }\n                if (_p.target == null && _p.targetEndpoint == null) {\n                    jsPlumbUtil.log(\"Cannot establish connection - target does not exist\");\n                    return;\n                }\n                _ensureContainer(_p.source);\n                // create the connection.  it is not yet registered\n                jpc = _newConnection(_p);\n                // now add it the model, fire an event, and redraw\n                _finaliseConnection(jpc, _p);\n            }\n            return jpc;\n        };\n\n        var stTypes = [\n            { el: \"source\", elId: \"sourceId\", epDefs: \"sourceEndpointDefinitions\" },\n            { el: \"target\", elId: \"targetId\", epDefs: \"targetEndpointDefinitions\" }\n        ];\n\n        var _set = function (c, el, idx, doNotRepaint) {\n            var ep, _st = stTypes[idx], cId = c[_st.elId], cEl = c[_st.el], sid, sep,\n                oldEndpoint = c.endpoints[idx];\n\n            var evtParams = {\n                index: idx,\n                originalSourceId: idx === 0 ? cId : c.sourceId,\n                newSourceId: c.sourceId,\n                originalTargetId: idx == 1 ? cId : c.targetId,\n                newTargetId: c.targetId,\n                connection: c\n            };\n\n            if (el.constructor == jsPlumb.Endpoint) { // TODO here match the current endpoint class; users can change it {\n                ep = el;\n                ep.addConnection(c);\n            }\n            else {\n                sid = _getId(el);\n                sep = this[_st.epDefs][sid];\n\n                if (sid === c[_st.elId])\n                    ep = null;  // dont change source/target if the element is already the one given.\n                else if (sep) {\n                    if (!sep.enabled) return;\n                    ep = sep.endpoint != null && sep.endpoint._jsPlumb ? sep.endpoint : this.addEndpoint(el, sep.def);\n                    if (sep.uniqueEndpoint) sep.endpoint = ep;\n                    ep._doNotDeleteOnDetach = false;\n                    ep._deleteOnDetach = true;\n                    ep.addConnection(c);\n                }\n                else {\n                    ep = c.makeEndpoint(idx === 0, el, sid);\n                    ep._doNotDeleteOnDetach = false;\n                    ep._deleteOnDetach = true;\n                }\n            }\n\n            if (ep != null) {\n                oldEndpoint.detachFromConnection(c);\n                c.endpoints[idx] = ep;\n                c[_st.el] = ep.element;\n                c[_st.elId] = ep.elementId;\n                evtParams[idx === 0 ? \"newSourceId\" : \"newTargetId\"] = ep.elementId;\n\n                fireMoveEvent(evtParams);\n\n                if (!doNotRepaint)\n                    c.repaint();\n            }\n\n            return evtParams;\n\n        }.bind(this);\n\n        this.setSource = function (connection, el, doNotRepaint) {\n            var p = _set(connection, el, 0, doNotRepaint);\n            this.anchorManager.sourceChanged(p.originalSourceId, p.newSourceId, connection);\n        };\n        this.setTarget = function (connection, el, doNotRepaint) {\n            var p = _set(connection, el, 1, doNotRepaint);\n            this.anchorManager.updateOtherEndpoint(p.originalSourceId, p.originalTargetId, p.newTargetId, connection);\n        };\n\n        this.deleteEndpoint = function (object, dontUpdateHover) {\n            var endpoint = (typeof object === \"string\") ? endpointsByUUID[object] : object;\n            if (endpoint) {\n                _currentInstance.deleteObject({ endpoint: endpoint, dontUpdateHover: dontUpdateHover });\n            }\n            return _currentInstance;\n        };\n\n        this.deleteEveryEndpoint = function () {\n            var _is = _currentInstance.setSuspendDrawing(true);\n            for (var id in endpointsByElement) {\n                var endpoints = endpointsByElement[id];\n                if (endpoints && endpoints.length) {\n                    for (var i = 0, j = endpoints.length; i < j; i++) {\n                        _currentInstance.deleteEndpoint(endpoints[i], true);\n                    }\n                }\n            }\n            endpointsByElement = {};\n            // SP new\n            managedElements = {};\n            endpointsByUUID = {};\n            offsets = {};\n            offsetTimestamps = {};\n            _currentInstance.anchorManager.reset();\n            _currentInstance.getDragManager().reset();\n            if (!_is) _currentInstance.setSuspendDrawing(false);\n            return _currentInstance;\n        };\n\n        var fireDetachEvent = function (jpc, doFireEvent, originalEvent) {\n            // may have been given a connection, or in special cases, an object\n            var connType = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),\n                argIsConnection = jpc.constructor == connType,\n                params = argIsConnection ? {\n                    connection: jpc,\n                    source: jpc.source, target: jpc.target,\n                    sourceId: jpc.sourceId, targetId: jpc.targetId,\n                    sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\n                } : jpc;\n\n            if (doFireEvent)\n                _currentInstance.fire(\"connectionDetached\", params, originalEvent);\n\n            _currentInstance.anchorManager.connectionDetached(params);\n        };\n\n        var fireMoveEvent = _currentInstance.fireMoveEvent = function (params, evt) {\n            _currentInstance.fire(\"connectionMoved\", params, evt);\n        };\n\n        this.unregisterEndpoint = function (endpoint) {\n            //if (endpoint._jsPlumb == null) return;\n            if (endpoint._jsPlumb.uuid) endpointsByUUID[endpoint._jsPlumb.uuid] = null;\n            _currentInstance.anchorManager.deleteEndpoint(endpoint);\n            // TODO at least replace this with a removeWithFunction call.\n            for (var e in endpointsByElement) {\n                var endpoints = endpointsByElement[e];\n                if (endpoints) {\n                    var newEndpoints = [];\n                    for (var i = 0, j = endpoints.length; i < j; i++)\n                        if (endpoints[i] != endpoint) newEndpoints.push(endpoints[i]);\n\n                    endpointsByElement[e] = newEndpoints;\n                }\n                if (endpointsByElement[e].length < 1) {\n                    delete endpointsByElement[e];\n                }\n            }\n        };\n\n        this.detach = function () {\n\n            if (arguments.length === 0) return;\n            var connType = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),\n                firstArgIsConnection = arguments[0].constructor == connType,\n                params = arguments.length == 2 ? firstArgIsConnection ? (arguments[1] || {}) : arguments[0] : arguments[0],\n                fireEvent = (params.fireEvent !== false),\n                forceDetach = params.forceDetach,\n                conn = firstArgIsConnection ? arguments[0] : params.connection;\n\n            if (conn) {\n                if (forceDetach || jsPlumbUtil.functionChain(true, false, [\n                    [ conn.endpoints[0], \"isDetachAllowed\", [ conn ] ],\n                    [ conn.endpoints[1], \"isDetachAllowed\", [ conn ] ],\n                    [ conn, \"isDetachAllowed\", [ conn ] ],\n                    [ _currentInstance, \"checkCondition\", [ \"beforeDetach\", conn ] ]\n                ])) {\n\n                    conn.endpoints[0].detach(conn, false, true, fireEvent);\n                }\n            }\n            else {\n                var _p = jsPlumb.extend({}, params); // a backwards compatibility hack: source should be thought of as 'params' in this case.\n                // test for endpoint uuids to detach\n                if (_p.uuids) {\n                    _getEndpoint(_p.uuids[0]).detachFrom(_getEndpoint(_p.uuids[1]), fireEvent);\n                } else if (_p.sourceEndpoint && _p.targetEndpoint) {\n                    _p.sourceEndpoint.detachFrom(_p.targetEndpoint);\n                } else {\n                    var sourceId = _getId(_currentInstance.getElement(_p.source)),\n                        targetId = _getId(_currentInstance.getElement(_p.target));\n                    _operation(sourceId, function (jpc) {\n                        if ((jpc.sourceId == sourceId && jpc.targetId == targetId) || (jpc.targetId == sourceId && jpc.sourceId == targetId)) {\n                            if (_currentInstance.checkCondition(\"beforeDetach\", jpc)) {\n                                jpc.endpoints[0].detach(jpc, false, true, fireEvent);\n                            }\n                        }\n                    });\n                }\n            }\n        };\n\n        this.detachAllConnections = function (el, params) {\n            params = params || {};\n            el = _currentInstance.getElement(el);\n            var id = _getId(el),\n                endpoints = endpointsByElement[id];\n            if (endpoints && endpoints.length) {\n                for (var i = 0, j = endpoints.length; i < j; i++) {\n                    endpoints[i].detachAll(params.fireEvent !== false, params.forceDetach);\n                }\n            }\n            return _currentInstance;\n        };\n\n        this.detachEveryConnection = function (params) {\n            params = params || {};\n            _currentInstance.batch(function () {\n                for (var id in endpointsByElement) {\n                    var endpoints = endpointsByElement[id];\n                    if (endpoints && endpoints.length) {\n                        for (var i = 0, j = endpoints.length; i < j; i++) {\n                            endpoints[i].detachAll(params.fireEvent !== false, params.forceDetach);\n                        }\n                    }\n                }\n                connections.length = 0;\n            });\n            return _currentInstance;\n        };\n\n        /// not public.  but of course its exposed. how to change this.\n        this.deleteObject = function (params) {\n            var result = {\n                    endpoints: {},\n                    connections: {},\n                    endpointCount: 0,\n                    connectionCount: 0\n                },\n                fireEvent = params.fireEvent !== false,\n                deleteAttachedObjects = params.deleteAttachedObjects !== false;\n\n            var unravelConnection = function (connection) {\n                if (connection != null && result.connections[connection.id] == null) {\n                    if (!params.dontUpdateHover && connection._jsPlumb != null) connection.setHover(false);\n                    result.connections[connection.id] = connection;\n                    result.connectionCount++;\n                    if (deleteAttachedObjects) {\n                        for (var j = 0; j < connection.endpoints.length; j++) {\n                            if (connection.endpoints[j]._deleteOnDetach)\n                                unravelEndpoint(connection.endpoints[j]);\n                        }\n                    }\n                }\n            };\n            var unravelEndpoint = function (endpoint) {\n                if (endpoint != null && result.endpoints[endpoint.id] == null) {\n                    if (!params.dontUpdateHover && endpoint._jsPlumb != null) endpoint.setHover(false);\n                    result.endpoints[endpoint.id] = endpoint;\n                    result.endpointCount++;\n\n                    if (deleteAttachedObjects) {\n                        for (var i = 0; i < endpoint.connections.length; i++) {\n                            var c = endpoint.connections[i];\n                            unravelConnection(c);\n                        }\n                    }\n                }\n            };\n\n            if (params.connection)\n                unravelConnection(params.connection);\n            else unravelEndpoint(params.endpoint);\n\n            // loop through connections\n            for (var i in result.connections) {\n                var c = result.connections[i];\n                if (c._jsPlumb) {\n                    jsPlumbUtil.removeWithFunction(connections, function (_c) {\n                        return c.id == _c.id;\n                    });\n                    fireDetachEvent(c, fireEvent, params.originalEvent);\n\n                    c.endpoints[0].detachFromConnection(c);\n                    c.endpoints[1].detachFromConnection(c);\n                    c.cleanup(true);\n                    c.destroy(true);\n                }\n            }\n\n            // loop through endpoints\n            for (var j in result.endpoints) {\n                var e = result.endpoints[j];\n                if (e._jsPlumb) {\n                    _currentInstance.unregisterEndpoint(e);\n                    // FIRE some endpoint deleted event?\n                    e.cleanup(true);\n                    e.destroy(true);\n                }\n            }\n\n            return result;\n        };\n\n        this.draggable = function (el, options) {\n            var i, j, info;\n            // allows for array or jquery selector\n            if (typeof el == 'object' && el.length) {\n                for (i = 0, j = el.length; i < j; i++) {\n                    info = _info(el[i]);\n                    if (info.el) _initDraggableIfNecessary(info.el, true, options, info.id);\n                }\n            }\n            else {\n                //ele = _currentInstance.getElement(el);\n                info = _info(el);\n                if (info.el) _initDraggableIfNecessary(info.el, true, options, info.id);\n            }\n            return _currentInstance;\n        };\n\n        // helpers for select/selectEndpoints\n        var _setOperation = function (list, func, args, selector) {\n                for (var i = 0, j = list.length; i < j; i++) {\n                    list[i][func].apply(list[i], args);\n                }\n                return selector(list);\n            },\n            _getOperation = function (list, func, args) {\n                var out = [];\n                for (var i = 0, j = list.length; i < j; i++) {\n                    out.push([ list[i][func].apply(list[i], args), list[i] ]);\n                }\n                return out;\n            },\n            setter = function (list, func, selector) {\n                return function () {\n                    return _setOperation(list, func, arguments, selector);\n                };\n            },\n            getter = function (list, func) {\n                return function () {\n                    return _getOperation(list, func, arguments);\n                };\n            },\n            prepareList = function (input, doNotGetIds) {\n                var r = [];\n                if (input) {\n                    if (typeof input == 'string') {\n                        if (input === \"*\") return input;\n                        r.push(input);\n                    }\n                    else {\n                        if (doNotGetIds) r = input;\n                        else {\n                            if (input.length) {\n                                for (var i = 0, j = input.length; i < j; i++)\n                                    r.push(_info(input[i]).id);\n                            }\n                            else\n                                r.push(_info(input).id);\n                        }\n                    }\n                }\n                return r;\n            },\n            filterList = function (list, value, missingIsFalse) {\n                if (list === \"*\") return true;\n                return list.length > 0 ? jsPlumbUtil.indexOf(list, value) != -1 : !missingIsFalse;\n            };\n\n        // get some connections, specifying source/target/scope\n        this.getConnections = function (options, flat) {\n            if (!options) {\n                options = {};\n            } else if (options.constructor == String) {\n                options = { \"scope\": options };\n            }\n            var scope = options.scope || _currentInstance.getDefaultScope(),\n                scopes = prepareList(scope, true),\n                sources = prepareList(options.source),\n                targets = prepareList(options.target),\n                results = (!flat && scopes.length > 1) ? {} : [],\n                _addOne = function (scope, obj) {\n                    if (!flat && scopes.length > 1) {\n                        var ss = results[scope];\n                        if (ss == null) {\n                            ss = results[scope] = [];\n                        }\n                        ss.push(obj);\n                    } else results.push(obj);\n                };\n\n            for (var j = 0, jj = connections.length; j < jj; j++) {\n                var c = connections[j];\n                if (filterList(scopes, c.scope) && filterList(sources, c.sourceId) && filterList(targets, c.targetId))\n                    _addOne(c.scope, c);\n            }\n\n            return results;\n        };\n\n        var _curryEach = function (list, executor) {\n                return function (f) {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        f(list[i]);\n                    }\n                    return executor(list);\n                };\n            },\n            _curryGet = function (list) {\n                return function (idx) {\n                    return list[idx];\n                };\n            };\n\n        var _makeCommonSelectHandler = function (list, executor) {\n            var out = {\n                    length: list.length,\n                    each: _curryEach(list, executor),\n                    get: _curryGet(list)\n                },\n                setters = [\"setHover\", \"removeAllOverlays\", \"setLabel\", \"addClass\", \"addOverlay\", \"removeOverlay\",\n                    \"removeOverlays\", \"showOverlay\", \"hideOverlay\", \"showOverlays\", \"hideOverlays\", \"setPaintStyle\",\n                    \"setHoverPaintStyle\", \"setSuspendEvents\", \"setParameter\", \"setParameters\", \"setVisible\",\n                    \"repaint\", \"addType\", \"toggleType\", \"removeType\", \"removeClass\", \"setType\", \"bind\", \"unbind\" ],\n\n                getters = [\"getLabel\", \"getOverlay\", \"isHover\", \"getParameter\", \"getParameters\", \"getPaintStyle\",\n                    \"getHoverPaintStyle\", \"isVisible\", \"hasType\", \"getType\", \"isSuspendEvents\" ],\n                i, ii;\n\n            for (i = 0, ii = setters.length; i < ii; i++)\n                out[setters[i]] = setter(list, setters[i], executor);\n\n            for (i = 0, ii = getters.length; i < ii; i++)\n                out[getters[i]] = getter(list, getters[i]);\n\n            return out;\n        };\n\n        var _makeConnectionSelectHandler = function (list) {\n            var common = _makeCommonSelectHandler(list, _makeConnectionSelectHandler);\n            return jsPlumb.extend(common, {\n                // setters\n                setDetachable: setter(list, \"setDetachable\", _makeConnectionSelectHandler),\n                setReattach: setter(list, \"setReattach\", _makeConnectionSelectHandler),\n                setConnector: setter(list, \"setConnector\", _makeConnectionSelectHandler),\n                detach: function () {\n                    for (var i = 0, ii = list.length; i < ii; i++)\n                        _currentInstance.detach(list[i]);\n                },\n                // getters\n                isDetachable: getter(list, \"isDetachable\"),\n                isReattach: getter(list, \"isReattach\")\n            });\n        };\n\n        var _makeEndpointSelectHandler = function (list) {\n            var common = _makeCommonSelectHandler(list, _makeEndpointSelectHandler);\n            return jsPlumb.extend(common, {\n                setEnabled: setter(list, \"setEnabled\", _makeEndpointSelectHandler),\n                setAnchor: setter(list, \"setAnchor\", _makeEndpointSelectHandler),\n                isEnabled: getter(list, \"isEnabled\"),\n                detachAll: function () {\n                    for (var i = 0, ii = list.length; i < ii; i++)\n                        list[i].detachAll();\n                },\n                \"remove\": function () {\n                    for (var i = 0, ii = list.length; i < ii; i++)\n                        _currentInstance.deleteObject({endpoint: list[i]});\n                }\n            });\n        };\n\n        this.select = function (params) {\n            params = params || {};\n            params.scope = params.scope || \"*\";\n            return _makeConnectionSelectHandler(params.connections || _currentInstance.getConnections(params, true));\n        };\n\n        this.selectEndpoints = function (params) {\n            params = params || {};\n            params.scope = params.scope || \"*\";\n            var noElementFilters = !params.element && !params.source && !params.target,\n                elements = noElementFilters ? \"*\" : prepareList(params.element),\n                sources = noElementFilters ? \"*\" : prepareList(params.source),\n                targets = noElementFilters ? \"*\" : prepareList(params.target),\n                scopes = prepareList(params.scope, true);\n\n            var ep = [];\n\n            for (var el in endpointsByElement) {\n                var either = filterList(elements, el, true),\n                    source = filterList(sources, el, true),\n                    sourceMatchExact = sources != \"*\",\n                    target = filterList(targets, el, true),\n                    targetMatchExact = targets != \"*\";\n\n                // if they requested 'either' then just match scope. otherwise if they requested 'source' (not as a wildcard) then we have to match only endpoints that have isSource set to to true, and the same thing with isTarget.\n                if (either || source || target) {\n                    inner:\n                        for (var i = 0, ii = endpointsByElement[el].length; i < ii; i++) {\n                            var _ep = endpointsByElement[el][i];\n                            if (filterList(scopes, _ep.scope, true)) {\n\n                                var noMatchSource = (sourceMatchExact && sources.length > 0 && !_ep.isSource),\n                                    noMatchTarget = (targetMatchExact && targets.length > 0 && !_ep.isTarget);\n\n                                if (noMatchSource || noMatchTarget)\n                                    continue inner;\n\n                                ep.push(_ep);\n                            }\n                        }\n                }\n            }\n\n            return _makeEndpointSelectHandler(ep);\n        };\n\n        // get all connections managed by the instance of jsplumb.\n        this.getAllConnections = function () {\n            return connections;\n        };\n        this.getDefaultScope = function () {\n            return DEFAULT_SCOPE;\n        };\n        // get an endpoint by uuid.\n        this.getEndpoint = _getEndpoint;\n        // get endpoints for some element.\n        this.getEndpoints = function (el) {\n            return endpointsByElement[_info(el).id];\n        };\n        // gets the default endpoint type. used when subclassing. see wiki.\n        this.getDefaultEndpointType = function () {\n            return jsPlumb.Endpoint;\n        };\n        // gets the default connection type. used when subclassing.  see wiki.\n        this.getDefaultConnectionType = function () {\n            return jsPlumb.Connection;\n        };\n        /*\n         * Gets an element's id, creating one if necessary. really only exposed\n         * for the lib-specific functionality to access; would be better to pass\n         * the current instance into the lib-specific code (even though this is\n         * a static call. i just don't want to expose it to the public API).\n         */\n        this.getId = _getId;\n\n        /*this.getOffset = function (id) {\n            return _updateOffset({elId: id}).o;\n        };*/\n\n        this.appendElement = _appendElement;\n\n        var _hoverSuspended = false;\n        this.isHoverSuspended = function () {\n            return _hoverSuspended;\n        };\n        this.setHoverSuspended = function (s) {\n            _hoverSuspended = s;\n        };\n\n        // set an element's connections to be hidden\n        this.hide = function (el, changeEndpoints) {\n            _setVisible(el, \"none\", changeEndpoints);\n            return _currentInstance;\n        };\n\n        // exposed for other objects to use to get a unique id.\n        this.idstamp = _idstamp;\n\n        this.connectorsInitialized = false;\n        this.registerConnectorType = function (connector, name) {\n            connectorTypes.push([connector, name]);\n        };\n\n        // ensure that, if the current container exists, it is a DOM element and not a selector.\n        // if it does not exist and `candidate` is supplied, the offset parent of that element will be set as the Container.\n        // this is used to do a better default behaviour for the case that the user has not set a container:\n        // addEndpoint, makeSource, makeTarget and connect all call this method with the offsetParent of the\n        // element in question (for connect it is the source element). So if no container is set, it is inferred\n        // to be the offsetParent of the first element the user tries to connect.\n        var _ensureContainer = function (candidate) {\n            if (!_container && candidate) {\n                var can = _currentInstance.getElement(candidate);\n                if (can.offsetParent) _currentInstance.setContainer(can.offsetParent);\n            }\n        };\n\n        var _getContainerFromDefaults = function () {\n            if (_currentInstance.Defaults.Container)\n                _currentInstance.setContainer(_currentInstance.Defaults.Container);\n        };\n\n        // check if a given element is managed or not. if not, add to our map. if drawing is not suspended then\n        // we'll also stash its dimensions; otherwise we'll do this in a lazy way through updateOffset.\n        // TODO make sure we add a test that this tracks a setId call.\n        var _manage = _currentInstance.manage = function (id, element) {\n            if (!managedElements[id]) {\n                managedElements[id] = {\n                    el: element,\n                    endpoints: [],\n                    connections: []\n                };\n\n                managedElements[id].info = _updateOffset({ elId: id, timestamp: _suspendedAt });\n            }\n\n            return managedElements[id];\n        };\n\n        /**\n         * updates the offset and size for a given element, and stores the\n         * values. if 'offset' is not null we use that (it would have been\n         * passed in from a drag call) because it's faster; but if it is null,\n         * or if 'recalc' is true in order to force a recalculation, we get the current values.\n         */\n        var _updateOffset = this.updateOffset = function (params) {\n\n            var timestamp = params.timestamp, recalc = params.recalc, offset = params.offset, elId = params.elId, s;\n            if (_suspendDrawing && !timestamp) timestamp = _suspendedAt;\n            if (!recalc) {\n                if (timestamp && timestamp === offsetTimestamps[elId]) {\n                    return {o: params.offset || offsets[elId], s: sizes[elId]};\n                }\n            }\n            if (recalc || (!offset && offsets[elId] == null)) { // if forced repaint or no offset available, we recalculate.\n\n                // get the current size and offset, and store them\n                s = managedElements[elId] ? managedElements[elId].el : null;\n                if (s != null) {\n                    sizes[elId] = _currentInstance.getSize(s);\n                    offsets[elId] = _currentInstance.getOffset(s);\n                    offsetTimestamps[elId] = timestamp;\n                }\n            } else {\n                offsets[elId] = offset || offsets[elId];\n                if (sizes[elId] == null) {\n                    s = managedElements[elId].el;\n                    if (s != null) sizes[elId] = _currentInstance.getSize(s);\n                }\n                offsetTimestamps[elId] = timestamp;\n            }\n\n            if (offsets[elId] && !offsets[elId].right) {\n                offsets[elId].right = offsets[elId].left + sizes[elId][0];\n                offsets[elId].bottom = offsets[elId].top + sizes[elId][1];\n                offsets[elId].width = sizes[elId][0];\n                offsets[elId].height = sizes[elId][1];\n                offsets[elId].centerx = offsets[elId].left + (offsets[elId].width / 2);\n                offsets[elId].centery = offsets[elId].top + (offsets[elId].height / 2);\n            }\n\n            return {o: offsets[elId], s: sizes[elId]};\n        };\n\n        /**\n         * callback from the current library to tell us to prepare ourselves (attach\n         * mouse listeners etc; can't do that until the library has provided a bind method)\n         */\n        this.init = function () {\n            rendererTypes = jsPlumb.getRenderModes();\n\n            var _oneType = function (renderer, name, fn) {\n                jsPlumb.Connectors[renderer][name] = function () {\n                    fn.apply(this, arguments);\n                    jsPlumb.ConnectorRenderers[renderer].apply(this, arguments);\n                };\n                jsPlumbUtil.extend(jsPlumb.Connectors[renderer][name], [ fn, jsPlumb.ConnectorRenderers[renderer]]);\n            };\n\n            if (!jsPlumb.connectorsInitialized) {\n                for (var i = 0; i < connectorTypes.length; i++) {\n                    for (var j = 0; j < rendererTypes.length; j++) {\n                        _oneType(rendererTypes[j], connectorTypes[i][1], connectorTypes[i][0]);\n                    }\n\n                }\n                jsPlumb.connectorsInitialized = true;\n            }\n\n            if (!initialized) {\n                _getContainerFromDefaults();\n                _currentInstance.anchorManager = new jsPlumb.AnchorManager({jsPlumbInstance: _currentInstance});\n                _currentInstance.setRenderMode(_currentInstance.Defaults.RenderMode);  // calling the method forces the capability logic to be run.\n                initialized = true;\n                _currentInstance.fire(\"ready\", _currentInstance);\n            }\n        }.bind(this);\n\n        this.log = log;\n        this.jsPlumbUIComponent = jsPlumbUIComponent;\n\n        /*\n         * Creates an anchor with the given params.\n         *\n         *\n         * Returns: The newly created Anchor.\n         * Throws: an error if a named anchor was not found.\n         */\n        this.makeAnchor = function () {\n            var pp, _a = function (t, p) {\n                if (jsPlumb.Anchors[t]) return new jsPlumb.Anchors[t](p);\n                if (!_currentInstance.Defaults.DoNotThrowErrors)\n                    throw { msg: \"jsPlumb: unknown anchor type '\" + t + \"'\" };\n            };\n            if (arguments.length === 0) return null;\n            var specimen = arguments[0], elementId = arguments[1], jsPlumbInstance = arguments[2], newAnchor = null;\n            // if it appears to be an anchor already...\n            if (specimen.compute && specimen.getOrientation) return specimen;  //TODO hazy here about whether it should be added or is already added somehow.\n            // is it the name of an anchor type?\n            else if (typeof specimen == \"string\") {\n                newAnchor = _a(arguments[0], {elementId: elementId, jsPlumbInstance: _currentInstance});\n            }\n            // is it an array? it will be one of:\n            // \t\tan array of [spec, params] - this defines a single anchor, which may be dynamic, but has parameters.\n            //\t\tan array of arrays - this defines some dynamic anchors\n            //\t\tan array of numbers - this defines a single anchor.\n            else if (_ju.isArray(specimen)) {\n                if (_ju.isArray(specimen[0]) || _ju.isString(specimen[0])) {\n                    // if [spec, params] format\n                    if (specimen.length == 2 && _ju.isObject(specimen[1])) {\n                        // if first arg is a string, its a named anchor with params\n                        if (_ju.isString(specimen[0])) {\n                            pp = jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance}, specimen[1]);\n                            newAnchor = _a(specimen[0], pp);\n                        }\n                        // otherwise first arg is array, second is params. we treat as a dynamic anchor, which is fine\n                        // even if the first arg has only one entry. you could argue all anchors should be implicitly dynamic in fact.\n                        else {\n                            pp = jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance, anchors: specimen[0]}, specimen[1]);\n                            newAnchor = new jsPlumb.DynamicAnchor(pp);\n                        }\n                    }\n                    else\n                        newAnchor = new jsPlumb.DynamicAnchor({anchors: specimen, selector: null, elementId: elementId, jsPlumbInstance: _currentInstance});\n\n                }\n                else {\n                    var anchorParams = {\n                        x: specimen[0], y: specimen[1],\n                        orientation: (specimen.length >= 4) ? [ specimen[2], specimen[3] ] : [0, 0],\n                        offsets: (specimen.length >= 6) ? [ specimen[4], specimen[5] ] : [ 0, 0 ],\n                        elementId: elementId,\n                        jsPlumbInstance: _currentInstance,\n                        cssClass: specimen.length == 7 ? specimen[6] : null\n                    };\n                    newAnchor = new jsPlumb.Anchor(anchorParams);\n                    newAnchor.clone = function () {\n                        return new jsPlumb.Anchor(anchorParams);\n                    };\n                }\n            }\n\n            if (!newAnchor.id) newAnchor.id = \"anchor_\" + _idstamp();\n            return newAnchor;\n        };\n\n        /**\n         * makes a list of anchors from the given list of types or coords, eg\n         * [\"TopCenter\", \"RightMiddle\", \"BottomCenter\", [0, 1, -1, -1] ]\n         */\n        this.makeAnchors = function (types, elementId, jsPlumbInstance) {\n            var r = [];\n            for (var i = 0, ii = types.length; i < ii; i++) {\n                if (typeof types[i] == \"string\")\n                    r.push(jsPlumb.Anchors[types[i]]({elementId: elementId, jsPlumbInstance: jsPlumbInstance}));\n                else if (_ju.isArray(types[i]))\n                    r.push(_currentInstance.makeAnchor(types[i], elementId, jsPlumbInstance));\n            }\n            return r;\n        };\n\n        /**\n         * Makes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\n         * objects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\n         * not need to provide this - i think).\n         */\n        this.makeDynamicAnchor = function (anchors, anchorSelector) {\n            return new jsPlumb.DynamicAnchor({anchors: anchors, selector: anchorSelector, elementId: null, jsPlumbInstance: _currentInstance});\n        };\n\n// --------------------- makeSource/makeTarget ---------------------------------------------- \n\n        this.targetEndpointDefinitions = {};\n        var _setEndpointPaintStylesAndAnchor = function (ep, epIndex, _instance) {\n            ep.paintStyle = ep.paintStyle ||\n                _instance.Defaults.EndpointStyles[epIndex] ||\n                _instance.Defaults.EndpointStyle;\n\n            ep.hoverPaintStyle = ep.hoverPaintStyle ||\n                _instance.Defaults.EndpointHoverStyles[epIndex] ||\n                _instance.Defaults.EndpointHoverStyle;\n\n            ep.anchor = ep.anchor ||\n                _instance.Defaults.Anchors[epIndex] ||\n                _instance.Defaults.Anchor;\n\n            ep.endpoint = ep.endpoint ||\n                _instance.Defaults.Endpoints[epIndex] ||\n                _instance.Defaults.Endpoint;\n        };\n\n        // TODO put all the source stuff inside one parent, keyed by id.\n        this.sourceEndpointDefinitions = {};\n\n        var selectorFilter = function (evt, _el, selector, _instance, negate) {\n            var t = evt.target || evt.srcElement, ok = false,\n                sel = _instance.getSelector(_el, selector);\n            for (var j = 0; j < sel.length; j++) {\n                if (sel[j] == t) {\n                    ok = true;\n                    break;\n                }\n            }\n            return negate ? !ok : ok;\n        };\n\n        // SP target source refactor\n        var _makeElementDropHandler = function (elInfo, p, dropOptions, isSource, isTarget, definitionId) {\n            var proxyComponent = new jsPlumbUIComponent(p);\n            var _drop = p._jsPlumb.EndpointDropHandler({\n                jsPlumb: _currentInstance,\n                enabled: function () {\n                    return elInfo.el[definitionId].enabled;\n                },\n                isFull: function () {\n                    var targetCount = _currentInstance.select({target: elInfo.id}).length;\n                    var def = elInfo.el[definitionId];\n                    return def.maxConnections > 0 && targetCount >= def.maxConnections;\n                },\n                element: elInfo.el,\n                elementId: elInfo.id,\n                isSource: isSource,\n                isTarget: isTarget,\n                addClass: function (clazz) {\n                    _currentInstance.addClass(elInfo.el, clazz);\n                },\n                removeClass: function (clazz) {\n                    _currentInstance.removeClass(elInfo.el, clazz);\n                },\n                onDrop: function (jpc) {\n                    var source = jpc.endpoints[0];\n                    source.anchor.locked = false;\n                },\n                isDropAllowed: function () {\n                    return proxyComponent.isDropAllowed.apply(proxyComponent, arguments);\n                },\n                isRedrop:function(jpc) {\n                    return (jpc.suspendedElement != null && jpc.suspendedEndpoint != null && jpc.suspendedEndpoint.element === elInfo.el);\n                },\n                getEndpoint: function (jpc) {\n\n                    // make a new Endpoint for the target, or get it from the cache if uniqueEndpoint\n                    // is set. if its a redrop the new endpoint will be immediately cleaned up.\n                    var def = elInfo.el[definitionId],\n                        newEndpoint = def.endpoint;\n\n                    // if no cached endpoint, or there was one but it has been cleaned up\n                    // (ie. detached), create a new one\n                    if (newEndpoint == null || newEndpoint._jsPlumb == null) {\n                        newEndpoint = _currentInstance.addEndpoint(elInfo.el, p);\n                        newEndpoint._mtNew = true;\n                    }\n\n                    if (p.uniqueEndpoint) def.endpoint = newEndpoint;  // may of course just store what it just pulled out. that's ok.\n                    // TODO test options to makeTarget to see if we should do this?\n                    newEndpoint._doNotDeleteOnDetach = false; // reset.\n                    newEndpoint._deleteOnDetach = true;\n\n                    // if connection is detachable, init the new endpoint to be draggable, to support that happening.\n                    if (jpc.isDetachable())\n                        newEndpoint.initDraggable();\n\n                    // if the anchor has a 'positionFinder' set, then delegate to that function to find\n                    // out where to locate the anchor.\n                    if (newEndpoint.anchor.positionFinder != null) {\n                        var dropPosition = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom()),\n                            //elPosition = _currentInstance.getOffset(_el),\n                            elPosition = _currentInstance.getOffset(elInfo.el),\n                            //elSize = _currentInstance.getSize(_el),\n                            elSize = _currentInstance.getSize(elInfo.el),\n                            ap = newEndpoint.anchor.positionFinder(dropPosition, elPosition, elSize, newEndpoint.anchor.constructorParams);\n                        newEndpoint.anchor.x = ap[0];\n                        newEndpoint.anchor.y = ap[1];\n                        // now figure an orientation for it..kind of hard to know what to do actually. probably the best thing i can do is to\n                        // support specifying an orientation in the anchor's spec. if one is not supplied then i will make the orientation\n                        // be what will cause the most natural link to the source: it will be pointing at the source, but it needs to be\n                        // specified in one axis only, and so how to make that choice? i think i will use whichever axis is the one in which\n                        // the target is furthest away from the source.\n                    }\n\n                    return newEndpoint;\n                },\n                maybeCleanup: function (ep) {\n                    if (ep._mtNew && ep.connections.length === 0) {\n                        _currentInstance.deleteObject({endpoint: ep});\n                    }\n                    else\n                        delete ep._mtNew;\n                }\n            });\n\n            // wrap drop events as needed and initialise droppable\n            var dropEvent = jsPlumb.dragEvents.drop;\n            dropOptions.scope = dropOptions.scope || (p.scope || _currentInstance.Defaults.Scope);\n            dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], _drop, true);\n\n            // if target, return true from the over event. this will cause katavorio to stop setting drops to hover\n            // if multipleDrop is set to false.\n            if (isTarget) {\n                dropOptions[jsPlumb.dragEvents.over] = function () { return true; };\n            }\n\n            dropOptions.definitionId = definitionId;\n\n            // vanilla jsplumb only\n            if (p.allowLoopback === false) {\n                dropOptions.canDrop = function (_drag) {\n                    var de = _drag.getDragElement()._jsPlumbRelatedElement;\n                    return de != elInfo.el;\n                };\n            }\n            _currentInstance.initDroppable(elInfo.el, dropOptions, \"internal\");\n\n            return _drop;\n\n        };\n\n        // see API docs\n        this.makeTarget = function (el, params, referenceParams) {\n\n            // put jsplumb ref into params without altering the params passed in\n            var p = jsPlumb.extend({_jsPlumb: this}, referenceParams);\n            jsPlumb.extend(p, params);\n\n            // calculate appropriate paint styles and anchor from the params given\n            _setEndpointPaintStylesAndAnchor(p, 1, this);\n\n            var deleteEndpointsOnDetach = !(p.deleteEndpointsOnDetach === false),\n                maxConnections = p.maxConnections || -1,\n\n                _doOne = function (el) {\n\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\n                    // and use the endpoint definition if found.\n                    // decode the info for this element (id and element)\n                    var elInfo = _info(el),\n                        elid = elInfo.id,\n                        dropOptions = jsPlumb.extend({}, p.dropOptions || {});\n\n                    _ensureContainer(elid);\n\n                    // store the definition\n                    var _def = {\n                        def: p,\n                        uniqueEndpoint: p.uniqueEndpoint,\n                        maxConnections: maxConnections,\n                        enabled: true\n                    };\n                    elInfo.el._jsPlumbTarget = _def;\n                    this.targetEndpointDefinitions[elid] = _def;\n                    _makeElementDropHandler(elInfo, p, dropOptions, p.isSource === true, true, \"_jsPlumbTarget\");\n\n                }.bind(this);\n\n            // make an array if only given one element\n            var inputs = el.length && el.constructor != String ? el : [ el ];\n\n            // register each one in the list.\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\n                _doOne(inputs[i]);\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeTarget = function (el, doNotClearArrays) {\n            var info = _info(el);\n            jsPlumb.destroyDroppable(info.el);\n            if (!doNotClearArrays) {\n                delete this.targetEndpointDefinitions[info.id];\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.makeSource = function (el, params, referenceParams) {\n            var p = jsPlumb.extend({_jsPlumb: this}, referenceParams);\n            jsPlumb.extend(p, params);\n            _setEndpointPaintStylesAndAnchor(p, 0, this);\n            var maxConnections = p.maxConnections || 1,\n                onMaxConnections = p.onMaxConnections,\n                _doOne = function (elInfo) {\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\n                    // and use the endpoint definition if found.\n                    var elid = elInfo.id,\n                        _del = this.getElement(elInfo.el);\n\n                    _ensureContainer(elid);\n\n                    var _def = {\n                        def: p,\n                        uniqueEndpoint: p.uniqueEndpoint,\n                        maxConnections: maxConnections,\n                        enabled: true\n                    };\n                    this.sourceEndpointDefinitions[elid] = _def;\n                    elInfo.el._jsPlumbSource = _def;\n\n                    var stopEvent = jsPlumb.dragEvents.stop,\n                        dragEvent = jsPlumb.dragEvents.drag,\n                        dragOptions = jsPlumb.extend({ }, p.dragOptions || {}),\n                        existingDrag = dragOptions.drag,\n                        existingStop = dragOptions.stop,\n                        ep = null,\n                        endpointAddedButNoDragYet = false;\n\n                    // set scope if its not set in dragOptions but was passed in in params\n                    dragOptions.scope = dragOptions.scope || p.scope;\n\n                    dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], function () {\n                        if (existingDrag) existingDrag.apply(this, arguments);\n                        endpointAddedButNoDragYet = false;\n                    });\n\n                    dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], function () {\n\n                        if (existingStop) existingStop.apply(this, arguments);\n                        this.currentlyDragging = false;\n                        if (ep._jsPlumb != null) { // if not cleaned up...\n\n                            // reset the anchor to the anchor that was initially provided. the one we were using to drag\n                            // the connection was just a placeholder that was located at the place the user pressed the\n                            // mouse button to initiate the drag.\n                            var anchorDef = p.anchor || this.Defaults.Anchor,\n                                oldAnchor = ep.anchor,\n                                oldConnection = ep.connections[0],\n                                newAnchor = this.makeAnchor(anchorDef, elid, this),\n                                _el = ep.element;\n\n                            // if the anchor has a 'positionFinder' set, then delegate to that function to find\n                            // out where to locate the anchor. issue 117.\n                            if (newAnchor.positionFinder != null) {\n                                var elPosition = _currentInstance.getOffset(_el),\n                                    elSize = this.getSize(_el),\n                                    dropPosition = { left: elPosition.left + (oldAnchor.x * elSize[0]), top: elPosition.top + (oldAnchor.y * elSize[1]) },\n                                    ap = newAnchor.positionFinder(dropPosition, elPosition, elSize, newAnchor.constructorParams);\n\n                                newAnchor.x = ap[0];\n                                newAnchor.y = ap[1];\n                            }\n\n                            ep.setAnchor(newAnchor, true);\n                            ep.repaint();\n                            this.repaint(ep.elementId);\n                            if (oldConnection != null) this.repaint(oldConnection.targetId);\n                        }\n                    }.bind(this));\n\n                    // when the user presses the mouse, add an Endpoint, if we are enabled.\n                    var mouseDownListener = function (e) {\n                        var evt = this.getOriginalEvent(e);\n                        // on right mouse button, abort.\n                        if (e.which === 3 || e.button === 2) return;\n\n                        // TODO store def on element.\n                        var def = this.sourceEndpointDefinitions[elid];\n\n                        // if disabled, return.\n                        if (!def.enabled) return;\n\n                        elid = this.getId(this.getElement(elInfo.el)); // elid might have changed since this method was called to configure the element.\n\n                        // if a filter was given, run it, and return if it says no.\n                        if (p.filter) {\n                            var r = jsPlumbUtil.isString(p.filter) ? selectorFilter(evt, elInfo.el, p.filter, this, p.filterExclude) : p.filter(evt, elInfo.el);\n                            if (r === false) return;\n                        }\n\n                        // if maxConnections reached\n                        var sourceCount = this.select({source: elid}).length;\n                        if (def.maxConnections >= 0 && (def.uniqueEndpoint && sourceCount >= def.maxConnections)) {\n                            if (onMaxConnections) {\n                                onMaxConnections({\n                                    element: elInfo.el,\n                                    maxConnections: maxConnections\n                                }, e);\n                            }\n                            return false;\n                        }\n\n                        // find the position on the element at which the mouse was pressed; this is where the endpoint\n                        // will be located.\n                        var elxy = jsPlumb.getPositionOnElement(evt, _del, _zoom);\n\n                        // we need to override the anchor in here, and force 'isSource', but we don't want to mess with\n                        // the params passed in, because after a connection is established we're going to reset the endpoint\n                        // to have the anchor we were given.\n                        var tempEndpointParams = {};\n                        jsPlumb.extend(tempEndpointParams, p);\n                        tempEndpointParams.isTemporarySource = true;\n                        tempEndpointParams.anchor = [ elxy[0], elxy[1] , 0, 0];\n                        tempEndpointParams.dragOptions = dragOptions;\n\n                        ep = this.addEndpoint(elid, tempEndpointParams);\n                        endpointAddedButNoDragYet = true;\n                        ep._doNotDeleteOnDetach = false; // reset.\n                        ep._deleteOnDetach = true;\n\n                        // if unique endpoint and it's already been created, push it onto the endpoint we create. at the end\n                        // of a successful connection we'll switch to that endpoint.\n                        // TODO this is the same code as the programmatic endpoints create on line 1050 ish\n                        if (def.uniqueEndpoint) {\n                            if (!def.endpoint) {\n                                def.endpoint = ep;\n                                ep._deleteOnDetach = false;\n                                ep._doNotDeleteOnDetach = true;\n                            }\n                            else\n                                ep.finalEndpoint = def.endpoint;\n                        }\n\n                        var _delTempEndpoint = function () {\n                            // this mouseup event is fired only if no dragging occurred, by jquery and yui, but for mootools\n                            // it is fired even if dragging has occurred, in which case we would blow away a perfectly\n                            // legitimate endpoint, were it not for this check.  the flag is set after adding an\n                            // endpoint and cleared in a drag listener we set in the dragOptions above.\n                            _currentInstance.off(ep.canvas, \"mouseup\", _delTempEndpoint);\n                            _currentInstance.off(elInfo.el, \"mouseup\", _delTempEndpoint);\n                            if (endpointAddedButNoDragYet) {\n                                endpointAddedButNoDragYet = false;\n                                _currentInstance.deleteEndpoint(ep);\n                            }\n                        };\n\n                        _currentInstance.on(ep.canvas, \"mouseup\", _delTempEndpoint);\n                        _currentInstance.on(elInfo.el, \"mouseup\", _delTempEndpoint);\n\n                        // and then trigger its mousedown event, which will kick off a drag, which will start dragging\n                        // a new connection from this endpoint.\n                        _currentInstance.trigger(ep.canvas, \"mousedown\", e);\n\n                        jsPlumbUtil.consume(e);\n\n                    }.bind(this);\n\n                    //this.on(_el, \"mousedown\", mouseDownListener);\n                    this.on(elInfo.el, \"mousedown\", mouseDownListener);\n                    _def.trigger = mouseDownListener;\n\n                    // if a filter was provided, set it as a dragFilter on the element,\n                    // to prevent the element drag function from kicking in when we want to\n                    // drag a new connection\n                    if (p.filter && (jsPlumbUtil.isString(p.filter) || jsPlumbUtil.isFunction(p.filter))) {\n                        //_currentInstance.setDragFilter(_el, p.filter/*, p.filterExclude*/);\n                        _currentInstance.setDragFilter(elInfo.el, p.filter/*, p.filterExclude*/);\n                    }\n\n                    var dropOptions = jsPlumb.extend({}, p.dropOptions || {});\n\n                    _makeElementDropHandler(elInfo, p, dropOptions, true, p.isTarget === true, \"_jsPlumbSource\");\n\n                }.bind(this);\n\n            var inputs = el.length && el.constructor != String ? el : [ el ];\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\n                _doOne(_info(inputs[i]));\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeSource = function (el, doNotClearArrays) {\n            var info = _info(el),\n                mouseDownListener = this.sourceEndpointDefinitions[info.id].trigger;\n\n            if (mouseDownListener)\n                _currentInstance.off(info.el, \"mousedown\", mouseDownListener);\n\n            if (!doNotClearArrays) {\n                delete this.sourceEndpointDefinitions[info.id];\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeEverySource = function () {\n            for (var i in this.sourceEndpointDefinitions)\n                _currentInstance.unmakeSource(i, true);\n\n            this.sourceEndpointDefinitions = {};\n            return this;\n        };\n\n        var _getScope = function (el, types) {\n            types = jsPlumbUtil.isArray(types) ? types : [ types ];\n            var id = _getId(el);\n            for (var i = 0; i < types.length; i++) {\n                var def = this[types[i]][id];\n                if (def) return def.def.scope || this.Defaults.Scope;\n            }\n        }.bind(this);\n\n        var _setScope = function (el, scope, types) {\n            types = jsPlumbUtil.isArray(types) ? types : [ types ];\n            var id = _getId(el);\n            for (var i = 0; i < types.length; i++) {\n                var def = this[types[i]][id];\n                if (def) {\n                    def.def.scope = scope;\n                    if (this.scopeChange != null) this.scopeChange(el, id, endpointsByElement[id], scope, types[i]);\n                }\n            }\n\n        }.bind(this);\n\n        this.getScope = function (el, scope) {\n            return _getScope(el, [ \"sourceEndpointDefinitions\", \"targetEndpointDefinitions\" ]);\n        };\n        this.getSourceScope = function (el) {\n            return _getScope(el, \"sourceEndpointDefinitions\");\n        };\n        this.getTargetScope = function (el) {\n            return _getScope(el, \"targetEndpointDefinitions\");\n        };\n        this.setScope = function (el, scope) {\n            _setScope(el, scope, [ \"sourceEndpointDefinitions\", \"targetEndpointDefinitions\" ]);\n        };\n        this.setSourceScope = function (el, scope) {\n            _setScope(el, scope, \"sourceEndpointDefinitions\");\n        };\n        this.setTargetScope = function (el, scope) {\n            _setScope(el, scope, \"targetEndpointDefinitions\");\n        };\n\n        // see api docs\n        this.unmakeEveryTarget = function () {\n            for (var i in this.targetEndpointDefinitions)\n                _currentInstance.unmakeTarget(i, true);\n\n            this.targetEndpointDefinitions = {};\n            return this;\n        };\n\n        // does the work of setting a source enabled or disabled.\n        var _setEnabled = function (type, el, state, toggle) {\n            var a = type == \"source\" ? this.sourceEndpointDefinitions : this.targetEndpointDefinitions;\n\n            if (_ju.isString(el)) a[el].enabled = toggle ? !a[el].enabled : state;\n            else if (el.length) {\n                for (var i = 0, ii = el.length; i < ii; i++) {\n                    var info = _info(el[i]);\n                    if (a[info.id])\n                        a[info.id].enabled = toggle ? !a[info.id].enabled : state;\n                }\n            }\n            // otherwise a DOM element\n            else {\n                var id = _info(el).id;\n                a[id].enabled = toggle ? !a[id].enabled : state;\n            }\n            return this;\n        }.bind(this);\n\n        var _first = function (el, fn) {\n            if (_ju.isString(el) || !el.length)\n                return fn.apply(this, [ el ]);\n            else if (el.length)\n                return fn.apply(this, [ el[0] ]);\n\n        }.bind(this);\n\n        this.toggleSourceEnabled = function (el) {\n            _setEnabled(\"source\", el, null, true);\n            return this.isSourceEnabled(el);\n        };\n\n        this.setSourceEnabled = function (el, state) {\n            return _setEnabled(\"source\", el, state);\n        };\n        this.isSource = function (el) {\n            return _first(el, function (_el) {\n                return this.sourceEndpointDefinitions[_info(_el).id] != null;\n            }.bind(this));\n        };\n        this.isSourceEnabled = function (el) {\n            return _first(el, function (_el) {\n                var sep = this.sourceEndpointDefinitions[_info(_el).id];\n                return sep && sep.enabled === true;\n            }.bind(this));\n        };\n\n        this.toggleTargetEnabled = function (el) {\n            _setEnabled(\"target\", el, null, true);\n            return this.isTargetEnabled(el);\n        };\n\n        this.isTarget = function (el) {\n            return _first(el, function (_el) {\n                return this.targetEndpointDefinitions[_info(_el).id] != null;\n            }.bind(this));\n        };\n        this.isTargetEnabled = function (el) {\n            return _first(el, function (_el) {\n                var tep = this.targetEndpointDefinitions[_info(_el).id];\n                return tep && tep.enabled === true;\n            }.bind(this));\n        };\n        this.setTargetEnabled = function (el, state) {\n            return _setEnabled(\"target\", el, state);\n        };\n\n// --------------------- end makeSource/makeTarget ---------------------------------------------- \t\t\t\t\n\n        this.ready = function (fn) {\n            _currentInstance.bind(\"ready\", fn);\n        };\n\n        var _elEach = function(el, fn) {\n            // support both lists...\n            if (typeof el == 'object' && el.length)\n                for (var i = 0, ii = el.length; i < ii; i++) {\n                    fn(el[i]);\n                }\n            else // ...and single strings or elements.\n                fn(el);\n\n            return _currentInstance;\n        };\n\n        // repaint some element's endpoints and connections\n        this.repaint = function (el, ui, timestamp) {\n            return _elEach(el, function(_el) {\n                _draw(_el, ui, timestamp);\n            });\n        };\n\n        this.revalidate = function (el, timestamp, isIdAlready) {\n            return _elEach(el, function(_el) {\n                var elId = isIdAlready ? _el : _currentInstance.getId(_el);\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp:timestamp });\n                _currentInstance.repaint(_el);\n            });\n        };\n\n        // repaint every endpoint and connection.\n        this.repaintEverything = function () {\n            // TODO this timestamp causes continuous anchors to not repaint properly.\n            // fix this. do not just take out the timestamp. it runs a lot faster with\n            // the timestamp included.\n            var timestamp = _timestamp(), elId;\n\n            for (elId in endpointsByElement) {\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp: timestamp });\n            }\n\n            for (elId in endpointsByElement) {\n                _draw(elId, null, timestamp);\n            }\n\n            return this;\n        };\n\n        this.removeAllEndpoints = function (el, recurse, affectedElements) {\n            affectedElements = affectedElements || [];\n            var _one = function (_el) {\n                var info = _info(_el),\n                    ebe = endpointsByElement[info.id],\n                    i, ii;\n\n                if (ebe) {\n                    affectedElements.push(info);\n                    for (i = 0, ii = ebe.length; i < ii; i++)\n                        _currentInstance.deleteEndpoint(ebe[i]);\n                }\n                delete endpointsByElement[info.id];\n\n                if (recurse) {\n                    if (info.el && info.el.nodeType != 3 && info.el.nodeType != 8) {\n                        for (i = 0, ii = info.el.childNodes.length; i < ii; i++) {\n                            _one(info.el.childNodes[i]);\n                        }\n                    }\n                }\n\n            };\n            _one(el);\n            return this;\n        };\n\n        var _doRemove = function(info, affectedElements) {\n            _currentInstance.removeAllEndpoints(info.id, true, affectedElements);\n            var _one = function(_info) {\n                _currentInstance.getDragManager().elementRemoved(_info.id);\n                _currentInstance.anchorManager.clearFor(_info.id);\n                _currentInstance.anchorManager.removeFloatingConnection(_info.id);\n                delete _currentInstance.floatingConnections[_info.id];\n                delete managedElements[_info.id];\n                delete offsets[_info.id];\n                if (_info.el) {\n                    _currentInstance.removeElement(_info.el);\n                    _info.el._jsPlumb = null;\n                }\n            };\n\n            // remove all affected child elements\n            for (var ae = 1; ae < affectedElements.length; ae++) {\n                _one(affectedElements[ae]);\n            }\n            // and always remove the requested one from the dom.\n            _one(info);\n        };\n\n        /**\n         * Remove the given element, including cleaning up all endpoints registered for it.\n         * This is exposed in the public API but also used internally by jsPlumb when removing the\n         * element associated with a connection drag.\n         */\n        this.remove = function (el, doNotRepaint) {\n            var info = _info(el), affectedElements = [];\n            if (info.text) {\n                info.el.parentNode.removeChild(info.el);\n            }\n            else if (info.id) {\n                _currentInstance.batch(function () {\n                    _doRemove(info, affectedElements);\n                }, doNotRepaint === false);\n            }\n            return _currentInstance;\n        };\n\n        this.empty = function (el, doNotRepaint) {\n            var affectedElements = [];\n            var _one = function(el, dontRemoveFocus) {\n                var info = _info(el);\n                if (info.text) {\n                    info.el.parentNode.removeChild(info.el);\n                }\n                else if (info.el) {\n                    while(info.el.childNodes.length > 0) {\n                        _one(info.el.childNodes[0]);\n                    }\n                    if (!dontRemoveFocus) _doRemove(info, affectedElements);\n                }\n            };\n\n            _currentInstance.batch(function() {\n                _one(el, true);\n            }, doNotRepaint === false);\n\n            return _currentInstance;\n        };\n\n        this.reset = function () {\n            _currentInstance.silently(function() {\n                _currentInstance.deleteEveryEndpoint();\n                _currentInstance.unbind();\n                this.targetEndpointDefinitions = {};\n                this.sourceEndpointDefinitions = {};\n                connections.length = 0;\n                if (this.doReset) this.doReset();\n            }.bind(this));\n        };\n\n        var _clearObject = function (obj) {\n            if (obj.canvas && obj.canvas.parentNode)\n                obj.canvas.parentNode.removeChild(obj.canvas);\n            obj.cleanup();\n            obj.destroy();\n        };\n\n        this.clear = function () {\n            _currentInstance.select().each(_clearObject);\n            _currentInstance.selectEndpoints().each(_clearObject);\n\n            endpointsByElement = {};\n            endpointsByUUID = {};\n        };\n\n        this.setDefaultScope = function (scope) {\n            DEFAULT_SCOPE = scope;\n            return _currentInstance;\n        };\n\n        // sets whether or not some element should be currently draggable.\n        this.setDraggable = _setDraggable;\n\n        // sets the id of some element, changing whatever we need to to keep track.\n        this.setId = function (el, newId, doNotSetAttribute) {\n            //\n            var id;\n\n            if (jsPlumbUtil.isString(el)) {\n                id = el;\n            }\n            else {\n                el = this.getElement(el);\n                id = this.getId(el);\n            }\n\n            var sConns = this.getConnections({source: id, scope: '*'}, true),\n                tConns = this.getConnections({target: id, scope: '*'}, true);\n\n            newId = \"\" + newId;\n\n            if (!doNotSetAttribute) {\n                el = this.getElement(id);\n                this.setAttribute(el, \"id\", newId);\n            }\n            else\n                el = this.getElement(newId);\n\n            endpointsByElement[newId] = endpointsByElement[id] || [];\n            for (var i = 0, ii = endpointsByElement[newId].length; i < ii; i++) {\n                endpointsByElement[newId][i].setElementId(newId);\n                endpointsByElement[newId][i].setReferenceElement(el);\n            }\n            delete endpointsByElement[id];\n\n            this.anchorManager.changeId(id, newId);\n            this.getDragManager().changeId(id, newId);\n            managedElements[newId] = managedElements[id];\n            delete managedElements[id];\n\n            var _conns = function (list, epIdx, type) {\n                for (var i = 0, ii = list.length; i < ii; i++) {\n                    list[i].endpoints[epIdx].setElementId(newId);\n                    list[i].endpoints[epIdx].setReferenceElement(el);\n                    list[i][type + \"Id\"] = newId;\n                    list[i][type] = el;\n                }\n            };\n            _conns(sConns, 0, \"source\");\n            _conns(tConns, 1, \"target\");\n\n            this.repaint(newId);\n        };\n\n        this.setDebugLog = function (debugLog) {\n            log = debugLog;\n        };\n\n        this.setSuspendDrawing = function (val, repaintAfterwards) {\n            var curVal = _suspendDrawing;\n            _suspendDrawing = val;\n            if (val) _suspendedAt = new Date().getTime(); else _suspendedAt = null;\n            if (repaintAfterwards) this.repaintEverything();\n            return curVal;\n        };\n\n        // returns whether or not drawing is currently suspended.\n        this.isSuspendDrawing = function () {\n            return _suspendDrawing;\n        };\n\n        // return timestamp for when drawing was suspended.\n        this.getSuspendedAt = function () {\n            return _suspendedAt;\n        };\n\n        this.batch = function (fn, doNotRepaintAfterwards) {\n            var _wasSuspended = this.isSuspendDrawing();\n            if (!_wasSuspended)\n                this.setSuspendDrawing(true);\n            try {\n                fn();\n            }\n            catch (e) {\n                _ju.log(\"Function run while suspended failed\", e);\n            }\n            if (!_wasSuspended)\n                this.setSuspendDrawing(false, !doNotRepaintAfterwards);\n        };\n\n        this.doWhileSuspended = this.batch;\n\n        /*\n        this.getOffset = function (elId) {\n            return offsets[elId];\n        };*/\n\n        this.getCachedData = _getCachedData;\n        this.timestamp = _timestamp;\n        this.setRenderMode = function (mode) {\n            if (mode !== jsPlumb.SVG && mode !== jsPlumb.VML) throw new TypeError(\"Render mode [\" + mode + \"] not supported\");\n            renderMode = this.trySetRenderMode(mode);\n            return renderMode;\n        };\n        this.getRenderMode = function () {\n            return renderMode;\n        };\n        this.show = function (el, changeEndpoints) {\n            _setVisible(el, \"block\", changeEndpoints);\n            return _currentInstance;\n        };\n\n        // TODO: update this method to return the current state.\n        this.toggleVisible = _toggleVisible;\n        this.toggleDraggable = _toggleDraggable;\n        this.addListener = this.bind;\n    };\n\n    jsPlumbUtil.extend(jsPlumbInstance, jsPlumbUtil.EventGenerator, {\n        setAttribute: function (el, a, v) {\n            this.setAttribute(el, a, v);\n        },\n        getAttribute: function (el, a) {\n            return this.getAttribute(jsPlumb.getElement(el), a);\n        },\n        convertToFullOverlaySpec: function(spec) {\n            if (jsPlumbUtil.isString(spec)) {\n                spec = [ spec, { } ];\n            }\n            spec[1].id = spec[1].id || jsPlumbUtil.uuid();\n            return spec;\n        },\n        registerConnectionType: function (id, type) {\n            this._connectionTypes[id] = jsPlumb.extend({}, type);\n            if (type.overlays) {\n                var to = {};\n                for (var i = 0; i < type.overlays.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = this.convertToFullOverlaySpec(type.overlays[i]);\n                    to[fo[1].id] = fo;\n                }\n                this._connectionTypes[id].overlays = to;\n            }\n        },\n        registerConnectionTypes: function (types) {\n            for (var i in types)\n                this.registerConnectionType(i, types[i]);\n        },\n        registerEndpointType: function (id, type) {\n            this._endpointTypes[id] = jsPlumb.extend({}, type);\n        },\n        registerEndpointTypes: function (types) {\n            for (var i in types)\n                this._endpointTypes[i] = jsPlumb.extend({}, types[i]);\n        },\n        getType: function (id, typeDescriptor) {\n            return typeDescriptor === \"connection\" ? this._connectionTypes[id] : this._endpointTypes[id];\n        },\n        setIdChanged: function (oldId, newId) {\n            this.setId(oldId, newId, true);\n        },\n        // set parent: change the parent for some node and update all the registrations we need to.\n        setParent: function (el, newParent) {\n            var _dom = this.getElement(el),\n                _id = this.getId(_dom),\n                _pdom = this.getElement(newParent),\n                _pid = this.getId(_pdom);\n\n            _dom.parentNode.removeChild(_dom);\n            _pdom.appendChild(_dom);\n            this.getDragManager().setParent(_dom, _id, _pdom, _pid);\n        },\n        extend: function (o1, o2, names) {\n            var i;\n            if (names) {\n                for (i = 0; i < names.length; i++)\n                    o1[names[i]] = o2[names[i]];\n            }\n            else\n                for (i in o2) o1[i] = o2[i];\n            return o1;\n        },\n        floatingConnections: {},\n        getFloatingAnchorIndex: function (jpc) {\n            return jpc.endpoints[0].isFloating() ? 0 : 1;\n        }\n    });\n\n// --------------------- static instance + AMD registration -------------------------------------------\t\n\n// create static instance and assign to window if window exists.\t\n    var jsPlumb = new jsPlumbInstance();\n    // register on window if defined (lets us run on server)\n    if (typeof window != 'undefined') window.jsPlumb = jsPlumb;\n    // add 'getInstance' method to static instance\n    jsPlumb.getInstance = function (_defaults) {\n        var j = new jsPlumbInstance(_defaults);\n        j.init();\n        return j;\n    };\n    jsPlumb.each = function (spec, fn) {\n        if (spec == null) return;\n        if (typeof spec === \"string\")\n            fn(jsPlumb.getElement(spec));\n        else if (spec.length != null) {\n            for (var i = 0; i < spec.length; i++)\n                fn(jsPlumb.getElement(spec[i]));\n        }\n        else\n            fn(spec); // assume it's an element.\n    };\n// maybe register static instance as an AMD module, and getInstance method too.\n    if (typeof define === \"function\") {\n        define(\"jsplumb\", [], function () {\n            return jsPlumb;\n        });\n        define(\"jsplumbinstance\", [], function () {\n            return jsPlumb.getInstance();\n        });\n    }\n    // CommonJS\n    if (typeof exports !== 'undefined') {\n        exports.jsPlumb = jsPlumb;\n    }\n\n\n// --------------------- end static instance + AMD registration -------------------------------------------\t\t\n\n}).call(this);\n\n/*\n * jsPlumb\n *\n * Title:jsPlumb 1.7.6\n *\n * Provides a way to visually connect elements on an HTML page, using SVG or VML.\n *\n * This file contains the base functionality for DOM type adapters.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    var root = this, _ju = root.jsPlumbUtil;\n\n    var svgAvailable = !!window.SVGAngle || document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\"),\n        vmlAvailable = function () {\n            if (vmlAvailable.vml === undefined) {\n                var a = document.body.appendChild(document.createElement('div'));\n                a.innerHTML = '<v:shape id=\"vml_flag1\" adj=\"1\" />';\n                var b = a.firstChild;\n                if (b != null && b.style != null) {\n                    b.style.behavior = \"url(#default#VML)\";\n                    vmlAvailable.vml = b ? typeof b.adj == \"object\" : true;\n                }\n                else\n                    vmlAvailable.vml = false;\n                a.parentNode.removeChild(a);\n            }\n            return vmlAvailable.vml;\n        },\n    // TODO: remove this once we remove all library adapter versions and have only vanilla jsplumb: this functionality\n    // comes from Mottle.\n        iev = (function () {\n            var rv = -1;\n            if (navigator.appName == 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent,\n                    re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n                if (re.exec(ua) != null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv;\n        })(),\n        isIELT9 = iev > -1 && iev < 9,\n        _genLoc = function (e, prefix) {\n            if (e == null) return [ 0, 0 ];\n            var ts = _touches(e), t = _getTouch(ts, 0);\n            return [t[prefix + \"X\"], t[prefix + \"Y\"]];\n        },\n        _pageLocation = function (e) {\n            if (e == null) return [ 0, 0 ];\n            if (isIELT9) {\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\n            }\n            else {\n                return _genLoc(e, \"page\");\n            }\n        },\n        _screenLocation = function (e) {\n            return _genLoc(e, \"screen\");\n        },\n        _clientLocation = function (e) {\n            return _genLoc(e, \"client\");\n        },\n        _getTouch = function (touches, idx) {\n            return touches.item ? touches.item(idx) : touches[idx];\n        },\n        _touches = function (e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        };\n\n    /**\n     Manages dragging for some instance of jsPlumb.\n\n     TODO instead of this being accessed directly, it should subscribe to events on the jsPlumb instance: every method\n     in here is called directly by jsPlumb. But what should happen is that we have unpublished events that this listens\n     to.  The only trick is getting one of these instantiated with every jsPlumb instance: it needs to have a hook somehow.\n     Basically the general idea is to pull ALL the drag code out (prototype method registrations plus this) into a\n     dedicated drag script), that does not necessarily need to be included.\n\n\n     */\n    var DragManager = function (_currentInstance) {\n        var _draggables = {}, _dlist = [], _delements = {}, _elementsWithEndpoints = {},\n        // elementids mapped to the draggable to which they belong.\n            _draggablesForElements = {};\n\n        /**\n         register some element as draggable.  right now the drag init stuff is done elsewhere, and it is\n         possible that will continue to be the case.\n         */\n        this.register = function (el) {\n            var id = _currentInstance.getId(el),\n                parentOffset = _currentInstance.getOffset(el);\n\n            if (!_draggables[id]) {\n                _draggables[id] = el;\n                _dlist.push(el);\n                _delements[id] = {};\n            }\n\n            // look for child elements that have endpoints and register them against this draggable.\n            var _oneLevel = function (p) {\n                if (p) {\n                    for (var i = 0; i < p.childNodes.length; i++) {\n                        if (p.childNodes[i].nodeType != 3 && p.childNodes[i].nodeType != 8) {\n                            var cEl = jsPlumb.getElement(p.childNodes[i]),\n                                cid = _currentInstance.getId(p.childNodes[i], null, true);\n                            if (cid && _elementsWithEndpoints[cid] && _elementsWithEndpoints[cid] > 0) {\n                                var cOff = _currentInstance.getOffset(cEl);\n                                _delements[id][cid] = {\n                                    id: cid,\n                                    offset: {\n                                        left: cOff.left - parentOffset.left,\n                                        top: cOff.top - parentOffset.top\n                                    }\n                                };\n                                _draggablesForElements[cid] = id;\n                            }\n                            _oneLevel(p.childNodes[i]);\n                        }\n                    }\n                }\n            };\n\n            _oneLevel(el);\n        };\n\n        // refresh the offsets for child elements of this element.\n        this.updateOffsets = function (elId) {\n            if (elId != null) {\n                var domEl = jsPlumb.getElement(elId),\n                    id = _currentInstance.getId(domEl),\n                    children = _delements[id],\n                    parentOffset = _currentInstance.getOffset(domEl);\n\n                if (children) {\n                    for (var i in children) {\n                        if (children.hasOwnProperty(i)) {\n                            var cel = jsPlumb.getElement(i),\n                                cOff = _currentInstance.getOffset(cel);\n\n                            _delements[id][i] = {\n                                id: i,\n                                offset: {\n                                    left: cOff.left - parentOffset.left,\n                                    top: cOff.top - parentOffset.top\n                                }\n                            };\n                            _draggablesForElements[i] = id;\n                        }\n                    }\n                }\n            }\n        };\n\n        /**\n         notification that an endpoint was added to the given el.  we go up from that el's parent\n         node, looking for a parent that has been registered as a draggable. if we find one, we add this\n         el to that parent's list of elements to update on drag (if it is not there already)\n         */\n        this.endpointAdded = function (el, id) {\n\n            id = id || _currentInstance.getId(el);\n\n            var b = document.body,\n                p = el.parentNode;\n\n            _elementsWithEndpoints[id] = _elementsWithEndpoints[id] ? _elementsWithEndpoints[id] + 1 : 1;\n\n            while (p != null && p != b) {\n                var pid = _currentInstance.getId(p, null, true);\n                if (pid && _draggables[pid]) {\n                    var pLoc = _currentInstance.getOffset(p);\n\n                    if (_delements[pid][id] == null) {\n                        var cLoc = _currentInstance.getOffset(el);\n                        _delements[pid][id] = {\n                            id: id,\n                            offset: {\n                                left: cLoc.left - pLoc.left,\n                                top: cLoc.top - pLoc.top\n                            }\n                        };\n                        _draggablesForElements[id] = pid;\n                    }\n                    break;\n                }\n                p = p.parentNode;\n            }\n        };\n\n        this.endpointDeleted = function (endpoint) {\n            if (_elementsWithEndpoints[endpoint.elementId]) {\n                _elementsWithEndpoints[endpoint.elementId]--;\n                if (_elementsWithEndpoints[endpoint.elementId] <= 0) {\n                    for (var i in _delements) {\n                        if (_delements.hasOwnProperty(i) && _delements[i]) {\n                            delete _delements[i][endpoint.elementId];\n                            delete _draggablesForElements[endpoint.elementId];\n                        }\n                    }\n                }\n            }\n        };\n\n        this.changeId = function (oldId, newId) {\n            _delements[newId] = _delements[oldId];\n            _delements[oldId] = {};\n            _draggablesForElements[newId] = _draggablesForElements[oldId];\n            _draggablesForElements[oldId] = null;\n        };\n\n        this.getElementsForDraggable = function (id) {\n            return _delements[id];\n        };\n\n        this.elementRemoved = function (elementId) {\n            var elId = _draggablesForElements[elementId];\n            if (elId) {\n                delete _delements[elId][elementId];\n                delete _draggablesForElements[elementId];\n            }\n        };\n\n        this.reset = function () {\n            _draggables = {};\n            _dlist = [];\n            _delements = {};\n            _elementsWithEndpoints = {};\n        };\n\n        //\n        // notification drag ended. We check automatically if need to update some\n        // ancestor's offsets.\n        //\n        this.dragEnded = function (el) {\n            var id = _currentInstance.getId(el),\n                ancestor = _draggablesForElements[id];\n\n            if (ancestor) this.updateOffsets(ancestor);\n        };\n\n        this.setParent = function (el, elId, p, pId) {\n            var current = _draggablesForElements[elId];\n            if (current) {\n                if (!_delements[pId])\n                    _delements[pId] = {};\n                _delements[pId][elId] = _delements[current][elId];\n                delete _delements[current][elId];\n                var pLoc = _currentInstance.getOffset(p),\n                    cLoc = _currentInstance.getOffset(el);\n                _delements[pId][elId].offset = {\n                    left: cLoc.left - pLoc.left,\n                    top: cLoc.top - pLoc.top\n                };\n                _draggablesForElements[elId] = pId;\n            }\n        };\n\n        this.getDragAncestor = function (el) {\n            var de = jsPlumb.getElement(el),\n                id = _currentInstance.getId(de),\n                aid = _draggablesForElements[id];\n\n            if (aid)\n                return jsPlumb.getElement(aid);\n            else\n                return null;\n        };\n\n    };\n\n    var trim = function (str) {\n            return str == null ? null : (str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''));\n        },\n        _setClassName = function (el, cn) {\n            cn = trim(cn);\n            if (typeof el.className.baseVal != \"undefined\")  // SVG\n                el.className.baseVal = cn;\n            else\n                el.className = cn;\n        },\n        _getClassName = function (el) {\n            return (typeof el.className.baseVal == \"undefined\") ? el.className : el.className.baseVal;\n        },\n        _classManip = function (el, classesToAdd, classesToRemove) {\n            classesToAdd = classesToAdd == null ? [] : jsPlumbUtil.isArray(classesToAdd) ? classesToAdd : classesToAdd.split(/\\s+/);\n            classesToRemove = classesToRemove == null ? [] : jsPlumbUtil.isArray(classesToRemove) ? classesToRemove : classesToRemove.split(/\\s+/);\n\n            var className = _getClassName(el),\n                curClasses = className.split(/\\s+/);\n\n            var _oneSet = function (add, classes) {\n                for (var i = 0; i < classes.length; i++) {\n                    if (add) {\n                        if (jsPlumbUtil.indexOf(curClasses, classes[i]) == -1)\n                            curClasses.push(classes[i]);\n                    }\n                    else {\n                        var idx = jsPlumbUtil.indexOf(curClasses, classes[i]);\n                        if (idx != -1)\n                            curClasses.splice(idx, 1);\n                    }\n                }\n            };\n\n            _oneSet(true, classesToAdd);\n            _oneSet(false, classesToRemove);\n\n            _setClassName(el, curClasses.join(\" \"));\n        };\n\n    jsPlumb.extend(jsPlumbInstance.prototype, {\n\n        headless: false,\n\n        pageLocation: _pageLocation,\n        screenLocation: _screenLocation,\n        clientLocation: _clientLocation,\n\n        getDragManager:function() {\n            if (this.dragManager == null)\n                this.dragManager = new DragManager(this);\n\n            return this.dragManager;\n        },\n\n        recalculateOffsets:function(elId) {\n            this.getDragManager().updateOffsets(elId);\n        },\n\n        createElement:function(tag, style, clazz, atts) {\n            return this.createElementNS(null, tag, style, clazz, atts);\n        },\n\n        createElementNS:function(ns, tag, style, clazz, atts) {\n            var e = ns == null ? document.createElement(tag) : document.createElementNS(ns, tag);\n            var i;\n            style = style || {};\n            for (i in style)\n                e.style[i] = style[i];\n\n            if (clazz)\n                e.className = clazz;\n\n            atts = atts || {};\n            for (i in atts)\n                e.setAttribute(i, \"\" + atts[i]);\n\n            return e;\n        },\n\n        getAttribute: function (el, attName) {\n            return el.getAttribute != null ? el.getAttribute(attName) : null;\n        },\n\n        setAttribute: function (el, a, v) {\n            if (el.setAttribute != null) el.setAttribute(a, v);\n        },\n\n        setAttributes: function (el, atts) {\n            for (var i in atts)\n                if (atts.hasOwnProperty(i)) el.setAttribute(i, atts[i]);\n        },\n\n        appendToRoot: function (node) {\n            document.body.appendChild(node);\n        },\n        getRenderModes: function () {\n            return [ \"svg\", \"vml\" ];\n        },\n        isRenderModeAvailable: function (m) {\n            return {\n                \"svg\": svgAvailable,\n                \"vml\": vmlAvailable()\n            }[m];\n        },\n        trySetRenderMode: function (mode) {\n            var renderMode;\n\n            if (mode) {\n                mode = mode.toLowerCase();\n\n                var svgAvailable = this.isRenderModeAvailable(\"svg\"),\n                    vmlAvailable = this.isRenderModeAvailable(\"vml\");\n\n                // now test we actually have the capability to do this.\n                if (mode === \"svg\") {\n                    if (svgAvailable) renderMode = \"svg\";\n                    else if (vmlAvailable) renderMode = \"vml\";\n                }\n                else if (vmlAvailable) renderMode = \"vml\";\n            }\n\n            return renderMode;\n        },\n        addClass: function (el, clazz) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, clazz);\n            });\n        },\n        hasClass: function (el, clazz) {\n            el = jsPlumb.getElement(el);\n            if (el.classList) return el.classList.contains(clazz);\n            else {\n                return _getClassName(el).indexOf(clazz) != -1;\n            }\n        },\n        removeClass: function (el, clazz) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, null, clazz);\n            });\n        },\n        updateClasses: function (el, toAdd, toRemove) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, toAdd, toRemove);\n            });\n        },\n        setClass: function (el, clazz) {\n            jsPlumb.each(el, function (e) {\n                _setClassName(e, clazz);\n            });\n        },\n        setPosition: function (el, p) {\n            el.style.left = p.left + \"px\";\n            el.style.top = p.top + \"px\";\n        },\n        getPosition: function (el) {\n            var _one = function (prop) {\n                var v = el.style[prop];\n                return v ? v.substring(0, v.length - 2) : 0;\n            };\n            return {\n                left: _one(\"left\"),\n                top: _one(\"top\")\n            };\n        },\n        getStyle:function(el, prop) {\n            if (typeof window.getComputedStyle !== 'undefined') {\n                return getComputedStyle(el, null).getPropertyValue(prop);\n            } else {\n                return el.currentStyle[prop];\n            }\n        },\n\n        getSelector: function (ctx, spec) {\n            var sel = null;\n            if (arguments.length == 1) {\n                sel = ctx.nodeType != null ? ctx : document.querySelectorAll(ctx);\n            }\n            else\n                sel = ctx.querySelectorAll(spec);\n\n            return sel;\n        },\n        getOffset:function(el, relativeToRoot) {\n            el = jsPlumb.getElement(el);\n            var container = this.getContainer();\n            var out = {\n                    left: el.offsetLeft,\n                    top: el.offsetTop\n                },\n                op = (relativeToRoot  || (container != null && el.offsetParent != container)) ?  el.offsetParent : null,\n                _maybeAdjustScroll = function(offsetParent) {\n                    if (offsetParent != null && offsetParent !== document.body && (offsetParent.scrollTop > 0 || offsetParent.scrollLeft > 0)) {\n                        var p = this.getStyle(el, \"position\");\n                        //if (p !== \"fixed\") {\n                            out.left -= offsetParent.scrollLeft;\n                            out.top -= offsetParent.scrollTop;\n                        //}\n                    }\n                }.bind(this);\n\n            while (op != null) {\n                out.left += op.offsetLeft;\n                out.top += op.offsetTop;\n                //if (!relativeToRoot) _maybeAdjustScroll(op);\n                _maybeAdjustScroll(op);\n                op = relativeToRoot ? op.offsetParent :\n                        op.offsetParent == container ? null : op.offsetParent;\n            }\n\n            // if container is scrolled and the element (or its offset parent) is not absolute or fixed, adjust accordingly.\n            if (container != null && !relativeToRoot && (container.scrollTop > 0 || container.scrollLeft > 0)) {\n                var pp = el.offsetParent != null ? this.getStyle(el.offsetParent, \"position\") : \"static\",\n                    p = this.getStyle(el, \"position\");\n                if (p !== \"absolute\" && p !== \"fixed\" && pp !== \"absolute\" && pp != \"fixed\") {\n                    out.left -= container.scrollLeft;\n                    out.top -= container.scrollTop;\n                }\n            }\n            return out;\n        },\n        //\n        // return x+y proportion of the given element's size corresponding to the location of the given event.\n        //\n        getPositionOnElement: function (evt, el, zoom) {\n            var box = typeof el.getBoundingClientRect !== \"undefined\" ? el.getBoundingClientRect() : { left: 0, top: 0, width: 0, height: 0 },\n                body = document.body,\n                docElem = document.documentElement,\n                scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\n                scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\n                clientTop = docElem.clientTop || body.clientTop || 0,\n                clientLeft = docElem.clientLeft || body.clientLeft || 0,\n                pst = 0,\n                psl = 0,\n                top = box.top + scrollTop - clientTop + (pst * zoom),\n                left = box.left + scrollLeft - clientLeft + (psl * zoom),\n                cl = jsPlumb.pageLocation(evt),\n                w = box.width || (el.offsetWidth * zoom),\n                h = box.height || (el.offsetHeight * zoom),\n                x = (cl[0] - left) / w,\n                y = (cl[1] - top) / h;\n\n            return [ x, y ];\n        },\n\n        /**\n         * Gets the absolute position of some element as read from the left/top properties in its style.\n         * @method getAbsolutePosition\n         * @param {Element} el The element to retrieve the absolute coordinates from. **Note** this is a DOM element, not a selector from the underlying library.\n         * @return {Number[]} [left, top] pixel values.\n         */\n        getAbsolutePosition: function (el) {\n            var _one = function (s) {\n                var ss = el.style[s];\n                if (ss) return parseFloat(ss.substring(0, ss.length - 2));\n            };\n            return [ _one(\"left\"), _one(\"top\") ];\n        },\n\n        /**\n         * Sets the absolute position of some element by setting the left/top properties in its style.\n         * @method setAbsolutePosition\n         * @param {Element} el The element to set the absolute coordinates on. **Note** this is a DOM element, not a selector from the underlying library.\n         * @param {Number[]} xy x and y coordinates\n         * @param {Number[]} [animateFrom] Optional previous xy to animate from.\n         * @param {Object} [animateOptions] Options for the animation.\n         */\n        setAbsolutePosition: function (el, xy, animateFrom, animateOptions) {\n            if (animateFrom) {\n                this.animate(el, {\n                    left: \"+=\" + (xy[0] - animateFrom[0]),\n                    top: \"+=\" + (xy[1] - animateFrom[1])\n                }, animateOptions);\n            }\n            else {\n                el.style.left = xy[0] + \"px\";\n                el.style.top = xy[1] + \"px\";\n            }\n        },\n        /**\n         * gets the size for the element, in an array : [ width, height ].\n         */\n        getSize: function (el) {\n            return [ el.offsetWidth, el.offsetHeight ];\n        },\n        getWidth: function (el) {\n            return el.offsetWidth;\n        },\n        getHeight: function (el) {\n            return el.offsetHeight;\n        }\n\n    });\n}).call(this);\n\n/*\n * jsPlumb\n *\n * Title:jsPlumb 1.7.6\n *\n * Provides a way to visually connect elements on an HTML page, using SVG or VML.\n *\n * This file contains code for components that support overlays.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    // ------------------------------ BEGIN OverlayCapablejsPlumbUIComponent --------------------------------------------\n\n    var _internalLabelOverlayId = \"__label\",\n    // this is a shortcut helper method to let people add a label as\n    // overlay.\n        _makeLabelOverlay = function (component, params) {\n\n            var _params = {\n                    cssClass: params.cssClass,\n                    labelStyle: component.labelStyle,\n                    id: _internalLabelOverlayId,\n                    component: component,\n                    _jsPlumb: component._jsPlumb.instance  // TODO not necessary, since the instance can be accessed through the component.\n                },\n                mergedParams = jsPlumb.extend(_params, params);\n\n            return new _jp.Overlays[component._jsPlumb.instance.getRenderMode()].Label(mergedParams);\n        },\n        _processOverlay = function (component, o) {\n            var _newOverlay = null;\n            if (_ju.isArray(o)) {\t// this is for the shorthand [\"Arrow\", { width:50 }] syntax\n                // there's also a three arg version:\n                // [\"Arrow\", { width:50 }, {location:0.7}]\n                // which merges the 3rd arg into the 2nd.\n                var type = o[0],\n                // make a copy of the object so as not to mess up anyone else's reference...\n                    p = _jp.extend({component: component, _jsPlumb: component._jsPlumb.instance}, o[1]);\n                if (o.length == 3) _jp.extend(p, o[2]);\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][type](p);\n            } else if (o.constructor == String) {\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][o]({component: component, _jsPlumb: component._jsPlumb.instance});\n            } else {\n                _newOverlay = o;\n            }\n\n            _newOverlay.id = _newOverlay.id || _ju.uuid();\n            component.cacheTypeItem(\"overlay\", _newOverlay, _newOverlay.id);\n            //component._jsPlumb.overlays.push(_newOverlay);\n            component._jsPlumb.overlays[_newOverlay.id] = _newOverlay;\n\n            return _newOverlay;\n        };\n\n    _jp.OverlayCapableJsPlumbUIComponent = function (params) {\n\n        jsPlumbUIComponent.apply(this, arguments);\n        this._jsPlumb.overlays = {};\n        this._jsPlumb.overlayPositions = {};\n\n        if (params.label) {\n            this.getDefaultType().overlays[_internalLabelOverlayId] = [\"Label\", {\n                label: params.label,\n                location: params.labelLocation || this.defaultLabelLocation || 0.5,\n                labelStyle: params.labelStyle || this._jsPlumb.instance.Defaults.LabelStyle,\n                id:_internalLabelOverlayId\n            }];\n        }\n\n        this.setListenerComponent = function (c) {\n            if (this._jsPlumb) {\n                for (var i in this._jsPlumb.overlays)\n                    this._jsPlumb.overlays[i].setListenerComponent(c);\n            }\n        };\n    };\n\n    _jp.OverlayCapableJsPlumbUIComponent.applyType = function (component, t) {\n        if (t.overlays) {\n            // loop through the ones in the type. if already present on the component,\n            // dont remove or re-add.\n            var keep = {}, i;\n\n            for (i in t.overlays) {\n\n                var existing = component._jsPlumb.overlays[t.overlays[i][1].id];\n                if (existing) {\n                    // maybe update from data, if there were parameterised values for instance.\n                    existing.updateFrom(t.overlays[i][1]);\n                    keep[t.overlays[i][1].id] = true;\n                }\n                else {\n                    var c = component.getCachedTypeItem(\"overlay\", t.overlays[i][1].id);\n                    if (c != null) {\n                        c.reattach(component._jsPlumb.instance);\n                        // maybe update from data, if there were parameterised values for instance.\n                        c.updateFrom(t.overlays[i][1]);\n                        component._jsPlumb.overlays[c.id] = c;\n                    }\n                    else {\n                        c = component.addOverlay(t.overlays[i], true);\n                    }\n                    keep[c.id] = true;\n                }\n            }\n\n            // now loop through the full overlays and remove those that we dont want to keep\n            for (i in component._jsPlumb.overlays) {\n                if (keep[component._jsPlumb.overlays[i].id] == null)\n                    component.removeOverlay(component._jsPlumb.overlays[i].id);\n            }\n        }\n    };\n\n    _ju.extend(_jp.OverlayCapableJsPlumbUIComponent, jsPlumbUIComponent, {\n\n        setHover: function (hover, ignoreAttachedElements) {\n            if (this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                for (var i in this._jsPlumb.overlays) {\n                    this._jsPlumb.overlays[i][hover ? \"addClass\" : \"removeClass\"](this._jsPlumb.instance.hoverClass);\n                }\n            }\n        },\n        addOverlay: function (overlay, doNotRepaint) {\n            var o = _processOverlay(this, overlay);\n            if (!doNotRepaint) this.repaint();\n            return o;\n        },\n        getOverlay: function (id) {\n            return this._jsPlumb.overlays[id];\n        },\n        getOverlays: function () {\n            return this._jsPlumb.overlays;\n        },\n        hideOverlay: function (id) {\n            var o = this.getOverlay(id);\n            if (o) o.hide();\n        },\n        hideOverlays: function () {\n            for (var i in this._jsPlumb.overlays)\n                this._jsPlumb.overlays[i].hide();\n        },\n        showOverlay: function (id) {\n            var o = this.getOverlay(id);\n            if (o) o.show();\n        },\n        showOverlays: function () {\n            for (var i in this._jsPlumb.overlays)\n                this._jsPlumb.overlays[i].show();\n        },\n        removeAllOverlays: function (doNotRepaint) {\n            for (var i in this._jsPlumb.overlays) {\n                if (this._jsPlumb.overlays[i].cleanup) this._jsPlumb.overlays[i].cleanup();\n            }\n\n            this._jsPlumb.overlays = {};\n            this._jsPlumb.overlayPositions = null;\n            if (!doNotRepaint)\n                this.repaint();\n        },\n        removeOverlay: function (overlayId) {\n            var o = this._jsPlumb.overlays[overlayId];\n            if (o) {\n                if (o.cleanup) o.cleanup();\n                delete this._jsPlumb.overlays[overlayId];\n                if (this._jsPlumb.overlayPositions)\n                    delete this._jsPlumb.overlayPositions[overlayId];\n            }\n        },\n        removeOverlays: function () {\n            for (var i = 0, j = arguments.length; i < j; i++)\n                this.removeOverlay(arguments[i]);\n        },\n        moveParent: function (newParent) {\n            if (this.bgCanvas) {\n                this.bgCanvas.parentNode.removeChild(this.bgCanvas);\n                newParent.appendChild(this.bgCanvas);\n            }\n\n            this.canvas.parentNode.removeChild(this.canvas);\n            newParent.appendChild(this.canvas);\n\n            for (var i in this._jsPlumb.overlays) {\n                if (this._jsPlumb.overlays[i].isAppendedAtTopLevel) {\n                    var el = this._jsPlumb.overlays[i].getElement();\n                    el.parentNode.removeChild(el);\n                    newParent.appendChild(el);\n                }\n            }\n        },\n        getLabel: function () {\n            var lo = this.getOverlay(_internalLabelOverlayId);\n            return lo != null ? lo.getLabel() : null;\n        },\n        getLabelOverlay: function () {\n            return this.getOverlay(_internalLabelOverlayId);\n        },\n        setLabel: function (l) {\n            var lo = this.getOverlay(_internalLabelOverlayId);\n            if (!lo) {\n                var params = l.constructor == String || l.constructor == Function ? { label: l } : l;\n                lo = _makeLabelOverlay(this, params);\n                this._jsPlumb.overlays[_internalLabelOverlayId] = lo;\n            }\n            else {\n                if (l.constructor == String || l.constructor == Function) lo.setLabel(l);\n                else {\n                    if (l.label) lo.setLabel(l.label);\n                    if (l.location) lo.setLocation(l.location);\n                }\n            }\n\n            if (!this._jsPlumb.instance.isSuspendDrawing())\n                this.repaint();\n        },\n        cleanup: function (force) {\n            for (var i in this._jsPlumb.overlays) {\n                this._jsPlumb.overlays[i].cleanup(force);\n                this._jsPlumb.overlays[i].destroy(force);\n            }\n            if (force) {\n                this._jsPlumb.overlays = {};\n                this._jsPlumb.overlayPositions = null;\n            }\n        },\n        setVisible: function (v) {\n            this[v ? \"showOverlays\" : \"hideOverlays\"]();\n        },\n        setAbsoluteOverlayPosition: function (overlay, xy) {\n            this._jsPlumb.overlayPositions[overlay.id] = xy;\n        },\n        getAbsoluteOverlayPosition: function (overlay) {\n            return this._jsPlumb.overlayPositions ? this._jsPlumb.overlayPositions[overlay.id] : null;\n        }\n    });\n\n// ------------------------------ END OverlayCapablejsPlumbUIComponent --------------------------------------------\n\n}).call(this);\n\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the code for Endpoints.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    // create the drag handler for a connection\n    var _makeConnectionDragHandler = function (placeholder, _jsPlumb) {\n        var stopped = false;\n        return {\n            drag: function () {\n                if (stopped) {\n                    stopped = false;\n                    return true;\n                }\n                var _ui = _jp.getUIPosition(arguments, _jsPlumb.getZoom());\n\n                if (placeholder.element) {\n                    jsPlumb.setPosition(placeholder.element, _ui);\n                    _jsPlumb.repaint(placeholder.element, _ui);\n                }\n            },\n            stopDrag: function () {\n                stopped = true;\n            }\n        };\n    };\n\n    // creates a placeholder div for dragging purposes, adds it, and pre-computes its offset.\n    var _makeDraggablePlaceholder = function (placeholder, _jsPlumb) {\n        var n = jsPlumb.createElement(\"div\", { position : \"absolute\" });\n        _jsPlumb.appendElement(n);\n        var id = _jsPlumb.getId(n);\n        _jsPlumb.manage(id, n);\n        // create and assign an id, and initialize the offset.\n        placeholder.id = id;\n        placeholder.element = n;\n    };\n\n    // create a floating endpoint (for drag connections)\n    var _makeFloatingEndpoint = function (paintStyle, referenceAnchor, endpoint, referenceCanvas, sourceElement, _jsPlumb, _newEndpoint, scope) {\n        var floatingAnchor = new _jp.FloatingAnchor({ reference: referenceAnchor, referenceCanvas: referenceCanvas, jsPlumbInstance: _jsPlumb });\n        //setting the scope here should not be the way to fix that mootools issue.  it should be fixed by not\n        // adding the floating endpoint as a droppable.  that makes more sense anyway!\n        return _newEndpoint({ paintStyle: paintStyle, endpoint: endpoint, anchor: floatingAnchor, source: sourceElement, scope: scope });\n    };\n\n    var typeParameters = [ \"connectorStyle\", \"connectorHoverStyle\", \"connectorOverlays\",\n        \"connector\", \"connectionType\", \"connectorClass\", \"connectorHoverClass\" ];\n\n    // a helper function that tries to find a connection to the given element, and returns it if so. if elementWithPrecedence is null,\n    // or no connection to it is found, we return the first connection in our list.\n    var findConnectionToUseForDynamicAnchor = function (ep, elementWithPrecedence) {\n        var idx = 0;\n        if (elementWithPrecedence != null) {\n            for (var i = 0; i < ep.connections.length; i++) {\n                if (ep.connections[i].sourceId == elementWithPrecedence || ep.connections[i].targetId == elementWithPrecedence) {\n                    idx = i;\n                    break;\n                }\n            }\n        }\n\n        return ep.connections[idx];\n    };\n\n    var findConnectionIndex = function (conn, ep) {\n        return _ju.findWithFunction(ep.connections, function (c) {\n            return c.id == conn.id;\n        });\n    };\n\n    _jp.Endpoint = function (params) {\n        var _jsPlumb = params._jsPlumb,\n            _newConnection = params.newConnection,\n            _newEndpoint = params.newEndpoint;\n\n        this.idPrefix = \"_jsplumb_e_\";\n        this.defaultLabelLocation = [ 0.5, 0.5 ];\n        this.defaultOverlayKeys = [\"Overlays\", \"EndpointOverlays\"];\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\n\n// TYPE\n\n        this.appendToDefaultType({\n            connectionType:params.connectionType,\n            maxConnections: params.maxConnections == null ? this._jsPlumb.instance.Defaults.MaxConnections : params.maxConnections, // maximum number of connections this endpoint can be the source of.,\n            paintStyle: params.endpointStyle || params.paintStyle || params.style || this._jsPlumb.instance.Defaults.EndpointStyle || _jp.Defaults.EndpointStyle,\n            hoverPaintStyle: params.endpointHoverStyle || params.hoverPaintStyle || this._jsPlumb.instance.Defaults.EndpointHoverStyle || _jp.Defaults.EndpointHoverStyle,\n            connectorStyle: params.connectorStyle,\n            connectorHoverStyle: params.connectorHoverStyle,\n            connectorClass: params.connectorClass,\n            connectorHoverClass: params.connectorHoverClass,\n            connectorOverlays: params.connectorOverlays,\n            connector: params.connector,\n            connectorTooltip: params.connectorTooltip\n        });\n\n// END TYPE\n\n        this._jsPlumb.enabled = !(params.enabled === false);\n        this._jsPlumb.visible = true;\n        this.element = _jp.getElement(params.source);\n        this._jsPlumb.uuid = params.uuid;\n        this._jsPlumb.floatingEndpoint = null;\n        var inPlaceCopy = null;\n        if (this._jsPlumb.uuid) params.endpointsByUUID[this._jsPlumb.uuid] = this;\n        this.elementId = params.elementId;\n\n        this._jsPlumb.connectionCost = params.connectionCost;\n        this._jsPlumb.connectionsDirected = params.connectionsDirected;\n        this._jsPlumb.currentAnchorClass = \"\";\n        this._jsPlumb.events = {};\n\n        var _updateAnchorClass = function () {\n            // stash old, get new\n            var oldAnchorClass = _jsPlumb.endpointAnchorClassPrefix + \"_\" + this._jsPlumb.currentAnchorClass;\n            this._jsPlumb.currentAnchorClass = this.anchor.getCssClass();\n            var anchorClass = _jsPlumb.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \"_\" + this._jsPlumb.currentAnchorClass : \"\");\n\n            this.removeClass(oldAnchorClass);\n            this.addClass(anchorClass);\n            // add and remove at the same time to reduce the number of reflows.\n            jsPlumb.updateClasses(this.element, anchorClass, oldAnchorClass);\n        }.bind(this);\n\n        this.prepareAnchor = function(anchorParams) {\n            var a = this._jsPlumb.instance.makeAnchor(anchorParams, this.elementId, _jsPlumb);\n            a.bind(\"anchorChanged\", function (currentAnchor) {\n                this.fire(\"anchorChanged\", {endpoint: this, anchor: currentAnchor});\n                _updateAnchorClass();\n            }.bind(this));\n            return a;\n        };\n\n        this.setPreparedAnchor = function(anchor, doNotRepaint) {\n            this._jsPlumb.instance.continuousAnchorFactory.clear(this.elementId);\n            this.anchor = anchor;\n            _updateAnchorClass();\n\n            if (!doNotRepaint)\n                this._jsPlumb.instance.repaint(this.elementId);\n\n            return this;\n        };\n\n        this.setAnchor = function (anchorParams, doNotRepaint) {\n            var a = this.prepareAnchor(anchorParams);\n            this.setPreparedAnchor(a, doNotRepaint);\n            return this;\n        };\n\n        var internalHover = function (state) {\n            if (this.connections.length > 0) {\n                for (var i = 0; i < this.connections.length; i++)\n                    this.connections[i].setHover(state, false);\n            }\n            else\n                this.setHover(state);\n        }.bind(this);\n\n        this.bind(\"mouseover\", function () {\n            internalHover(true);\n        });\n        this.bind(\"mouseout\", function () {\n            internalHover(false);\n        });\n\n        // ANCHOR MANAGER\n        if (!params._transient) // in place copies, for example, are transient.  they will never need to be retrieved during a paint cycle, because they dont move, and then they are deleted.\n            this._jsPlumb.instance.anchorManager.add(this, this.elementId);\n\n        this.prepareEndpoint = function(ep, typeId) {\n            var _e = function (t, p) {\n                var rm = _jsPlumb.getRenderMode();\n                if (_jp.Endpoints[rm][t]) return new _jp.Endpoints[rm][t](p);\n                if (!_jsPlumb.Defaults.DoNotThrowErrors)\n                    throw { msg: \"jsPlumb: unknown endpoint type '\" + t + \"'\" };\n            };\n\n            var endpointArgs = {\n                _jsPlumb: this._jsPlumb.instance,\n                cssClass: params.cssClass,\n                container: params.container,\n                tooltip: params.tooltip,\n                connectorTooltip: params.connectorTooltip,\n                endpoint: this\n            };\n\n            var endpoint;\n\n            if (_ju.isString(ep))\n                endpoint = _e(ep, endpointArgs);\n            else if (_ju.isArray(ep)) {\n                endpointArgs = _ju.merge(ep[1], endpointArgs);\n                endpoint = _e(ep[0], endpointArgs);\n            }\n            else {\n                endpoint = ep.clone();\n            }\n\n            // assign a clone function using a copy of endpointArgs. this is used when a drag starts: the endpoint that was dragged is cloned,\n            // and the clone is left in its place while the original one goes off on a magical journey.\n            // the copy is to get around a closure problem, in which endpointArgs ends up getting shared by\n            // the whole world.\n            //var argsForClone = jsPlumb.extend({}, endpointArgs);\n            endpoint.clone = function () {\n                // TODO this, and the code above, can be refactored to be more dry.\n                if (_ju.isString(ep))\n                    return _e(ep, endpointArgs);\n                else if (_ju.isArray(ep)) {\n                    endpointArgs = _ju.merge(ep[1], endpointArgs);\n                    return _e(ep[0], endpointArgs);\n                }\n            }.bind(this);\n\n            endpoint.typeId = typeId;\n            return endpoint;\n        };\n\n        this.setEndpoint = function(ep, doNotRepaint) {\n            var _ep = this.prepareEndpoint(ep);\n            this.setPreparedEndpoint(_ep, true);\n        };\n\n        this.setPreparedEndpoint = function (ep, doNotRepaint) {\n            if (this.endpoint != null) {\n                this.endpoint.cleanup();\n                this.endpoint.destroy();\n            }\n            this.endpoint = ep;\n            this.type = this.endpoint.type;\n            this.canvas = this.endpoint.canvas;\n        };\n\n        _jp.extend(this, params, typeParameters);\n\n        this.isSource = params.isSource || false;\n        this.isTemporarySource = params.isTemporarySource || false;\n        this.isTarget = params.isTarget || false;\n\n        this.connections = params.connections || [];\n        this.connectorPointerEvents = params[\"connector-pointer-events\"];\n\n        this.scope = params.scope || _jsPlumb.getDefaultScope();\n        this.timestamp = null;\n        this.reattachConnections = params.reattach || _jsPlumb.Defaults.ReattachConnections;\n        this.connectionsDetachable = _jsPlumb.Defaults.ConnectionsDetachable;\n        if (params.connectionsDetachable === false || params.detachable === false)\n            this.connectionsDetachable = false;\n        this.dragAllowedWhenFull = params.dragAllowedWhenFull !== false;\n\n        if (params.onMaxConnections)\n            this.bind(\"maxConnections\", params.onMaxConnections);\n\n        //\n        // add a connection. not part of public API.\n        //\n        this.addConnection = function (connection) {\n            this.connections.push(connection);\n            this[(this.connections.length > 0 ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointConnectedClass);\n            this[(this.isFull() ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointFullClass);\n        };\n\n        this.detachFromConnection = function (connection, idx, doNotCleanup) {\n            idx = idx == null ? findConnectionIndex(connection, this) : idx;\n            if (idx >= 0) {\n                this.connections.splice(idx, 1);\n                this[(this.connections.length > 0 ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointConnectedClass);\n                this[(this.isFull() ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointFullClass);\n            }\n\n            if (!doNotCleanup && this._deleteOnDetach && this.connections.length === 0) {\n                _jsPlumb.deleteObject({\n                    endpoint: this,\n                    fireEvent: false,\n                    deleteAttachedObjects: false\n                });\n            }\n        };\n\n        this.detach = function (connection, ignoreTarget, forceDetach, fireEvent, originalEvent, endpointBeingDeleted, connectionIndex) {\n\n            var idx = connectionIndex == null ? findConnectionIndex(connection, this) : connectionIndex,\n                actuallyDetached = false;\n            fireEvent = (fireEvent !== false);\n\n            if (idx >= 0) {\n\n                if (forceDetach || connection._forceDetach || (connection.isDetachable() && connection.isDetachAllowed(connection) && this.isDetachAllowed(connection) && _jsPlumb.checkCondition(\"beforeDetach\", connection, endpointBeingDeleted) )) {\n\n                    _jsPlumb.deleteObject({\n                        connection: connection,\n                        fireEvent: (!ignoreTarget && fireEvent),\n                        originalEvent: originalEvent,\n                        deleteAttachedObjects: false/**/\n                    });\n                    actuallyDetached = true;\n                }\n            }\n            return actuallyDetached;\n        };\n\n        this.detachAll = function (fireEvent, forceDetach) {\n            var unaffectedConns = [];\n            while (this.connections.length > 0) {\n                // TODO this could pass the index in to the detach method to save some time (index will always be zero in this while loop)\n                var actuallyDetached = this.detach(this.connections[0], false, forceDetach === true, fireEvent !== false, null, this, 0);\n                if (!actuallyDetached) {\n                    unaffectedConns.push(this.connections[0]);\n                    this.connections.splice(0, 1);\n                }\n            }\n            this.connections = unaffectedConns;\n            return this;\n        };\n        this.detachFrom = function (targetEndpoint, fireEvent, originalEvent) {\n            var c = [];\n            for (var i = 0; i < this.connections.length; i++) {\n                if (this.connections[i].endpoints[1] == targetEndpoint || this.connections[i].endpoints[0] == targetEndpoint) {\n                    c.push(this.connections[i]);\n                }\n            }\n            for (var j = 0; j < c.length; j++) {\n                this.detach(c[j], false, true, fireEvent, originalEvent);\n            }\n            return this;\n        };\n\n        this.getElement = function () {\n            return this.element;\n        };\n\n        this.setElement = function (el) {\n            var parentId = this._jsPlumb.instance.getId(el),\n                curId = this.elementId;\n            // remove the endpoint from the list for the current endpoint's element\n            _ju.removeWithFunction(params.endpointsByElement[this.elementId], function (e) {\n                return e.id == this.id;\n            }.bind(this));\n            this.element = jsPlumb.getElement(el);\n            this.elementId = _jsPlumb.getId(this.element);\n            _jsPlumb.anchorManager.rehomeEndpoint(this, curId, this.element);\n            _jsPlumb.dragManager.endpointAdded(this.element);\n            _ju.addToList(params.endpointsByElement, parentId, this);\n            return this;\n        };\n\n        /**\n         * private but must be exposed.\n         */\n        this.makeInPlaceCopy = function () {\n            var loc = this.anchor.getCurrentLocation({element: this}),\n                o = this.anchor.getOrientation(this),\n                acc = this.anchor.getCssClass(),\n                inPlaceAnchor = {\n                    bind: function () {\n                    },\n                    compute: function () {\n                        return [ loc[0], loc[1] ];\n                    },\n                    getCurrentLocation: function () {\n                        return [ loc[0], loc[1] ];\n                    },\n                    getOrientation: function () {\n                        return o;\n                    },\n                    getCssClass: function () {\n                        return acc;\n                    }\n                };\n\n            return _newEndpoint({\n                dropOptions: params.dropOptions,\n                anchor: inPlaceAnchor,\n                source: this.element,\n                paintStyle: this.getPaintStyle(),\n                endpoint: params.hideOnDrag ? \"Blank\" : this.endpoint,\n                _transient: true,\n                scope: this.scope,\n                reference:this\n            });\n        };\n\n        /**\n         * returns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.\n         */\n        this.connectorSelector = function () {\n            var candidate = this.connections[0];\n            // SP target source refactor\n            if (/*this.isTarget && */candidate) return candidate;\n            else {\n                return (this.connections.length < this._jsPlumb.maxConnections) || this._jsPlumb.maxConnections == -1 ? null : candidate;\n            }\n        };\n\n        this.setStyle = this.setPaintStyle;\n\n        this.paint = function (params) {\n            params = params || {};\n            var timestamp = params.timestamp, recalc = !(params.recalc === false);\n            if (!timestamp || this.timestamp !== timestamp) {\n\n                var info = _jsPlumb.updateOffset({ elId: this.elementId, timestamp: timestamp });\n\n                var xy = params.offset ? params.offset.o : info.o;\n                if (xy != null) {\n                    var ap = params.anchorPoint, connectorPaintStyle = params.connectorPaintStyle;\n                    if (ap == null) {\n                        var wh = params.dimensions || info.s,\n                            anchorParams = { xy: [ xy.left, xy.top ], wh: wh, element: this, timestamp: timestamp };\n                        if (recalc && this.anchor.isDynamic && this.connections.length > 0) {\n                            var c = findConnectionToUseForDynamicAnchor(this, params.elementWithPrecedence),\n                                oIdx = c.endpoints[0] == this ? 1 : 0,\n                                oId = oIdx === 0 ? c.sourceId : c.targetId,\n                                oInfo = _jsPlumb.getCachedData(oId),\n                                oOffset = oInfo.o, oWH = oInfo.s;\n                            anchorParams.txy = [ oOffset.left, oOffset.top ];\n                            anchorParams.twh = oWH;\n                            anchorParams.tElement = c.endpoints[oIdx];\n                        }\n                        ap = this.anchor.compute(anchorParams);\n                    }\n\n                    this.endpoint.compute(ap, this.anchor.getOrientation(this), this._jsPlumb.paintStyleInUse, connectorPaintStyle || this.paintStyleInUse);\n                    this.endpoint.paint(this._jsPlumb.paintStyleInUse, this.anchor);\n                    this.timestamp = timestamp;\n\n                    // paint overlays\n                    for (var i in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\n                            var o = this._jsPlumb.overlays[i];\n                            if (o.isVisible()) {\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.endpoint, this._jsPlumb.paintStyleInUse);\n                                o.paint(this._jsPlumb.overlayPlacements[i]);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        this.getTypeDescriptor = function () {\n            return \"endpoint\";\n        };\n        this.isVisible = function () {\n            return this._jsPlumb.visible;\n        };\n\n        this.repaint = this.paint;\n\n        var draggingInitialised = false;\n        this.initDraggable = function (definitionId) {\n\n            // is this a connection source? we make it draggable and have the\n            // drag listener maintain a connection with a floating endpoint.\n            if (!draggingInitialised && _jp.isDragSupported(this.element)) {\n                var placeholderInfo = { id: null, element: null },\n                    jpc = null,\n                    existingJpc = false,\n                    existingJpcParams = null,\n                    _dragHandler = _makeConnectionDragHandler(placeholderInfo, _jsPlumb),\n                    dragOptions = params.dragOptions || {},\n                    defaultOpts = {},\n                    startEvent = _jp.dragEvents.start,\n                    stopEvent = _jp.dragEvents.stop,\n                    dragEvent = _jp.dragEvents.drag;\n\n                var start = function () {\n                    // drag might have started on an endpoint that is not actually a source, but which has\n                    // one or more connections.\n                    jpc = this.connectorSelector();\n                    var _continue = true;\n                    // if not enabled, return\n                    if (!this.isEnabled()) _continue = false;\n                    // if no connection and we're not a source - or temporarily a source, as is the case with makeSource - return.\n                    if (jpc == null && !this.isSource && !this.isTemporarySource) _continue = false;\n                    // otherwise if we're full and not allowed to drag, also return false.\n                    if (this.isSource && this.isFull() && !(jpc != null && this.dragAllowedWhenFull)) _continue = false;\n                    // if the connection was setup as not detachable or one of its endpoints\n                    // was setup as connectionsDetachable = false, or Defaults.ConnectionsDetachable\n                    // is set to false...\n                    if (jpc != null && !jpc.isDetachable(this)) _continue = false;\n\n                    var beforeDrag = _jsPlumb.checkCondition(jpc == null ? \"beforeDrag\" : \"beforeStartDetach\", {\n                        endpoint:this,\n                        source:this.element,\n                        sourceId:this.elementId,\n                        connection:jpc\n                    });\n                    if (beforeDrag === false) _continue = false;\n                    // else we might have been given some data. we'll pass it in to a new connection as 'data'.\n\n                    if (_continue === false) {\n                        // this is for mootools and yui. returning false from this causes jquery to stop drag.\n                        // the events are wrapped in both mootools and yui anyway, but i don't think returning\n                        // false from the start callback would stop a drag.\n                        if (_jsPlumb.stopDrag) _jsPlumb.stopDrag(this.canvas);\n                        _dragHandler.stopDrag();\n                        return false;\n                    }\n\n                    // clear hover for all connections for this endpoint before continuing.\n                    for (var i = 0; i < this.connections.length; i++)\n                        this.connections[i].setHover(false);\n\n                    this.addClass(\"endpointDrag\");\n                    _jsPlumb.setConnectionBeingDragged(true);\n\n                    // if we're not full but there was a connection, make it null. we'll create a new one.\n                    if (jpc && !this.isFull() && this.isSource) jpc = null;\n\n                    _jsPlumb.updateOffset({ elId: this.elementId });\n                    inPlaceCopy = this.makeInPlaceCopy();\n                    inPlaceCopy.addClass(_jsPlumb.draggingClass);\n                    inPlaceCopy.referenceEndpoint = this;\n                    inPlaceCopy.paint();\n\n                    _makeDraggablePlaceholder(placeholderInfo, _jsPlumb);\n\n                    // set the offset of this div to be where 'inPlaceCopy' is, to start with.\n                    // TODO merge this code with the code in both Anchor and FloatingAnchor, because it\n                    // does the same stuff.\n                    var ipco = this._jsPlumb.instance.getOffset(inPlaceCopy.canvas),\n                        canvasElement = this.canvas;\n\n                    jsPlumb.setPosition(placeholderInfo.element, ipco);\n\n                    // when using makeSource and a parent, we first draw the source anchor on the source element, then\n                    // move it to the parent.  note that this happens after drawing the placeholder for the\n                    // first time.\n                    if (this.parentAnchor) this.anchor = _jsPlumb.makeAnchor(this.parentAnchor, this.elementId, _jsPlumb);\n\n                    // store the id of the dragging div and the source element. the drop function will pick these up.                   \n                    _jsPlumb.setAttributes(this.canvas, {\n                        \"dragId\": placeholderInfo.id,\n                        \"elId\": this.elementId\n                    });\n\n                    this._jsPlumb.floatingEndpoint = _makeFloatingEndpoint(this.getPaintStyle(), this.anchor, this.endpoint, this.canvas, placeholderInfo.element, _jsPlumb, _newEndpoint, this.scope);\n                    // TODO we should not know about DOM here. make the library adapter do this (or the \n                    // dom adapter)\n                    this.canvas.style.visibility = \"hidden\";\n\n                    if (jpc == null) {\n                        this.anchor.locked = true;\n                        this.setHover(false, false);\n                        // create a connection. one end is this endpoint, the other is a floating endpoint.                    \n                        jpc = _newConnection({\n                            sourceEndpoint: this,\n                            targetEndpoint: this._jsPlumb.floatingEndpoint,\n                            source: this.endpointWillMoveTo || this.element,  // for makeSource with parent option.  ensure source element is represented correctly.\n                            target: placeholderInfo.element,\n                            anchors: [ this.anchor, this._jsPlumb.floatingEndpoint.anchor ],\n                            paintStyle: params.connectorStyle, // this can be null. Connection will use the default.\n                            hoverPaintStyle: params.connectorHoverStyle,\n                            connector: params.connector, // this can also be null. Connection will use the default.\n                            overlays: params.connectorOverlays,\n                            type: this.connectionType,\n                            cssClass: this.connectorClass,\n                            hoverClass: this.connectorHoverClass,\n                            data:beforeDrag\n                        });\n                        //jpc.pending = true; // mark this connection as not having been established.\n                        jpc.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\n                        // fire an event that informs that a connection is being dragged\n                        _jsPlumb.fire(\"connectionDrag\", jpc);\n\n                    } else {\n                        existingJpc = true;\n                        jpc.setHover(false);\n                        // new anchor idx\n                        var anchorIdx = jpc.endpoints[0].id == this.id ? 0 : 1;\n                        this.detachFromConnection(jpc, null, true);                         // detach from the connection while dragging is occurring. but dont cleanup automatically.\n\n                        // store the original scope (issue 57)\n                        var dragScope = _jsPlumb.getDragScope(canvasElement);\n                        _jsPlumb.setAttribute(this.canvas, \"originalScope\", dragScope);\n                        // now we want to get this endpoint's DROP scope, and set it for now: we can only be dropped on drop zones\n                        // that have our drop scope (issue 57).\n                        var dropScope = _jsPlumb.getDropScope(canvasElement);\n                        _jsPlumb.setDragScope(canvasElement, dropScope);\n                        //*/\n\n                        // fire an event that informs that a connection is being dragged. we do this before\n                        // replacing the original target with the floating element info.\n                        _jsPlumb.fire(\"connectionDrag\", jpc);\n\n                        // now we replace ourselves with the temporary div we created above:\n                        if (anchorIdx === 0) {\n                            existingJpcParams = [ jpc.source, jpc.sourceId, canvasElement, dragScope ];\n                            jpc.source = placeholderInfo.element;\n                            jpc.sourceId = placeholderInfo.id;\n                        } else {\n                            existingJpcParams = [ jpc.target, jpc.targetId, canvasElement, dragScope ];\n                            jpc.target = placeholderInfo.element;\n                            jpc.targetId = placeholderInfo.id;\n                        }\n\n                        // lock the other endpoint; if it is dynamic it will not move while the drag is occurring.\n                        jpc.endpoints[anchorIdx === 0 ? 1 : 0].anchor.locked = true;\n                        // store the original endpoint and assign the new floating endpoint for the drag.\n                        jpc.suspendedEndpoint = jpc.endpoints[anchorIdx];\n\n                        // PROVIDE THE SUSPENDED ELEMENT, BE IT A SOURCE OR TARGET (ISSUE 39)\n                        jpc.suspendedElement = jpc.endpoints[anchorIdx].getElement();\n                        jpc.suspendedElementId = jpc.endpoints[anchorIdx].elementId;\n                        jpc.suspendedElementType = anchorIdx === 0 ? \"source\" : \"target\";\n\n                        jpc.suspendedEndpoint.setHover(false);\n                        this._jsPlumb.floatingEndpoint.referenceEndpoint = jpc.suspendedEndpoint;\n                        jpc.endpoints[anchorIdx] = this._jsPlumb.floatingEndpoint;\n\n                        jpc.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\n                    }\n\n                    // register it and register connection on it.\n                    _jsPlumb.floatingConnections[placeholderInfo.id] = jpc;\n                    _jsPlumb.anchorManager.addFloatingConnection(placeholderInfo.id, jpc);\n                    // only register for the target endpoint; we will not be dragging the source at any time\n                    // before this connection is either discarded or made into a permanent connection.\n                    _ju.addToList(params.endpointsByElement, placeholderInfo.id, this._jsPlumb.floatingEndpoint);\n                    // tell jsplumb about it\n                    _jsPlumb.currentlyDragging = true;\n                }.bind(this);\n\n                var stop = function () {\n                    _jsPlumb.setConnectionBeingDragged(false);\n                    // if no endpoints, jpc already cleaned up.\n                    if (jpc && jpc.endpoints != null) {\n                        // get the actual drop event (decode from library args to stop function)\n                        var originalEvent = _jsPlumb.getDropEvent(arguments);\n                        // unlock the other endpoint (if it is dynamic, it would have been locked at drag start)\n                        var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\n                        jpc.endpoints[idx === 0 ? 1 : 0].anchor.locked = false;\n                        // TODO: Dont want to know about css classes inside jsplumb, ideally.\n                        jpc.removeClass(_jsPlumb.draggingClass);\n\n                        // if we have the floating endpoint then the connection has not been dropped\n                        // on another endpoint.  If it is a new connection we throw it away. If it is an\n                        // existing connection we check to see if we should reattach it, throwing it away\n                        // if not.\n                        if (this._jsPlumb && (jpc.deleteConnectionNow || jpc.endpoints[idx] == this._jsPlumb.floatingEndpoint)) {\n                            // 6a. if the connection was an existing one...\n                            if (existingJpc && jpc.suspendedEndpoint) {\n                                // fix for issue35, thanks Sylvain Gizard: when firing the detach event make sure the\n                                // floating endpoint has been replaced.\n                                if (idx === 0) {\n                                    jpc.source = existingJpcParams[0];\n                                    jpc.sourceId = existingJpcParams[1];\n                                } else {\n                                    jpc.target = existingJpcParams[0];\n                                    jpc.targetId = existingJpcParams[1];\n                                }\n\n                                var fe = this._jsPlumb.floatingEndpoint; // store for later removal.\n                                // restore the original scope (issue 57)\n                                _jsPlumb.setDragScope(existingJpcParams[2], existingJpcParams[3]);\n                                jpc.endpoints[idx] = jpc.suspendedEndpoint;\n                                // IF the connection should be reattached, or the other endpoint refuses detach, then\n                                // reset the connection to its original state\n                                if (jpc.isReattach() || jpc._forceReattach || jpc._forceDetach || !jpc.endpoints[idx === 0 ? 1 : 0].detach(jpc, false, false, true, originalEvent, true)) {\n                                    jpc.setHover(false);\n                                    jpc._forceDetach = null;\n                                    jpc._forceReattach = null;\n                                    this._jsPlumb.floatingEndpoint.detachFromConnection(jpc);\n                                    jpc.suspendedEndpoint.addConnection(jpc);\n                                    _jsPlumb.repaint(existingJpcParams[1]);\n                                }\n                                else\n                                    _jsPlumb.deleteObject({endpoint: fe});\n                            }\n                        }\n\n                        // remove the element associated with the floating endpoint\n                        // (and its associated floating endpoint and visual artefacts)\n                        _jsPlumb.remove(placeholderInfo.element, false);\n                        // remove the inplace copy\n                        _jsPlumb.deleteObject({endpoint: inPlaceCopy});\n\n                        // makeTargets sets this flag, to tell us we have been replaced and should delete ourself.\n                        if (this.deleteAfterDragStop) {\n                            _jsPlumb.deleteObject({endpoint: this});\n                        }\n                        else {\n                            if (this._jsPlumb) {\n                                this._jsPlumb.floatingEndpoint = null;\n                                // repaint this endpoint.\n                                // make our canvas visible (TODO: hand off to library; we should not know about DOM)\n                                this.canvas.style.visibility = \"visible\";\n                                // unlock our anchor\n                                this.anchor.locked = false;\n                                this.paint({recalc: false});\n                            }\n                        }\n\n                        // although the connection is no longer valid, there are use cases where this is useful.\n                        _jsPlumb.fire(\"connectionDragStop\", jpc, originalEvent);\n                        // tell jsplumb that dragging is finished.\n                        _jsPlumb.currentlyDragging = false;\n                        jpc = null;\n                    }\n\n                }.bind(this);\n\n                dragOptions = _jp.extend(defaultOpts, dragOptions);\n                dragOptions.scope = this.scope || dragOptions.scope;\n                dragOptions[startEvent] = _ju.wrap(dragOptions[startEvent], start, false);\n                // extracted drag handler function so can be used by makeSource\n                dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], _dragHandler.drag);\n                dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], stop);\n                dragOptions.multipleDrop = false;\n                dragOptions.definitionId = definitionId;\n\n                dragOptions.canDrag = function () {\n                    return this.isSource || this.isTemporarySource || /*(this.isTarget && */this.connections.length > 0/*)*/;\n                }.bind(this);\n\n                _jsPlumb.initDraggable(this.canvas, dragOptions, \"internal\");\n\n                this.canvas._jsPlumbRelatedElement = this.element;\n\n                draggingInitialised = true;\n            }\n        };\n\n        var ep = params.endpoint || this._jsPlumb.instance.Defaults.Endpoint || _jp.Defaults.Endpoint;\n        this.setEndpoint(ep, true);\n        var anchorParamsToUse = params.anchor ? params.anchor : params.anchors ? params.anchors : (_jsPlumb.Defaults.Anchor || \"Top\");\n        this.setAnchor(anchorParamsToUse, true);\n\n        // finally, set type if it was provided\n        var type = [ \"default\", (params.type || \"\")].join(\" \");\n        this.addType(type, params.data, true);\n        this.canvas = this.endpoint.canvas;\n        this.canvas._jsPlumb = this;\n\n        // if marked as source or target at create time, init the dragging.\n        if (this.isSource || this.isTarget || this.isTemporarySource)\n            this.initDraggable(this.isTarget ? \"_jsPlumbTarget\" : \"_jsPlumbSource\");\n\n        // pulled this out into a function so we can reuse it for the inPlaceCopy canvas; you can now drop detached connections\n        // back onto the endpoint you detached it from.\n        var _initDropTarget = function (canvas, forceInit, isTransient, endpoint, referenceEndpoint) {\n\n            if ((this.isTarget || forceInit) && _jp.isDropSupported(this.element)) {\n                var dropOptions = params.dropOptions || _jsPlumb.Defaults.DropOptions || _jp.Defaults.DropOptions;\n                dropOptions = _jp.extend({}, dropOptions);\n                dropOptions.scope = dropOptions.scope || this.scope;\n                var dropEvent = _jp.dragEvents.drop,\n                    overEvent = _jp.dragEvents.over,\n                    outEvent = _jp.dragEvents.out,\n                    _ep = this,\n                    drop = _jsPlumb.EndpointDropHandler({\n                        getEndpoint: function () {\n                            return _ep;\n                        },\n                        jsPlumb: _jsPlumb,\n                        enabled: function () {\n                            return endpoint != null ? endpoint.isEnabled() : true;\n                        },\n                        isFull: function () {\n                            return endpoint.isFull();\n                        },\n                        element: this.element,\n                        elementId: this.elementId,\n                        isSource: this.isSource,\n                        isTarget: this.isTarget,\n                        addClass: function (clazz) {\n                            _ep.addClass(clazz);\n                        },\n                        removeClass: function (clazz) {\n                            _ep.removeClass(clazz);\n                        },\n                        isDropAllowed: function () {\n                            return _ep.isDropAllowed.apply(_ep, arguments);\n                        },\n                        reference:referenceEndpoint,\n                        isRedrop:function(jpc, dhParams) {\n                            return jpc.suspendedEndpoint && dhParams.reference && (jpc.suspendedEndpoint.id === dhParams.reference.id);\n                        }\n                    });\n\n                dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], drop, true);\n                dropOptions[overEvent] = _ju.wrap(dropOptions[overEvent], function () {\n                    var draggable = _jp.getDragObject(arguments),\n                        id = _jsPlumb.getAttribute(_jp.getElement(draggable), \"dragId\"),\n                        _jpc = _jsPlumb.floatingConnections[id];\n\n                    if (_jpc != null) {\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\n                        // here we should fire the 'over' event if we are a target and this is a new connection,\n                        // or we are the same as the floating endpoint.\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id == _jpc.suspendedEndpoint.id);\n                        if (_cont) {\n                            var bb = _jsPlumb.checkCondition(\"checkDropAllowed\", {\n                                sourceEndpoint: _jpc.endpoints[idx],\n                                targetEndpoint: this,\n                                connection: _jpc\n                            });\n                            this[(bb ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointDropAllowedClass);\n                            this[(bb ? \"remove\" : \"add\") + \"Class\"](_jsPlumb.endpointDropForbiddenClass);\n                            _jpc.endpoints[idx].anchor.over(this.anchor, this);\n                        }\n                    }\n                }.bind(this));\n\n                dropOptions[outEvent] = _ju.wrap(dropOptions[outEvent], function () {\n                    var draggable = _jp.getDragObject(arguments),\n                        id = draggable == null ? null : _jsPlumb.getAttribute(_jp.getElement(draggable), \"dragId\"),\n                        _jpc = id ? _jsPlumb.floatingConnections[id] : null;\n\n                    if (_jpc != null) {\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id == _jpc.suspendedEndpoint.id);\n                        if (_cont) {\n                            this.removeClass(_jsPlumb.endpointDropAllowedClass);\n                            this.removeClass(_jsPlumb.endpointDropForbiddenClass);\n                            _jpc.endpoints[idx].anchor.out();\n                        }\n                    }\n                }.bind(this));\n\n                _jsPlumb.initDroppable(canvas, dropOptions, \"internal\", isTransient);\n            }\n        }.bind(this);\n\n        // Initialise the endpoint's canvas as a drop target. The drop handler will take care of the logic of whether\n        // something can actually be dropped.\n        if (!this.anchor.isFloating)\n            _initDropTarget(this.canvas, true, !(params._transient || this.anchor.isFloating), this, params.reference);\n\n\n        return this;\n    };\n\n    _ju.extend(_jp.Endpoint, _jp.OverlayCapableJsPlumbUIComponent, {\n\n        setVisible: function (v, doNotChangeConnections, doNotNotifyOtherEndpoint) {\n            this._jsPlumb.visible = v;\n            if (this.canvas) this.canvas.style.display = v ? \"block\" : \"none\";\n            this[v ? \"showOverlays\" : \"hideOverlays\"]();\n            if (!doNotChangeConnections) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].setVisible(v);\n                    if (!doNotNotifyOtherEndpoint) {\n                        var oIdx = this === this.connections[i].endpoints[0] ? 1 : 0;\n                        // only change the other endpoint if this is its only connection.\n                        if (this.connections[i].endpoints[oIdx].connections.length == 1) this.connections[i].endpoints[oIdx].setVisible(v, true, true);\n                    }\n                }\n            }\n        },\n        getAttachedElements: function () {\n            return this.connections;\n        },\n        applyType: function (t, doNotRepaint) {\n            this.setPaintStyle(t.endpointStyle || t.paintStyle, doNotRepaint);\n            this.setHoverPaintStyle(t.endpointHoverStyle || t.hoverPaintStyle, doNotRepaint);\n            if (t.maxConnections != null) this._jsPlumb.maxConnections = t.maxConnections;\n            if (t.scope) this.scope = t.scope;\n            _jp.extend(this, t, typeParameters);\n            if (t.cssClass != null && this.canvas) this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\n        },\n        isEnabled: function () {\n            return this._jsPlumb.enabled;\n        },\n        setEnabled: function (e) {\n            this._jsPlumb.enabled = e;\n        },\n        cleanup: function () {\n            var anchorClass = this._jsPlumb.instance.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \"_\" + this._jsPlumb.currentAnchorClass : \"\");\n            jsPlumb.removeClass(this.element, anchorClass);\n            this.anchor = null;\n            this.endpoint.cleanup();\n            this.endpoint.destroy();\n            this.endpoint = null;\n            // drag/drop\n            this._jsPlumb.instance.destroyDraggable(this.canvas, \"internal\");\n            this._jsPlumb.instance.destroyDroppable(this.canvas, \"internal\");\n        },\n        setHover: function (h) {\n            if (this.endpoint && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged())\n                this.endpoint.setHover(h);\n        },\n        isFull: function () {\n            return this._jsPlumb.maxConnections === 0 ? true : !(this.isFloating() || this._jsPlumb.maxConnections < 0 || this.connections.length < this._jsPlumb.maxConnections);\n        },\n        /**\n         * private but needs to be exposed.\n         */\n        isFloating: function () {\n            return this.anchor != null && this.anchor.isFloating;\n        },\n        isConnectedTo: function (endpoint) {\n            var found = false;\n            if (endpoint) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    if (this.connections[i].endpoints[1] == endpoint || this.connections[i].endpoints[0] == endpoint) {\n                        found = true;\n                        break;\n                    }\n                }\n            }\n            return found;\n        },\n        getConnectionCost: function () {\n            return this._jsPlumb.connectionCost;\n        },\n        setConnectionCost: function (c) {\n            this._jsPlumb.connectionCost = c;\n        },\n        areConnectionsDirected: function () {\n            return this._jsPlumb.connectionsDirected;\n        },\n        setConnectionsDirected: function (b) {\n            this._jsPlumb.connectionsDirected = b;\n        },\n        setElementId: function (_elId) {\n            this.elementId = _elId;\n            this.anchor.elementId = _elId;\n        },\n        setReferenceElement: function (_el) {\n            this.element = _jp.getElement(_el);\n        },\n        setDragAllowedWhenFull: function (allowed) {\n            this.dragAllowedWhenFull = allowed;\n        },\n        equals: function (endpoint) {\n            return this.anchor.equals(endpoint.anchor);\n        },\n        getUuid: function () {\n            return this._jsPlumb.uuid;\n        },\n        computeAnchor: function (params) {\n            return this.anchor.compute(params);\n        }\n    });\n\n    root.jsPlumbInstance.prototype.EndpointDropHandler = function (dhParams) {\n        return function (e) {\n\n            var _jsPlumb = dhParams.jsPlumb;\n\n            // remove the classes that are added dynamically. drop is neither forbidden nor allowed now that\n            // the drop is finishing.\n            // makeTarget:probably keep these. 'this' would refer to the DOM element though\n            dhParams.removeClass(_jsPlumb.endpointDropAllowedClass);\n            dhParams.removeClass(_jsPlumb.endpointDropForbiddenClass);\n\n            var originalEvent = _jsPlumb.getDropEvent(arguments),\n                draggable = _jsPlumb.getDragObject(arguments),\n                id = _jsPlumb.getAttribute(draggable, \"dragId\"),\n                elId = _jsPlumb.getAttribute(draggable, \"elId\"),\n                scope = _jsPlumb.getAttribute(draggable, \"originalScope\"),\n                jpc = _jsPlumb.floatingConnections[id];\n\n            // if no active connection, bail.\n            if (jpc == null) return;\n\n            // if drag type matches drop type and this is not a new connection (meaning it has a suspendedEndpoint)\n            // then bail\n            if (e.drag && e.drop) {\n                if (e.drag.params.definitionId === e.drop.params.definitionId && jpc.suspendedEndpoint == null) return;\n            }\n\n            // if suspended endpoint has been cleaned up, bail.\n            if (jpc.suspendedEndpoint && jpc.suspendedEndpoint._jsPlumb == null) return;\n\n            // get the drop endpoint. for a normal connection this is just the one that would replace the currently\n            // floating endpoint. for a makeTarget this is a new endpoint that is created on drop.\n            var _ep = dhParams.getEndpoint(jpc);\n\n            // if this is a drop back where the connection came from, mark it force reattach and\n            // return; the stop handler will reattach. without firing an event.\n            //var redrop\n            //var redrop = jpc.suspendedEndpoint && dhParams.reference && (jpc.suspendedEndpoint.id === dhParams.reference.id);\n            //var redrop = jpc.suspendedEndpoint && (jpc.suspendedEndpoint.elementId === dhParams.elementId);\n            //if (redrop) {\n            if (dhParams.isRedrop(jpc, dhParams)) {\n                jpc._forceReattach = true;\n                jpc.setHover(false);\n                if (dhParams.maybeCleanup) dhParams.maybeCleanup(_ep);\n                return;\n            }\n\n            // ensure we dont bother trying to drop sources on non-source eps, and same for target.\n            var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\n            if (idx === 0 && !dhParams.isSource) return;\n            if (idx === 1 && !dhParams.isTarget) return;\n\n            if (dhParams.onDrop) dhParams.onDrop(jpc);\n\n            // restore the original scope if necessary (issue 57)\n            if (scope) _jsPlumb.setDragScope(draggable, scope);\n\n            // if the target of the drop is full, fire an event (we abort below)\n            // makeTarget: keep.\n            if (dhParams.isFull(e)) {\n                _ep.fire(\"maxConnections\", {\n                    endpoint: this,\n                    connection: jpc,\n                    maxConnections: _ep._jsPlumb.maxConnections\n                }, originalEvent);\n            }\n\n            //\n            // if endpoint enabled, not full, and matches the index of the floating endpoint...\n            if (!dhParams.isFull() && !(idx === 0 && !dhParams.isSource) && !(idx == 1 && !dhParams.isTarget) && dhParams.enabled()) {\n                var _doContinue = true;\n\n                // these have to be set before testing for beforeDrop.\n                if (idx === 0) {\n                    jpc.source = dhParams.element;\n                    jpc.sourceId = dhParams.elementId;\n                } else {\n                    jpc.target = dhParams.element;\n                    jpc.targetId = dhParams.elementId;\n                }\n\n                // if this is an existing connection and detach is not allowed we won't continue. The connection's\n                // endpoints have been reinstated; everything is back to how it was.\n                if (jpc.suspendedEndpoint && jpc.suspendedEndpoint._jsPlumb && jpc.suspendedEndpoint.id != _ep.id) {\n\n                    if (!jpc.isDetachAllowed(jpc) || !jpc.endpoints[idx].isDetachAllowed(jpc) || !jpc.suspendedEndpoint.isDetachAllowed(jpc) || !_jsPlumb.checkCondition(\"beforeDetach\", jpc))\n                        _doContinue = false;\n                }\n\n// ------------ wrap the execution path in a function so we can support asynchronous beforeDrop\n\n                var continueFunction = function (optionalData) {\n                    // remove this jpc from the current endpoint, which is a floating endpoint that we will\n                    // subsequently discard.\n                    jpc.endpoints[idx].detachFromConnection(jpc);\n\n                    // if there's a suspended endpoint, detach it from the connection.\n                    if (jpc.suspendedEndpoint) jpc.suspendedEndpoint.detachFromConnection(jpc);\n                    // TODO why?\n\n                    jpc.endpoints[idx] = _ep;\n                    _ep.addConnection(jpc);\n\n                    // copy our parameters in to the connection:\n                    var params = _ep.getParameters();\n                    for (var aParam in params)\n                        jpc.setParameter(aParam, params[aParam]);\n\n                    if (!jpc.suspendedEndpoint) {\n                        // if not an existing connection and\n                        if (params.draggable)\n                            _jsPlumb.initDraggable(this.element, dragOptions, \"internal\", _jsPlumb);\n                    }\n                    else {\n                        var suspendedElementId = jpc.suspendedEndpoint.elementId;\n                        _jsPlumb.fireMoveEvent({\n                            index: idx,\n                            originalSourceId: idx === 0 ? suspendedElementId : jpc.sourceId,\n                            newSourceId: idx === 0 ? _ep.elementId : jpc.sourceId,\n                            originalTargetId: idx == 1 ? suspendedElementId : jpc.targetId,\n                            newTargetId: idx == 1 ? _ep.elementId : jpc.targetId,\n                            originalSourceEndpoint: idx === 0 ? jpc.suspendedEndpoint : jpc.endpoints[0],\n                            newSourceEndpoint: idx === 0 ? _ep : jpc.endpoints[0],\n                            originalTargetEndpoint: idx == 1 ? jpc.suspendedEndpoint : jpc.endpoints[1],\n                            newTargetEndpoint: idx == 1 ? _ep : jpc.endpoints[1],\n                            connection: jpc\n                        }, originalEvent);\n                    }\n\n                    if (idx == 1)\n                        _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.suspendedElementId, jpc.targetId, jpc);\n                    else\n                        _jsPlumb.anchorManager.sourceChanged(jpc.suspendedEndpoint.elementId, jpc.sourceId, jpc);\n\n                    // when makeSource has uniqueEndpoint:true, we want to create connections with new endpoints\n                    // that are subsequently deleted. So makeSource sets `finalEndpoint`, which is the Endpoint to\n                    // which the connection should be attached. The `detachFromConnection` call below results in the\n                    // temporary endpoint being cleaned up.\n                    if (jpc.endpoints[0].finalEndpoint) {\n                        var _toDelete = jpc.endpoints[0];\n                        _toDelete.detachFromConnection(jpc);\n                        jpc.endpoints[0] = jpc.endpoints[0].finalEndpoint;\n                        jpc.endpoints[0].addConnection(jpc);\n                    }\n\n                    // if optionalData was given, merge it onto the connection's data.\n                    if (jsPlumbUtil.isObject(optionalData)) {\n                        jpc.mergeData(optionalData);\n                    }\n\n                    // finalise will inform the anchor manager and also add to\n                    // connectionsByScope if necessary.\n                    // TODO if this is not set to true, then dragging a connection's target to a new\n                    // target causes the connection to be forgotten. however if it IS set to true, then\n                    // the opposite happens: dragging by source causes the connection to get forgotten\n                    // about and then if you delete it jsplumb breaks.\n                    _jsPlumb.finaliseConnection(jpc, null, originalEvent/*, true*/);\n                    jpc.setHover(false);\n\n                }.bind(this);\n\n                var dontContinueFunction = function () {\n                    // otherwise just put it back on the endpoint it was on before the drag.\n                    if (jpc.suspendedEndpoint) {\n                        jpc.endpoints[idx] = jpc.suspendedEndpoint;\n                        jpc.setHover(false);\n                        jpc._forceDetach = true;\n                        if (idx === 0) {\n                            jpc.source = jpc.suspendedEndpoint.element;\n                            jpc.sourceId = jpc.suspendedEndpoint.elementId;\n                        } else {\n                            jpc.target = jpc.suspendedEndpoint.element;\n                            jpc.targetId = jpc.suspendedEndpoint.elementId;\n                        }\n                        jpc.suspendedEndpoint.addConnection(jpc);\n\n                        _jsPlumb.repaint(jpc.sourceId);\n                        jpc._forceDetach = false;\n                    }\n                };\n\n// --------------------------------------\n                // now check beforeDrop.  this will be available only on Endpoints that are setup to\n                // have a beforeDrop condition (although, secretly, under the hood all Endpoints and\n                // the Connection have them, because they are on jsPlumbUIComponent.  shhh!), because\n                // it only makes sense to have it on a target endpoint.\n                _doContinue = _doContinue && dhParams.isDropAllowed(jpc.sourceId, jpc.targetId, jpc.scope, jpc, _ep);// && jpc.pending;\n\n                if (_doContinue) {\n                    continueFunction(_doContinue);\n                    return true;\n                }\n                else {\n                    dontContinueFunction();\n                }\n            }\n\n            if (dhParams.maybeCleanup) dhParams.maybeCleanup(_ep);\n\n            _jsPlumb.currentlyDragging = false;\n        };\n    };\n}).call(this);\n\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the code for Connections.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://jsplumb.org\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this,\n        _jp = root.jsPlumb,\n        _ju = root.jsPlumbUtil;\n\n\n    var makeConnector = function (_jsPlumb, renderMode, connectorName, connectorArgs, forComponent) {\n            if (!_jsPlumb.Defaults.DoNotThrowErrors && jsPlumb.Connectors[renderMode][connectorName] == null)\n                throw { msg: \"jsPlumb: unknown connector type '\" + connectorName + \"'\" };\n\n            return new _jp.Connectors[renderMode][connectorName](connectorArgs, forComponent);\n        },\n        _makeAnchor = function (anchorParams, elementId, _jsPlumb) {\n            return (anchorParams) ? _jsPlumb.makeAnchor(anchorParams, elementId, _jsPlumb) : null;\n        },\n        _updateConnectedClass = function (conn, element, _jsPlumb, remove) {\n            if (element != null) {\n                element._jsPlumbConnections = element._jsPlumbConnections || {};\n                if (remove)\n                    delete element._jsPlumbConnections[conn.id];\n                else\n                    element._jsPlumbConnections[conn.id] = true;\n\n                if (_ju.isEmpty(element._jsPlumbConnections)) {\n                    _jsPlumb.removeClass(element, _jsPlumb.connectedClass);\n                }\n                else\n                    _jsPlumb.addClass(element, _jsPlumb.connectedClass);\n            }\n        };\n\n    _jp.Connection = function (params) {\n        var _newEndpoint = params.newEndpoint;\n\n        this.id = params.id;\n        this.connector = null;\n        this.idPrefix = \"_jsplumb_c_\";\n        this.defaultLabelLocation = 0.5;\n        this.defaultOverlayKeys = [\"Overlays\", \"ConnectionOverlays\"];\n        // if a new connection is the result of moving some existing connection, params.previousConnection\n        // will have that Connection in it. listeners for the jsPlumbConnection event can look for that\n        // member and take action if they need to.\n        this.previousConnection = params.previousConnection;\n        this.source = _jp.getElement(params.source);\n        this.target = _jp.getElement(params.target);\n        // sourceEndpoint and targetEndpoint override source/target, if they are present. but \n        // source is not overridden if the Endpoint has declared it is not the final target of a connection;\n        // instead we use the source that the Endpoint declares will be the final source element.\n        if (params.sourceEndpoint) this.source = params.sourceEndpoint.getElement();\n        if (params.targetEndpoint) this.target = params.targetEndpoint.getElement();\n\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\n\n        this.sourceId = this._jsPlumb.instance.getId(this.source);\n        this.targetId = this._jsPlumb.instance.getId(this.target);\n        this.scope = params.scope; // scope may have been passed in to the connect call. if it wasn't, we will pull it from the source endpoint, after having initialised the endpoints.            \n        this.endpoints = [];\n        this.endpointStyles = [];\n\n        var _jsPlumb = this._jsPlumb.instance;\n\n        _jsPlumb.manage(this.sourceId, this.source);\n        _jsPlumb.manage(this.targetId, this.target);\n\n        this._jsPlumb.visible = true;\n        this._jsPlumb.editable = params.editable === true;\n        this._jsPlumb.params = {\n            cssClass: params.cssClass,\n            container: params.container,\n            \"pointer-events\": params[\"pointer-events\"],\n            editorParams: params.editorParams,\n            overlays: params.overlays\n        };\n        this._jsPlumb.lastPaintedAt = null;\n\n        // listen to mouseover and mouseout events passed from the container delegate.\n        this.bind(\"mouseover\", function () {\n            this.setHover(true);\n        }.bind(this));\n        this.bind(\"mouseout\", function () {\n            this.setHover(false);\n        }.bind(this));\n\n// INITIALISATION CODE\n\n        this.makeEndpoint = function (isSource, el, elId, ep) {\n            elId = elId || this._jsPlumb.instance.getId(el);\n            return this.prepareEndpoint(_jsPlumb, _newEndpoint, this, ep, isSource ? 0 : 1, params, el, elId);\n        };\n\n        var eS = this.makeEndpoint(true, this.source, this.sourceId, params.sourceEndpoint),\n            eT = this.makeEndpoint(false, this.target, this.targetId, params.targetEndpoint);\n\n        if (eS) _ju.addToList(params.endpointsByElement, this.sourceId, eS);\n        if (eT) _ju.addToList(params.endpointsByElement, this.targetId, eT);\n        // if scope not set, set it to be the scope for the source endpoint.\n        if (!this.scope) this.scope = this.endpoints[0].scope;\n\n        // if explicitly told to (or not to) delete endpoints on detach, override endpoint's preferences\n        if (params.deleteEndpointsOnDetach != null) {\n            this.endpoints[0]._deleteOnDetach = params.deleteEndpointsOnDetach;\n            this.endpoints[1]._deleteOnDetach = params.deleteEndpointsOnDetach;\n        }\n        else {\n            // otherwise, unless the endpoints say otherwise, mark them for deletion.\n            if (!this.endpoints[0]._doNotDeleteOnDetach) this.endpoints[0]._deleteOnDetach = true;\n            if (!this.endpoints[1]._doNotDeleteOnDetach) this.endpoints[1]._deleteOnDetach = true;\n        }\n\n// -------------------------- DEFAULT TYPE ---------------------------------------------\n\n        // DETACHABLE\n        var _detachable = _jsPlumb.Defaults.ConnectionsDetachable;\n        if (params.detachable === false) _detachable = false;\n        if (this.endpoints[0].connectionsDetachable === false) _detachable = false;\n        if (this.endpoints[1].connectionsDetachable === false) _detachable = false;\n        // REATTACH\n        var _reattach = params.reattach || this.endpoints[0].reattachConnections || this.endpoints[1].reattachConnections || _jsPlumb.Defaults.ReattachConnections;\n\n        this.appendToDefaultType({\n            detachable: _detachable,\n            rettach: _reattach,\n            paintStyle:this.endpoints[0].connectorStyle || this.endpoints[1].connectorStyle || params.paintStyle || _jsPlumb.Defaults.PaintStyle || jsPlumb.Defaults.PaintStyle,\n            hoverPaintStyle:this.endpoints[0].connectorHoverStyle || this.endpoints[1].connectorHoverStyle || params.hoverPaintStyle || _jsPlumb.Defaults.HoverPaintStyle || jsPlumb.Defaults.HoverPaintStyle\n        });\n\n\n        var _suspendedAt = _jsPlumb.getSuspendedAt();\n        if (!_jsPlumb.isSuspendDrawing()) {\n            // paint the endpoints\n            var myInfo = _jsPlumb.getCachedData(this.sourceId),\n                myOffset = myInfo.o, myWH = myInfo.s,\n                otherInfo = _jsPlumb.getCachedData(this.targetId),\n                otherOffset = otherInfo.o,\n                otherWH = otherInfo.s,\n                initialTimestamp = _suspendedAt || _jsPlumb.timestamp(),\n                anchorLoc = this.endpoints[0].anchor.compute({\n                    xy: [ myOffset.left, myOffset.top ], wh: myWH, element: this.endpoints[0],\n                    elementId: this.endpoints[0].elementId,\n                    txy: [ otherOffset.left, otherOffset.top ], twh: otherWH, tElement: this.endpoints[1],\n                    timestamp: initialTimestamp\n                });\n\n            this.endpoints[0].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\n\n            anchorLoc = this.endpoints[1].anchor.compute({\n                xy: [ otherOffset.left, otherOffset.top ], wh: otherWH, element: this.endpoints[1],\n                elementId: this.endpoints[1].elementId,\n                txy: [ myOffset.left, myOffset.top ], twh: myWH, tElement: this.endpoints[0],\n                timestamp: initialTimestamp\n            });\n            this.endpoints[1].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\n        }\n\n        this.getTypeDescriptor = function () {\n            return \"connection\";\n        };\n        this.getAttachedElements = function () {\n            return this.endpoints;\n        };\n\n        this.isDetachable = function () {\n            return this._jsPlumb.detachable === true;\n        };\n        this.setDetachable = function (detachable) {\n            this._jsPlumb.detachable = detachable === true;\n        };\n        this.isReattach = function () {\n            return this._jsPlumb.reattach === true || this.endpoints[0].reattachConnections === true || this.endpoints[1].reattachConnections === true;\n        };\n        this.setReattach = function (reattach) {\n            this._jsPlumb.reattach = reattach === true;\n        };\n\n// END INITIALISATION CODE\n\n\n// COST + DIRECTIONALITY\n        // if cost not supplied, try to inherit from source endpoint\n        this._jsPlumb.cost = params.cost || this.endpoints[0].getConnectionCost();\n        this._jsPlumb.directed = params.directed;\n        // inherit directed flag if set no source endpoint\n        if (params.directed == null) this._jsPlumb.directed = this.endpoints[0].areConnectionsDirected();\n// END COST + DIRECTIONALITY\n\n// PARAMETERS\n        // merge all the parameters objects into the connection.  parameters set\n        // on the connection take precedence; then source endpoint params, then\n        // finally target endpoint params.\n        var _p = jsPlumb.extend({}, this.endpoints[1].getParameters());\n        _jp.extend(_p, this.endpoints[0].getParameters());\n        _jp.extend(_p, this.getParameters());\n        this.setParameters(_p);\n// END PARAMETERS\n\n// PAINTING\n\n        this.setConnector(this.endpoints[0].connector || this.endpoints[1].connector || params.connector || _jsPlumb.Defaults.Connector || _jp.Defaults.Connector, true);\n        var data = params.data == null || !jsPlumbUtil.isObject(params.data) ? {} : params.data;\n        this.getData = function() { return data; };\n        this.setData = function(d) { data = d || {}; };\n        this.mergeData = function(d) { data = jsPlumb.extend(data, d); };\n\n        // the very last thing we do is apply types, if there are any.\n        var _types = [ \"default\",  params.type, this.endpoints[0].connectionType, this.endpoints[1].connectionType ].join(\" \");\n        if (/[^\\s]/.test(_types))\n            this.addType(_types, params.data, true);\n\n        this.updateConnectedClass();\n\n// END PAINTING    \n    };\n\n    _ju.extend(_jp.Connection, _jp.OverlayCapableJsPlumbUIComponent, {\n        applyType: function (t, doNotRepaint, typeMap) {\n\n            // none of these things result in the creation of objects so can be ignored.\n            if (t.detachable != null) this.setDetachable(t.detachable);\n            if (t.reattach != null) this.setReattach(t.reattach);\n            if (t.scope) this.scope = t.scope;\n\n            if (t.cssClass != null && this.canvas) this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\n\n            var _anchors = null;\n            // this also results in the creation of objects.\n            if (t.anchor) {\n                // note that even if the param was anchor, we store `anchors`.\n                _anchors = this.getCachedTypeItem(\"anchors\", typeMap.anchor);\n                if (_anchors == null) {\n                    _anchors = [ this._jsPlumb.instance.makeAnchor(t.anchor), this._jsPlumb.instance.makeAnchor(t.anchor) ];\n                    this.cacheTypeItem(\"anchors\", _anchors, typeMap.anchor);\n                }\n            }\n            else if (t.anchors) {\n                _anchors = this.getCachedTypeItem(\"anchors\", typeMap.anchors);\n                if (_anchors == null) {\n                    _anchors = [\n                        this._jsPlumb.instance.makeAnchor(t.anchors[0]),\n                        this._jsPlumb.instance.makeAnchor(t.anchors[1])\n                    ];\n                    this.cacheTypeItem(\"anchors\", _anchors, typeMap.anchors);\n                }\n            }\n            if (_anchors != null) {\n                this.endpoints[0].anchor = _anchors[0];\n                this.endpoints[1].anchor = _anchors[1];\n            }\n\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\n        },\n        addClass: function (c, informEndpoints) {\n            if (informEndpoints) {\n                this.endpoints[0].addClass(c);\n                this.endpoints[1].addClass(c);\n                if (this.suspendedEndpoint) this.suspendedEndpoint.addClass(c);\n            }\n            if (this.connector) {\n                this.connector.addClass(c);\n            }\n        },\n        removeClass: function (c, informEndpoints) {\n            if (informEndpoints) {\n                this.endpoints[0].removeClass(c);\n                this.endpoints[1].removeClass(c);\n                if (this.suspendedEndpoint) this.suspendedEndpoint.removeClass(c);\n            }\n            if (this.connector) {\n                this.connector.removeClass(c);\n            }\n        },\n        isVisible: function () {\n            return this._jsPlumb.visible;\n        },\n        setVisible: function (v) {\n            this._jsPlumb.visible = v;\n            if (this.connector)\n                this.connector.setVisible(v);\n            this.repaint();\n        },\n        cleanup: function () {\n            this.updateConnectedClass(true);\n            this.endpoints = null;\n            this.source = null;\n            this.target = null;\n            if (this.connector != null) {\n                this.connector.cleanup(true);\n                this.connector.destroy(true);\n            }\n            this.connector = null;\n        },\n        updateConnectedClass:function(remove) {\n            _updateConnectedClass(this, this.source, this._jsPlumb.instance, remove);\n            _updateConnectedClass(this, this.target, this._jsPlumb.instance, remove);\n        },\n        setHover: function (state) {\n            if (this.connector && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                this.connector.setHover(state);\n                root.jsPlumb[state ? \"addClass\" : \"removeClass\"](this.source, this._jsPlumb.instance.hoverSourceClass);\n                root.jsPlumb[state ? \"addClass\" : \"removeClass\"](this.target, this._jsPlumb.instance.hoverTargetClass);\n            }\n        },\n        getUuids:function() {\n            return [ this.endpoints[0].getUuid(), this.endpoints[1].getUuid() ];\n        },\n        getCost: function () {\n            return this._jsPlumb.cost;\n        },\n        setCost: function (c) {\n            this._jsPlumb.cost = c;\n        },\n        isDirected: function () {\n            return this._jsPlumb.directed === true;\n        },\n        getConnector: function () {\n            return this.connector;\n        },\n        prepareConnector:function(connectorSpec, typeId) {\n            var connectorArgs = {\n                    _jsPlumb: this._jsPlumb.instance,\n                    cssClass: this._jsPlumb.params.cssClass,\n                    container: this._jsPlumb.params.container,\n                    \"pointer-events\": this._jsPlumb.params[\"pointer-events\"]\n                },\n                renderMode = this._jsPlumb.instance.getRenderMode(),\n                connector;\n\n            if (_ju.isString(connectorSpec))\n                connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec, connectorArgs, this); // lets you use a string as shorthand.\n            else if (_ju.isArray(connectorSpec)) {\n                if (connectorSpec.length == 1)\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], connectorArgs, this);\n                else\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], _ju.merge(connectorSpec[1], connectorArgs), this);\n            }\n            if (typeId != null) connector.typeId = typeId;\n            return connector;\n        },\n        setPreparedConnector: function(connector, doNotRepaint, doNotChangeListenerComponent, typeId) {\n\n            var previous;\n            // the connector will not be cleaned up if it was set as part of a type, because `typeId` will be set on it\n            // and we havent passed in `true` for \"force\" here.\n            if (this.connector != null) {\n                previous = this.connector;\n                this.connector.cleanup();\n                this.connector.destroy();\n            }\n\n            this.connector = connector;\n            if (typeId) {\n                this.cacheTypeItem(\"connector\", connector, typeId);\n            }\n\n            this.canvas = this.connector.canvas;\n            this.bgCanvas = this.connector.bgCanvas;\n\n            // new: instead of binding listeners per connector, we now just have one delegate on the container.\n            // so for that handler we set the connection as the '_jsPlumb' member of the canvas element, and\n            // bgCanvas, if it exists, which it does right now in the VML renderer, so it won't from v 2.0.0 onwards.\n            if (this.canvas) this.canvas._jsPlumb = this;\n            if (this.bgCanvas) this.bgCanvas._jsPlumb = this;\n\n            if (previous != null) {\n                var o = this.getOverlays();\n                for (var i = 0; i < o.length; i++) {\n                    if (o[i].transfer) o[i].transfer(this.connector);\n                }\n            }\n\n            if (!doNotChangeListenerComponent) this.setListenerComponent(this.connector);\n            if (!doNotRepaint) this.repaint();\n        },\n        setConnector: function (connectorSpec, doNotRepaint, doNotChangeListenerComponent, typeId) {\n            var connector = this.prepareConnector(connectorSpec, typeId);\n            this.setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId);\n        },\n        paint: function (params) {\n\n            if (!this._jsPlumb.instance.isSuspendDrawing() && this._jsPlumb.visible) {\n                params = params || {};\n                var timestamp = params.timestamp,\n                // if the moving object is not the source we must transpose the two references.\n                    swap = false,\n                    tId = swap ? this.sourceId : this.targetId, sId = swap ? this.targetId : this.sourceId,\n                    tIdx = swap ? 0 : 1, sIdx = swap ? 1 : 0;\n\n                if (timestamp == null || timestamp != this._jsPlumb.lastPaintedAt) {\n                    var sourceInfo = this._jsPlumb.instance.updateOffset({elId:sId}).o,\n                        targetInfo = this._jsPlumb.instance.updateOffset({elId:tId}).o,\n                        sE = this.endpoints[sIdx], tE = this.endpoints[tIdx];\n\n                    var sAnchorP = sE.anchor.getCurrentLocation({xy: [sourceInfo.left, sourceInfo.top], wh: [sourceInfo.width, sourceInfo.height], element: sE, timestamp: timestamp}),\n                        tAnchorP = tE.anchor.getCurrentLocation({xy: [targetInfo.left, targetInfo.top], wh: [targetInfo.width, targetInfo.height], element: tE, timestamp: timestamp});\n\n                    this.connector.resetBounds();\n\n                    this.connector.compute({\n                        sourcePos: sAnchorP,\n                        targetPos: tAnchorP,\n                        sourceEndpoint: this.endpoints[sIdx],\n                        targetEndpoint: this.endpoints[tIdx],\n                        lineWidth: this._jsPlumb.paintStyleInUse.lineWidth,\n                        sourceInfo: sourceInfo,\n                        targetInfo: targetInfo\n                    });\n\n                    var overlayExtents = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\n\n                    // compute overlays. we do this first so we can get their placements, and adjust the\n                    // container if needs be (if an overlay would be clipped)\n                    for (var i in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\n                            var o = this._jsPlumb.overlays[i];\n                            if (o.isVisible()) {\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.connector, this._jsPlumb.paintStyleInUse, this.getAbsoluteOverlayPosition(o));\n                                overlayExtents.minX = Math.min(overlayExtents.minX, this._jsPlumb.overlayPlacements[i].minX);\n                                overlayExtents.maxX = Math.max(overlayExtents.maxX, this._jsPlumb.overlayPlacements[i].maxX);\n                                overlayExtents.minY = Math.min(overlayExtents.minY, this._jsPlumb.overlayPlacements[i].minY);\n                                overlayExtents.maxY = Math.max(overlayExtents.maxY, this._jsPlumb.overlayPlacements[i].maxY);\n                            }\n                        }\n                    }\n\n                    var lineWidth = parseFloat(this._jsPlumb.paintStyleInUse.lineWidth || 1) / 2,\n                        outlineWidth = parseFloat(this._jsPlumb.paintStyleInUse.lineWidth || 0),\n                        extents = {\n                            xmin: Math.min(this.connector.bounds.minX - (lineWidth + outlineWidth), overlayExtents.minX),\n                            ymin: Math.min(this.connector.bounds.minY - (lineWidth + outlineWidth), overlayExtents.minY),\n                            xmax: Math.max(this.connector.bounds.maxX + (lineWidth + outlineWidth), overlayExtents.maxX),\n                            ymax: Math.max(this.connector.bounds.maxY + (lineWidth + outlineWidth), overlayExtents.maxY)\n                        };\n                    // paint the connector.\n                    this.connector.paint(this._jsPlumb.paintStyleInUse, null, extents);\n                    // and then the overlays\n                    for (var j in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(j)) {\n                            var p = this._jsPlumb.overlays[j];\n                            if (p.isVisible()) {\n                                p.paint(this._jsPlumb.overlayPlacements[j], extents);\n                            }\n                        }\n                    }\n                }\n                this._jsPlumb.lastPaintedAt = timestamp;\n            }\n        },\n        repaint: function (params) {\n            params = params || {};\n            this.paint({ elId: this.sourceId, recalc: !(params.recalc === false), timestamp: params.timestamp});\n        },\n        prepareEndpoint: function (_jsPlumb, _newEndpoint, conn, existing, index, params, element, elementId) {\n            var e;\n            if (existing) {\n                conn.endpoints[index] = existing;\n                existing.addConnection(conn);\n            } else {\n                if (!params.endpoints) params.endpoints = [ null, null ];\n                var ep = params.endpoints[index] || params.endpoint || _jsPlumb.Defaults.Endpoints[index] || jsPlumb.Defaults.Endpoints[index] || _jsPlumb.Defaults.Endpoint || jsPlumb.Defaults.Endpoint;\n                if (!params.endpointStyles) params.endpointStyles = [ null, null ];\n                if (!params.endpointHoverStyles) params.endpointHoverStyles = [ null, null ];\n                var es = params.endpointStyles[index] || params.endpointStyle || _jsPlumb.Defaults.EndpointStyles[index] || jsPlumb.Defaults.EndpointStyles[index] || _jsPlumb.Defaults.EndpointStyle || jsPlumb.Defaults.EndpointStyle;\n                // Endpoints derive their fillStyle from the connector's strokeStyle, if no fillStyle was specified.\n                if (es.fillStyle == null && params.paintStyle != null)\n                    es.fillStyle = params.paintStyle.strokeStyle;\n\n                if (es.outlineColor == null && params.paintStyle != null)\n                    es.outlineColor = params.paintStyle.outlineColor;\n                if (es.outlineWidth == null && params.paintStyle != null)\n                    es.outlineWidth = params.paintStyle.outlineWidth;\n\n                var ehs = params.endpointHoverStyles[index] || params.endpointHoverStyle || _jsPlumb.Defaults.EndpointHoverStyles[index] || jsPlumb.Defaults.EndpointHoverStyles[index] || _jsPlumb.Defaults.EndpointHoverStyle || jsPlumb.Defaults.EndpointHoverStyle;\n                // endpoint hover fill style is derived from connector's hover stroke style\n                if (params.hoverPaintStyle != null) {\n                    if (ehs == null) ehs = {};\n                    if (ehs.fillStyle == null) {\n                        ehs.fillStyle = params.hoverPaintStyle.strokeStyle;\n                    }\n                }\n                var a = params.anchors ? params.anchors[index] :\n                        params.anchor ? params.anchor :\n                            _makeAnchor(_jsPlumb.Defaults.Anchors[index], elementId, _jsPlumb) ||\n                            _makeAnchor(_jp.Defaults.Anchors[index], elementId, _jsPlumb) ||\n                            _makeAnchor(_jsPlumb.Defaults.Anchor, elementId, _jsPlumb) ||\n                            _makeAnchor(_jp.Defaults.Anchor, elementId, _jsPlumb),\n                    u = params.uuids ? params.uuids[index] : null;\n\n                e = _newEndpoint({\n                    paintStyle: es, hoverPaintStyle: ehs, endpoint: ep, connections: [ conn ],\n                    uuid: u, anchor: a, source: element, scope: params.scope,\n                    reattach: params.reattach || _jsPlumb.Defaults.ReattachConnections,\n                    detachable: params.detachable || _jsPlumb.Defaults.ConnectionsDetachable\n                });\n                conn.endpoints[index] = e;\n\n                if (params.drawEndpoints === false) e.setVisible(false, true, true);\n\n            }\n            return e;\n        }\n\n    }); // END Connection class            \n}).call(this);\n\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the code for creating and manipulating anchors.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n\n    var root = this,\n        _ju = root.jsPlumbUtil,\n        _jp = root.jsPlumb;\n\n    //\n    // manages anchors for all elements.\n    //\n    _jp.AnchorManager = function (params) {\n        var _amEndpoints = {},\n            continuousAnchorLocations = {},\n            userDefinedContinuousAnchorLocations = {},\n            continuousAnchorOrientations = {},\n            Orientation = { HORIZONTAL: \"horizontal\", VERTICAL: \"vertical\", DIAGONAL: \"diagonal\", IDENTITY: \"identity\" },\n            axes = [\"left\", \"top\", \"right\", \"bottom\"],\n            connectionsByElementId = {},\n            self = this,\n            anchorLists = {},\n            jsPlumbInstance = params.jsPlumbInstance,\n            floatingConnections = {},\n            calculateOrientation = function (sourceId, targetId, sd, td, sourceAnchor, targetAnchor) {\n\n                if (sourceId === targetId) return {\n                    orientation: Orientation.IDENTITY,\n                    a: [\"top\", \"top\"]\n                };\n\n                var theta = Math.atan2((td.centery - sd.centery), (td.centerx - sd.centerx)),\n                    theta2 = Math.atan2((sd.centery - td.centery), (sd.centerx - td.centerx));\n\n// --------------------------------------------------------------------------------------\n\n                // improved face calculation. get midpoints of each face for source and target, then put in an array with all combinations of\n                // source/target faces. sort this array by distance between midpoints. the entry at index 0 is our preferred option. we can\n                // go through the array one by one until we find an entry in which each requested face is supported.\n                var candidates = [], midpoints = { };\n                (function (types, dim) {\n                    for (var i = 0; i < types.length; i++) {\n                        midpoints[types[i]] = {\n                            \"left\": [ dim[i].left, dim[i].centery ],\n                            \"right\": [ dim[i].right, dim[i].centery ],\n                            \"top\": [ dim[i].centerx, dim[i].top ],\n                            \"bottom\": [ dim[i].centerx , dim[i].bottom]\n                        };\n                    }\n                })([ \"source\", \"target\" ], [ sd, td ]);\n\n                for (var sf = 0; sf < axes.length; sf++) {\n                    for (var tf = 0; tf < axes.length; tf++) {\n                        if (sf != tf) {\n                            candidates.push({\n                                source: axes[sf],\n                                target: axes[tf],\n                                dist: Biltong.lineLength(midpoints.source[axes[sf]], midpoints.target[axes[tf]])\n                            });\n                        }\n                    }\n                }\n\n                candidates.sort(function (a, b) {\n                    return a.dist < b.dist ? -1 : a.dist > b.dist ? 1 : 0;\n                });\n\n                // now go through this list and try to get an entry that satisfies both (there will be one, unless one of the anchors\n                // declares no available faces)\n                var sourceEdge = candidates[0].source, targetEdge = candidates[0].target;\n                for (var i = 0; i < candidates.length; i++) {\n\n                    if (!sourceAnchor.isContinuous || sourceAnchor.isEdgeSupported(candidates[i].source))\n                        sourceEdge = candidates[i].source;\n                    else\n                        sourceEdge = null;\n\n                    if (!targetAnchor.isContinuous || targetAnchor.isEdgeSupported(candidates[i].target))\n                        targetEdge = candidates[i].target;\n                    else {\n                        targetEdge = null;\n                    }\n\n                    if (sourceEdge != null && targetEdge != null) break;\n                }\n\n// --------------------------------------------------------------------------------------\n\n                return {\n                    a: [ sourceEdge, targetEdge ],\n                    theta: theta,\n                    theta2: theta2\n                };\n            },\n        // used by placeAnchors function\n            placeAnchorsOnLine = function (desc, elementDimensions, elementPosition, connections, horizontal, otherMultiplier, reverse) {\n                var a = [], step = elementDimensions[horizontal ? 0 : 1] / (connections.length + 1);\n\n                for (var i = 0; i < connections.length; i++) {\n                    var val = (i + 1) * step, other = otherMultiplier * elementDimensions[horizontal ? 1 : 0];\n                    if (reverse)\n                        val = elementDimensions[horizontal ? 0 : 1] - val;\n\n                    var dx = (horizontal ? val : other), x = elementPosition[0] + dx, xp = dx / elementDimensions[0],\n                        dy = (horizontal ? other : val), y = elementPosition[1] + dy, yp = dy / elementDimensions[1];\n\n                    a.push([ x, y, xp, yp, connections[i][1], connections[i][2] ]);\n                }\n\n                return a;\n            },\n        // used by edgeSortFunctions\n            currySort = function (reverseAngles) {\n                return function (a, b) {\n                    var r = true;\n                    if (reverseAngles) {\n                        r = a[0][0] < b[0][0];\n                    }\n                    else {\n                        r = a[0][0] > b[0][0];\n                    }\n                    return r === false ? -1 : 1;\n                };\n            },\n        // used by edgeSortFunctions\n            leftSort = function (a, b) {\n                // first get adjusted values\n                var p1 = a[0][0] < 0 ? -Math.PI - a[0][0] : Math.PI - a[0][0],\n                    p2 = b[0][0] < 0 ? -Math.PI - b[0][0] : Math.PI - b[0][0];\n                if (p1 > p2) return 1;\n                else return a[0][1] > b[0][1] ? 1 : -1;\n            },\n        // used by placeAnchors\n            edgeSortFunctions = {\n                \"top\": function (a, b) {\n                    return a[0] > b[0] ? 1 : -1;\n                },\n                \"right\": currySort(true),\n                \"bottom\": currySort(true),\n                \"left\": leftSort\n            },\n        // used by placeAnchors\n            _sortHelper = function (_array, _fn) {\n                return _array.sort(_fn);\n            },\n        // used by AnchorManager.redraw\n            placeAnchors = function (elementId, _anchorLists) {\n                var cd = jsPlumbInstance.getCachedData(elementId), sS = cd.s, sO = cd.o,\n                    placeSomeAnchors = function (desc, elementDimensions, elementPosition, unsortedConnections, isHorizontal, otherMultiplier, orientation) {\n                        if (unsortedConnections.length > 0) {\n                            var sc = _sortHelper(unsortedConnections, edgeSortFunctions[desc]), // puts them in order based on the target element's pos on screen\n                                reverse = desc === \"right\" || desc === \"top\",\n                                anchors = placeAnchorsOnLine(desc, elementDimensions,\n                                    elementPosition, sc,\n                                    isHorizontal, otherMultiplier, reverse);\n\n                            // takes a computed anchor position and adjusts it for parent offset and scroll, then stores it.\n                            var _setAnchorLocation = function (endpoint, anchorPos) {\n                                continuousAnchorLocations[endpoint.id] = [ anchorPos[0], anchorPos[1], anchorPos[2], anchorPos[3] ];\n                                continuousAnchorOrientations[endpoint.id] = orientation;\n                            };\n\n                            for (var i = 0; i < anchors.length; i++) {\n                                var c = anchors[i][4], weAreSource = c.endpoints[0].elementId === elementId, weAreTarget = c.endpoints[1].elementId === elementId;\n                                if (weAreSource)\n                                    _setAnchorLocation(c.endpoints[0], anchors[i]);\n                                else if (weAreTarget)\n                                    _setAnchorLocation(c.endpoints[1], anchors[i]);\n                            }\n                        }\n                    };\n\n                placeSomeAnchors(\"bottom\", sS, [sO.left, sO.top], _anchorLists.bottom, true, 1, [0, 1]);\n                placeSomeAnchors(\"top\", sS, [sO.left, sO.top], _anchorLists.top, true, 0, [0, -1]);\n                placeSomeAnchors(\"left\", sS, [sO.left, sO.top], _anchorLists.left, false, 0, [-1, 0]);\n                placeSomeAnchors(\"right\", sS, [sO.left, sO.top], _anchorLists.right, false, 1, [1, 0]);\n            };\n\n        this.reset = function () {\n            _amEndpoints = {};\n            connectionsByElementId = {};\n            anchorLists = {};\n        };\n        this.addFloatingConnection = function (key, conn) {\n            floatingConnections[key] = conn;\n        };\n        this.removeFloatingConnection = function (key) {\n            delete floatingConnections[key];\n        };\n        this.newConnection = function (conn) {\n            var sourceId = conn.sourceId, targetId = conn.targetId,\n                ep = conn.endpoints,\n                doRegisterTarget = true,\n                registerConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\n                    if ((sourceId == targetId) && otherAnchor.isContinuous) {\n                        // remove the target endpoint's canvas.  we dont need it.\n                        conn._jsPlumb.instance.removeElement(ep[1].canvas);\n                        doRegisterTarget = false;\n                    }\n                    _ju.addToList(connectionsByElementId, elId, [c, otherEndpoint, otherAnchor.constructor == _jp.DynamicAnchor]);\n                };\n\n            registerConnection(0, ep[0], ep[0].anchor, targetId, conn);\n            if (doRegisterTarget)\n                registerConnection(1, ep[1], ep[1].anchor, sourceId, conn);\n        };\n        var removeEndpointFromAnchorLists = function (endpoint) {\n            (function (list, eId) {\n                if (list) {  // transient anchors dont get entries in this list.\n                    var f = function (e) {\n                        return e[4] == eId;\n                    };\n                    _ju.removeWithFunction(list.top, f);\n                    _ju.removeWithFunction(list.left, f);\n                    _ju.removeWithFunction(list.bottom, f);\n                    _ju.removeWithFunction(list.right, f);\n                }\n            })(anchorLists[endpoint.elementId], endpoint.id);\n        };\n        this.connectionDetached = function (connInfo) {\n            var connection = connInfo.connection || connInfo,\n                sourceId = connInfo.sourceId,\n                targetId = connInfo.targetId,\n                ep = connection.endpoints,\n                removeConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\n                    if (otherAnchor != null && otherAnchor.constructor == _jp.FloatingAnchor) {\n                        // no-op\n                    }\n                    else {\n                        _ju.removeWithFunction(connectionsByElementId[elId], function (_c) {\n                            return _c[0].id == c.id;\n                        });\n                    }\n                };\n\n            removeConnection(1, ep[1], ep[1].anchor, sourceId, connection);\n            removeConnection(0, ep[0], ep[0].anchor, targetId, connection);\n\n            // remove from anchorLists            \n            removeEndpointFromAnchorLists(connection.endpoints[0]);\n            removeEndpointFromAnchorLists(connection.endpoints[1]);\n\n            self.redraw(connection.sourceId);\n            self.redraw(connection.targetId);\n        };\n        this.add = function (endpoint, elementId) {\n            _ju.addToList(_amEndpoints, elementId, endpoint);\n        };\n        this.changeId = function (oldId, newId) {\n            connectionsByElementId[newId] = connectionsByElementId[oldId];\n            _amEndpoints[newId] = _amEndpoints[oldId];\n            delete connectionsByElementId[oldId];\n            delete _amEndpoints[oldId];\n        };\n        this.getConnectionsFor = function (elementId) {\n            return connectionsByElementId[elementId] || [];\n        };\n        this.getEndpointsFor = function (elementId) {\n            return _amEndpoints[elementId] || [];\n        };\n        this.deleteEndpoint = function (endpoint) {\n            _ju.removeWithFunction(_amEndpoints[endpoint.elementId], function (e) {\n                return e.id == endpoint.id;\n            });\n            removeEndpointFromAnchorLists(endpoint);\n        };\n        this.clearFor = function (elementId) {\n            delete _amEndpoints[elementId];\n            _amEndpoints[elementId] = [];\n        };\n        // updates the given anchor list by either updating an existing anchor's info, or adding it. this function\n        // also removes the anchor from its previous list, if the edge it is on has changed.\n        // all connections found along the way (those that are connected to one of the faces this function\n        // operates on) are added to the connsToPaint list, as are their endpoints. in this way we know to repaint\n        // them wthout having to calculate anything else about them.\n        var _updateAnchorList = function (lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, elId, connsToPaint, endpointsToPaint) {\n            // first try to find the exact match, but keep track of the first index of a matching element id along the way.s\n            var exactIdx = -1,\n                firstMatchingElIdx = -1,\n                endpoint = conn.endpoints[idx],\n                endpointId = endpoint.id,\n                oIdx = [1, 0][idx],\n                values = [\n                    [ theta, order ],\n                    conn,\n                    aBoolean,\n                    otherElId,\n                    endpointId\n                ],\n                listToAddTo = lists[edgeId],\n                listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null,\n                i,\n                candidate;\n\n            if (listToRemoveFrom) {\n                var rIdx = _ju.findWithFunction(listToRemoveFrom, function (e) {\n                    return e[4] == endpointId;\n                });\n                if (rIdx != -1) {\n                    listToRemoveFrom.splice(rIdx, 1);\n                    // get all connections from this list\n                    for (i = 0; i < listToRemoveFrom.length; i++) {\n                        candidate = listToRemoveFrom[i][1];\n                        _ju.addWithFunction(connsToPaint, candidate, function (c) {\n                            return c.id == candidate.id;\n                        });\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[idx], function (e) {\n                            return e.id == candidate.endpoints[idx].id;\n                        });\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[oIdx], function (e) {\n                            return e.id == candidate.endpoints[oIdx].id;\n                        });\n                    }\n                }\n            }\n\n            for (i = 0; i < listToAddTo.length; i++) {\n                candidate = listToAddTo[i][1];\n                if (params.idx == 1 && listToAddTo[i][3] === otherElId && firstMatchingElIdx == -1)\n                    firstMatchingElIdx = i;\n                _ju.addWithFunction(connsToPaint, candidate, function (c) {\n                    return c.id == candidate.id;\n                });\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[idx], function (e) {\n                    return e.id == candidate.endpoints[idx].id;\n                });\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[oIdx], function (e) {\n                    return e.id == candidate.endpoints[oIdx].id;\n                });\n            }\n            if (exactIdx != -1) {\n                listToAddTo[exactIdx] = values;\n            }\n            else {\n                var insertIdx = reverse ? firstMatchingElIdx != -1 ? firstMatchingElIdx : 0 : listToAddTo.length; // of course we will get this from having looked through the array shortly.\n                listToAddTo.splice(insertIdx, 0, values);\n            }\n\n            // store this for next time.\n            endpoint._continuousAnchorEdge = edgeId;\n        };\n\n        //\n        // find the entry in an endpoint's list for this connection and update its target endpoint\n        // with the current target in the connection.\n        // \n        //\n        this.updateOtherEndpoint = function (elId, oldTargetId, newTargetId, connection) {\n            var sIndex = _ju.findWithFunction(connectionsByElementId[elId], function (i) {\n                    return i[0].id === connection.id;\n                }),\n                tIndex = _ju.findWithFunction(connectionsByElementId[oldTargetId], function (i) {\n                    return i[0].id === connection.id;\n                });\n\n            // update or add data for source\n            if (sIndex != -1) {\n                connectionsByElementId[elId][sIndex][0] = connection;\n                connectionsByElementId[elId][sIndex][1] = connection.endpoints[1];\n                connectionsByElementId[elId][sIndex][2] = connection.endpoints[1].anchor.constructor == _jp.DynamicAnchor;\n            }\n\n            // remove entry for previous target (if there)\n            if (tIndex > -1) {\n                connectionsByElementId[oldTargetId].splice(tIndex, 1);\n                // add entry for new target\n                _ju.addToList(connectionsByElementId, newTargetId, [connection, connection.endpoints[0], connection.endpoints[0].anchor.constructor == _jp.DynamicAnchor]);\n            }\n\n            connection.updateConnectedClass();\n        };\n\n        //\n        // notification that the connection given has changed source from the originalId to the newId.\n        // This involves:\n        // 1. removing the connection from the list of connections stored for the originalId\n        // 2. updating the source information for the target of the connection\n        // 3. re-registering the connection in connectionsByElementId with the newId\n        //\n        this.sourceChanged = function (originalId, newId, connection) {\n            if (originalId !== newId) {\n                // remove the entry that points from the old source to the target\n                _ju.removeWithFunction(connectionsByElementId[originalId], function (info) {\n                    return info[0].id === connection.id;\n                });\n                // find entry for target and update it\n                var tIdx = _ju.findWithFunction(connectionsByElementId[connection.targetId], function (i) {\n                    return i[0].id === connection.id;\n                });\n                if (tIdx > -1) {\n                    connectionsByElementId[connection.targetId][tIdx][0] = connection;\n                    connectionsByElementId[connection.targetId][tIdx][1] = connection.endpoints[0];\n                    connectionsByElementId[connection.targetId][tIdx][2] = connection.endpoints[0].anchor.constructor == _jp.DynamicAnchor;\n                }\n                // add entry for new source\n                _ju.addToList(connectionsByElementId, newId, [connection, connection.endpoints[1], connection.endpoints[1].anchor.constructor == _jp.DynamicAnchor]);\n\n                connection.updateConnectedClass();\n            }\n        };\n\n        //\n        // moves the given endpoint from `currentId` to `element`.\n        // This involves:\n        //\n        // 1. changing the key in _amEndpoints under which the endpoint is stored\n        // 2. changing the source or target values in all of the endpoint's connections\n        // 3. changing the array in connectionsByElementId in which the endpoint's connections\n        //    are stored (done by either sourceChanged or updateOtherEndpoint)\n        //\n        this.rehomeEndpoint = function (ep, currentId, element) {\n            var eps = _amEndpoints[currentId] || [],\n                elementId = jsPlumbInstance.getId(element);\n\n            if (elementId !== currentId) {\n                var idx = _ju.indexOf(eps, ep);\n                if (idx > -1) {\n                    var _ep = eps.splice(idx, 1)[0];\n                    self.add(_ep, elementId);\n                }\n            }\n\n            for (var i = 0; i < ep.connections.length; i++) {\n                if (ep.connections[i].sourceId == currentId) {\n                    ep.connections[i].sourceId = ep.elementId;\n                    ep.connections[i].source = ep.element;\n                    self.sourceChanged(currentId, ep.elementId, ep.connections[i]);\n                }\n                else if (ep.connections[i].targetId == currentId) {\n                    ep.connections[i].targetId = ep.elementId;\n                    ep.connections[i].target = ep.element;\n                    self.updateOtherEndpoint(ep.connections[i].sourceId, currentId, ep.elementId, ep.connections[i]);\n                }\n            }\n        };\n\n        this.redraw = function (elementId, ui, timestamp, offsetToUI, clearEdits, doNotRecalcEndpoint) {\n\n            if (!jsPlumbInstance.isSuspendDrawing()) {\n                // get all the endpoints for this element\n                var ep = _amEndpoints[elementId] || [],\n                    endpointConnections = connectionsByElementId[elementId] || [],\n                    connectionsToPaint = [],\n                    endpointsToPaint = [],\n                    anchorsToUpdate = [];\n\n                timestamp = timestamp || jsPlumbInstance.timestamp();\n                // offsetToUI are values that would have been calculated in the dragManager when registering\n                // an endpoint for an element that had a parent (somewhere in the hierarchy) that had been\n                // registered as draggable.\n                offsetToUI = offsetToUI || {left: 0, top: 0};\n                if (ui) {\n                    ui = {\n                        left: ui.left + offsetToUI.left,\n                        top: ui.top + offsetToUI.top\n                    };\n                }\n\n                // valid for one paint cycle.\n                var myOffset = jsPlumbInstance.updateOffset({ elId: elementId, offset: ui, recalc: false, timestamp: timestamp }),\n                    orientationCache = {};\n\n                // actually, first we should compute the orientation of this element to all other elements to which\n                // this element is connected with a continuous anchor (whether both ends of the connection have\n                // a continuous anchor or just one)\n\n                for (var i = 0; i < endpointConnections.length; i++) {\n                    var conn = endpointConnections[i][0],\n                        sourceId = conn.sourceId,\n                        targetId = conn.targetId,\n                        sourceContinuous = conn.endpoints[0].anchor.isContinuous,\n                        targetContinuous = conn.endpoints[1].anchor.isContinuous;\n\n                    if (sourceContinuous || targetContinuous) {\n                        var oKey = sourceId + \"_\" + targetId,\n                            o = orientationCache[oKey],\n                            oIdx = conn.sourceId == elementId ? 1 : 0;\n\n                        if (sourceContinuous && !anchorLists[sourceId]) anchorLists[sourceId] = { top: [], right: [], bottom: [], left: [] };\n                        if (targetContinuous && !anchorLists[targetId]) anchorLists[targetId] = { top: [], right: [], bottom: [], left: [] };\n\n                        if (elementId != targetId) jsPlumbInstance.updateOffset({ elId: targetId, timestamp: timestamp });\n                        if (elementId != sourceId) jsPlumbInstance.updateOffset({ elId: sourceId, timestamp: timestamp });\n\n                        var td = jsPlumbInstance.getCachedData(targetId),\n                            sd = jsPlumbInstance.getCachedData(sourceId);\n\n                        if (targetId == sourceId && (sourceContinuous || targetContinuous)) {\n                            // here we may want to improve this by somehow determining the face we'd like\n                            // to put the connector on.  ideally, when drawing, the face should be calculated\n                            // by determining which face is closest to the point at which the mouse button\n                            // was released.  for now, we're putting it on the top face.\n                            _updateAnchorList(\n                                anchorLists[sourceId],\n                                    -Math.PI / 2,\n                                0,\n                                conn,\n                                false,\n                                targetId,\n                                0, false, \"top\", sourceId, connectionsToPaint, endpointsToPaint);\n                        }\n                        else {\n                            if (!o) {\n                                o = calculateOrientation(sourceId, targetId, sd.o, td.o, conn.endpoints[0].anchor, conn.endpoints[1].anchor);\n                                orientationCache[oKey] = o;\n                                // this would be a performance enhancement, but the computed angles need to be clamped to\n                                //the (-PI/2 -> PI/2) range in order for the sorting to work properly.\n                                /*  orientationCache[oKey2] = {\n                                 orientation:o.orientation,\n                                 a:[o.a[1], o.a[0]],\n                                 theta:o.theta + Math.PI,\n                                 theta2:o.theta2 + Math.PI\n                                 };*/\n                            }\n                            if (sourceContinuous) _updateAnchorList(anchorLists[sourceId], o.theta, 0, conn, false, targetId, 0, false, o.a[0], sourceId, connectionsToPaint, endpointsToPaint);\n                            if (targetContinuous) _updateAnchorList(anchorLists[targetId], o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], targetId, connectionsToPaint, endpointsToPaint);\n                        }\n\n                        if (sourceContinuous) _ju.addWithFunction(anchorsToUpdate, sourceId, function (a) {\n                            return a === sourceId;\n                        });\n                        if (targetContinuous) _ju.addWithFunction(anchorsToUpdate, targetId, function (a) {\n                            return a === targetId;\n                        });\n                        _ju.addWithFunction(connectionsToPaint, conn, function (c) {\n                            return c.id == conn.id;\n                        });\n                        if ((sourceContinuous && oIdx === 0) || (targetContinuous && oIdx === 1))\n                            _ju.addWithFunction(endpointsToPaint, conn.endpoints[oIdx], function (e) {\n                                return e.id == conn.endpoints[oIdx].id;\n                            });\n                    }\n                }\n\n                // place Endpoints whose anchors are continuous but have no Connections\n                for (i = 0; i < ep.length; i++) {\n                    if (ep[i].connections.length === 0 && ep[i].anchor.isContinuous) {\n                        if (!anchorLists[elementId]) anchorLists[elementId] = { top: [], right: [], bottom: [], left: [] };\n                        _updateAnchorList(anchorLists[elementId], -Math.PI / 2, 0, {endpoints: [ep[i], ep[i]], paint: function () {\n                        }}, false, elementId, 0, false, ep[i].anchor.getDefaultFace(), elementId, connectionsToPaint, endpointsToPaint);\n                        _ju.addWithFunction(anchorsToUpdate, elementId, function (a) {\n                            return a === elementId;\n                        });\n                    }\n                }\n\n\n                // now place all the continuous anchors we need to;\n                for (i = 0; i < anchorsToUpdate.length; i++) {\n                    placeAnchors(anchorsToUpdate[i], anchorLists[anchorsToUpdate[i]]);\n                }\n\n                // now that continuous anchors have been placed, paint all the endpoints for this element\n                // TODO performance: add the endpoint ids to a temp array, and then when iterating in the next\n                // loop, check that we didn't just paint that endpoint. we can probably shave off a few more milliseconds this way.\n                for (i = 0; i < ep.length; i++) {\n                    ep[i].paint({ timestamp: timestamp, offset: myOffset, dimensions: myOffset.s, recalc: doNotRecalcEndpoint !== true });\n                }\n\n                // ... and any other endpoints we came across as a result of the continuous anchors.\n                for (i = 0; i < endpointsToPaint.length; i++) {\n                    var cd = jsPlumbInstance.getCachedData(endpointsToPaint[i].elementId);\n                    endpointsToPaint[i].paint({ timestamp: timestamp, offset: cd, dimensions: cd.s });\n                }\n\n                // paint all the standard and \"dynamic connections\", which are connections whose other anchor is\n                // static and therefore does need to be recomputed; we make sure that happens only one time.\n\n                // TODO we could have compiled a list of these in the first pass through connections; might save some time.\n                for (i = 0; i < endpointConnections.length; i++) {\n                    var otherEndpoint = endpointConnections[i][1];\n                    if (otherEndpoint.anchor.constructor == _jp.DynamicAnchor) {\n                        otherEndpoint.paint({ elementWithPrecedence: elementId, timestamp: timestamp });\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\n                            return c.id == endpointConnections[i][0].id;\n                        });\n                        // all the connections for the other endpoint now need to be repainted\n                        for (var k = 0; k < otherEndpoint.connections.length; k++) {\n                            if (otherEndpoint.connections[k] !== endpointConnections[i][0])\n                                _ju.addWithFunction(connectionsToPaint, otherEndpoint.connections[k], function (c) {\n                                    return c.id == otherEndpoint.connections[k].id;\n                                });\n                        }\n                    } else if (otherEndpoint.anchor.constructor == _jp.Anchor) {\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\n                            return c.id == endpointConnections[i][0].id;\n                        });\n                    }\n                }\n\n                // paint current floating connection for this element, if there is one.\n                var fc = floatingConnections[elementId];\n                if (fc)\n                    fc.paint({timestamp: timestamp, recalc: false, elId: elementId});\n\n                // paint all the connections\n                for (i = 0; i < connectionsToPaint.length; i++) {\n                    connectionsToPaint[i].paint({elId: elementId, timestamp: timestamp, recalc: false, clearEdits: clearEdits});\n                }\n            }\n        };\n\n        var ContinuousAnchor = function (anchorParams) {\n            _ju.EventGenerator.apply(this);\n            this.type = \"Continuous\";\n            this.isDynamic = true;\n            this.isContinuous = true;\n            var faces = anchorParams.faces || [\"top\", \"right\", \"bottom\", \"left\"],\n                clockwise = !(anchorParams.clockwise === false),\n                availableFaces = { },\n                opposites = { \"top\": \"bottom\", \"right\": \"left\", \"left\": \"right\", \"bottom\": \"top\" },\n                clockwiseOptions = { \"top\": \"right\", \"right\": \"bottom\", \"left\": \"top\", \"bottom\": \"left\" },\n                antiClockwiseOptions = { \"top\": \"left\", \"right\": \"top\", \"left\": \"bottom\", \"bottom\": \"right\" },\n                secondBest = clockwise ? clockwiseOptions : antiClockwiseOptions,\n                lastChoice = clockwise ? antiClockwiseOptions : clockwiseOptions,\n                cssClass = anchorParams.cssClass || \"\";\n\n            for (var i = 0; i < faces.length; i++) {\n                availableFaces[faces[i]] = true;\n            }\n\n            this.getDefaultFace = function () {\n                return faces.length === 0 ? \"top\" : faces[0];\n            };\n\n            // if the given edge is supported, returns it. otherwise looks for a substitute that _is_\n            // supported. if none supported we also return the request edge.\n            this.verifyEdge = function (edge) {\n                if (availableFaces[edge]) return edge;\n                else if (availableFaces[opposites[edge]]) return opposites[edge];\n                else if (availableFaces[secondBest[edge]]) return secondBest[edge];\n                else if (availableFaces[lastChoice[edge]]) return lastChoice[edge];\n                return edge; // we have to give them something.\n            };\n\n            this.isEdgeSupported = function (edge) {\n                return availableFaces[edge] === true;\n            };\n\n            this.compute = function (params) {\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\n            };\n            this.getCurrentLocation = function (params) {\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\n            };\n            this.getOrientation = function (endpoint) {\n                return continuousAnchorOrientations[endpoint.id] || [0, 0];\n            };\n            this.clearUserDefinedLocation = function () {\n                delete userDefinedContinuousAnchorLocations[anchorParams.elementId];\n            };\n            this.setUserDefinedLocation = function (loc) {\n                userDefinedContinuousAnchorLocations[anchorParams.elementId] = loc;\n            };\n            this.getCssClass = function () {\n                return cssClass;\n            };\n        };\n\n        // continuous anchors\n        jsPlumbInstance.continuousAnchorFactory = {\n            get: function (params) {\n                return new ContinuousAnchor(params);\n            },\n            clear: function (elementId) {\n                delete userDefinedContinuousAnchorLocations[elementId];\n                delete continuousAnchorLocations[elementId];\n            }\n        };\n    };\n\n    /**\n     * Anchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\n     * was required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \"TopMiddle\"),\n     * or by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \"TopMiddle\").  jsPlumb now handles all of the\n     * creation of Anchors without user intervention.\n     */\n    _jp.Anchor = function (params) {\n        this.x = params.x || 0;\n        this.y = params.y || 0;\n        this.elementId = params.elementId;\n        this.cssClass = params.cssClass || \"\";\n        this.userDefinedLocation = null;\n        this.orientation = params.orientation || [ 0, 0 ];\n        this.lastReturnValue = null;\n        this.offsets = params.offsets || [ 0, 0 ];\n        this.timestamp = null;\n\n        _ju.EventGenerator.apply(this);\n\n        this.compute = function (params) {\n\n            var xy = params.xy, wh = params.wh, timestamp = params.timestamp;\n\n            if (params.clearUserDefinedLocation)\n                this.userDefinedLocation = null;\n\n            if (timestamp && timestamp === self.timestamp)\n                return this.lastReturnValue;\n\n            if (this.userDefinedLocation != null) {\n                this.lastReturnValue = this.userDefinedLocation;\n            }\n            else {\n                this.lastReturnValue = [ xy[0] + (this.x * wh[0]) + this.offsets[0], xy[1] + (this.y * wh[1]) + this.offsets[1] ];\n            }\n\n            this.timestamp = timestamp;\n            return this.lastReturnValue;\n        };\n\n        this.getCurrentLocation = function (params) {\n            return (this.lastReturnValue == null || (params.timestamp != null && this.timestamp != params.timestamp)) ? this.compute(params) : this.lastReturnValue;\n        };\n    };\n    _ju.extend(_jp.Anchor, _ju.EventGenerator, {\n        equals: function (anchor) {\n            if (!anchor) return false;\n            var ao = anchor.getOrientation(),\n                o = this.getOrientation();\n            return this.x == anchor.x && this.y == anchor.y && this.offsets[0] == anchor.offsets[0] && this.offsets[1] == anchor.offsets[1] && o[0] == ao[0] && o[1] == ao[1];\n        },\n        getUserDefinedLocation: function () {\n            return this.userDefinedLocation;\n        },\n        setUserDefinedLocation: function (l) {\n            this.userDefinedLocation = l;\n        },\n        clearUserDefinedLocation: function () {\n            this.userDefinedLocation = null;\n        },\n        getOrientation: function () {\n            return this.orientation;\n        },\n        getCssClass: function () {\n            return this.cssClass;\n        }\n    });\n\n    /**\n     * An Anchor that floats. its orientation is computed dynamically from\n     * its position relative to the anchor it is floating relative to.  It is used when creating\n     * a connection through drag and drop.\n     *\n     * TODO FloatingAnchor could totally be refactored to extend Anchor just slightly.\n     */\n    _jp.FloatingAnchor = function (params) {\n\n        _jp.Anchor.apply(this, arguments);\n\n        // this is the anchor that this floating anchor is referenced to for\n        // purposes of calculating the orientation.\n        var ref = params.reference,\n            // the canvas this refers to.\n            refCanvas = params.referenceCanvas,\n            size = _jp.getSize(refCanvas),\n            // these are used to store the current relative position of our\n            // anchor wrt the reference anchor. they only indicate\n            // direction, so have a value of 1 or -1 (or, very rarely, 0). these\n            // values are written by the compute method, and read\n            // by the getOrientation method.\n            xDir = 0, yDir = 0,\n            // temporary member used to store an orientation when the floating\n            // anchor is hovering over another anchor.\n            orientation = null,\n            _lastResult = null;\n\n        // clear from parent. we want floating anchor orientation to always be computed.\n        this.orientation = null;\n\n        // set these to 0 each; they are used by certain types of connectors in the loopback case,\n        // when the connector is trying to clear the element it is on. but for floating anchor it's not\n        // very important.\n        this.x = 0;\n        this.y = 0;\n\n        this.isFloating = true;\n\n        this.compute = function (params) {\n            var xy = params.xy,\n                result = [ xy[0] + (size[0] / 2), xy[1] + (size[1] / 2) ]; // return origin of the element. we may wish to improve this so that any object can be the drag proxy.\n            _lastResult = result;\n            return result;\n        };\n\n        this.getOrientation = function (_endpoint) {\n            if (orientation) return orientation;\n            else {\n                var o = ref.getOrientation(_endpoint);\n                // here we take into account the orientation of the other\n                // anchor: if it declares zero for some direction, we declare zero too. this might not be the most awesome. perhaps we can come\n                // up with a better way. it's just so that the line we draw looks like it makes sense. maybe this wont make sense.\n                return [ Math.abs(o[0]) * xDir * -1,\n                        Math.abs(o[1]) * yDir * -1 ];\n            }\n        };\n\n        /**\n         * notification the endpoint associated with this anchor is hovering\n         * over another anchor; we want to assume that anchor's orientation\n         * for the duration of the hover.\n         */\n        this.over = function (anchor, endpoint) {\n            orientation = anchor.getOrientation(endpoint);\n        };\n\n        /**\n         * notification the endpoint associated with this anchor is no\n         * longer hovering over another anchor; we should resume calculating\n         * orientation as we normally do.\n         */\n        this.out = function () {\n            orientation = null;\n        };\n\n        this.getCurrentLocation = function (params) {\n            return _lastResult == null ? this.compute(params) : _lastResult;\n        };\n    };\n    _ju.extend(_jp.FloatingAnchor, _jp.Anchor);\n\n    var _convertAnchor = function (anchor, jsPlumbInstance, elementId) {\n        return anchor.constructor == _jp.Anchor ? anchor : jsPlumbInstance.makeAnchor(anchor, elementId, jsPlumbInstance);\n    };\n\n    /* \n     * A DynamicAnchor is an Anchor that contains a list of other Anchors, which it cycles\n     * through at compute time to find the one that is located closest to\n     * the center of the target element, and returns that Anchor's compute\n     * method result. this causes endpoints to follow each other with\n     * respect to the orientation of their target elements, which is a useful\n     * feature for some applications.\n     * \n     */\n    _jp.DynamicAnchor = function (params) {\n        _jp.Anchor.apply(this, arguments);\n\n        this.isDynamic = true;\n        this.anchors = [];\n        this.elementId = params.elementId;\n        this.jsPlumbInstance = params.jsPlumbInstance;\n\n        for (var i = 0; i < params.anchors.length; i++)\n            this.anchors[i] = _convertAnchor(params.anchors[i], this.jsPlumbInstance, this.elementId);\n\n        this.getAnchors = function () {\n            return this.anchors;\n        };\n        this.locked = false;\n        var _curAnchor = this.anchors.length > 0 ? this.anchors[0] : null,\n            _lastAnchor = _curAnchor,\n            self = this,\n\n        // helper method to calculate the distance between the centers of the two elements.\n            _distance = function (anchor, cx, cy, xy, wh) {\n                var ax = xy[0] + (anchor.x * wh[0]), ay = xy[1] + (anchor.y * wh[1]),\n                    acx = xy[0] + (wh[0] / 2), acy = xy[1] + (wh[1] / 2);\n                return (Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2)) +\n                    Math.sqrt(Math.pow(acx - ax, 2) + Math.pow(acy - ay, 2)));\n            },\n        // default method uses distance between element centers.  you can provide your own method in the dynamic anchor\n        // constructor (and also to jsPlumb.makeDynamicAnchor). the arguments to it are four arrays:\n        // xy - xy loc of the anchor's element\n        // wh - anchor's element's dimensions\n        // txy - xy loc of the element of the other anchor in the connection\n        // twh - dimensions of the element of the other anchor in the connection.\n        // anchors - the list of selectable anchors\n            _anchorSelector = params.selector || function (xy, wh, txy, twh, anchors) {\n                var cx = txy[0] + (twh[0] / 2), cy = txy[1] + (twh[1] / 2);\n                var minIdx = -1, minDist = Infinity;\n                for (var i = 0; i < anchors.length; i++) {\n                    var d = _distance(anchors[i], cx, cy, xy, wh);\n                    if (d < minDist) {\n                        minIdx = i + 0;\n                        minDist = d;\n                    }\n                }\n                return anchors[minIdx];\n            };\n\n        this.compute = function (params) {\n            var xy = params.xy, wh = params.wh, txy = params.txy, twh = params.twh;\n\n            this.timestamp = params.timestamp;\n\n            var udl = self.getUserDefinedLocation();\n            if (udl != null) {\n                return udl;\n            }\n\n            // if anchor is locked or an opposite element was not given, we\n            // maintain our state. anchor will be locked\n            // if it is the source of a drag and drop.\n            if (this.locked || txy == null || twh == null)\n                return _curAnchor.compute(params);\n            else\n                params.timestamp = null; // otherwise clear this, i think. we want the anchor to compute.\n\n            _curAnchor = _anchorSelector(xy, wh, txy, twh, this.anchors);\n            this.x = _curAnchor.x;\n            this.y = _curAnchor.y;\n\n            if (_curAnchor != _lastAnchor)\n                this.fire(\"anchorChanged\", _curAnchor);\n\n            _lastAnchor = _curAnchor;\n\n            return _curAnchor.compute(params);\n        };\n\n        this.getCurrentLocation = function (params) {\n            return this.getUserDefinedLocation() || (_curAnchor != null ? _curAnchor.getCurrentLocation(params) : null);\n        };\n\n        this.getOrientation = function (_endpoint) {\n            return _curAnchor != null ? _curAnchor.getOrientation(_endpoint) : [ 0, 0 ];\n        };\n        this.over = function (anchor, endpoint) {\n            if (_curAnchor != null) _curAnchor.over(anchor, endpoint);\n        };\n        this.out = function () {\n            if (_curAnchor != null) _curAnchor.out();\n        };\n\n        this.getCssClass = function () {\n            return (_curAnchor && _curAnchor.getCssClass()) || \"\";\n        };\n    };\n    _ju.extend(_jp.DynamicAnchor, _jp.Anchor);\n\n// -------- basic anchors ------------------    \n    var _curryAnchor = function (x, y, ox, oy, type, fnInit) {\n        _jp.Anchors[type] = function (params) {\n            var a = params.jsPlumbInstance.makeAnchor([ x, y, ox, oy, 0, 0 ], params.elementId, params.jsPlumbInstance);\n            a.type = type;\n            if (fnInit) fnInit(a, params);\n            return a;\n        };\n    };\n\n    _curryAnchor(0.5, 0, 0, -1, \"TopCenter\");\n    _curryAnchor(0.5, 1, 0, 1, \"BottomCenter\");\n    _curryAnchor(0, 0.5, -1, 0, \"LeftMiddle\");\n    _curryAnchor(1, 0.5, 1, 0, \"RightMiddle\");\n\n    _curryAnchor(0.5, 0, 0, -1, \"Top\");\n    _curryAnchor(0.5, 1, 0, 1, \"Bottom\");\n    _curryAnchor(0, 0.5, -1, 0, \"Left\");\n    _curryAnchor(1, 0.5, 1, 0, \"Right\");\n    _curryAnchor(0.5, 0.5, 0, 0, \"Center\");\n    _curryAnchor(1, 0, 0, -1, \"TopRight\");\n    _curryAnchor(1, 1, 0, 1, \"BottomRight\");\n    _curryAnchor(0, 0, 0, -1, \"TopLeft\");\n    _curryAnchor(0, 1, 0, 1, \"BottomLeft\");\n\n// ------- dynamic anchors -------------------    \n\n    // default dynamic anchors chooses from Top, Right, Bottom, Left\n    _jp.Defaults.DynamicAnchors = function (params) {\n        return params.jsPlumbInstance.makeAnchors([\"TopCenter\", \"RightMiddle\", \"BottomCenter\", \"LeftMiddle\"], params.elementId, params.jsPlumbInstance);\n    };\n\n    // default dynamic anchors bound to name 'AutoDefault'\n    _jp.Anchors.AutoDefault = function (params) {\n        var a = params.jsPlumbInstance.makeDynamicAnchor(_jp.Defaults.DynamicAnchors(params));\n        a.type = \"AutoDefault\";\n        return a;\n    };\n\n// ------- continuous anchors -------------------    \n\n    var _curryContinuousAnchor = function (type, faces) {\n        _jp.Anchors[type] = function (params) {\n            var a = params.jsPlumbInstance.makeAnchor([\"Continuous\", { faces: faces }], params.elementId, params.jsPlumbInstance);\n            a.type = type;\n            return a;\n        };\n    };\n\n    _jp.Anchors.Continuous = function (params) {\n        return params.jsPlumbInstance.continuousAnchorFactory.get(params);\n    };\n\n    _curryContinuousAnchor(\"ContinuousLeft\", [\"left\"]);\n    _curryContinuousAnchor(\"ContinuousTop\", [\"top\"]);\n    _curryContinuousAnchor(\"ContinuousBottom\", [\"bottom\"]);\n    _curryContinuousAnchor(\"ContinuousRight\", [\"right\"]);\n\n// ------- position assign anchors -------------------    \n\n    // this anchor type lets you assign the position at connection time.\n    _curryAnchor(0, 0, 0, 0, \"Assign\", function (anchor, params) {\n        // find what to use as the \"position finder\". the user may have supplied a String which represents\n        // the id of a position finder in jsPlumb.AnchorPositionFinders, or the user may have supplied the\n        // position finder as a function.  we find out what to use and then set it on the anchor.\n        var pf = params.position || \"Fixed\";\n        anchor.positionFinder = pf.constructor == String ? params.jsPlumbInstance.AnchorPositionFinders[pf] : pf;\n        // always set the constructor params; the position finder might need them later (the Grid one does,\n        // for example)\n        anchor.constructorParams = params;\n    });\n\n    // these are the default anchor positions finders, which are used by the makeTarget function.  supplying\n    // a position finder argument to that function allows you to specify where the resulting anchor will\n    // be located\n    jsPlumbInstance.prototype.AnchorPositionFinders = {\n        \"Fixed\": function (dp, ep, es) {\n            return [ (dp.left - ep.left) / es[0], (dp.top - ep.top) / es[1] ];\n        },\n        \"Grid\": function (dp, ep, es, params) {\n            var dx = dp.left - ep.left, dy = dp.top - ep.top,\n                gx = es[0] / (params.grid[0]), gy = es[1] / (params.grid[1]),\n                mx = Math.floor(dx / gx), my = Math.floor(dy / gy);\n            return [ ((mx * gx) + (gx / 2)) / es[0], ((my * gy) + (gy / 2)) / es[1] ];\n        }\n    };\n\n// ------- perimeter anchors -------------------    \n\n    _jp.Anchors.Perimeter = function (params) {\n        params = params || {};\n        var anchorCount = params.anchorCount || 60,\n            shape = params.shape;\n\n        if (!shape) throw new Error(\"no shape supplied to Perimeter Anchor type\");\n\n        var _circle = function () {\n                var r = 0.5, step = Math.PI * 2 / anchorCount, current = 0, a = [];\n                for (var i = 0; i < anchorCount; i++) {\n                    var x = r + (r * Math.sin(current)),\n                        y = r + (r * Math.cos(current));\n                    a.push([ x, y, 0, 0 ]);\n                    current += step;\n                }\n                return a;\n            },\n            _path = function (segments) {\n                var anchorsPerFace = anchorCount / segments.length, a = [],\n                    _computeFace = function (x1, y1, x2, y2, fractionalLength) {\n                        anchorsPerFace = anchorCount * fractionalLength;\n                        var dx = (x2 - x1) / anchorsPerFace, dy = (y2 - y1) / anchorsPerFace;\n                        for (var i = 0; i < anchorsPerFace; i++) {\n                            a.push([\n                                    x1 + (dx * i),\n                                    y1 + (dy * i),\n                                0,\n                                0\n                            ]);\n                        }\n                    };\n\n                for (var i = 0; i < segments.length; i++)\n                    _computeFace.apply(null, segments[i]);\n\n                return a;\n            },\n            _shape = function (faces) {\n                var s = [];\n                for (var i = 0; i < faces.length; i++) {\n                    s.push([faces[i][0], faces[i][1], faces[i][2], faces[i][3], 1 / faces.length]);\n                }\n                return _path(s);\n            },\n            _rectangle = function () {\n                return _shape([\n                    [ 0, 0, 1, 0 ],\n                    [ 1, 0, 1, 1 ],\n                    [ 1, 1, 0, 1 ],\n                    [ 0, 1, 0, 0 ]\n                ]);\n            };\n\n        var _shapes = {\n                \"Circle\": _circle,\n                \"Ellipse\": _circle,\n                \"Diamond\": function () {\n                    return _shape([\n                        [ 0.5, 0, 1, 0.5 ],\n                        [ 1, 0.5, 0.5, 1 ],\n                        [ 0.5, 1, 0, 0.5 ],\n                        [ 0, 0.5, 0.5, 0 ]\n                    ]);\n                },\n                \"Rectangle\": _rectangle,\n                \"Square\": _rectangle,\n                \"Triangle\": function () {\n                    return _shape([\n                        [ 0.5, 0, 1, 1 ],\n                        [ 1, 1, 0, 1 ],\n                        [ 0, 1, 0.5, 0]\n                    ]);\n                },\n                \"Path\": function (params) {\n                    var points = params.points, p = [], tl = 0;\n                    for (var i = 0; i < points.length - 1; i++) {\n                        var l = Math.sqrt(Math.pow(points[i][2] - points[i][0]) + Math.pow(points[i][3] - points[i][1]));\n                        tl += l;\n                        p.push([points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], l]);\n                    }\n                    for (var j = 0; j < p.length; j++) {\n                        p[j][4] = p[j][4] / tl;\n                    }\n                    return _path(p);\n                }\n            },\n            _rotate = function (points, amountInDegrees) {\n                var o = [], theta = amountInDegrees / 180 * Math.PI;\n                for (var i = 0; i < points.length; i++) {\n                    var _x = points[i][0] - 0.5,\n                        _y = points[i][1] - 0.5;\n\n                    o.push([\n                            0.5 + ((_x * Math.cos(theta)) - (_y * Math.sin(theta))),\n                            0.5 + ((_x * Math.sin(theta)) + (_y * Math.cos(theta))),\n                        points[i][2],\n                        points[i][3]\n                    ]);\n                }\n                return o;\n            };\n\n        if (!_shapes[shape]) throw new Error(\"Shape [\" + shape + \"] is unknown by Perimeter Anchor type\");\n\n        var da = _shapes[shape](params);\n        if (params.rotation) da = _rotate(da, params.rotation);\n        var a = params.jsPlumbInstance.makeDynamicAnchor(da);\n        a.type = \"Perimeter\";\n        return a;\n    };\n}).call(this);\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the default Connectors, Endpoint and Overlay definitions.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil, _jg = root.Biltong;\n\n    _jp.Segments = {\n\n        /*\n         * Class: AbstractSegment\n         * A Connector is made up of 1..N Segments, each of which has a Type, such as 'Straight', 'Arc',\n         * 'Bezier'. This is new from 1.4.2, and gives us a lot more flexibility when drawing connections: things such\n         * as rounded corners for flowchart connectors, for example, or a straight line stub for Bezier connections, are\n         * much easier to do now.\n         *\n         * A Segment is responsible for providing coordinates for painting it, and also must be able to report its length.\n         * \n         */\n        AbstractSegment: function (params) {\n            this.params = params;\n\n            /**\n             * Function: findClosestPointOnPath\n             * Finds the closest point on this segment to the given [x, y],\n             * returning both the x and y of the point plus its distance from\n             * the supplied point, and its location along the length of the\n             * path inscribed by the segment.  This implementation returns\n             * Infinity for distance and null values for everything else;\n             * subclasses are expected to override.\n             */\n            this.findClosestPointOnPath = function (x, y) {\n                return {\n                    d: Infinity,\n                    x: null,\n                    y: null,\n                    l: null\n                };\n            };\n\n            this.getBounds = function () {\n                return {\n                    minX: Math.min(params.x1, params.x2),\n                    minY: Math.min(params.y1, params.y2),\n                    maxX: Math.max(params.x1, params.x2),\n                    maxY: Math.max(params.y1, params.y2)\n                };\n            };\n        },\n        Straight: function (params) {\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\n                length, m, m2, x1, x2, y1, y2,\n                _recalc = function () {\n                    length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n                    m = _jg.gradient({x: x1, y: y1}, {x: x2, y: y2});\n                    m2 = -1 / m;\n                };\n\n            this.type = \"Straight\";\n\n            this.getLength = function () {\n                return length;\n            };\n            this.getGradient = function () {\n                return m;\n            };\n\n            this.getCoordinates = function () {\n                return { x1: x1, y1: y1, x2: x2, y2: y2 };\n            };\n            this.setCoordinates = function (coords) {\n                x1 = coords.x1;\n                y1 = coords.y1;\n                x2 = coords.x2;\n                y2 = coords.y2;\n                _recalc();\n            };\n            this.setCoordinates({x1: params.x1, y1: params.y1, x2: params.x2, y2: params.y2});\n\n            this.getBounds = function () {\n                return {\n                    minX: Math.min(x1, x2),\n                    minY: Math.min(y1, y2),\n                    maxX: Math.max(x1, x2),\n                    maxY: Math.max(y1, y2)\n                };\n            };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive. for the straight line segment this is simple maths.\n             */\n            this.pointOnPath = function (location, absolute) {\n                if (location === 0 && !absolute)\n                    return { x: x1, y: y1 };\n                else if (location == 1 && !absolute)\n                    return { x: x2, y: y2 };\n                else {\n                    var l = absolute ? location > 0 ? location : length + location : location * length;\n                    return _jg.pointOnLine({x: x1, y: y1}, {x: x2, y: y2}, l);\n                }\n            };\n\n            /**\n             * returns the gradient of the segment at the given point - which for us is constant.\n             */\n            this.gradientAtPoint = function (_) {\n                return m;\n            };\n\n            /**\n             * returns the point on the segment's path that is 'distance' along the length of the path from 'location', where\n             * 'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.\n             * this hands off to jsPlumbUtil to do the maths, supplying two points and the distance.\n             */\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute),\n                    farAwayPoint = distance <= 0 ? {x: x1, y: y1} : {x: x2, y: y2 };\n\n                /*\n                 location == 1 ? {\n                 x:x1 + ((x2 - x1) * 10),\n                 y:y1 + ((y1 - y2) * 10)\n                 } :\n                 */\n\n                if (distance <= 0 && Math.abs(distance) > 1) distance *= -1;\n\n                return _jg.pointOnLine(p, farAwayPoint, distance);\n            };\n\n            // is c between a and b?\n            var within = function (a, b, c) {\n                return c >= Math.min(a, b) && c <= Math.max(a, b);\n            };\n            // find which of a and b is closest to c\n            var closest = function (a, b, c) {\n                return Math.abs(c - a) < Math.abs(c - b) ? a : b;\n            };\n\n            /**\n             Function: findClosestPointOnPath\n             Finds the closest point on this segment to [x,y]. See\n             notes on this method in AbstractSegment.\n             */\n            this.findClosestPointOnPath = function (x, y) {\n                var out = {\n                    d: Infinity,\n                    x: null,\n                    y: null,\n                    l: null,\n                    x1: x1,\n                    x2: x2,\n                    y1: y1,\n                    y2: y2\n                };\n\n                if (m === 0) {\n                    out.y = y1;\n                    out.x = within(x1, x2, x) ? x : closest(x1, x2, x);\n                }\n                else if (m == Infinity || m == -Infinity) {\n                    out.x = x1;\n                    out.y = within(y1, y2, y) ? y : closest(y1, y2, y);\n                }\n                else {\n                    // closest point lies on normal from given point to this line.  \n                    var b = y1 - (m * x1),\n                        b2 = y - (m2 * x),\n                    // y1 = m.x1 + b and y1 = m2.x1 + b2\n                    // so m.x1 + b = m2.x1 + b2\n                    // x1(m - m2) = b2 - b\n                    // x1 = (b2 - b) / (m - m2)\n                        _x1 = (b2 - b) / (m - m2),\n                        _y1 = (m * _x1) + b;\n\n                    out.x = within(x1, x2, _x1) ? _x1 : closest(x1, x2, _x1);//_x1;\n                    out.y = within(y1, y2, _y1) ? _y1 : closest(y1, y2, _y1);//_y1;\n                }\n\n                var fractionInSegment = _jg.lineLength([ out.x, out.y ], [ x1, y1 ]);\n                out.d = _jg.lineLength([x, y], [out.x, out.y]);\n                out.l = fractionInSegment / length;\n                return out;\n            };\n        },\n\n        /*\n         Arc Segment. You need to supply:\n\n         r   -   radius\n         cx  -   center x for the arc\n         cy  -   center y for the arc\n         ac  -   whether the arc is anticlockwise or not. default is clockwise.\n\n         and then either:\n\n         startAngle  -   startAngle for the arc.\n         endAngle    -   endAngle for the arc.\n\n         or:\n\n         x1          -   x for start point\n         y1          -   y for start point\n         x2          -   x for end point\n         y2          -   y for end point\n\n         */\n        Arc: function (params) {\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\n                _calcAngle = function (_x, _y) {\n                    return _jg.theta([params.cx, params.cy], [_x, _y]);\n                },\n                _calcAngleForLocation = function (segment, location) {\n                    if (segment.anticlockwise) {\n                        var sa = segment.startAngle < segment.endAngle ? segment.startAngle + TWO_PI : segment.startAngle,\n                            s = Math.abs(sa - segment.endAngle);\n                        return sa - (s * location);\n                    }\n                    else {\n                        var ea = segment.endAngle < segment.startAngle ? segment.endAngle + TWO_PI : segment.endAngle,\n                            ss = Math.abs(ea - segment.startAngle);\n\n                        return segment.startAngle + (ss * location);\n                    }\n                },\n                TWO_PI = 2 * Math.PI;\n\n            this.radius = params.r;\n            this.anticlockwise = params.ac;\n            this.type = \"Arc\";\n\n            if (params.startAngle && params.endAngle) {\n                this.startAngle = params.startAngle;\n                this.endAngle = params.endAngle;\n                this.x1 = params.cx + (this.radius * Math.cos(params.startAngle));\n                this.y1 = params.cy + (this.radius * Math.sin(params.startAngle));\n                this.x2 = params.cx + (this.radius * Math.cos(params.endAngle));\n                this.y2 = params.cy + (this.radius * Math.sin(params.endAngle));\n            }\n            else {\n                this.startAngle = _calcAngle(params.x1, params.y1);\n                this.endAngle = _calcAngle(params.x2, params.y2);\n                this.x1 = params.x1;\n                this.y1 = params.y1;\n                this.x2 = params.x2;\n                this.y2 = params.y2;\n            }\n\n            if (this.endAngle < 0) this.endAngle += TWO_PI;\n            if (this.startAngle < 0) this.startAngle += TWO_PI;\n\n            // segment is used by vml     \n            this.segment = _jg.quadrant([this.x1, this.y1], [this.x2, this.y2]);\n\n            // we now have startAngle and endAngle as positive numbers, meaning the\n            // absolute difference (|d|) between them is the sweep (s) of this arc, unless the\n            // arc is 'anticlockwise' in which case 's' is given by 2PI - |d|.\n\n            var ea = this.endAngle < this.startAngle ? this.endAngle + TWO_PI : this.endAngle;\n            this.sweep = Math.abs(ea - this.startAngle);\n            if (this.anticlockwise) this.sweep = TWO_PI - this.sweep;\n            var circumference = 2 * Math.PI * this.radius,\n                frac = this.sweep / TWO_PI,\n                length = circumference * frac;\n\n            this.getLength = function () {\n                return length;\n            };\n\n            this.getBounds = function () {\n                return {\n                    minX: params.cx - params.r,\n                    maxX: params.cx + params.r,\n                    minY: params.cy - params.r,\n                    maxY: params.cy + params.r\n                };\n            };\n\n            var VERY_SMALL_VALUE = 0.0000000001,\n                gentleRound = function (n) {\n                    var f = Math.floor(n), r = Math.ceil(n);\n                    if (n - f < VERY_SMALL_VALUE)\n                        return f;\n                    else if (r - n < VERY_SMALL_VALUE)\n                        return r;\n                    return n;\n                };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive.\n             */\n            this.pointOnPath = function (location, absolute) {\n\n                if (location === 0) {\n                    return { x: this.x1, y: this.y1, theta: this.startAngle };\n                }\n                else if (location == 1) {\n                    return { x: this.x2, y: this.y2, theta: this.endAngle };\n                }\n\n                if (absolute) {\n                    location = location / length;\n                }\n\n                var angle = _calcAngleForLocation(this, location),\n                    _x = params.cx + (params.r * Math.cos(angle)),\n                    _y = params.cy + (params.r * Math.sin(angle));\n\n                return { x: gentleRound(_x), y: gentleRound(_y), theta: angle };\n            };\n\n            /**\n             * returns the gradient of the segment at the given point.\n             */\n            this.gradientAtPoint = function (location, absolute) {\n                var p = this.pointOnPath(location, absolute);\n                var m = _jg.normal([ params.cx, params.cy ], [p.x, p.y ]);\n                if (!this.anticlockwise && (m == Infinity || m == -Infinity)) m *= -1;\n                return m;\n            };\n\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute),\n                    arcSpan = distance / circumference * 2 * Math.PI,\n                    dir = this.anticlockwise ? -1 : 1,\n                    startAngle = p.theta + (dir * arcSpan),\n                    startX = params.cx + (this.radius * Math.cos(startAngle)),\n                    startY = params.cy + (this.radius * Math.sin(startAngle));\n\n                return {x: startX, y: startY};\n            };\n        },\n\n        Bezier: function (params) {\n            this.curve = [\n                { x: params.x1, y: params.y1},\n                { x: params.cp1x, y: params.cp1y },\n                { x: params.cp2x, y: params.cp2y },\n                { x: params.x2, y: params.y2 }\n            ];\n\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments);\n            // although this is not a strictly rigorous determination of bounds\n            // of a bezier curve, it works for the types of curves that this segment\n            // type produces.\n            this.bounds = {\n                minX: Math.min(params.x1, params.x2, params.cp1x, params.cp2x),\n                minY: Math.min(params.y1, params.y2, params.cp1y, params.cp2y),\n                maxX: Math.max(params.x1, params.x2, params.cp1x, params.cp2x),\n                maxY: Math.max(params.y1, params.y2, params.cp1y, params.cp2y)\n            };\n\n            this.type = \"Bezier\";\n\n            var _translateLocation = function (_curve, location, absolute) {\n                if (absolute)\n                    location = root.jsBezier.locationAlongCurveFrom(_curve, location > 0 ? 0 : 1, location);\n\n                return location;\n            };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive.\n             */\n            this.pointOnPath = function (location, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.pointOnCurve(this.curve, location);\n            };\n\n            /**\n             * returns the gradient of the segment at the given point.\n             */\n            this.gradientAtPoint = function (location, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.gradientAtPoint(this.curve, location);\n            };\n\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.pointAlongCurveFrom(this.curve, location, distance);\n            };\n\n            this.getLength = function () {\n                return root.jsBezier.getLength(this.curve);\n            };\n\n            this.getBounds = function () {\n                return this.bounds;\n            };\n        }\n    };\n\n    /*\n     Class: AbstractComponent\n     Superclass for AbstractConnector and AbstractEndpoint.\n     */\n    var AbstractComponent = function () {\n        this.resetBounds = function () {\n            this.bounds = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\n        };\n        this.resetBounds();\n    };\n\n    /*\n     * Class: AbstractConnector\n     * Superclass for all Connectors; here is where Segments are managed.  This is exposed on jsPlumb just so it\n     * can be accessed from other files. You should not try to instantiate one of these directly.\n     *\n     * When this class is asked for a pointOnPath, or gradient etc, it must first figure out which segment to dispatch\n     * that request to. This is done by keeping track of the total connector length as segments are added, and also\n     * their cumulative ratios to the total length.  Then when the right segment is found it is a simple case of dispatching\n     * the request to it (and adjusting 'location' so that it is relative to the beginning of that segment.)\n     */\n    _jp.Connectors.AbstractConnector = function (params) {\n\n        AbstractComponent.apply(this, arguments);\n\n        var segments = [],\n            totalLength = 0,\n            segmentProportions = [],\n            segmentProportionalLengths = [],\n            stub = params.stub || 0,\n            sourceStub = _ju.isArray(stub) ? stub[0] : stub,\n            targetStub = _ju.isArray(stub) ? stub[1] : stub,\n            gap = params.gap || 0,\n            sourceGap = _ju.isArray(gap) ? gap[0] : gap,\n            targetGap = _ju.isArray(gap) ? gap[1] : gap,\n            userProvidedSegments = null,\n            edited = false,\n            paintInfo = null;\n\n        // to be overridden by subclasses.\n        this.getPath = function () {\n        };\n        this.setPath = function (path) {\n        };\n\n        /**\n         * Function: findSegmentForPoint\n         * Returns the segment that is closest to the given [x,y],\n         * null if nothing found.  This function returns a JS\n         * object with:\n         *\n         *   d   -   distance from segment\n         *   l   -   proportional location in segment\n         *   x   -   x point on the segment\n         *   y   -   y point on the segment\n         *   s   -   the segment itself.\n         */\n        this.findSegmentForPoint = function (x, y) {\n            var out = { d: Infinity, s: null, x: null, y: null, l: null };\n            for (var i = 0; i < segments.length; i++) {\n                var _s = segments[i].findClosestPointOnPath(x, y);\n                if (_s.d < out.d) {\n                    out.d = _s.d;\n                    out.l = _s.l;\n                    out.x = _s.x;\n                    out.y = _s.y;\n                    out.s = segments[i];\n                    out.x1 = _s.x1;\n                    out.x2 = _s.x2;\n                    out.y1 = _s.y1;\n                    out.y2 = _s.y2;\n                    out.index = i;\n                }\n            }\n\n            return out;\n        };\n\n        var _updateSegmentProportions = function () {\n                var curLoc = 0;\n                for (var i = 0; i < segments.length; i++) {\n                    var sl = segments[i].getLength();\n                    segmentProportionalLengths[i] = sl / totalLength;\n                    segmentProportions[i] = [curLoc, (curLoc += (sl / totalLength)) ];\n                }\n            },\n\n            /**\n             * returns [segment, proportion of travel in segment, segment index] for the segment\n             * that contains the point which is 'location' distance along the entire path, where\n             * 'location' is a decimal between 0 and 1 inclusive. in this connector type, paths\n             * are made up of a list of segments, each of which contributes some fraction to\n             * the total length.\n             * From 1.3.10 this also supports the 'absolute' property, which lets us specify a location\n             * as the absolute distance in pixels, rather than a proportion of the total path.\n             */\n            _findSegmentForLocation = function (location, absolute) {\n                if (absolute) {\n                    location = location > 0 ? location / totalLength : (totalLength + location) / totalLength;\n                }\n                var idx = segmentProportions.length - 1, inSegmentProportion = 1;\n                for (var i = 0; i < segmentProportions.length; i++) {\n                    if (segmentProportions[i][1] >= location) {\n                        idx = i;\n                        // todo is this correct for all connector path types?\n                        inSegmentProportion = location == 1 ? 1 : location === 0 ? 0 : (location - segmentProportions[i][0]) / segmentProportionalLengths[i];\n                        break;\n                    }\n                }\n                return { segment: segments[idx], proportion: inSegmentProportion, index: idx };\n            },\n            _addSegment = function (conn, type, params) {\n                if (params.x1 == params.x2 && params.y1 == params.y2) return;\n                var s = new _jp.Segments[type](params);\n                segments.push(s);\n                totalLength += s.getLength();\n                conn.updateBounds(s);\n            },\n            _clearSegments = function () {\n                totalLength = segments.length = segmentProportions.length = segmentProportionalLengths.length = 0;\n            };\n\n        this.setSegments = function (_segs) {\n            userProvidedSegments = [];\n            totalLength = 0;\n            for (var i = 0; i < _segs.length; i++) {\n                userProvidedSegments.push(_segs[i]);\n                totalLength += _segs[i].getLength();\n            }\n        };\n\n        this.getLength = function() {\n            return totalLength;\n        };\n\n        var _prepareCompute = function (params) {\n            this.lineWidth = params.lineWidth;\n            var segment = _jg.quadrant(params.sourcePos, params.targetPos),\n                swapX = params.targetPos[0] < params.sourcePos[0],\n                swapY = params.targetPos[1] < params.sourcePos[1],\n                lw = params.lineWidth || 1,\n                so = params.sourceEndpoint.anchor.getOrientation(params.sourceEndpoint),\n                to = params.targetEndpoint.anchor.getOrientation(params.targetEndpoint),\n                x = swapX ? params.targetPos[0] : params.sourcePos[0],\n                y = swapY ? params.targetPos[1] : params.sourcePos[1],\n                w = Math.abs(params.targetPos[0] - params.sourcePos[0]),\n                h = Math.abs(params.targetPos[1] - params.sourcePos[1]);\n\n            // if either anchor does not have an orientation set, we derive one from their relative\n            // positions.  we fix the axis to be the one in which the two elements are further apart, and\n            // point each anchor at the other element.  this is also used when dragging a new connection.\n            if (so[0] === 0 && so[1] === 0 || to[0] === 0 && to[1] === 0) {\n                var index = w > h ? 0 : 1, oIndex = [1, 0][index];\n                so = [];\n                to = [];\n                so[index] = params.sourcePos[index] > params.targetPos[index] ? -1 : 1;\n                to[index] = params.sourcePos[index] > params.targetPos[index] ? 1 : -1;\n                so[oIndex] = 0;\n                to[oIndex] = 0;\n            }\n\n            var sx = swapX ? w + (sourceGap * so[0]) : sourceGap * so[0],\n                sy = swapY ? h + (sourceGap * so[1]) : sourceGap * so[1],\n                tx = swapX ? targetGap * to[0] : w + (targetGap * to[0]),\n                ty = swapY ? targetGap * to[1] : h + (targetGap * to[1]),\n                oProduct = ((so[0] * to[0]) + (so[1] * to[1]));\n\n            var result = {\n                sx: sx, sy: sy, tx: tx, ty: ty, lw: lw,\n                xSpan: Math.abs(tx - sx),\n                ySpan: Math.abs(ty - sy),\n                mx: (sx + tx) / 2,\n                my: (sy + ty) / 2,\n                so: so, to: to, x: x, y: y, w: w, h: h,\n                segment: segment,\n                startStubX: sx + (so[0] * sourceStub),\n                startStubY: sy + (so[1] * sourceStub),\n                endStubX: tx + (to[0] * targetStub),\n                endStubY: ty + (to[1] * targetStub),\n                isXGreaterThanStubTimes2: Math.abs(sx - tx) > (sourceStub + targetStub),\n                isYGreaterThanStubTimes2: Math.abs(sy - ty) > (sourceStub + targetStub),\n                opposite: oProduct == -1,\n                perpendicular: oProduct === 0,\n                orthogonal: oProduct == 1,\n                sourceAxis: so[0] === 0 ? \"y\" : \"x\",\n                points: [x, y, w, h, sx, sy, tx, ty ]\n            };\n            result.anchorOrientation = result.opposite ? \"opposite\" : result.orthogonal ? \"orthogonal\" : \"perpendicular\";\n            return result;\n        };\n\n        this.getSegments = function () {\n            return segments;\n        };\n\n        this.updateBounds = function (segment) {\n            var segBounds = segment.getBounds();\n            this.bounds.minX = Math.min(this.bounds.minX, segBounds.minX);\n            this.bounds.maxX = Math.max(this.bounds.maxX, segBounds.maxX);\n            this.bounds.minY = Math.min(this.bounds.minY, segBounds.minY);\n            this.bounds.maxY = Math.max(this.bounds.maxY, segBounds.maxY);\n        };\n\n        var dumpSegmentsToConsole = function () {\n            console.log(\"SEGMENTS:\");\n            for (var i = 0; i < segments.length; i++) {\n                console.log(segments[i].type, segments[i].getLength(), segmentProportions[i]);\n            }\n        };\n\n        this.pointOnPath = function (location, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            return seg.segment && seg.segment.pointOnPath(seg.proportion, false) || [0, 0];\n        };\n\n        this.gradientAtPoint = function (location, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            return seg.segment && seg.segment.gradientAtPoint(seg.proportion, false) || 0;\n        };\n\n        this.pointAlongPathFrom = function (location, distance, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            // TODO what happens if this crosses to the next segment?\n            return seg.segment && seg.segment.pointAlongPathFrom(seg.proportion, distance, false) || [0, 0];\n        };\n\n        this.compute = function (params) {\n            if (!edited)\n                paintInfo = _prepareCompute.call(this, params);\n\n            _clearSegments();\n            this._compute(paintInfo, params);\n            this.x = paintInfo.points[0];\n            this.y = paintInfo.points[1];\n            this.w = paintInfo.points[2];\n            this.h = paintInfo.points[3];\n            this.segment = paintInfo.segment;\n            _updateSegmentProportions();\n        };\n\n        return {\n            addSegment: _addSegment,\n            prepareCompute: _prepareCompute,\n            sourceStub: sourceStub,\n            targetStub: targetStub,\n            maxStub: Math.max(sourceStub, targetStub),\n            sourceGap: sourceGap,\n            targetGap: targetGap,\n            maxGap: Math.max(sourceGap, targetGap)\n        };\n    };\n    _ju.extend(_jp.Connectors.AbstractConnector, AbstractComponent);\n\n    /**\n     * Class: Connectors.Straight\n     * The Straight connector draws a simple straight line between the two anchor points.  It does not have any constructor parameters.\n     */\n    var Straight = _jp.Connectors.Straight = function () {\n        this.type = \"Straight\";\n        var _super = _jp.Connectors.AbstractConnector.apply(this, arguments);\n\n        this._compute = function (paintInfo, _) {\n            _super.addSegment(this, \"Straight\", {x1: paintInfo.sx, y1: paintInfo.sy, x2: paintInfo.startStubX, y2: paintInfo.startStubY});\n            _super.addSegment(this, \"Straight\", {x1: paintInfo.startStubX, y1: paintInfo.startStubY, x2: paintInfo.endStubX, y2: paintInfo.endStubY});\n            _super.addSegment(this, \"Straight\", {x1: paintInfo.endStubX, y1: paintInfo.endStubY, x2: paintInfo.tx, y2: paintInfo.ty});\n        };\n    };\n    _ju.extend(_jp.Connectors.Straight, _jp.Connectors.AbstractConnector);\n    _jp.registerConnectorType(Straight, \"Straight\");\n\n\n    // ********************************* END OF CONNECTOR TYPES *******************************************************************\n\n    // ********************************* ENDPOINT TYPES *******************************************************************\n\n    _jp.Endpoints.AbstractEndpoint = function (params) {\n        AbstractComponent.apply(this, arguments);\n        var compute = this.compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var out = this._compute.apply(this, arguments);\n            this.x = out[0];\n            this.y = out[1];\n            this.w = out[2];\n            this.h = out[3];\n            this.bounds.minX = this.x;\n            this.bounds.minY = this.y;\n            this.bounds.maxX = this.x + this.w;\n            this.bounds.maxY = this.y + this.h;\n            return out;\n        };\n        return {\n            compute: compute,\n            cssClass: params.cssClass\n        };\n    };\n    _ju.extend(_jp.Endpoints.AbstractEndpoint, AbstractComponent);\n\n    /**\n     * Class: Endpoints.Dot\n     * A round endpoint, with default radius 10 pixels.\n     */\n\n    /**\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     *    radius    -    radius of the endpoint.  defaults to 10 pixels.\n     */\n    _jp.Endpoints.Dot = function (params) {\n        this.type = \"Dot\";\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        params = params || {};\n        this.radius = params.radius || 10;\n        this.defaultOffset = 0.5 * this.radius;\n        this.defaultInnerRadius = this.radius / 3;\n\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            this.radius = endpointStyle.radius || this.radius;\n            var x = anchorPoint[0] - this.radius,\n                y = anchorPoint[1] - this.radius,\n                w = this.radius * 2,\n                h = this.radius * 2;\n\n            if (endpointStyle.strokeStyle) {\n                var lw = endpointStyle.lineWidth || 1;\n                x -= lw;\n                y -= lw;\n                w += (lw * 2);\n                h += (lw * 2);\n            }\n            return [ x, y, w, h, this.radius ];\n        };\n    };\n    _ju.extend(_jp.Endpoints.Dot, _jp.Endpoints.AbstractEndpoint);\n\n    _jp.Endpoints.Rectangle = function (params) {\n        this.type = \"Rectangle\";\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        params = params || {};\n        this.width = params.width || 20;\n        this.height = params.height || 20;\n\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var width = endpointStyle.width || this.width,\n                height = endpointStyle.height || this.height,\n                x = anchorPoint[0] - (width / 2),\n                y = anchorPoint[1] - (height / 2);\n\n            return [ x, y, width, height];\n        };\n    };\n    _ju.extend(_jp.Endpoints.Rectangle, _jp.Endpoints.AbstractEndpoint);\n\n    var DOMElementEndpoint = function (params) {\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        this._jsPlumb.displayElements = [];\n    };\n    _ju.extend(DOMElementEndpoint, _jp.jsPlumbUIComponent, {\n        getDisplayElements: function () {\n            return this._jsPlumb.displayElements;\n        },\n        appendDisplayElement: function (el) {\n            this._jsPlumb.displayElements.push(el);\n        }\n    });\n\n    /**\n     * Class: Endpoints.Image\n     * Draws an image as the Endpoint.\n     */\n    /**\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     *    src    -    location of the image to use.\n\n     TODO: multiple references to self. not sure quite how to get rid of them entirely. perhaps self = null in the cleanup\n     function will suffice\n\n     TODO this class still might leak memory.\n\n     */\n    _jp.Endpoints.Image = function (params) {\n\n        this.type = \"Image\";\n        DOMElementEndpoint.apply(this, arguments);\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n\n        var _onload = params.onload,\n            src = params.src || params.url,\n            clazz = params.cssClass ? \" \" + params.cssClass : \"\";\n\n        this._jsPlumb.img = new Image();\n        this._jsPlumb.ready = false;\n        this._jsPlumb.initialized = false;\n        this._jsPlumb.deleted = false;\n        this._jsPlumb.widthToUse = params.width;\n        this._jsPlumb.heightToUse = params.height;\n        this._jsPlumb.endpoint = params.endpoint;\n\n        this._jsPlumb.img.onload = function () {\n            if (this._jsPlumb != null) {\n                this._jsPlumb.ready = true;\n                this._jsPlumb.widthToUse = this._jsPlumb.widthToUse || this._jsPlumb.img.width;\n                this._jsPlumb.heightToUse = this._jsPlumb.heightToUse || this._jsPlumb.img.height;\n                if (_onload) {\n                    _onload(this);\n                }\n            }\n        }.bind(this);\n\n        /*\n         Function: setImage\n         Sets the Image to use in this Endpoint.\n\n         Parameters:\n         img         -   may be a URL or an Image object\n         onload      -   optional; a callback to execute once the image has loaded.\n         */\n        this._jsPlumb.endpoint.setImage = function (_img, onload) {\n            var s = _img.constructor == String ? _img : _img.src;\n            _onload = onload;\n            this._jsPlumb.img.src = s;\n\n            if (this.canvas != null)\n                this.canvas.setAttribute(\"src\", this._jsPlumb.img.src);\n        }.bind(this);\n\n        this._jsPlumb.endpoint.setImage(src, _onload);\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            this.anchorPoint = anchorPoint;\n            if (this._jsPlumb.ready) return [anchorPoint[0] - this._jsPlumb.widthToUse / 2, anchorPoint[1] - this._jsPlumb.heightToUse / 2,\n                this._jsPlumb.widthToUse, this._jsPlumb.heightToUse];\n            else return [0, 0, 0, 0];\n        };\n\n        this.canvas = jsPlumb.createElement(\"img\", {\n            position:\"absolute\",\n            margin:0,\n            padding:0,\n            outline:0\n        }, this._jsPlumb.instance.endpointClass + clazz);\n\n        if (this._jsPlumb.widthToUse) this.canvas.setAttribute(\"width\", this._jsPlumb.widthToUse);\n        if (this._jsPlumb.heightToUse) this.canvas.setAttribute(\"height\", this._jsPlumb.heightToUse);\n        this._jsPlumb.instance.appendElement(this.canvas);\n\n        this.actuallyPaint = function (d, style, anchor) {\n            if (!this._jsPlumb.deleted) {\n                if (!this._jsPlumb.initialized) {\n                    this.canvas.setAttribute(\"src\", this._jsPlumb.img.src);\n                    this.appendDisplayElement(this.canvas);\n                    this._jsPlumb.initialized = true;\n                }\n                var x = this.anchorPoint[0] - (this._jsPlumb.widthToUse / 2),\n                    y = this.anchorPoint[1] - (this._jsPlumb.heightToUse / 2);\n                _ju.sizeElement(this.canvas, x, y, this._jsPlumb.widthToUse, this._jsPlumb.heightToUse);\n            }\n        };\n\n        this.paint = function (style, anchor) {\n            if (this._jsPlumb != null) {  // may have been deleted\n                if (this._jsPlumb.ready) {\n                    this.actuallyPaint(style, anchor);\n                }\n                else {\n                    root.setTimeout(function () {\n                        this.paint(style, anchor);\n                    }.bind(this), 200);\n                }\n            }\n        };\n    };\n    _ju.extend(_jp.Endpoints.Image, [ DOMElementEndpoint, _jp.Endpoints.AbstractEndpoint ], {\n        cleanup: function (force) {\n            if (force) {\n                this._jsPlumb.deleted = true;\n                if (this.canvas) this.canvas.parentNode.removeChild(this.canvas);\n                this.canvas = null;\n            }\n        }\n    });\n\n    /*\n     * Class: Endpoints.Blank\n     * An Endpoint that paints nothing (visible) on the screen.  Supports cssClass and hoverClass parameters like all Endpoints.\n     */\n    _jp.Endpoints.Blank = function (params) {\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        this.type = \"Blank\";\n        DOMElementEndpoint.apply(this, arguments);\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            return [anchorPoint[0], anchorPoint[1], 10, 0];\n        };\n\n        var clazz = params.cssClass ? \" \" + params.cssClass : \"\";\n\n        this.canvas = jsPlumb.createElement(\"div\", {\n            display: \"block\",\n            width: \"1px\",\n            height: \"1px\",\n            background: \"transparent\",\n            position: \"absolute\"\n        }, this._jsPlumb.instance.endpointClass + clazz);\n\n        this._jsPlumb.instance.appendElement(this.canvas);\n\n        this.paint = function (style, anchor) {\n            _ju.sizeElement(this.canvas, this.x, this.y, this.w, this.h);\n        };\n    };\n    _ju.extend(_jp.Endpoints.Blank, [_jp.Endpoints.AbstractEndpoint, DOMElementEndpoint], {\n        cleanup: function () {\n            if (this.canvas && this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n            }\n        }\n    });\n\n    /*\n     * Class: Endpoints.Triangle\n     * A triangular Endpoint.\n     */\n    /*\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     * \twidth\t-\twidth of the triangle's base.  defaults to 55 pixels.\n     * \theight\t-\theight of the triangle from base to apex.  defaults to 55 pixels.\n     */\n    _jp.Endpoints.Triangle = function (params) {\n        this.type = \"Triangle\";\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        params = params || {  };\n        params.width = params.width || 55;\n        params.height = params.height || 55;\n        this.width = params.width;\n        this.height = params.height;\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var width = endpointStyle.width || self.width,\n                height = endpointStyle.height || self.height,\n                x = anchorPoint[0] - (width / 2),\n                y = anchorPoint[1] - (height / 2);\n            return [ x, y, width, height ];\n        };\n    };\n// ********************************* END OF ENDPOINT TYPES *******************************************************************\n\n\n// ********************************* OVERLAY DEFINITIONS ***********************************************************************    \n\n    var AbstractOverlay = _jp.Overlays.AbstractOverlay = function (params) {\n        this.visible = true;\n        this.isAppendedAtTopLevel = true;\n        this.component = params.component;\n        this.loc = params.location == null ? 0.5 : params.location;\n        this.endpointLoc = params.endpointLocation == null ? [ 0.5, 0.5] : params.endpointLocation;\n    };\n    AbstractOverlay.prototype = {\n        cleanup: function (force) {\n            if (force) {\n                this.component = null;\n                this.canvas = null;\n                this.endpointLoc = null;\n            }\n        },\n        reattach:function(instance) {\n\n        },\n        setVisible: function (val) {\n            this.visible = val;\n            this.component.repaint();\n        },\n        isVisible: function () {\n            return this.visible;\n        },\n        hide: function () {\n            this.setVisible(false);\n        },\n        show: function () {\n            this.setVisible(true);\n        },\n        incrementLocation: function (amount) {\n            this.loc += amount;\n            this.component.repaint();\n        },\n        setLocation: function (l) {\n            this.loc = l;\n            this.component.repaint();\n        },\n        getLocation: function () {\n            return this.loc;\n        },\n        updateFrom:function() { }\n    };\n\n\n    /*\n     * Class: Overlays.Arrow\n     *\n     * An arrow overlay, defined by four points: the head, the two sides of the tail, and a 'foldback' point at some distance along the length\n     * of the arrow that lines from each tail point converge into.  The foldback point is defined using a decimal that indicates some fraction\n     * of the length of the arrow and has a default value of 0.623.  A foldback point value of 1 would mean that the arrow had a straight line\n     * across the tail.\n     */\n    /*\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     * \tlength - distance in pixels from head to tail baseline. default 20.\n     * \twidth - width in pixels of the tail baseline. default 20.\n     * \tfillStyle - style to use when filling the arrow.  defaults to \"black\".\n     * \tstrokeStyle - style to use when stroking the arrow. defaults to null, which means the arrow is not stroked.\n     * \tlineWidth - line width to use when stroking the arrow. defaults to 1, but only used if strokeStyle is not null.\n     * \tfoldback - distance (as a decimal from 0 to 1 inclusive) along the length of the arrow marking the point the tail points should fold back to.  defaults to 0.623.\n     * \tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the arrow should sit on the connector. defaults to 0.5.\n     * \tdirection - indicates the direction the arrow points in. valid values are -1 and 1; 1 is default.\n     */\n    _jp.Overlays.Arrow = function (params) {\n        this.type = \"Arrow\";\n        AbstractOverlay.apply(this, arguments);\n        this.isAppendedAtTopLevel = false;\n        params = params || {};\n\n        this.length = params.length || 20;\n        this.width = params.width || 20;\n        this.id = params.id;\n        var direction = (params.direction || 1) < 0 ? -1 : 1,\n            paintStyle = params.paintStyle || { lineWidth: 1 },\n        // how far along the arrow the lines folding back in come to. default is 62.3%.\n            foldback = params.foldback || 0.623;\n\n        this.computeMaxSize = function () {\n            return self.width * 1.5;\n        };\n\n        this.draw = function (component, currentConnectionPaintStyle) {\n\n            var hxy, mid, txy, tail, cxy;\n            if (component.pointAlongPathFrom) {\n\n                if (_ju.isString(this.loc) || this.loc > 1 || this.loc < 0) {\n                    var l = parseInt(this.loc, 10),\n                        fromLoc = this.loc < 0 ? 1 : 0;\n                    hxy = component.pointAlongPathFrom(fromLoc, l, false);\n                    mid = component.pointAlongPathFrom(fromLoc, l - (direction * this.length / 2), false);\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n                }\n                else if (this.loc == 1) {\n                    hxy = component.pointOnPath(this.loc);\n                    mid = component.pointAlongPathFrom(this.loc, -(this.length));\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n\n                    if (direction == -1) {\n                        var _ = txy;\n                        txy = hxy;\n                        hxy = _;\n                    }\n                }\n                else if (this.loc === 0) {\n                    txy = component.pointOnPath(this.loc);\n                    mid = component.pointAlongPathFrom(this.loc, this.length);\n                    hxy = _jg.pointOnLine(txy, mid, this.length);\n                    if (direction == -1) {\n                        var __ = txy;\n                        txy = hxy;\n                        hxy = __;\n                    }\n                }\n                else {\n                    hxy = component.pointAlongPathFrom(this.loc, direction * this.length / 2);\n                    mid = component.pointOnPath(this.loc);\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n                }\n\n                tail = _jg.perpendicularLineTo(hxy, txy, this.width);\n                cxy = _jg.pointOnLine(hxy, txy, foldback * this.length);\n\n                var d = { hxy: hxy, tail: tail, cxy: cxy },\n                    strokeStyle = paintStyle.strokeStyle || currentConnectionPaintStyle.strokeStyle,\n                    fillStyle = paintStyle.fillStyle || currentConnectionPaintStyle.strokeStyle,\n                    lineWidth = paintStyle.lineWidth || currentConnectionPaintStyle.lineWidth;\n\n                return {\n                    component: component,\n                    d: d,\n                    lineWidth: lineWidth,\n                    strokeStyle: strokeStyle,\n                    fillStyle: fillStyle,\n                    minX: Math.min(hxy.x, tail[0].x, tail[1].x),\n                    maxX: Math.max(hxy.x, tail[0].x, tail[1].x),\n                    minY: Math.min(hxy.y, tail[0].y, tail[1].y),\n                    maxY: Math.max(hxy.y, tail[0].y, tail[1].y)\n                };\n            }\n            else return {component: component, minX: 0, maxX: 0, minY: 0, maxY: 0};\n        };\n    };\n    _ju.extend(_jp.Overlays.Arrow, AbstractOverlay, {\n        updateFrom:function(d) {\n            this.length = d.length || this.length;\n            this.width = d.width|| this.width;\n            this.direction = d.direction != null ? d.direction : this.direction;\n            this.foldback = d.foldback|| this.foldback;\n        }\n    });\n\n    /*\n     * Class: Overlays.PlainArrow\n     *\n     * A basic arrow.  This is in fact just one instance of the more generic case in which the tail folds back on itself to some\n     * point along the length of the arrow: in this case, that foldback point is the full length of the arrow.  so it just does\n     * a 'call' to Arrow with foldback set appropriately.\n     */\n    /*\n     * Function: Constructor\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\n     */\n    _jp.Overlays.PlainArrow = function (params) {\n        params = params || {};\n        var p = _jp.extend(params, {foldback: 1});\n        _jp.Overlays.Arrow.call(this, p);\n        this.type = \"PlainArrow\";\n    };\n    _ju.extend(_jp.Overlays.PlainArrow, _jp.Overlays.Arrow);\n\n    /*\n     * Class: Overlays.Diamond\n     * \n     * A diamond. Like PlainArrow, this is a concrete case of the more generic case of the tail points converging on some point...it just\n     * happens that in this case, that point is greater than the length of the the arrow.\n     *\n     *      this could probably do with some help with positioning...due to the way it reuses the Arrow paint code, what Arrow thinks is the\n     *      center is actually 1/4 of the way along for this guy.  but we don't have any knowledge of pixels at this point, so we're kind of\n     *      stuck when it comes to helping out the Arrow class. possibly we could pass in a 'transpose' parameter or something. the value\n     *      would be -l/4 in this case - move along one quarter of the total length.\n     */\n    /*\n     * Function: Constructor\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\n     */\n    _jp.Overlays.Diamond = function (params) {\n        params = params || {};\n        var l = params.length || 40,\n            p = jsPlumb.extend(params, {length: l / 2, foldback: 2});\n        _jp.Overlays.Arrow.call(this, p);\n        this.type = \"Diamond\";\n    };\n    _ju.extend(_jp.Overlays.Diamond, _jp.Overlays.Arrow);\n\n    var _getDimensions = function (component, forceRefresh) {\n        if (component._jsPlumb.cachedDimensions == null || forceRefresh)\n            component._jsPlumb.cachedDimensions = component.getDimensions();\n        return component._jsPlumb.cachedDimensions;\n    };\n\n    // abstract superclass for overlays that add an element to the DOM.\n    var AbstractDOMOverlay = function (params) {\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        AbstractOverlay.apply(this, arguments);\n\n        // hand off fired events to associated component.\n        var _f = this.fire;\n        this.fire = function () {\n            _f.apply(this, arguments);\n            if (this.component) this.component.fire.apply(this.component, arguments);\n        };\n\n        this.detached=false;\n        this.id = params.id;\n        this._jsPlumb.div = null;\n        this._jsPlumb.initialised = false;\n        this._jsPlumb.component = params.component;\n        this._jsPlumb.cachedDimensions = null;\n        this._jsPlumb.create = params.create;\n        this._jsPlumb.initiallyInvisible = params.visible === false;\n\n        this.getElement = function () {\n            if (this._jsPlumb.div == null) {\n                var div = this._jsPlumb.div = jsPlumb.getElement(this._jsPlumb.create(this._jsPlumb.component));\n                div.style.position = \"absolute\";\n                div.className = this._jsPlumb.instance.overlayClass + \" \" +\n                    (this.cssClass ? this.cssClass :\n                        params.cssClass ? params.cssClass : \"\");\n                this._jsPlumb.instance.appendElement(div);\n                this._jsPlumb.instance.getId(div);\n                this.canvas = div;\n\n                // in IE the top left corner is what it placed at the desired location.  This will not\n                // be fixed. IE8 is not going to be supported for much longer.\n                var ts = \"translate(-50%, -50%)\";\n                div.style.webkitTransform = ts;\n                div.style.mozTransform = ts;\n                div.style.msTransform = ts;\n                div.style.oTransform = ts;\n                div.style.transform = ts;\n\n                // write the related component into the created element\n                div._jsPlumb = this;\n\n                if (params.visible === false)\n                    div.style.display = \"none\";\n            }\n            return this._jsPlumb.div;\n        };\n\n        this.draw = function (component, currentConnectionPaintStyle, absolutePosition) {\n            var td = _getDimensions(this);\n            if (td != null && td.length == 2) {\n                var cxy = { x: 0, y: 0 };\n\n                // absolutePosition would have been set by a call to connection.setAbsoluteOverlayPosition.\n                if (absolutePosition) {\n                    cxy = { x: absolutePosition[0], y: absolutePosition[1] };\n                }\n                else if (component.pointOnPath) {\n                    var loc = this.loc, absolute = false;\n                    if (_ju.isString(this.loc) || this.loc < 0 || this.loc > 1) {\n                        loc = parseInt(this.loc, 10);\n                        absolute = true;\n                    }\n                    cxy = component.pointOnPath(loc, absolute);  // a connection\n                }\n                else {\n                    var locToUse = this.loc.constructor == Array ? this.loc : this.endpointLoc;\n                    cxy = { x: locToUse[0] * component.w,\n                        y: locToUse[1] * component.h };\n                }\n\n                var minx = cxy.x - (td[0] / 2),\n                    miny = cxy.y - (td[1] / 2);\n\n                return {\n                    component: component,\n                    d: { minx: minx, miny: miny, td: td, cxy: cxy },\n                    minX: minx,\n                    maxX: minx + td[0],\n                    minY: miny,\n                    maxY: miny + td[1]\n                };\n            }\n            else return {minX: 0, maxX: 0, minY: 0, maxY: 0};\n        };\n    };\n    _ju.extend(AbstractDOMOverlay, [_jp.jsPlumbUIComponent, AbstractOverlay], {\n        getDimensions: function () {\n// still support the old way, for now, for IE8. But from 2.0.0 this whole method will be gone. \n            return _ju.oldIE ? _jp.getSize(this.getElement()) : [1, 1];\n        },\n        setVisible: function (state) {\n            if (this._jsPlumb.div) {\n                this._jsPlumb.div.style.display = state ? \"block\" : \"none\";\n                // if initially invisible, dimensions are 0,0 and never get updated\n                if (state && this._jsPlumb.initiallyInvisible) {\n                    _getDimensions(this, true);\n                    this.component.repaint();\n                    this._jsPlumb.initiallyInvisible = false;\n                }\n            }\n        },\n        /*\n         * Function: clearCachedDimensions\n         * Clears the cached dimensions for the label. As a performance enhancement, label dimensions are\n         * cached from 1.3.12 onwards. The cache is cleared when you change the label text, of course, but\n         * there are other reasons why the text dimensions might change - if you make a change through CSS, for\n         * example, you might change the font size.  in that case you should explicitly call this method.\n         */\n        clearCachedDimensions: function () {\n            this._jsPlumb.cachedDimensions = null;\n        },\n        cleanup: function (force) {\n            if (force) {\n                if (this._jsPlumb.div != null) {\n                    this._jsPlumb.div._jsPlumb = null;\n                    this._jsPlumb.instance.removeElement(this._jsPlumb.div);\n                }\n            }\n            else {\n                // if not a forced cleanup, just detach child from parent for now.\n                if (this._jsPlumb && this._jsPlumb.div && this._jsPlumb.div.parentNode)\n                    this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\n                this.detached = true;\n            }\n\n        },\n        reattach:function(instance) {\n            if (this._jsPlumb.div != null) instance.getContainer().appendChild(this._jsPlumb.div);\n            this.detached = false;\n        },\n        computeMaxSize: function () {\n            var td = _getDimensions(this);\n            return Math.max(td[0], td[1]);\n        },\n        paint: function (p, containerExtents) {\n            if (!this._jsPlumb.initialised) {\n                this.getElement();\n                p.component.appendDisplayElement(this._jsPlumb.div);\n                this._jsPlumb.initialised = true;\n                if (this.detached) this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\n            }\n            this._jsPlumb.div.style.left = (p.component.x + p.d.minx) + \"px\";\n            this._jsPlumb.div.style.top = (p.component.y + p.d.miny) + \"px\";\n        }\n    });\n\n    /*\n     * Class: Overlays.Custom\n     * A Custom overlay. You supply a 'create' function which returns some DOM element, and jsPlumb positions it.\n     * The 'create' function is passed a Connection or Endpoint.\n     */\n    /*\n     * Function: Constructor\n     * \n     * Parameters:\n     * \tcreate - function for jsPlumb to call that returns a DOM element.\n     * \tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n     * \tid - optional id to use for later retrieval of this overlay.\n     * \t\n     */\n    _jp.Overlays.Custom = function (params) {\n        this.type = \"Custom\";\n        AbstractDOMOverlay.apply(this, arguments);\n    };\n    _ju.extend(_jp.Overlays.Custom, AbstractDOMOverlay);\n\n    _jp.Overlays.GuideLines = function () {\n        var self = this;\n        self.length = 50;\n        self.lineWidth = 5;\n        this.type = \"GuideLines\";\n        AbstractOverlay.apply(this, arguments);\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        this.draw = function (connector, currentConnectionPaintStyle) {\n\n            var head = connector.pointAlongPathFrom(self.loc, self.length / 2),\n                mid = connector.pointOnPath(self.loc),\n                tail = _jg.pointOnLine(head, mid, self.length),\n                tailLine = _jg.perpendicularLineTo(head, tail, 40),\n                headLine = _jg.perpendicularLineTo(tail, head, 20);\n\n            return {\n                connector: connector,\n                head: head,\n                tail: tail,\n                headLine: headLine,\n                tailLine: tailLine,\n                minX: Math.min(head.x, tail.x, headLine[0].x, headLine[1].x),\n                minY: Math.min(head.y, tail.y, headLine[0].y, headLine[1].y),\n                maxX: Math.max(head.x, tail.x, headLine[0].x, headLine[1].x),\n                maxY: Math.max(head.y, tail.y, headLine[0].y, headLine[1].y)\n            };\n        };\n\n        // this.cleanup = function() { };  // nothing to clean up for GuideLines\n    };\n\n    /*\n     * Class: Overlays.Label\n\n     */\n    /*\n     * Function: Constructor\n     * \n     * Parameters:\n     * \tcssClass - optional css class string to append to css class. This string is appended \"as-is\", so you can of course have multiple classes\n     *             defined.  This parameter is preferred to using labelStyle, borderWidth and borderStyle.\n     * \tlabel - the label to paint.  May be a string or a function that returns a string.  Nothing will be painted if your label is null or your\n     *         label function returns null.  empty strings _will_ be painted.\n     * \tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n     * \tid - optional id to use for later retrieval of this overlay.\n     * \n     * \t\n     */\n    _jp.Overlays.Label = function (params) {\n        this.labelStyle = params.labelStyle;\n\n        var labelWidth = null, labelHeight = null, labelText = null, labelPadding = null;\n        this.cssClass = this.labelStyle != null ? this.labelStyle.cssClass : null;\n        var p = _jp.extend({\n            create: function () {\n                return jsPlumb.createElement(\"div\");\n            }}, params);\n        _jp.Overlays.Custom.call(this, p);\n        this.type = \"Label\";\n        this.label = params.label || \"\";\n        this.labelText = null;\n        if (this.labelStyle) {\n            var el = this.getElement();\n            this.labelStyle.font = this.labelStyle.font || \"12px sans-serif\";\n            el.style.font = this.labelStyle.font;\n            el.style.color = this.labelStyle.color || \"black\";\n            if (this.labelStyle.fillStyle) el.style.background = this.labelStyle.fillStyle;\n            if (this.labelStyle.borderWidth > 0) {\n                var dStyle = this.labelStyle.borderStyle ? this.labelStyle.borderStyle : \"black\";\n                el.style.border = this.labelStyle.borderWidth + \"px solid \" + dStyle;\n            }\n            if (this.labelStyle.padding) el.style.padding = this.labelStyle.padding;\n        }\n\n    };\n    _ju.extend(_jp.Overlays.Label, _jp.Overlays.Custom, {\n        cleanup: function (force) {\n            if (force) {\n                this.div = null;\n                this.label = null;\n                this.labelText = null;\n                this.cssClass = null;\n                this.labelStyle = null;\n            }\n        },\n        getLabel: function () {\n            return this.label;\n        },\n        /*\n         * Function: setLabel\n         * sets the label's, um, label.  you would think i'd call this function\n         * 'setText', but you can pass either a Function or a String to this, so\n         * it makes more sense as 'setLabel'. This uses innerHTML on the label div, so keep\n         * that in mind if you need escaped HTML.\n         */\n        setLabel: function (l) {\n            this.label = l;\n            this.labelText = null;\n            this.clearCachedDimensions();\n            this.update();\n            this.component.repaint();\n        },\n        getDimensions: function () {\n            this.update();\n            return AbstractDOMOverlay.prototype.getDimensions.apply(this, arguments);\n        },\n        update: function () {\n            if (typeof this.label == \"function\") {\n                var lt = this.label(this);\n                this.getElement().innerHTML = lt.replace(/\\r\\n/g, \"<br/>\");\n            }\n            else {\n                if (this.labelText == null) {\n                    this.labelText = this.label;\n                    this.getElement().innerHTML = this.labelText.replace(/\\r\\n/g, \"<br/>\");\n                }\n            }\n        },\n        updateFrom:function(d) {\n            if(d.label) this.setLabel(d.label);\n        }\n    });\n\n    // ********************************* END OF OVERLAY DEFINITIONS ***********************************************************************\n\n}).call(this);\n\n/*\n * jsPlumb\n *\n * Title:jsPlumb 1.7.6\n *\n * Provides a way to visually connect elements on an HTML page, using SVG or VML.\n *\n * This file contains the base class for library adapters.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n    \"use strict\";\n    var root = this,\n        _jp = root.jsPlumb;\n\n    var _getEventManager = function(instance) {\n        var e = instance._mottle;\n        if (!e) {\n            e = instance._mottle = new root.Mottle();\n        }\n        return e;\n    };\n\n    _jp.extend(root.jsPlumbInstance.prototype, {\n        getEventManager:function() {\n            return _getEventManager(this);\n        },\n        //           EVENTS\n        // e.originalEvent is for jQuery; in Vanilla jsPlumb we get the native event.\n\n        on : function(el, event, callback) {\n            // TODO: here we would like to map the tap event if we know its\n            // an internal bind to a click. we have to know its internal because only\n            // then can we be sure that the UP event wont be consumed (tap is a synthesized\n            // event from a mousedown followed by a mouseup).\n            //event = { \"click\":\"tap\", \"dblclick\":\"dbltap\"}[event] || event;\n            this.getEventManager().on.apply(this, arguments);\n        },\n        off : function(el, event, callback) {\n            this.getEventManager().off.apply(this, arguments);\n        }\n    });\n\n\n}).call(this);\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the 'flowchart' connectors, consisting of vertical and horizontal line segments.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var Flowchart = function (params) {\n        this.type = \"Flowchart\";\n        params = params || {};\n        params.stub = params.stub == null ? 30 : params.stub;\n        var segments,\n            _super = _jp.Connectors.AbstractConnector.apply(this, arguments),\n            midpoint = params.midpoint == null ? 0.5 : params.midpoint,\n            alwaysRespectStubs = params.alwaysRespectStubs === true,\n            userSuppliedSegments = null,\n            lastx = null, lasty = null, lastOrientation,\n            cornerRadius = params.cornerRadius != null ? params.cornerRadius : 0,\n            sgn = function (n) {\n                return n < 0 ? -1 : n === 0 ? 0 : 1;\n            },\n            /**\n             * helper method to add a segment.\n             */\n            addSegment = function (segments, x, y, paintInfo) {\n                if (lastx == x && lasty == y) return;\n                var lx = lastx == null ? paintInfo.sx : lastx,\n                    ly = lasty == null ? paintInfo.sy : lasty,\n                    o = lx == x ? \"v\" : \"h\",\n                    sgnx = sgn(x - lx),\n                    sgny = sgn(y - ly);\n\n                lastx = x;\n                lasty = y;\n                segments.push([lx, ly, x, y, o, sgnx, sgny]);\n            },\n            segLength = function (s) {\n                return Math.sqrt(Math.pow(s[0] - s[2], 2) + Math.pow(s[1] - s[3], 2));\n            },\n            _cloneArray = function (a) {\n                var _a = [];\n                _a.push.apply(_a, a);\n                return _a;\n            },\n            writeSegments = function (conn, segments, paintInfo) {\n                var current = null, next;\n                for (var i = 0; i < segments.length - 1; i++) {\n\n                    current = current || _cloneArray(segments[i]);\n                    next = _cloneArray(segments[i + 1]);\n                    if (cornerRadius > 0 && current[4] != next[4]) {\n                        var radiusToUse = Math.min(cornerRadius, segLength(current), segLength(next));\n                        // right angle. adjust current segment's end point, and next segment's start point.\n                        current[2] -= current[5] * radiusToUse;\n                        current[3] -= current[6] * radiusToUse;\n                        next[0] += next[5] * radiusToUse;\n                        next[1] += next[6] * radiusToUse;\n                        var ac = (current[6] == next[5] && next[5] == 1) ||\n                                ((current[6] == next[5] && next[5] === 0) && current[5] != next[6]) ||\n                                (current[6] == next[5] && next[5] == -1),\n                            sgny = next[1] > current[3] ? 1 : -1,\n                            sgnx = next[0] > current[2] ? 1 : -1,\n                            sgnEqual = sgny == sgnx,\n                            cx = (sgnEqual && ac || (!sgnEqual && !ac)) ? next[0] : current[2],\n                            cy = (sgnEqual && ac || (!sgnEqual && !ac)) ? current[3] : next[1];\n\n                        _super.addSegment(conn, \"Straight\", {\n                            x1: current[0], y1: current[1], x2: current[2], y2: current[3]\n                        });\n\n                        _super.addSegment(conn, \"Arc\", {\n                            r: radiusToUse,\n                            x1: current[2],\n                            y1: current[3],\n                            x2: next[0],\n                            y2: next[1],\n                            cx: cx,\n                            cy: cy,\n                            ac: ac\n                        });\n                    }\n                    else {\n                        // dx + dy are used to adjust for line width.\n                        var dx = (current[2] == current[0]) ? 0 : (current[2] > current[0]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2),\n                            dy = (current[3] == current[1]) ? 0 : (current[3] > current[1]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2);\n                        _super.addSegment(conn, \"Straight\", {\n                            x1: current[0] - dx, y1: current[1] - dy, x2: current[2] + dx, y2: current[3] + dy\n                        });\n                    }\n                    current = next;\n                }\n                if (next != null) {\n                    // last segment\n                    _super.addSegment(conn, \"Straight\", {\n                        x1: next[0], y1: next[1], x2: next[2], y2: next[3]\n                    });\n                }\n            };\n\n        this.setSegments = function (s) {\n            userSuppliedSegments = s;\n        };\n\n        this.isEditable = function () {\n            return true;\n        };\n\n        /*\n         Function: getOriginalSegments\n         Gets the segments before the addition of rounded corners. This is used by the flowchart\n         connector editor, since it only wants to concern itself with the original segments.\n         */\n        this.getOriginalSegments = function () {\n            return userSuppliedSegments || segments;\n        };\n\n        this._compute = function (paintInfo, params) {\n\n            if (params.clearEdits)\n                userSuppliedSegments = null;\n\n            if (userSuppliedSegments != null) {\n                writeSegments(this, userSuppliedSegments, paintInfo);\n                return;\n            }\n\n            segments = [];\n            lastx = null;\n            lasty = null;\n            lastOrientation = null;\n\n            var midx = paintInfo.startStubX + ((paintInfo.endStubX - paintInfo.startStubX) * midpoint),\n                midy = paintInfo.startStubY + ((paintInfo.endStubY - paintInfo.startStubY) * midpoint);\n\n            var orientations = { x: [ 0, 1 ], y: [ 1, 0 ] },\n                commonStubCalculator = function () {\n                    return [ paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY ];\n                },\n                stubCalculators = {\n                    perpendicular: commonStubCalculator,\n                    orthogonal: commonStubCalculator,\n                    opposite: function (axis) {\n                        var pi = paintInfo,\n                            idx = axis == \"x\" ? 0 : 1,\n                            areInProximity = {\n                                \"x\": function () {\n                                    return ( (pi.so[idx] == 1 && (\n                                        ( (pi.startStubX > pi.endStubX) && (pi.tx > pi.startStubX) ) ||\n                                        ( (pi.sx > pi.endStubX) && (pi.tx > pi.sx))))) ||\n\n                                        ( (pi.so[idx] == -1 && (\n                                            ( (pi.startStubX < pi.endStubX) && (pi.tx < pi.startStubX) ) ||\n                                            ( (pi.sx < pi.endStubX) && (pi.tx < pi.sx)))));\n                                },\n                                \"y\": function () {\n                                    return ( (pi.so[idx] == 1 && (\n                                        ( (pi.startStubY > pi.endStubY) && (pi.ty > pi.startStubY) ) ||\n                                        ( (pi.sy > pi.endStubY) && (pi.ty > pi.sy))))) ||\n\n                                        ( (pi.so[idx] == -1 && (\n                                            ( (pi.startStubY < pi.endStubY) && (pi.ty < pi.startStubY) ) ||\n                                            ( (pi.sy < pi.endStubY) && (pi.ty < pi.sy)))));\n                                }\n                            };\n\n                        if (!alwaysRespectStubs && areInProximity[axis]()) {\n                            return {\n                                \"x\": [(paintInfo.sx + paintInfo.tx) / 2, paintInfo.startStubY, (paintInfo.sx + paintInfo.tx) / 2, paintInfo.endStubY],\n                                \"y\": [paintInfo.startStubX, (paintInfo.sy + paintInfo.ty) / 2, paintInfo.endStubX, (paintInfo.sy + paintInfo.ty) / 2]\n                            }[axis];\n                        }\n                        else {\n                            return [ paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY ];\n                        }\n                    }\n                },\n                lineCalculators = {\n                    perpendicular: function (axis) {\n                        var pi = paintInfo,\n                            sis = {\n                                x: [\n                                    [ [ 1, 2, 3, 4 ], null, [ 2, 1, 4, 3 ] ],\n                                    null,\n                                    [ [ 4, 3, 2, 1 ], null, [ 3, 4, 1, 2 ] ]\n                                ],\n                                y: [\n                                    [ [ 3, 2, 1, 4 ], null, [ 2, 3, 4, 1 ] ],\n                                    null,\n                                    [ [ 4, 1, 2, 3 ], null, [ 1, 4, 3, 2 ] ]\n                                ]\n                            },\n                            stubs = {\n                                x: [ [ pi.startStubX, pi.endStubX ], null, [ pi.endStubX, pi.startStubX ] ],\n                                y: [ [ pi.startStubY, pi.endStubY ], null, [ pi.endStubY, pi.startStubY ] ]\n                            },\n                            midLines = {\n                                x: [ [ midx, pi.startStubY ], [ midx, pi.endStubY ] ],\n                                y: [ [ pi.startStubX, midy ], [ pi.endStubX, midy ] ]\n                            },\n                            linesToEnd = {\n                                x: [ [ pi.endStubX, pi.startStubY ] ],\n                                y: [ [ pi.startStubX, pi.endStubY ] ]\n                            },\n                            startToEnd = {\n                                x: [ [ pi.startStubX, pi.endStubY ], [ pi.endStubX, pi.endStubY ] ],\n                                y: [ [ pi.endStubX, pi.startStubY ], [ pi.endStubX, pi.endStubY ] ]\n                            },\n                            startToMidToEnd = {\n                                x: [ [ pi.startStubX, midy ], [ pi.endStubX, midy ], [ pi.endStubX, pi.endStubY ] ],\n                                y: [ [ midx, pi.startStubY ], [ midx, pi.endStubY ], [ pi.endStubX, pi.endStubY ] ]\n                            },\n                            otherStubs = {\n                                x: [ pi.startStubY, pi.endStubY ],\n                                y: [ pi.startStubX, pi.endStubX ]\n                            },\n                            soIdx = orientations[axis][0], toIdx = orientations[axis][1],\n                            _so = pi.so[soIdx] + 1,\n                            _to = pi.to[toIdx] + 1,\n                            otherFlipped = (pi.to[toIdx] == -1 && (otherStubs[axis][1] < otherStubs[axis][0])) || (pi.to[toIdx] == 1 && (otherStubs[axis][1] > otherStubs[axis][0])),\n                            stub1 = stubs[axis][_so][0],\n                            stub2 = stubs[axis][_so][1],\n                            segmentIndexes = sis[axis][_so][_to];\n\n                        if (pi.segment == segmentIndexes[3] || (pi.segment == segmentIndexes[2] && otherFlipped)) {\n                            return midLines[axis];\n                        }\n                        else if (pi.segment == segmentIndexes[2] && stub2 < stub1) {\n                            return linesToEnd[axis];\n                        }\n                        else if ((pi.segment == segmentIndexes[2] && stub2 >= stub1) || (pi.segment == segmentIndexes[1] && !otherFlipped)) {\n                            return startToMidToEnd[axis];\n                        }\n                        else if (pi.segment == segmentIndexes[0] || (pi.segment == segmentIndexes[1] && otherFlipped)) {\n                            return startToEnd[axis];\n                        }\n                    },\n                    orthogonal: function (axis, startStub, otherStartStub, endStub, otherEndStub) {\n                        var pi = paintInfo,\n                            extent = {\n                                \"x\": pi.so[0] == -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub),\n                                \"y\": pi.so[1] == -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub)\n                            }[axis];\n\n                        return {\n                            \"x\": [\n                                [ extent, otherStartStub ],\n                                [ extent, otherEndStub ],\n                                [ endStub, otherEndStub ]\n                            ],\n                            \"y\": [\n                                [ otherStartStub, extent ],\n                                [ otherEndStub, extent ],\n                                [ otherEndStub, endStub ]\n                            ]\n                        }[axis];\n                    },\n                    opposite: function (axis, ss, oss, es) {\n                        var pi = paintInfo,\n                            otherAxis = {\"x\": \"y\", \"y\": \"x\"}[axis],\n                            dim = {\"x\": \"height\", \"y\": \"width\"}[axis],\n                            comparator = pi[\"is\" + axis.toUpperCase() + \"GreaterThanStubTimes2\"];\n\n                        if (params.sourceEndpoint.elementId == params.targetEndpoint.elementId) {\n                            var _val = oss + ((1 - params.sourceEndpoint.anchor[otherAxis]) * params.sourceInfo[dim]) + _super.maxStub;\n                            return {\n                                \"x\": [\n                                    [ ss, _val ],\n                                    [ es, _val ]\n                                ],\n                                \"y\": [\n                                    [ _val, ss ],\n                                    [ _val, es ]\n                                ]\n                            }[axis];\n\n                        }\n                        else if (!comparator || (pi.so[idx] == 1 && ss > es) || (pi.so[idx] == -1 && ss < es)) {\n                            return {\n                                \"x\": [\n                                    [ ss, midy ],\n                                    [ es, midy ]\n                                ],\n                                \"y\": [\n                                    [ midx, ss ],\n                                    [ midx, es ]\n                                ]\n                            }[axis];\n                        }\n                        else if ((pi.so[idx] == 1 && ss < es) || (pi.so[idx] == -1 && ss > es)) {\n                            return {\n                                \"x\": [\n                                    [ midx, pi.sy ],\n                                    [ midx, pi.ty ]\n                                ],\n                                \"y\": [\n                                    [ pi.sx, midy ],\n                                    [ pi.tx, midy ]\n                                ]\n                            }[axis];\n                        }\n                    }\n                };\n\n            var stubs = stubCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis),\n                idx = paintInfo.sourceAxis == \"x\" ? 0 : 1,\n                oidx = paintInfo.sourceAxis == \"x\" ? 1 : 0,\n                ss = stubs[idx],\n                oss = stubs[oidx],\n                es = stubs[idx + 2],\n                oes = stubs[oidx + 2];\n\n            // add the start stub segment.\n            addSegment(segments, stubs[0], stubs[1], paintInfo);\n\n            // compute the rest of the line\n            var p = lineCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis, ss, oss, es, oes);\n            if (p) {\n                for (var i = 0; i < p.length; i++) {\n                    addSegment(segments, p[i][0], p[i][1], paintInfo);\n                }\n            }\n\n            // line to end stub\n            addSegment(segments, stubs[2], stubs[3], paintInfo);\n\n            // end stub to end\n            addSegment(segments, paintInfo.tx, paintInfo.ty, paintInfo);\n\n            writeSegments(this, segments, paintInfo);\n        };\n\n        this.getPath = function () {\n            var _last = null, _lastAxis = null, s = [], segs = userSuppliedSegments || segments;\n            for (var i = 0; i < segs.length; i++) {\n                var seg = segs[i], axis = seg[4], axisIndex = (axis == \"v\" ? 3 : 2);\n                if (_last != null && _lastAxis === axis) {\n                    _last[axisIndex] = seg[axisIndex];\n                }\n                else {\n                    if (seg[0] != seg[2] || seg[1] != seg[3]) {\n                        s.push({\n                            start: [ seg[0], seg[1] ],\n                            end: [ seg[2], seg[3] ]\n                        });\n                        _last = seg;\n                        _lastAxis = seg[4];\n                    }\n                }\n            }\n            return s;\n        };\n\n        this.setPath = function (path) {\n            userSuppliedSegments = [];\n            for (var i = 0; i < path.length; i++) {\n                var lx = path[i].start[0],\n                    ly = path[i].start[1],\n                    x = path[i].end[0],\n                    y = path[i].end[1],\n                    o = lx == x ? \"v\" : \"h\",\n                    sgnx = sgn(x - lx),\n                    sgny = sgn(y - ly);\n\n                userSuppliedSegments.push([lx, ly, x, y, o, sgnx, sgny]);\n            }\n        };\n    };\n\n    _ju.extend(Flowchart, _jp.Connectors.AbstractConnector);\n    _jp.registerConnectorType(Flowchart, \"Flowchart\");\n}).call(this);\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the state machine connectors.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var _segment = function (x1, y1, x2, y2) {\n            if (x1 <= x2 && y2 <= y1) return 1;\n            else if (x1 <= x2 && y1 <= y2) return 2;\n            else if (x2 <= x1 && y2 >= y1) return 3;\n            return 4;\n        },\n\n    // the control point we will use depends on the faces to which each end of the connection is assigned, specifically whether or not the\n    // two faces are parallel or perpendicular.  if they are parallel then the control point lies on the midpoint of the axis in which they\n    // are parellel and varies only in the other axis; this variation is proportional to the distance that the anchor points lie from the\n    // center of that face.  if the two faces are perpendicular then the control point is at some distance from both the midpoints; the amount and\n    // direction are dependent on the orientation of the two elements. 'seg', passed in to this method, tells you which segment the target element\n    // lies in with respect to the source: 1 is top right, 2 is bottom right, 3 is bottom left, 4 is top left.\n    //\n    // sourcePos and targetPos are arrays of info about where on the source and target each anchor is located.  their contents are:\n    //\n    // 0 - absolute x\n    // 1 - absolute y\n    // 2 - proportional x in element (0 is left edge, 1 is right edge)\n    // 3 - proportional y in element (0 is top edge, 1 is bottom edge)\n    //\n        _findControlPoint = function (midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {\n            // TODO (maybe)\n            // - if anchor pos is 0.5, make the control point take into account the relative position of the elements.\n            if (distance <= proximityLimit) return [midx, midy];\n\n            if (segment === 1) {\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                else return [ midx + (-1 * dx) , midy + (-1 * dy) ];\n            }\n            else if (segment === 2) {\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                else return [ midx + dx, midy + (-1 * dy) ];\n            }\n            else if (segment === 3) {\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                else return [ midx + (-1 * dx) , midy + (-1 * dy) ];\n            }\n            else if (segment === 4) {\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                else return [ midx + dx , midy + (-1 * dy) ];\n            }\n\n        };\n\n    var StateMachine = function (params) {\n        params = params || {};\n        this.type = \"StateMachine\";\n\n        var _super = _jp.Connectors.AbstractConnector.apply(this, arguments),\n            curviness = params.curviness || 10,\n            margin = params.margin || 5,\n            proximityLimit = params.proximityLimit || 80,\n            clockwise = params.orientation && params.orientation === \"clockwise\",\n            loopbackRadius = params.loopbackRadius || 25,\n            showLoopback = params.showLoopback !== false;\n\n        this._compute = function (paintInfo, params) {\n            var w = Math.abs(params.sourcePos[0] - params.targetPos[0]),\n                h = Math.abs(params.sourcePos[1] - params.targetPos[1]);\n\n            if (!showLoopback || (params.sourceEndpoint.elementId !== params.targetEndpoint.elementId)) {\n                var _sx = params.sourcePos[0] < params.targetPos[0] ? 0 : w,\n                    _sy = params.sourcePos[1] < params.targetPos[1] ? 0 : h,\n                    _tx = params.sourcePos[0] < params.targetPos[0] ? w : 0,\n                    _ty = params.sourcePos[1] < params.targetPos[1] ? h : 0;\n\n                // now adjust for the margin\n                if (params.sourcePos[2] === 0) _sx -= margin;\n                if (params.sourcePos[2] === 1) _sx += margin;\n                if (params.sourcePos[3] === 0) _sy -= margin;\n                if (params.sourcePos[3] === 1) _sy += margin;\n                if (params.targetPos[2] === 0) _tx -= margin;\n                if (params.targetPos[2] === 1) _tx += margin;\n                if (params.targetPos[3] === 0) _ty -= margin;\n                if (params.targetPos[3] === 1) _ty += margin;\n\n                //\n                // these connectors are quadratic bezier curves, having a single control point. if both anchors\n                // are located at 0.5 on their respective faces, the control point is set to the midpoint and you\n                // get a straight line.  this is also the case if the two anchors are within 'proximityLimit', since\n                // it seems to make good aesthetic sense to do that. outside of that, the control point is positioned\n                // at 'curviness' pixels away along the normal to the straight line connecting the two anchors.\n                //\n                // there may be two improvements to this.  firstly, we might actually support the notion of avoiding nodes\n                // in the UI, or at least making a good effort at doing so.  if a connection would pass underneath some node,\n                // for example, we might increase the distance the control point is away from the midpoint in a bid to\n                // steer it around that node.  this will work within limits, but i think those limits would also be the likely\n                // limits for, once again, aesthetic good sense in the layout of a chart using these connectors.\n                //\n                // the second possible change is actually two possible changes: firstly, it is possible we should gradually\n                // decrease the 'curviness' as the distance between the anchors decreases; start tailing it off to 0 at some\n                // point (which should be configurable).  secondly, we might slightly increase the 'curviness' for connectors\n                // with respect to how far their anchor is from the center of its respective face. this could either look cool,\n                // or stupid, and may indeed work only in a way that is so subtle as to have been a waste of time.\n                //\n\n                var _midx = (_sx + _tx) / 2,\n                    _midy = (_sy + _ty) / 2,\n                    segment = _segment(_sx, _sy, _tx, _ty),\n                    distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2)),\n                    // calculate the control point.  this code will be where we'll put in a rudimentary element avoidance scheme; it\n                    // will work by extending the control point to force the curve to be, um, curvier.\n                    _controlPoint = _findControlPoint(_midx,\n                        _midy,\n                        segment,\n                        params.sourcePos,\n                        params.targetPos,\n                        curviness, curviness,\n                        distance,\n                        proximityLimit);\n\n                _super.addSegment(this, \"Bezier\", {\n                    x1: _tx, y1: _ty, x2: _sx, y2: _sy,\n                    cp1x: _controlPoint[0], cp1y: _controlPoint[1],\n                    cp2x: _controlPoint[0], cp2y: _controlPoint[1]\n                });\n            }\n            else {\n                // a loopback connector.  draw an arc from one anchor to the other.\n                var x1 = params.sourcePos[0], y1 = params.sourcePos[1] - margin,\n                    cx = x1, cy = y1 - loopbackRadius,\n                // canvas sizing stuff, to ensure the whole painted area is visible.\n                    _w = 2 * loopbackRadius,\n                    _h = 2 * loopbackRadius,\n                    _x = cx - loopbackRadius,\n                    _y = cy - loopbackRadius;\n\n                paintInfo.points[0] = _x;\n                paintInfo.points[1] = _y;\n                paintInfo.points[2] = _w;\n                paintInfo.points[3] = _h;\n\n                // ADD AN ARC SEGMENT.\n                _super.addSegment(this, \"Arc\", {\n                    loopback: true,\n                    x1: (x1 - _x) + 4,\n                    y1: y1 - _y,\n                    startAngle: 0,\n                    endAngle: 2 * Math.PI,\n                    r: loopbackRadius,\n                    ac: !clockwise,\n                    x2: (x1 - _x) - 4,\n                    y2: y1 - _y,\n                    cx: cx - _x,\n                    cy: cy - _y\n                });\n            }\n        };\n    };\n    _ju.extend(StateMachine, _jp.Connectors.AbstractConnector);\n    _jp.registerConnectorType(StateMachine, \"StateMachine\");\n}).call(this);\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the code for the Bezier connector type.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var Bezier = function (params) {\n        params = params || {};\n\n        var _super = _jp.Connectors.AbstractConnector.apply(this, arguments),\n            majorAnchor = params.curviness || 150,\n            minorAnchor = 10;\n\n        this.type = \"Bezier\";\n        this.getCurviness = function () {\n            return majorAnchor;\n        };\n\n        this._findControlPoint = function (point, sourceAnchorPosition, targetAnchorPosition, sourceEndpoint, targetEndpoint, soo, too) {\n            // determine if the two anchors are perpendicular to each other in their orientation.  we swap the control\n            // points around if so (code could be tightened up)\n            var perpendicular = soo[0] != too[0] || soo[1] == too[1],\n                p = [];\n\n            if (!perpendicular) {\n                if (soo[0] === 0) // X\n                    p.push(sourceAnchorPosition[0] < targetAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\n                else p.push(point[0] - (majorAnchor * soo[0]));\n\n                if (soo[1] === 0) // Y\n                    p.push(sourceAnchorPosition[1] < targetAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\n                else p.push(point[1] + (majorAnchor * too[1]));\n            }\n            else {\n                if (too[0] === 0) // X\n                    p.push(targetAnchorPosition[0] < sourceAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\n                else p.push(point[0] + (majorAnchor * too[0]));\n\n                if (too[1] === 0) // Y\n                    p.push(targetAnchorPosition[1] < sourceAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\n                else p.push(point[1] + (majorAnchor * soo[1]));\n            }\n\n            return p;\n        };\n\n        this._compute = function (paintInfo, p) {\n            var sp = p.sourcePos,\n                tp = p.targetPos,\n                _w = Math.abs(sp[0] - tp[0]),\n                _h = Math.abs(sp[1] - tp[1]),\n                _sx = sp[0] < tp[0] ? _w : 0,\n                _sy = sp[1] < tp[1] ? _h : 0,\n                _tx = sp[0] < tp[0] ? 0 : _w,\n                _ty = sp[1] < tp[1] ? 0 : _h,\n                _CP = this._findControlPoint([_sx, _sy], sp, tp, p.sourceEndpoint, p.targetEndpoint, paintInfo.so, paintInfo.to),\n                _CP2 = this._findControlPoint([_tx, _ty], tp, sp, p.targetEndpoint, p.sourceEndpoint, paintInfo.to, paintInfo.so);\n\n            _super.addSegment(this, \"Bezier\", {\n                x1: _sx, y1: _sy, x2: _tx, y2: _ty,\n                cp1x: _CP[0], cp1y: _CP[1], cp2x: _CP2[0], cp2y: _CP2[1]\n            });\n        };\n    };\n\n    _ju.extend(Bezier, _jp.Connectors.AbstractConnector);\n    _jp.registerConnectorType(Bezier, \"Bezier\");\n\n}).call(this);\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the SVG renderers.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n// ************************** SVG utility methods ********************************************\t\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var svgAttributeMap = {\n            \"joinstyle\": \"stroke-linejoin\",\n            \"stroke-linejoin\": \"stroke-linejoin\",\n            \"stroke-dashoffset\": \"stroke-dashoffset\",\n            \"stroke-linecap\": \"stroke-linecap\"\n        },\n        STROKE_DASHARRAY = \"stroke-dasharray\",\n        DASHSTYLE = \"dashstyle\",\n        LINEAR_GRADIENT = \"linearGradient\",\n        RADIAL_GRADIENT = \"radialGradient\",\n        DEFS = \"defs\",\n        FILL = \"fill\",\n        STOP = \"stop\",\n        STROKE = \"stroke\",\n        STROKE_WIDTH = \"stroke-width\",\n        STYLE = \"style\",\n        NONE = \"none\",\n        JSPLUMB_GRADIENT = \"jsplumb_gradient_\",\n        LINE_WIDTH = \"lineWidth\",\n        ns = {\n            svg: \"http://www.w3.org/2000/svg\",\n            xhtml: \"http://www.w3.org/1999/xhtml\"\n        },\n        _attr = function (node, attributes) {\n            for (var i in attributes)\n                node.setAttribute(i, \"\" + attributes[i]);\n        },\n        _node = function (name, attributes) {\n            attributes = attributes || {};\n            attributes.version = \"1.1\";\n            attributes.xmlns = ns.xhtml;\n            return jsPlumb.createElementNS(ns.svg, name, null, null, attributes);\n        },\n        _pos = function (d) {\n            return \"position:absolute;left:\" + d[0] + \"px;top:\" + d[1] + \"px\";\n        },\n        _clearGradient = function (parent) {\n            var els = parent.querySelectorAll(\" defs linearGradient radialGradient\");\n            for (var i = 0; i < els.length; i++)\n                els[i].parentNode.removeChild(els[i]);\n        },\n        _updateGradient = function (parent, node, style, dimensions, uiComponent) {\n            var id = JSPLUMB_GRADIENT + uiComponent._jsPlumb.instance.idstamp();\n            // first clear out any existing gradient\n            _clearGradient(parent);\n            // this checks for an 'offset' property in the gradient, and in the absence of it, assumes\n            // we want a linear gradient. if it's there, we create a radial gradient.\n            // it is possible that a more explicit means of defining the gradient type would be\n            // better. relying on 'offset' means that we can never have a radial gradient that uses\n            // some default offset, for instance.\n            // issue 244 suggested the 'gradientUnits' attribute; without this, straight/flowchart connectors with gradients would\n            // not show gradients when the line was perfectly horizontal or vertical.\n            var g;\n            if (!style.gradient.offset)\n                g = _node(LINEAR_GRADIENT, {id: id, gradientUnits: \"userSpaceOnUse\"});\n            else\n                g = _node(RADIAL_GRADIENT, { id: id });\n\n            var defs = _node(DEFS);\n            parent.appendChild(defs);\n            defs.appendChild(g);\n\n            // the svg radial gradient seems to treat stops in the reverse\n            // order to how canvas does it.  so we want to keep all the maths the same, but\n            // iterate the actual style declarations in reverse order, if the x indexes are not in order.\n            for (var i = 0; i < style.gradient.stops.length; i++) {\n                var styleToUse = uiComponent.segment == 1 || uiComponent.segment == 2 ? i : style.gradient.stops.length - 1 - i,\n                    stopColor = _ju.convertStyle(style.gradient.stops[styleToUse][1], true),\n                    s = _node(STOP, {\"offset\": Math.floor(style.gradient.stops[i][0] * 100) + \"%\", \"stop-color\": stopColor});\n\n                g.appendChild(s);\n            }\n            var applyGradientTo = style.strokeStyle ? STROKE : FILL;\n            node.setAttribute(applyGradientTo, \"url(#\" + id + \")\");\n        },\n        _applyStyles = function (parent, node, style, dimensions, uiComponent) {\n\n            node.setAttribute(FILL, style.fillStyle ? _ju.convertStyle(style.fillStyle, true) : NONE);\n            node.setAttribute(STROKE, style.strokeStyle ? _ju.convertStyle(style.strokeStyle, true) : NONE);\n\n            if (style.gradient) {\n                _updateGradient(parent, node, style, dimensions, uiComponent);\n            }\n            else {\n                // make sure we clear any existing gradient\n                _clearGradient(parent);\n                node.setAttribute(STYLE, \"\");\n            }\n\n            if (style.lineWidth) {\n                node.setAttribute(STROKE_WIDTH, style.lineWidth);\n            }\n\n            // in SVG there is a stroke-dasharray attribute we can set, and its syntax looks like\n            // the syntax in VML but is actually kind of nasty: values are given in the pixel\n            // coordinate space, whereas in VML they are multiples of the width of the stroked\n            // line, which makes a lot more sense.  for that reason, jsPlumb is supporting both\n            // the native svg 'stroke-dasharray' attribute, and also the 'dashstyle' concept from\n            // VML, which will be the preferred method.  the code below this converts a dashstyle\n            // attribute given in terms of stroke width into a pixel representation, by using the\n            // stroke's lineWidth.\n            if (style[DASHSTYLE] && style[LINE_WIDTH] && !style[STROKE_DASHARRAY]) {\n                var sep = style[DASHSTYLE].indexOf(\",\") == -1 ? \" \" : \",\",\n                    parts = style[DASHSTYLE].split(sep),\n                    styleToUse = \"\";\n                parts.forEach(function (p) {\n                    styleToUse += (Math.floor(p * style.lineWidth) + sep);\n                });\n                node.setAttribute(STROKE_DASHARRAY, styleToUse);\n            }\n            else if (style[STROKE_DASHARRAY]) {\n                node.setAttribute(STROKE_DASHARRAY, style[STROKE_DASHARRAY]);\n            }\n\n            // extra attributes such as join type, dash offset.\n            for (var i in svgAttributeMap) {\n                if (style[i]) {\n                    node.setAttribute(svgAttributeMap[i], style[i]);\n                }\n            }\n        },\n        _appendAtIndex = function (svg, path, idx) {\n            if (svg.childNodes.length > idx) {\n                svg.insertBefore(path, svg.childNodes[idx]);\n            }\n            else svg.appendChild(path);\n        };\n\n    /**\n     utility methods for other objects to use.\n     */\n    _ju.svg = {\n        node: _node,\n        attr: _attr,\n        pos: _pos\n    };\n\n    // ************************** / SVG utility methods ********************************************\n\n    /*\n     * Base class for SVG components.\n     */\n    var SvgComponent = function (params) {\n        var pointerEventsSpec = params.pointerEventsSpec || \"all\", renderer = {};\n\n        _jp.jsPlumbUIComponent.apply(this, params.originalArgs);\n        this.canvas = null;\n        this.path = null;\n        this.svg = null;\n        this.bgCanvas = null;\n\n        var clazz = params.cssClass + \" \" + (params.originalArgs[0].cssClass || \"\"),\n            svgParams = {\n                \"style\": \"\",\n                \"width\": 0,\n                \"height\": 0,\n                \"pointer-events\": pointerEventsSpec,\n                \"position\": \"absolute\"\n            };\n\n        this.svg = _node(\"svg\", svgParams);\n\n        if (params.useDivWrapper) {\n            this.canvas = jsPlumb.createElement(\"div\", { position : \"absolute\" });\n            _ju.sizeElement(this.canvas, 0, 0, 1, 1);\n            this.canvas.className = clazz;\n        }\n        else {\n            _attr(this.svg, { \"class\": clazz });\n            this.canvas = this.svg;\n        }\n\n        params._jsPlumb.appendElement(this.canvas, params.originalArgs[0].parent);\n        if (params.useDivWrapper) this.canvas.appendChild(this.svg);\n\n        var displayElements = [ this.canvas ];\n        this.getDisplayElements = function () {\n            return displayElements;\n        };\n\n        this.appendDisplayElement = function (el) {\n            displayElements.push(el);\n        };\n\n        this.paint = function (style, anchor, extents) {\n            if (style != null) {\n\n                var xy = [ this.x, this.y ], wh = [ this.w, this.h ], p;\n                if (extents != null) {\n                    if (extents.xmin < 0) xy[0] += extents.xmin;\n                    if (extents.ymin < 0) xy[1] += extents.ymin;\n                    wh[0] = extents.xmax + ((extents.xmin < 0) ? -extents.xmin : 0);\n                    wh[1] = extents.ymax + ((extents.ymin < 0) ? -extents.ymin : 0);\n                }\n\n                if (params.useDivWrapper) {\n                    _ju.sizeElement(this.canvas, xy[0], xy[1], wh[0], wh[1]);\n                    xy[0] = 0;\n                    xy[1] = 0;\n                    p = _pos([ 0, 0 ]);\n                }\n                else\n                    p = _pos([ xy[0], xy[1] ]);\n\n                renderer.paint.apply(this, arguments);\n\n                _attr(this.svg, {\n                    \"style\": p,\n                    \"width\": wh[0] || 0,\n                    \"height\": wh[1] || 0\n                });\n            }\n        };\n\n        return {\n            renderer: renderer\n        };\n    };\n\n    _ju.extend(SvgComponent, _jp.jsPlumbUIComponent, {\n        cleanup: function (force) {\n            if (force || this.typeId == null) {\n                if (this.canvas) this.canvas._jsPlumb = null;\n                if (this.svg) this.svg._jsPlumb = null;\n                if (this.bgCanvas) this.bgCanvas._jsPlumb = null;\n\n                if (this.canvas && this.canvas.parentNode)\n                    this.canvas.parentNode.removeChild(this.canvas);\n                if (this.bgCanvas && this.bgCanvas.parentNode)\n                    this.canvas.parentNode.removeChild(this.canvas);\n\n                this.svg = null;\n                this.canvas = null;\n                this.path = null;\n                this.group = null;\n            }\n            else {\n                // if not a forced cleanup, just detach from DOM for now.\n                if (this.canvas && this.canvas.parentNode) this.canvas.parentNode.removeChild(this.canvas);\n                if (this.bgCanvas && this.bgCanvas.parentNode) this.bgCanvas.parentNode.removeChild(this.bgCanvas);\n            }\n        },\n        reattach:function(instance) {\n            var c = instance.getContainer();\n            if (this.canvas && this.canvas.parentNode == null) c.appendChild(this.canvas);\n            if (this.bgCanvas && this.bgCanvas.parentNode == null) c.appendChild(this.bgCanvas);\n        },\n        setVisible: function (v) {\n            if (this.canvas) {\n                this.canvas.style.display = v ? \"block\" : \"none\";\n            }\n        }\n    });\n\n    /*\n     * Base class for SVG connectors.\n     */\n    _jp.ConnectorRenderers.svg = function (params) {\n        var self = this,\n            _super = SvgComponent.apply(this, [\n                {\n                    cssClass: params._jsPlumb.connectorClass,\n                    originalArgs: arguments,\n                    pointerEventsSpec: \"none\",\n                    _jsPlumb: params._jsPlumb\n                }\n            ]);\n\n        _super.renderer.paint = function (style, anchor, extents) {\n\n            var segments = self.getSegments(), p = \"\", offset = [0, 0];\n            if (extents.xmin < 0) offset[0] = -extents.xmin;\n            if (extents.ymin < 0) offset[1] = -extents.ymin;\n\n            if (segments.length > 0) {\n\n                // create path from segments.\n                for (var i = 0; i < segments.length; i++) {\n                    p += _jp.Segments.svg.SegmentRenderer.getPath(segments[i]);\n                    p += \" \";\n                }\n\n                var a = {\n                        d: p,\n                        transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\",\n                        \"pointer-events\": params[\"pointer-events\"] || \"visibleStroke\"\n                    },\n                    outlineStyle = null,\n                    d = [self.x, self.y, self.w, self.h];\n\n                // outline style.  actually means drawing an svg object underneath the main one.\n                if (style.outlineColor) {\n                    var outlineWidth = style.outlineWidth || 1,\n                        outlineStrokeWidth = style.lineWidth + (2 * outlineWidth);\n                    outlineStyle = _jp.extend({}, style);\n                    delete outlineStyle.gradient;\n                    outlineStyle.strokeStyle = _ju.convertStyle(style.outlineColor);\n                    outlineStyle.lineWidth = outlineStrokeWidth;\n\n                    if (self.bgPath == null) {\n                        self.bgPath = _node(\"path\", a);\n                        _jp.addClass(self.bgPath, _jp.connectorOutlineClass);\n                        _appendAtIndex(self.svg, self.bgPath, 0);\n                    }\n                    else {\n                        _attr(self.bgPath, a);\n                    }\n\n                    _applyStyles(self.svg, self.bgPath, outlineStyle, d, self);\n                }\n\n                if (self.path == null) {\n                    self.path = _node(\"path\", a);\n                    _appendAtIndex(self.svg, self.path, style.outlineColor ? 1 : 0);\n                }\n                else {\n                    _attr(self.path, a);\n                }\n\n                _applyStyles(self.svg, self.path, style, d, self);\n            }\n        };\n    };\n    _ju.extend(_jp.ConnectorRenderers.svg, SvgComponent);\n\n// ******************************* svg segment renderer *****************************************************\t\n\n    _jp.Segments.svg = {\n        SegmentRenderer: {\n            getPath: function (segment) {\n                return ({\n                    \"Straight\": function () {\n                        var d = segment.getCoordinates();\n                        return \"M \" + d.x1 + \" \" + d.y1 + \" L \" + d.x2 + \" \" + d.y2;\n                    },\n                    \"Bezier\": function () {\n                        var d = segment.params;\n                        return \"M \" + d.x1 + \" \" + d.y1 +\n                            \" C \" + d.cp1x + \" \" + d.cp1y + \" \" + d.cp2x + \" \" + d.cp2y + \" \" + d.x2 + \" \" + d.y2;\n                    },\n                    \"Arc\": function () {\n                        var d = segment.params,\n                            laf = segment.sweep > Math.PI ? 1 : 0,\n                            sf = segment.anticlockwise ? 0 : 1;\n\n                        return \"M\" + segment.x1 + \" \" + segment.y1 + \" A \" + segment.radius + \" \" + d.r + \" 0 \" + laf + \",\" + sf + \" \" + segment.x2 + \" \" + segment.y2;\n                    }\n                })[segment.type]();\n            }\n        }\n    };\n\n// ******************************* /svg segments *****************************************************\n\n    /*\n     * Base class for SVG endpoints.\n     */\n    var SvgEndpoint = _jp.SvgEndpoint = function (params) {\n        var _super = SvgComponent.apply(this, [\n            {\n                cssClass: params._jsPlumb.endpointClass,\n                originalArgs: arguments,\n                pointerEventsSpec: \"all\",\n                useDivWrapper: true,\n                _jsPlumb: params._jsPlumb\n            }\n        ]);\n\n        _super.renderer.paint = function (style) {\n            var s = _jp.extend({}, style);\n            if (s.outlineColor) {\n                s.strokeWidth = s.outlineWidth;\n                s.strokeStyle = _ju.convertStyle(s.outlineColor, true);\n            }\n\n            if (this.node == null) {\n                this.node = this.makeNode(s);\n                this.svg.appendChild(this.node);\n            }\n            else if (this.updateNode != null) {\n                this.updateNode(this.node);\n            }\n            _applyStyles(this.svg, this.node, s, [ this.x, this.y, this.w, this.h ], this);\n            _pos(this.node, [ this.x, this.y ]);\n        }.bind(this);\n\n    };\n    _ju.extend(SvgEndpoint, SvgComponent);\n\n    /*\n     * SVG Dot Endpoint\n     */\n    _jp.Endpoints.svg.Dot = function () {\n        _jp.Endpoints.Dot.apply(this, arguments);\n        SvgEndpoint.apply(this, arguments);\n        this.makeNode = function (style) {\n            return _node(\"circle\", {\n                \"cx\": this.w / 2,\n                \"cy\": this.h / 2,\n                \"r\": this.radius\n            });\n        };\n        this.updateNode = function (node) {\n            _attr(node, {\n                \"cx\": this.w / 2,\n                \"cy\": this.h / 2,\n                \"r\": this.radius\n            });\n        };\n    };\n    _ju.extend(_jp.Endpoints.svg.Dot, [_jp.Endpoints.Dot, SvgEndpoint]);\n\n    /*\n     * SVG Rectangle Endpoint\n     */\n    _jp.Endpoints.svg.Rectangle = function () {\n        _jp.Endpoints.Rectangle.apply(this, arguments);\n        SvgEndpoint.apply(this, arguments);\n        this.makeNode = function (style) {\n            return _node(\"rect\", {\n                \"width\": this.w,\n                \"height\": this.h\n            });\n        };\n        this.updateNode = function (node) {\n            _attr(node, {\n                \"width\": this.w,\n                \"height\": this.h\n            });\n        };\n    };\n    _ju.extend(_jp.Endpoints.svg.Rectangle, [_jp.Endpoints.Rectangle, SvgEndpoint]);\n\n    /*\n     * SVG Image Endpoint is the default image endpoint.\n     */\n    _jp.Endpoints.svg.Image = _jp.Endpoints.Image;\n    /*\n     * Blank endpoint in svg renderer is the default Blank endpoint.\n     */\n    _jp.Endpoints.svg.Blank = _jp.Endpoints.Blank;\n    /*\n     * Label overlay in svg renderer is the default Label overlay.\n     */\n    _jp.Overlays.svg.Label = _jp.Overlays.Label;\n    /*\n     * Custom overlay in svg renderer is the default Custom overlay.\n     */\n    _jp.Overlays.svg.Custom = _jp.Overlays.Custom;\n\n    var AbstractSvgArrowOverlay = function (superclass, originalArgs) {\n        superclass.apply(this, originalArgs);\n        _jp.jsPlumbUIComponent.apply(this, originalArgs);\n        this.isAppendedAtTopLevel = false;\n        var self = this;\n        this.path = null;\n        this.paint = function (params, containerExtents) {\n            // only draws on connections, not endpoints.\n            if (params.component.svg && containerExtents) {\n                if (this.path == null) {\n                    this.path = _node(\"path\", {\n                        \"pointer-events\": \"all\"\n                    });\n                    params.component.svg.appendChild(this.path);\n\n                    this.canvas = params.component.svg; // for the sake of completeness; this behaves the same as other overlays\n                }\n                var clazz = originalArgs && (originalArgs.length == 1) ? (originalArgs[0].cssClass || \"\") : \"\",\n                    offset = [0, 0];\n\n                if (containerExtents.xmin < 0) offset[0] = -containerExtents.xmin;\n                if (containerExtents.ymin < 0) offset[1] = -containerExtents.ymin;\n\n                _attr(this.path, {\n                    \"d\": makePath(params.d),\n                    \"class\": clazz,\n                    stroke: params.strokeStyle ? params.strokeStyle : null,\n                    fill: params.fillStyle ? params.fillStyle : null,\n                    transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n                });\n            }\n        };\n        var makePath = function (d) {\n            return (isNaN(d.cxy.x) || isNaN(d.cxy.y)) ? \"\" : \"M\" + d.hxy.x + \",\" + d.hxy.y +\n                \" L\" + d.tail[0].x + \",\" + d.tail[0].y +\n                \" L\" + d.cxy.x + \",\" + d.cxy.y +\n                \" L\" + d.tail[1].x + \",\" + d.tail[1].y +\n                \" L\" + d.hxy.x + \",\" + d.hxy.y;\n        };\n        this.transfer = function(target) {\n            if (target.canvas && this.path && this.path.parentNode) {\n                this.path.parentNode.removeChild(this.path);\n                target.canvas.appendChild(this.path);\n            }\n        };\n    };\n    _ju.extend(AbstractSvgArrowOverlay, [_jp.jsPlumbUIComponent, _jp.Overlays.AbstractOverlay], {\n        cleanup: function (force) {\n            if (this.path != null) {\n                if (force)\n                    this._jsPlumb.instance.removeElement(this.path);\n                else\n                    if (this.path.parentNode)\n                        this.path.parentNode.removeChild(this.path);\n            }\n        },\n        reattach:function(instance) {\n            if (this.path && this.canvas && this.path.parentNode == null)\n                this.canvas.appendChild(this.path);\n        },\n        setVisible: function (v) {\n            if (this.path != null) (this.path.style.display = (v ? \"block\" : \"none\"));\n        }\n    });\n\n    _jp.Overlays.svg.Arrow = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Arrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.Arrow, [ _jp.Overlays.Arrow, AbstractSvgArrowOverlay ]);\n\n    _jp.Overlays.svg.PlainArrow = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.PlainArrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.PlainArrow, [ _jp.Overlays.PlainArrow, AbstractSvgArrowOverlay ]);\n\n    _jp.Overlays.svg.Diamond = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Diamond, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.Diamond, [ _jp.Overlays.Diamond, AbstractSvgArrowOverlay ]);\n\n    // a test\n    _jp.Overlays.svg.GuideLines = function () {\n        var path = null, self = this, p1_1, p1_2;\n        _jp.Overlays.GuideLines.apply(this, arguments);\n        this.paint = function (params, containerExtents) {\n            if (path == null) {\n                path = _node(\"path\");\n                params.connector.svg.appendChild(path);\n                self.attachListeners(path, params.connector);\n                self.attachListeners(path, self);\n\n                p1_1 = _node(\"path\");\n                params.connector.svg.appendChild(p1_1);\n                self.attachListeners(p1_1, params.connector);\n                self.attachListeners(p1_1, self);\n\n                p1_2 = _node(\"path\");\n                params.connector.svg.appendChild(p1_2);\n                self.attachListeners(p1_2, params.connector);\n                self.attachListeners(p1_2, self);\n            }\n\n            var offset = [0, 0];\n            if (containerExtents.xmin < 0) offset[0] = -containerExtents.xmin;\n            if (containerExtents.ymin < 0) offset[1] = -containerExtents.ymin;\n\n            _attr(path, {\n                \"d\": makePath(params.head, params.tail),\n                stroke: \"red\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n\n            _attr(p1_1, {\n                \"d\": makePath(params.tailLine[0], params.tailLine[1]),\n                stroke: \"blue\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n\n            _attr(p1_2, {\n                \"d\": makePath(params.headLine[0], params.headLine[1]),\n                stroke: \"green\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n        };\n\n        var makePath = function (d1, d2) {\n            return \"M \" + d1.x + \",\" + d1.y +\n                \" L\" + d2.x + \",\" + d2.y;\n        };\n    };\n    _ju.extend(_jp.Overlays.svg.GuideLines, _jp.Overlays.GuideLines);\n}).call(this);\n\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the VML renderers.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    // http://ajaxian.com/archives/the-vml-changes-in-ie-8\n    // http://www.nczonline.net/blog/2010/01/19/internet-explorer-8-document-and-browser-modes/\n    // http://www.louisremi.com/2009/03/30/changes-in-vml-for-ie8-or-what-feature-can-the-ie-dev-team-break-for-you-today/\n\n    var vmlAttributeMap = {\n            \"stroke-linejoin\": \"joinstyle\",\n            \"joinstyle\": \"joinstyle\",\n            \"endcap\": \"endcap\",\n            \"miterlimit\": \"miterlimit\"\n        },\n        jsPlumbStylesheet = null;\n\n    if (document.createStyleSheet && document.namespaces) {\n\n        var ruleClasses = [\n                \".jsplumb_vml\", \"jsplumb\\\\:textbox\", \"jsplumb\\\\:oval\", \"jsplumb\\\\:rect\",\n                \"jsplumb\\\\:stroke\", \"jsplumb\\\\:shape\", \"jsplumb\\\\:group\"\n            ],\n            rule = \"behavior:url(#default#VML);position:absolute;\";\n\n        jsPlumbStylesheet = document.createStyleSheet();\n\n        for (var i = 0; i < ruleClasses.length; i++)\n            jsPlumbStylesheet.addRule(ruleClasses[i], rule);\n\n        // in this page it is also mentioned that IE requires the extra arg to the namespace\n        // http://www.louisremi.com/2009/03/30/changes-in-vml-for-ie8-or-what-feature-can-the-ie-dev-team-break-for-you-today/\n        // but someone commented saying they didn't need it, and it seems jsPlumb doesnt need it either.\n        // var iev = document.documentMode;\n        //if (!iev || iev < 8)\n        document.namespaces.add(\"jsplumb\", \"urn:schemas-microsoft-com:vml\");\n        //else\n        //\tdocument.namespaces.add(\"jsplumb\", \"urn:schemas-microsoft-com:vml\", \"#default#VML\");\n    }\n\n    _jp.vml = {};\n\n    var scale = 1000,\n\n        _atts = function (o, atts) {\n            for (var i in atts) {\n                // IE8 fix: setattribute does not work after an element has been added to the dom!\n                // http://www.louisremi.com/2009/03/30/changes-in-vml-for-ie8-or-what-feature-can-the-ie-dev-team-break-for-you-today/\n                //o.setAttribute(i, atts[i]);\n\n                /*There is an additional problem when accessing VML elements by using get/setAttribute. The simple solution is following:\n\n                 if (document.documentMode==8) {\n                 ele.opacity=1;\n                 } else {\n                 ele.setAttribute(‘opacity’,1);\n                 }\n                 */\n\n                o[i] = atts[i];\n            }\n        },\n        _node = function (name, d, atts, parent, _jsPlumb, deferToJsPlumbContainer) {\n            atts = atts || {};\n            var o = document.createElement(\"jsplumb:\" + name);\n            if (deferToJsPlumbContainer)\n                _jsPlumb.appendElement(o, parent);\n            else\n            // TODO is this failing? that would be because parent is not a plain DOM element.\n            // IF SO, uncomment the line below this one and remove this one.\n                parent.appendChild(o);\n            //jsPlumb.getElement(parent).appendChild(o);\n\n            o.className = (atts[\"class\"] ? atts[\"class\"] + \" \" : \"\") + \"jsplumb_vml\";\n            _pos(o, d);\n            _atts(o, atts);\n            return o;\n        },\n        _pos = function (o, d, zIndex) {\n            o.style.left = d[0] + \"px\";\n            o.style.top = d[1] + \"px\";\n            o.style.width = d[2] + \"px\";\n            o.style.height = d[3] + \"px\";\n            o.style.position = \"absolute\";\n            if (zIndex)\n                o.style.zIndex = zIndex;\n        },\n        _conv = _jp.vml.convertValue = function (v) {\n            return Math.floor(v * scale);\n        },\n    // tests if the given style is \"transparent\" and then sets the appropriate opacity node to 0 if so,\n    // or 1 if not.  TODO in the future, support variable opacity.\n        _maybeSetOpacity = function (styleToWrite, styleToCheck, type, component) {\n            if (\"transparent\" === styleToCheck)\n                component.setOpacity(type, \"0.0\");\n            else\n                component.setOpacity(type, \"1.0\");\n        },\n        _applyStyles = function (node, style, component, _jsPlumb) {\n            var styleToWrite = {};\n            if (style.strokeStyle) {\n                styleToWrite.stroked = \"true\";\n                var strokeColor = _ju.convertStyle(style.strokeStyle, true);\n                styleToWrite.strokecolor = strokeColor;\n                _maybeSetOpacity(styleToWrite, strokeColor, \"stroke\", component);\n                styleToWrite.strokeweight = style.lineWidth + \"px\";\n            }\n            else styleToWrite.stroked = \"false\";\n\n            if (style.fillStyle) {\n                styleToWrite.filled = \"true\";\n                var fillColor = _ju.convertStyle(style.fillStyle, true);\n                styleToWrite.fillcolor = fillColor;\n                _maybeSetOpacity(styleToWrite, fillColor, \"fill\", component);\n            }\n            else styleToWrite.filled = \"false\";\n\n            if (style.dashstyle) {\n                if (component.strokeNode == null) {\n                    component.strokeNode = _node(\"stroke\", [0, 0, 0, 0], { dashstyle: style.dashstyle }, node, _jsPlumb);\n                }\n                else\n                    component.strokeNode.dashstyle = style.dashstyle;\n            }\n            else if (style[\"stroke-dasharray\"] && style.lineWidth) {\n                var sep = style[\"stroke-dasharray\"].indexOf(\",\") == -1 ? \" \" : \",\",\n                    parts = style[\"stroke-dasharray\"].split(sep),\n                    styleToUse = \"\";\n                for (var i = 0; i < parts.length; i++) {\n                    styleToUse += (Math.floor(parts[i] / style.lineWidth) + sep);\n                }\n                if (component.strokeNode == null) {\n                    component.strokeNode = _node(\"stroke\", [0, 0, 0, 0], { dashstyle: styleToUse }, node, _jsPlumb);\n                }\n                else\n                    component.strokeNode.dashstyle = styleToUse;\n            }\n\n            _atts(node, styleToWrite);\n        },\n    /*\n     * Base class for Vml endpoints and connectors. Extends jsPlumbUIComponent.\n     */\n        VmlComponent = function () {\n            var self = this, renderer = {};\n            _jp.jsPlumbUIComponent.apply(this, arguments);\n\n            this.opacityNodes = {\n                \"stroke\": null,\n                \"fill\": null\n            };\n            this.initOpacityNodes = function (vml) {\n                self.opacityNodes.stroke = _node(\"stroke\", [0, 0, 1, 1], {opacity: \"0.0\"}, vml, self._jsPlumb.instance);\n                self.opacityNodes.fill = _node(\"fill\", [0, 0, 1, 1], {opacity: \"0.0\"}, vml, self._jsPlumb.instance);\n            };\n            this.setOpacity = function (type, value) {\n                var node = self.opacityNodes[type];\n                if (node) node.opacity = \"\" + value;\n            };\n            var displayElements = [ ];\n            this.getDisplayElements = function () {\n                return displayElements;\n            };\n\n            this.appendDisplayElement = function (el, doNotAppendToCanvas) {\n                if (!doNotAppendToCanvas) self.canvas.parentNode.appendChild(el);\n                displayElements.push(el);\n            };\n        };\n    _ju.extend(VmlComponent, _jp.jsPlumbUIComponent, {\n        cleanup: function () {\n            if (this.bgCanvas) this.bgCanvas.parentNode.removeChild(this.bgCanvas);\n            if (this.canvas) this.canvas.parentNode.removeChild(this.canvas);\n        }\n    });\n\n    /*\n     * Base class for Vml connectors. extends VmlComponent.\n     */\n    var VmlConnector = _jp.ConnectorRenderers.vml = function (params, component) {\n        this.strokeNode = null;\n        this.canvas = null;\n        VmlComponent.apply(this, arguments);\n        var clazz = this._jsPlumb.instance.connectorClass + (params.cssClass ? (\" \" + params.cssClass) : \"\");\n        this.paint = function (style) {\n            if (style !== null) {\n\n                // we need to be at least 1 pixel in each direction, because otherwise coordsize gets set to\n                // 0 and overlays cannot paint.\n                this.w = Math.max(this.w, 1);\n                this.h = Math.max(this.h, 1);\n\n                var segments = this.getSegments(), p = { \"path\": \"\" },\n                    d = [this.x, this.y, this.w, this.h];\n\n                // create path from segments.\n                for (var i = 0; i < segments.length; i++) {\n                    p.path += _jp.Segments.vml.SegmentRenderer.getPath(segments[i]);\n                    p.path += \" \";\n                }\n\n                //*\n                if (style.outlineColor) {\n                    var outlineWidth = style.outlineWidth || 1,\n                        outlineStrokeWidth = style.lineWidth + (2 * outlineWidth),\n                        outlineStyle = {\n                            strokeStyle: _ju.convertStyle(style.outlineColor),\n                            lineWidth: outlineStrokeWidth\n                        };\n                    for (var aa in vmlAttributeMap) outlineStyle[aa] = style[aa];\n\n                    if (this.bgCanvas == null) {\n                        p[\"class\"] = clazz;\n                        p.coordsize = (d[2] * scale) + \",\" + (d[3] * scale);\n                        this.bgCanvas = _node(\"shape\", d, p, params.parent, this._jsPlumb.instance, true);\n                        _pos(this.bgCanvas, d);\n                        this.appendDisplayElement(this.bgCanvas, true);\n                        this.initOpacityNodes(this.bgCanvas, [\"stroke\"]);\n                        this.bgCanvas._jsPlumb = component;\n                    }\n                    else {\n                        p.coordsize = (d[2] * scale) + \",\" + (d[3] * scale);\n                        _pos(this.bgCanvas, d);\n                        _atts(this.bgCanvas, p);\n                    }\n\n                    _applyStyles(this.bgCanvas, outlineStyle, this);\n                }\n                //*/\n\n                if (this.canvas == null) {\n                    p[\"class\"] = clazz;\n                    p.coordsize = (d[2] * scale) + \",\" + (d[3] * scale);\n                    this.canvas = _node(\"shape\", d, p, params.parent, this._jsPlumb.instance, true);\n                    this.appendDisplayElement(this.canvas, true);\n                    this.initOpacityNodes(this.canvas, [\"stroke\"]);\n                    this.canvas._jsPlumb = component;\n                }\n                else {\n                    p.coordsize = (d[2] * scale) + \",\" + (d[3] * scale);\n                    _pos(this.canvas, d);\n                    _atts(this.canvas, p);\n                }\n\n                _applyStyles(this.canvas, style, this, this._jsPlumb.instance);\n            }\n        };\n\n    };\n    _ju.extend(VmlConnector, VmlComponent, {\n        setVisible: function (v) {\n            if (this.canvas) {\n                this.canvas.style.display = v ? \"block\" : \"none\";\n            }\n            if (this.bgCanvas) {\n                this.bgCanvas.style.display = v ? \"block\" : \"none\";\n            }\n        }\n    });\n\n    /*\n     *\n     * Base class for Vml Endpoints. extends VmlComponent.\n     *\n     */\n    var VmlEndpoint = _jp.VmlEndpoint = function (params) {\n        VmlComponent.apply(this, arguments);\n        this._jsPlumb.vml = null;//, opacityStrokeNode = null, opacityFillNode = null;\n        this.canvas = document.createElement(\"div\");\n        this.canvas.style.position = \"absolute\";\n        this._jsPlumb.clazz = this._jsPlumb.instance.endpointClass + (params.cssClass ? (\" \" + params.cssClass) : \"\");\n\n        // TODO vml endpoint adds class to VML at constructor time.  but the addClass method adds VML\n        // to the enclosing DIV. what to do?  seems like it would be better to just target the div.\n        // HOWEVER...vml connection has no containing div.  why not? it feels like it should.\n\n        params._jsPlumb.appendElement(this.canvas, params.parent);\n\n        this.paint = function (style, anchor) {\n            var p = { }, vml = this._jsPlumb.vml;\n\n            _ju.sizeElement(this.canvas, this.x, this.y, this.w, this.h);\n            if (this._jsPlumb.vml == null) {\n                p[\"class\"] = this._jsPlumb.clazz;\n                vml = this._jsPlumb.vml = this.getVml([0, 0, this.w, this.h], p, anchor, this.canvas, this._jsPlumb.instance);\n\n                this.appendDisplayElement(vml, true);\n                this.appendDisplayElement(this.canvas, true);\n\n                this.initOpacityNodes(vml, [\"fill\"]);\n            }\n            else {\n                _pos(vml, [0, 0, this.w, this.h]);\n                _atts(vml, p);\n            }\n\n            _applyStyles(vml, style, this);\n        };\n    };\n    _ju.extend(VmlEndpoint, VmlComponent);\n\n// ******************************* vml segments *****************************************************\t\n\n    _jp.Segments.vml = {\n        SegmentRenderer: {\n            getPath: function (segment) {\n                return ({\n                    \"Straight\": function (segment) {\n                        var d = segment.params;\n                        return \"m\" + _conv(d.x1) + \",\" + _conv(d.y1) + \" l\" + _conv(d.x2) + \",\" + _conv(d.y2) + \" e\";\n                    },\n                    \"Bezier\": function (segment) {\n                        var d = segment.params;\n                        return \"m\" + _conv(d.x1) + \",\" + _conv(d.y1) +\n                            \" c\" + _conv(d.cp1x) + \",\" + _conv(d.cp1y) + \",\" + _conv(d.cp2x) + \",\" + _conv(d.cp2y) + \",\" + _conv(d.x2) + \",\" + _conv(d.y2) + \" e\";\n                    },\n                    \"Arc\": function (segment) {\n                        var d = segment.params,\n                            xmin = Math.min(d.x1, d.x2),\n                            xmax = Math.max(d.x1, d.x2),\n                            ymin = Math.min(d.y1, d.y2),\n                            ymax = Math.max(d.y1, d.y2),\n                            sf = segment.anticlockwise ? 1 : 0,\n                            pathType = (segment.anticlockwise ? \"at \" : \"wa \"),\n                            makePosString = function () {\n                                if (d.loopback)\n                                    return \"0,0,\" + _conv(2 * d.r) + \",\" + _conv(2 * d.r);\n\n                                var xy = [\n                                    null,\n                                    [ function () {\n                                        return [xmin, ymin ];\n                                    }, function () {\n                                        return [xmin - d.r, ymin - d.r ];\n                                    }],\n                                    [ function () {\n                                        return [xmin - d.r, ymin ];\n                                    }, function () {\n                                        return [xmin, ymin - d.r ];\n                                    }],\n                                    [ function () {\n                                        return [xmin - d.r, ymin - d.r ];\n                                    }, function () {\n                                        return [xmin, ymin ];\n                                    }],\n                                    [ function () {\n                                        return [xmin, ymin - d.r ];\n                                    }, function () {\n                                        return [xmin - d.r, ymin ];\n                                    }]\n                                ][segment.segment][sf]();\n\n                                return _conv(xy[0]) + \",\" + _conv(xy[1]) + \",\" + _conv(xy[0] + (2 * d.r)) + \",\" + _conv(xy[1] + (2 * d.r));\n                            };\n\n                        return pathType + \" \" + makePosString() + \",\" + _conv(d.x1) + \",\" + _conv(d.y1) + \",\" + _conv(d.x2) + \",\" + _conv(d.y2) + \" e\";\n                    }\n\n                })[segment.type](segment);\n            }\n        }\n    };\n\n// ******************************* /vml segments *****************************************************\t\n\n// ******************************* vml endpoints *****************************************************\n\n    _jp.Endpoints.vml.Dot = function () {\n        _jp.Endpoints.Dot.apply(this, arguments);\n        VmlEndpoint.apply(this, arguments);\n        this.getVml = function (d, atts, anchor, parent, _jsPlumb) {\n            return _node(\"oval\", d, atts, parent, _jsPlumb);\n        };\n    };\n    _ju.extend(_jp.Endpoints.vml.Dot, VmlEndpoint);\n\n    _jp.Endpoints.vml.Rectangle = function () {\n        _jp.Endpoints.Rectangle.apply(this, arguments);\n        VmlEndpoint.apply(this, arguments);\n        this.getVml = function (d, atts, anchor, parent, _jsPlumb) {\n            return _node(\"rect\", d, atts, parent, _jsPlumb);\n        };\n    };\n    _ju.extend(_jp.Endpoints.vml.Rectangle, VmlEndpoint);\n\n    /*\n     * VML Image Endpoint is the same as the default image endpoint.\n     */\n    _jp.Endpoints.vml.Image = _jp.Endpoints.Image;\n\n    /**\n     * placeholder for Blank endpoint in vml renderer.\n     */\n    _jp.Endpoints.vml.Blank = _jp.Endpoints.Blank;\n\n// ******************************* /vml endpoints *****************************************************\t\n\n// ******************************* vml overlays *****************************************************\n\n    /**\n     * VML Label renderer. uses the default label renderer (which adds an element to the DOM)\n     */\n    _jp.Overlays.vml.Label = _jp.Overlays.Label;\n\n    /**\n     * VML Custom renderer. uses the default Custom renderer (which adds an element to the DOM)\n     */\n    _jp.Overlays.vml.Custom = _jp.Overlays.Custom;\n\n    /**\n     * Abstract VML arrow superclass\n     */\n    var AbstractVmlArrowOverlay = function (superclass, originalArgs) {\n        superclass.apply(this, originalArgs);\n        VmlComponent.apply(this, originalArgs);\n        var self = this, path = null;\n        this.canvas = null;\n        this.isAppendedAtTopLevel = true;\n        var getPath = function (d) {\n            return \"m \" + _conv(d.hxy.x) + \",\" + _conv(d.hxy.y) +\n                \" l \" + _conv(d.tail[0].x) + \",\" + _conv(d.tail[0].y) +\n                \" \" + _conv(d.cxy.x) + \",\" + _conv(d.cxy.y) +\n                \" \" + _conv(d.tail[1].x) + \",\" + _conv(d.tail[1].y) +\n                \" x e\";\n        };\n        this.paint = function (params, containerExtents) {\n            // only draws for connectors, not endpoints.\n            if (params.component.canvas && containerExtents) {\n                var p = {}, d = params.d, connector = params.component;\n                if (params.strokeStyle) {\n                    p.stroked = \"true\";\n                    p.strokecolor = _ju.convertStyle(params.strokeStyle, true);\n                }\n                if (params.lineWidth) p.strokeweight = params.lineWidth + \"px\";\n                if (params.fillStyle) {\n                    p.filled = \"true\";\n                    p.fillcolor = params.fillStyle;\n                }\n\n                var xmin = Math.min(d.hxy.x, d.tail[0].x, d.tail[1].x, d.cxy.x),\n                    ymin = Math.min(d.hxy.y, d.tail[0].y, d.tail[1].y, d.cxy.y),\n                    xmax = Math.max(d.hxy.x, d.tail[0].x, d.tail[1].x, d.cxy.x),\n                    ymax = Math.max(d.hxy.y, d.tail[0].y, d.tail[1].y, d.cxy.y),\n                    w = Math.abs(xmax - xmin),\n                    h = Math.abs(ymax - ymin),\n                    dim = [xmin, ymin, w, h];\n\n                // for VML, we create overlays using shapes that have the same dimensions and\n                // coordsize as their connector - overlays calculate themselves relative to the\n                // connector (it's how it's been done since the original canvas implementation, because\n                // for canvas that makes sense).\n                p.path = getPath(d);\n                p.coordsize = (connector.w * scale) + \",\" + (connector.h * scale);\n\n                dim[0] = connector.x;\n                dim[1] = connector.y;\n                dim[2] = connector.w;\n                dim[3] = connector.h;\n\n                if (self.canvas == null) {\n                    var overlayClass = connector._jsPlumb.overlayClass || \"\";\n                    var clazz = originalArgs && (originalArgs.length == 1) ? (originalArgs[0].cssClass || \"\") : \"\";\n                    p[\"class\"] = clazz + \" \" + overlayClass;\n                    self.canvas = _node(\"shape\", dim, p, connector.canvas.parentNode, connector._jsPlumb.instance, true);\n                    connector.appendDisplayElement(self.canvas, true);\n                }\n                else {\n                    _pos(self.canvas, dim);\n                    _atts(self.canvas, p);\n                }\n            }\n        };\n        this.cleanup = function () {\n            if (this.canvas != null) this._jsPlumb.instance.removeElement(this.canvas);\n        };\n    };\n    _ju.extend(AbstractVmlArrowOverlay, [VmlComponent, _jp.Overlays.AbstractOverlay], {\n        setVisible: function (state) {\n            this.canvas.style.display = state ? \"block\" : \"none\";\n        }\n    });\n\n    _jp.Overlays.vml.Arrow = function () {\n        AbstractVmlArrowOverlay.apply(this, [_jp.Overlays.Arrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.vml.Arrow, [ _jp.Overlays.Arrow, AbstractVmlArrowOverlay ]);\n\n    _jp.Overlays.vml.PlainArrow = function () {\n        AbstractVmlArrowOverlay.apply(this, [_jp.Overlays.PlainArrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.vml.PlainArrow, [ _jp.Overlays.PlainArrow, AbstractVmlArrowOverlay ]);\n\n    _jp.Overlays.vml.Diamond = function () {\n        AbstractVmlArrowOverlay.apply(this, [_jp.Overlays.Diamond, arguments]);\n    };\n    _ju.extend(_jp.Overlays.vml.Diamond, [ _jp.Overlays.Diamond, AbstractVmlArrowOverlay ]);\n\n// ******************************* /vml overlays *****************************************************    \n\n}).call(this);\n\n/*\n * jsPlumb\n * \n * Title:jsPlumb 1.7.6\n * \n * Provides a way to visually connect elements on an HTML page, using SVG or VML.  \n * \n * This file contains the 'vanilla' adapter - having no external dependencies other than bundled libs.\n *\n * Copyright (c) 2010 - 2015 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * http://jsplumbtoolkit.com\n * http://github.com/sporritt/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil,\n        _jk = root.Katavorio, _jg = root.Biltong;\n\n    var _getDragManager = function (instance, category) {\n\n        category = category || \"main\";\n        var key = \"_katavorio_\" + category;\n        var k = instance[key],\n            e = instance.getEventManager();\n\n        if (!k) {\n            k = new _jk({\n                bind: e.on,\n                unbind: e.off,\n                getSize: jsPlumb.getSize,\n                getPosition: function (el) {\n                    var o = instance.getOffset(el);\n                    return [o.left, o.top];\n                },\n                setPosition: function (el, xy) {\n                    el.style.left = xy[0] + \"px\";\n                    el.style.top = xy[1] + \"px\";\n                },\n                addClass: jsPlumb.addClass,\n                removeClass: jsPlumb.removeClass,\n                intersects: _jg.intersects,\n                indexOf: _ju.indexOf,\n                css: {\n                    noSelect: instance.dragSelectClass,\n                    droppable: \"jsplumb-droppable\",\n                    draggable: \"jsplumb-draggable\",\n                    drag: \"jsplumb-drag\",\n                    selected: \"jsplumb-drag-selected\",\n                    active: \"jsplumb-drag-active\",\n                    hover: \"jsplumb-drag-hover\"\n                }\n            });\n            instance[key] = k;\n            instance.bind(\"zoom\", k.setZoom);\n        }\n        return k;\n    };\n\n    var _animProps = function (o, p) {\n        var _one = function (pName) {\n            if (p[pName]) {\n                if (_ju.isString(p[pName])) {\n                    var m = p[pName].match(/-=/) ? -1 : 1,\n                        v = p[pName].substring(2);\n                    return o[pName] + (m * v);\n                }\n                else return p[pName];\n            }\n            else\n                return o[pName];\n        };\n        return [ _one(\"left\"), _one(\"top\") ];\n    };\n\n    _jp.extend(root.jsPlumbInstance.prototype, {\n\n        animationSupported:true,\n\n        scopeChange: function (el, elId, endpoints, scope, types) {\n\n        },\n\n        getElement: function (el) {\n            if (el == null) return null;\n            // here we pluck the first entry if el was a list of entries.\n            // this is not my favourite thing to do, but previous versions of\n            // jsplumb supported jquery selectors, and it is possible a selector\n            // will be passed in here.\n            el = typeof el === \"string\" ? el : el.length != null && el.enctype == null ? el[0] : el;\n            return typeof el === \"string\" ? document.getElementById(el) : el;\n        },\n        removeElement: function (element) {\n            _getDragManager(this).elementRemoved(element);\n            this.getEventManager().remove(element);\n        },\n        //\n        // this adapter supports a rudimentary animation function. no easing is supported.  only\n        // left/top properties are supported. property delta args are expected to be in the form\n        //\n        // +=x.xxxx\n        //\n        // or\n        //\n        // -=x.xxxx\n        //\n        doAnimate: function (el, properties, options) {\n            options = options || {};\n            var o = this.getOffset(el),\n                ap = _animProps(o, properties),\n                ldist = ap[0] - o.left,\n                tdist = ap[1] - o.top,\n                d = options.duration || 250,\n                step = 15, steps = d / step,\n                linc = (step / d) * ldist,\n                tinc = (step / d) * tdist,\n                idx = 0,\n                int = setInterval(function () {\n                    jsPlumb.setPosition(el, {\n                        left: o.left + (linc * (idx + 1)),\n                        top: o.top + (tinc * (idx + 1))\n                    });\n                    if (options.step != null) options.step();\n                    idx++;\n                    if (idx >= steps) {\n                        window.clearInterval(int);\n                        if (options.complete != null) options.complete();\n                    }\n                }, step);\n        },\n        // DRAG/DROP\n        destroyDraggable: function (el, category) {\n            _getDragManager(this, category).destroyDraggable(el);\n        },\n        destroyDroppable: function (el, category) {\n            _getDragManager(this, category).destroyDroppable(el);\n        },\n        initDraggable: function (el, options, category) {\n            _getDragManager(this, category).draggable(el, options);\n        },\n        initDroppable: function (el, options, category) {\n            _getDragManager(this, category).droppable(el, options);\n        },\n        isAlreadyDraggable: function (el) {\n            return el._katavorioDrag != null;\n        },\n        isDragSupported: function (el, options) {\n            return true;\n        },\n        isDropSupported: function (el, options) {\n            return true;\n        },\n        isElementDraggable: function (el) {\n            el = jsPlumb.getElement(el);\n            return el._katavorioDrag && el._katavorioDrag.isEnabled();\n        },\n        getDragObject: function (eventArgs) {\n            return eventArgs[0].drag.getDragElement();\n        },\n        getDragScope: function (el) {\n            return el._katavorioDrag && el._katavorioDrag.scopes.join(\" \") || \"\";\n        },\n        getDropEvent: function (args) {\n            return args[0].e;\n        },\n        getDropScope: function (el) {\n            return el._katavorioDrop && el._katavorioDrop.scopes.join(\" \") || \"\";\n        },\n        getUIPosition: function (eventArgs, zoom) {\n            return {\n                left: eventArgs[0].pos[0],\n                top: eventArgs[0].pos[1]\n            };\n        },\n        setDragFilter: function (el, filter, _exclude) {\n            if (el._katavorioDrag) {\n                el._katavorioDrag.setFilter(filter, _exclude);\n            }\n        },\n        setElementDraggable: function (el, draggable) {\n            el = jsPlumb.getElement(el);\n            if (el._katavorioDrag)\n                el._katavorioDrag.setEnabled(draggable);\n        },\n        setDragScope: function (el, scope) {\n            if (el._katavorioDrag)\n                el._katavorioDrag.k.setDragScope(el, scope);\n        },\n        dragEvents: {\n            'start': 'start', 'stop': 'stop', 'drag': 'drag', 'step': 'step',\n            'over': 'over', 'out': 'out', 'drop': 'drop', 'complete': 'complete'\n        },\n        animEvents: {\n            'step': \"step\", 'complete': 'complete'\n        },\n        stopDrag: function (el) {\n            if (el._katavorioDrag)\n                el._katavorioDrag.abort();\n        },\n// \t\tMULTIPLE ELEMENT DRAG\n        // these methods are unique to this adapter, because katavorio\n        // supports dragging multiple elements.\n        addToDragSelection: function (spec) {\n            _getDragManager(this).select(spec);\n        },\n        removeFromDragSelection: function (spec) {\n            _getDragManager(this).deselect(spec);\n        },\n        clearDragSelection: function () {\n            _getDragManager(this).deselectAll();\n        },\n        getOriginalEvent: function (e) {\n            return e;\n        },\n        // each adapter needs to use its own trigger method, because it triggers a drag. Mottle's trigger method\n        // works perfectly well but does not cause a drag to start with jQuery. Presumably this is due to some\n        // intricacy in the way in which jQuery UI's draggable method registers events.\n        trigger: function (el, event, originalEvent) {\n            this.getEventManager().trigger(el, event, originalEvent);\n        },\n        doReset:function() {\n            // look for katavorio instances and reset each one if found.\n            for (var key in this) {\n                if (key.indexOf(\"_katavorio_\") === 0) {\n                    this[key].reset();\n                }\n            }\n        }\n    });\n\n    var ready = function (f) {\n        var _do = function () {\n            if (/complete|loaded|interactive/.test(document.readyState) && typeof(document.body) != \"undefined\" && document.body != null)\n                f();\n            else\n                setTimeout(_do, 9);\n        };\n\n        _do();\n    };\n    ready(_jp.init);\n\n}).call(this);\n\ndefine(\"jsPlumb\", function(){});\n\n",
    ";(function() {\n\n    var root = this;\n    var Farahey;\n    if (typeof exports !== 'undefined') {\n        Farahey = exports;\n    } else {\n        Farahey = root.Farahey = {};\n    } \n\n    var findInsertionPoint = function(sortedArr, val, comparator) {   \n           var low = 0, high = sortedArr.length;\n           var mid = -1, c = 0;\n           while(low < high)   {\n              mid = parseInt((low + high)/2);\n              c = comparator(sortedArr[mid], val);\n              if(c < 0)   {\n                 low = mid + 1;\n              }else if(c > 0) {\n                 high = mid;\n              }else {\n                 return mid;\n              }\n           }\n           return low;\n        },\n        geomSupport = typeof jsPlumbGeom !== \"undefined\" ? jsPlumbGeom : Biltong,\n        insertSorted = function(array, value, comparator) {\n            var ip = findInsertionPoint(array, value, comparator);\n            array.splice(ip, 0, value);\n        },\n        distanceFromOriginComparator = function(r1, r2, origin) {\n            var d1 = geomSupport.lineLength(origin, [ r1.x + (r1.w / 2), r1.y + (r1.h / 2)]),\n                d2 = geomSupport.lineLength(origin, [ r2.x + (r2.w / 2), r2.y + (r2.h / 2)]);\n\n            return d1 < d2 ? -1 : d1 == d2 ? 0 : 1;\n        },\n        EntryComparator = function(origin, getSize) {\n            var _origin = origin,\n                _cache = {},\n                _get = function(entry) {\n                    if (!_cache[entry[1]]) {\n                        var s = getSize(entry[2]);\n                        _cache[entry[1]] = {\n                            l:entry[0][0],\n                            t:entry[0][1],\n                            w:s[0],\n                            h:s[1],\n                            center:[entry[0][0] + (s[0] / 2), entry[0][1] + (s[1] / 2) ]\n                        };\n                    }\n                    return _cache[entry[1]];\n                }\n            this.setOrigin = function(o) {\n                _origin = o;\n                _cache = {};\n            };\n            this.compare = function(e1, e2) {\n                var d1 = geomSupport.lineLength(_origin, _get(e1).center),\n                    d2 = geomSupport.lineLength(_origin, _get(e2).center);\n\n                return d1 < d2 ? -1 : d1 == d2 ? 0 : 1;\n            };\n        };\n\n    var _isOnEdge = function(r, axis, dim, v) { return (r[axis] <= v && v <= r[axis] + r[dim]); },\n        _xAdj = [ function(r1, r2) { return r1.x + r1.w - r2.x; }, function(r1, r2) { return r1.x - (r2.x + r2.w); } ],\n        _yAdj = [ function(r1, r2) { return r1.y + r1.h - r2.y; }, function(r1, r2) { return r1.y - (r2.y + r2.h); } ],\n        _adj = [ null, [ _xAdj[0], _yAdj[1] ], [ _xAdj[0], _yAdj[0] ], [ _xAdj[1], _yAdj[0] ], [ _xAdj[1], _yAdj[1] ] ],                  \n        _genAdj = function(r1, r2, m, b, s) {\n            if (isNaN(m)) m = 0;\n            var y = r2.y + r2.h, \n                x = (m == Infinity || m == -Infinity) ? r2.x + (r2.w / 2) :  (y - b) / m,\n                theta = Math.atan(m);\n\n            if (_isOnEdge(r2, \"x\", \"w\", x)) {   \n                var rise = _adj[s][1](r1, r2), \n                    hyp = rise / Math.sin(theta),\n                    run = hyp * Math.cos(theta);\n                return { left:run, top:rise };\n            }           \n            else {\n                var run = _adj[s][0](r1, r2),\n                    hyp = run / Math.cos(theta),\n                    rise = hyp * Math.sin(theta);\n                return { left:run, top:rise };\n            }\n        },            \n        /*\n        * Calculates how far to move r2 from r1 so that it no longer overlaps.\n        * if origin is supplied, then it means we want r2 to move along a vector joining r2's center to that point. \n        * otherwise we want it to move along a vector joining the two rectangle centers.\n        */\n        _calculateSpacingAdjustment = Farahey.calculateSpacingAdjustment = function(r1, r2) {\n            var c1 = r1.center || [ r1.x + (r1.w / 2), r1.y + (r1.h / 2) ],\n                c2 = r2.center || [ r2.x + (r2.w / 2), r2.y + (r2.h / 2) ],\n                m = geomSupport.gradient(c1, c2),\n                s = geomSupport.quadrant(c1, c2),\n                b = (m == Infinity || m == -Infinity || isNaN(m)) ? 0 : c1[1] - (m * c1[0]);                \n\n            return _genAdj(r1, r2, m, b, s);        \n        },    \n        // calculate a padded rectangle for the given element with offset & size, and desired padding.\n        _paddedRectangle = Farahey.paddedRectangle = function(o, s, p) {\n            return { x:o[0] - p[0], y: o[1] - p[1], w:s[0] + (2 * p[0]), h:s[1] + (2 * p[1]) };\n        },\n        _magnetize = function(positionArray, positions, sizes, padding, \n            constrain, origin, filter,\n            updateOnStep, stepInterval, stepCallback) \n        {                        \n            origin = origin || [0,0];\n            stepCallback = stepCallback || function() { };\n\n            var focus = _paddedRectangle(origin, [1,1], padding),\n                iterations = 100, iteration = 1, uncleanRun = true, adjustBy, constrainedAdjustment,\n                _movedElements = {},\n                _move = function(id, o, x, y) {\n                    _movedElements[id] = true;\n                    o[0] += x;\n                    o[1] += y;\n                },\n                step = function() {\n                    for (var i = 0; i < positionArray.length; i++) {\n                        var o1 = positions[positionArray[i][1]],\n                            oid = positionArray[i][1],\n                            a1 = positionArray[i][2], // angle to node from magnet origin\n                            s1 = sizes[positionArray[i][1]],\n                            // create a rectangle for first element: this encompasses the element and padding on each\n                            //side\n                            r1 = _paddedRectangle(o1, s1, padding);\n                        \n                        if (filter(positionArray[i][1]) && geomSupport.intersects(focus, r1)) {\n                            adjustBy = _calculateSpacingAdjustment(focus, r1);\n                            constrainedAdjustment = constrain(positionArray[i][1], o1, adjustBy);\n                            _move(oid, o1, constrainedAdjustment.left, constrainedAdjustment.top);\n                        }\n\n                        // now move others to account for this one, if necessary.\n                        // reset rectangle for node\n                        r1 = _paddedRectangle(o1, s1, padding);\n                        for (var j = 0; j < positionArray.length; j++) {                        \n                            if (i != j) {\n                              var o2 = positions[positionArray[j][1]],\n                                  a2 = positionArray[j][2], // angle to node from magnet origin\n                                  s2 = sizes[positionArray[j][1]],\n                                  // create a rectangle for the second element, again by putting padding of the desired\n                                  // amount around the bounds of the element.\n                                  r2 = _paddedRectangle(o2, s2, padding);\n                        \n                              // if the two rectangles intersect then figure out how much to move the second one by.\n                                if (geomSupport.intersects(r1, r2)) {\n                                    // TODO in 0.3, instead of moving neither, the other node should move.\n                                    if (filter(positionArray[j][1])) {\n                                        uncleanRun = true;                                                                          \n                                        adjustBy =  _calculateSpacingAdjustment(r1, r2),\n                                        constrainedAdjustment = constrain(positionArray[j][1], o2, adjustBy);\n\n                                        _move(positionArray[j][1], o2, constrainedAdjustment.left, constrainedAdjustment.top);\n                                    }\n                                }\n                            }\n                        } \n                    }\n\n                    if (updateOnStep)\n                        stepCallback();\n\n                    if (uncleanRun && iteration < iterations) {\n                        uncleanRun = false;\n                        iteration++;\n                        if (updateOnStep) {\n                            window.setTimeout(step, stepInterval);\n                        }\n                        else\n                            step();\n                    }\n                };            \n\n            step();       \n            return _movedElements;             \n        };\n\n\n        /**\n        * @name Magnetizer\n        * @classdesc Applies repulsive magnetism to a set of elements relative to a given point, with a specified\n        * amount of padding around the point.\n        */\n\n        /**\n        * @name Magnetizer#constructor\n        * @function\n        * @param {Selector|Element} [container] Element that contains the elements to magnetize. Only required if you intend to use the `executeAtEvent` method.\n        * @param {Function} [getContainerPosition] Function that returns the position of the container (as an object of the form `{left:.., top:..}`) when requested. Only required if you intend to use the `executeAtEvent` method.\n        * @param {Function} getPosition A function that takes an element id and returns its position. It does not matter to which element this position is computed as long as you remain consistent with this method, `setPosition` and the `origin` property.\n        * @param {Function} setPosition A function that takes an element id and position, and sets it. See note about offset parent above.\n        * @param {Function} getSize A function that takes an element id and returns its size, in pixels.\n        * @param {Integer[]} [padding] Optional padding for x and y directions. Defaults to 20 pixels in each direction.\n        * @param {Function} [constrain] Optional function that takes an id and a proposed amount of movement in each axis, and returns the allowed amount of movement in each axis. You can use this to constrain your elements to a grid, for instance, or a path, etc.\n        * @param {Integer[]} [origin] The origin of magnetization, in pixels. Defaults to 0,0. You can also supply this to the `execute` call.\n        * @param {Selector|String[]|Element[]} elements List of elements on which to operate.\n        * @param {Boolean} [executeNow=false] Whether or not to execute the routine immediately.\n        * @param {Function} [filter] Optional function that takes an element id and returns whether or not that element can be moved.\n        * @param {Boolean} [orderByDistanceFromOrigin=false] Whether or not to sort elements first by distance from origin. Can have better results but takes more time.\n        */\n        root.Magnetizer = function(params) {\n            var getPosition = params.getPosition,\n                getSize = params.getSize,\n                getId = params.getId,\n                setPosition = params.setPosition,\n                padding = params.padding ||  [20, 20],\n                // expects a { left:.., top:... } object. returns how far it can actually go.\n                constrain = params.constrain || function(id, current, delta) { return delta; },\n                positionArray = [],\n                positions = {},\n                sizes = {},\n                elements = params.elements || [],\n                origin = params.origin || [0,0],\n                executeNow = params.executeNow,\n                minx, miny, maxx, maxy,\n                getOrigin = this.getOrigin = function() { return origin; },\n                filter = params.filter || function(_) { return true; },\n                orderByDistanceFromOrigin = params.orderByDistanceFromOrigin,\n                comparator = new EntryComparator(origin, getSize),\n                updateOnStep = params.updateOnStep,\n                stepInterval = params.stepInterval || 350,\n                originDebugMarker,\n                debug = params.debug,\n                createOriginDebugger = function() {\n                    var d = document.createElement(\"div\");\n                    d.style.position = \"absolute\";\n                    d.style.width = \"10px\";\n                    d.style.height = \"10px\";\n                    d.style.backgroundColor = \"red\";\n                    document.body.appendChild(d);\n                    originDebugMarker = d;\n                },\n                _addToPositionArray = function(p) {\n                    if (!orderByDistanceFromOrigin || positionArray.length == 0)\n                        positionArray.push(p);\n                    else {\n                        insertSorted(positionArray, p, comparator.compare);                   \n                    }\n                },\n                _updatePositions = function() {\n                    comparator.setOrigin(origin);\n                    positionArray = []; positions = {}; sizes = {};\n                    minx = miny = Infinity;\n                    maxx = maxy = -Infinity;\n                    for (var i = 0; i < elements.length; i++) {\n                        var p = getPosition(elements[i]),\n                            s = getSize(elements[i]),\n                            id = getId(elements[i]);\n\n                        positions[id] = [p.left, p.top];\n                        _addToPositionArray([ [p.left, p.top], id, elements[i]]);\n                        sizes[id] = s;\n                        minx = Math.min(minx, p.left);\n                        miny = Math.min(miny, p.top);\n                        maxx = Math.max(maxx, p.left + s[0]);\n                        maxy = Math.max(maxy, p.top + s[1]);\n                    }\n                },\n                _run = function() {\n                    if (elements.length > 1) {\n                        var _movedElements = _magnetize(positionArray, positions, sizes, padding, constrain, origin, filter, updateOnStep, stepInterval, _positionElements);                        \n                        _positionElements(_movedElements);\n                    }\n                },\n                _positionElements = function(_movedElements) {\n                    for (var i = 0; i < elements.length; i++) {\n                        var id = getId(elements[i]);\n                        if (_movedElements[id])\n                            setPosition(elements[i], { left:positions[id][0], top:positions[id][1] });\n                    }\n                },\n                setOrigin = function(o) {\n                    if (o != null) {\n                        origin = o;\n                        comparator.setOrigin(o);\n                    }            \n                };\n\n            /**\n            * @name Magnetizer#execute\n            * @function\n            * @desc Runs the magnetize routine.\n            * @param {Integer[]} [o] Optional origin to use. You may have set this in the constructor and do not wish to supply it, or you may be happy with the default of [0,0].\n            */\n            this.execute = function(o) {\n                setOrigin(o);\n                _updatePositions();\n                _run();\n            };            \n\n            /**\n            * @name Magnetizer#executeAtCenter\n            * @function\n            * @desc Computes the center of all the nodes and then uses that as the magnetization origin when it runs the routine.\n            */\n            this.executeAtCenter = function() {\n                _updatePositions();\n                setOrigin([\n                    (minx + maxx) / 2,\n                    (miny + maxy) / 2\n                ]);\n                _run();\n            };\n\n            /**\n            * @name Magnetizer#executeAtEvent\n            * @function\n            * @desc Runs the magnetize routine using the location of the given event as the origin. To use this\n            * method you need to have provided a `container`,  and a `getContainerPosition` function to the\n            * constructor.\n            * @param {Event} e Event to get origin location from.\n            */\n            this.executeAtEvent = function(e) {\n                var c = params.container, \n                    o = params.getContainerPosition(c),\n                    x = e.pageX - o.left + c[0].scrollLeft, \n                    y = e.pageY - o.top + c[0].scrollTop;\n\n                if (debug) {\n                    originDebugMarker.style.left = e.pageX + \"px\";\n                    originDebugMarker.style.top = e.pageY + \"px\";\n                }\n\n                this.execute([x,y]);\n            };\n\n            /**\n            * @name Magnetize#setElements\n            * @function\n            * @desc Sets the current list of elements.\n            * @param {Object[]} _els List of elements, in whatever format the magnetizer is setup to use.\n            */\n            this.setElements = function(_els) {\n                elements = _els;\n            };\n\n\n            if (debug)\n                createOriginDebugger();\n\n            if (executeNow) this.execute();\n\n        };\n}).call(this);        \n\n\ndefine(\"farahey\", [\"jsPlumb\"], function(){});\n\n",
    "/**\n * Map \"magnetizing\" feature\n * jsPlumb extension used: http://morrisonpitt.com/farahey/\n */\n\ndefine('app/map/magnetizing',[\n    'jquery',\n    'app/map/util',\n    'farahey'\n], function($, MapUtil) {\n\n    'use strict';\n\n    /**\n     * Cached current \"Magnetizer\" object\n     * @type {Magnetizer}\n     */\n    let m8 = null;\n\n    /**\n     * init a jsPlumb (map) Element for \"magnetised\" function.\n     * this is optional and prevents systems from being overlapped\n     */\n    $.fn.initMagnetizer = function(){\n        let mapContainer = this;\n        let systems = mapContainer.getSystems();\n\n        /**\n         * helper function\n         * get current system offset\n         * @param system\n         * @returns {{left, top}}\n         * @private\n         */\n        let _offset = function(system) {\n\n            let _ = function(p) {\n                let v = system.style[p];\n                return parseInt(v.substring(0, v.length - 2));\n            };\n\n            return {\n                left:_('left'),\n                top:_('top')\n            };\n        };\n\n        /**\n         * helper function\n         * set new system offset\n         * @param system\n         * @param o\n         * @private\n         */\n        let _setOffset = function(system, o) {\n            let markAsUpdated = false;\n\n            // new position must be within parent container\n            // no negative offset!\n            if(\n                o.left >= 0 &&\n                o.left <= 2300\n            ){\n                markAsUpdated = true;\n                system.style.left = o.left + 'px';\n            }\n\n            if(\n                o.top >= 0 &&\n                o.top <= 498\n            ){\n                markAsUpdated = true;\n                system.style.top = o.top + 'px';\n            }\n\n            if(markAsUpdated === true){\n                $(system).markAsChanged();\n            }\n        };\n\n        /**\n         * helper function\n         * exclude current dragged element(s) from position update\n         * @param id\n         * @returns {boolean}\n         * @private\n         */\n        let _dragFilter = function(id) {\n            return !$('#' + id).is('.jsPlumb_dragged, .pf-system-locked');\n        };\n\n        let gridConstrain = function(gridX, gridY) {\n            return function(id, current, delta) {\n                if( mapContainer.hasClass(MapUtil.config.mapGridClass) ){\n                    // active grid\n                    return {\n                        left:(gridX * Math.floor( (current[0] + delta.left) / gridX )) - current[0],\n                        top:(gridY * Math.floor( (current[1] + delta.top) / gridY )) - current[1]\n                    };\n                }else{\n                    // no grid\n                    return delta;\n                }\n            };\n        };\n\n        // main init for \"magnetize\" feature ------------------------------------------------------\n        m8 = new Magnetizer({\n            container: mapContainer,\n            getContainerPosition: function(c) {\n                return c.offset();\n            },\n            getPosition:_offset,\n            getSize: function(system) {\n                return [ $(system).outerWidth(), $(system).outerHeight() ];\n            },\n            getId : function(system) {\n                return $(system).attr('id');\n            },\n            setPosition:_setOffset,\n            elements: systems,\n            filter: _dragFilter,\n            padding: [6, 6],\n            constrain: gridConstrain(MapUtil.config.mapSnapToGridDimension, MapUtil.config.mapSnapToGridDimension)\n        });\n    };\n\n    $.fn.destroyMagnetizer = function(){\n        let mapContainer = this;\n\n        // remove cached \"magnetizer\" instance\n        m8 = null;\n    };\n\n    /**\n     * update system positions for \"all\" systems that are effected by drag&drop\n     * @param map\n     * @param e\n     */\n    let executeAtEvent = function(map, e){\n        if(m8 !== null && e ){\n            m8.executeAtEvent(e);\n            map.repaintEverything();\n        }\n    };\n\n    /**\n     * rearrange all systems of a map\n     * needs \"magnetization\" to be active\n     * @param map\n     */\n    let executeAtCenter = function(map){\n        if(m8 !== null){\n            m8.executeAtCenter();\n            map.repaintEverything();\n        }\n    };\n\n    /**\n     * set/update elements for \"magnetization\"\n     * -> (e.g. new systems was added)\n     * @param map\n     */\n    let setElements = function(map){\n        if(m8 !== null){\n            let mapContainer = $(map.getContainer());\n            let systems = mapContainer.getSystems();\n            m8.setElements(systems);\n\n            // re-arrange systems\n            executeAtCenter(map);\n        }\n    };\n\n    return {\n        executeAtCenter: executeAtCenter,\n        executeAtEvent: executeAtEvent,\n        setElements: setElements\n    };\n});\n",
    "/**\n * Created by Exodus on 26.06.2016.\n */\ndefine('app/map/scrollbar',[\n    'jquery',\n    'app/init',\n    'app/util'\n], function($, Init, Util) {\n    'use strict';\n\n    /**\n     * init map scrollbar\n     * @param config\n     * @returns {*}\n     */\n    $.fn.initCustomScrollbar = function(config){\n\n        // default config -------------------------------------------------------------------------\n        let defaultConfig = {\n            axis: 'x',\n            theme: 'light-thick',\n            scrollInertia: 300,\n            autoExpandScrollbar: false,\n            scrollButtons:{\n                scrollAmount: 30,\n                enable: true\n            },\n            callbacks:{\n                onTotalScrollOffset: 0,\n                onTotalScrollBackOffset: 0,\n                alwaysTriggerOffsets: true\n            },\n\n            advanced: {\n                updateOnBrowserResize: true,\n                updateOnContentResize: true,\n                autoExpandHorizontalScroll: true,\n                autoScrollOnFocus: 'div'\n            },\n            mouseWheel:{\n                enable: false, // scroll weel currently disabled\n                scrollAmount: 'auto',\n                axis: 'x',\n                preventDefault: true\n            },\n            scrollbarPosition: 'inside',\n            autoDraggerLength: true\n            //autoHideScrollbar: false\n        };\n\n        // init -----------------------------------------------------------------------------------\n        config = $.extend(true, {}, defaultConfig, config);\n\n        return this.each(function(){\n            let scrollableElement = $(this);\n\n            // prevent multiple initialization\n            scrollableElement.mCustomScrollbar('destroy');\n\n            // init custom scrollbars\n            scrollableElement.mCustomScrollbar(config);\n        });\n    };\n\n    /**\n     * scroll to a specific position in the map\n     * demo: http://manos.malihu.gr/repository/custom-scrollbar/demo/examples/scrollTo_demo.html\n     * @returns {*} // string or id\n     */\n    $.fn.scrollToX = function(position){\n        return this.each(function(){\n            $(this).mCustomScrollbar('scrollTo', position);\n        });\n    };\n});\n",
    "/*\n@title:\nDrag to Select\n\n@version:\n1.1\n\n@author:\nAndreas Lagerkvist\n\n@date:\n2009-04-06\n\n@url:\nhttp://andreaslagerkvist.com/jquery/drag-to-select/\n\n@license:\nhttp://creativecommons.org/licenses/by/3.0/\n\n@copyright:\n2008 Andreas Lagerkvist (andreaslagerkvist.com)\n\n@requires:\njquery, jquery.dragToSelect.css\n\n@does:\nUse this plug-in to allow your users to select certain elements by dragging a \"select box\". Works very similar to how you can drag-n-select files and folders in most OS:es.\n\n@howto:\n$('#my-files').dragToSelect(selectables: 'li'); would make every li in the #my-files-element selectable by dragging. The li:s will recieve a \"selected\"-class when they are within range of the select box when user drops.\n\nMake sure a parent-element of the selectables has position: relative as well as overflow: auto or scroll.\n\n@exampleHTML:\n<ul>\n\t<li><img src=\"http://exscale.se/__files/3d/lamp-and-mates/lamp-and-mates-01_small.jpg\" alt=\"Lamp and Mates\" /></li>\n\t<li><img src=\"http://exscale.se/__files/3d/stugan-winter_small.jpg\" alt=\"The Cottage - Winter time\" /></li>\n\t<li><img src=\"http://exscale.se/__files/3d/ps2_small.jpg\" alt=\"PS2\" /></li>\n</ul>\n\n@exampleJS:\n$('#jquery-drag-to-select-example').dragToSelect({\n\tselectables: 'li', \n\tonHide: function () {\n\t\talert($('#jquery-drag-to-select-example li.selected').length + ' selected');\n\t}\n});\n*/\njQuery.fn.dragToSelect = function (conf) {\n\tvar c = typeof(conf) == 'object' ? conf : {};\n\n\t// Config\n\tvar config = jQuery.extend({\n\t\tclassName:\t\t'pf-map-drag-to-select',\n\t\tactiveClass:\t'active',\n\t\tdisabledClass:\t'disabled', \n\t\tselectedClass:\t'pf-system-selected',\n        ignoredClass:   'pf-system-locked', // do not select locked systems\n\t\tscrollTH:\t\t10,\n\t\tpercentCovered:\t25, \n\t\tselectables:\tfalse,\n\t\tautoScroll:\t\tfalse,\n\t\tselectOnMove:\tfalse,\n\t\tonShow:\t\t\tfunction () {return true;}, \n\t\tonHide:\t\t\tfunction () {return true;}, \n\t\tonRefresh:\t\tfunction () {return true;}\n\t}, c);\n\n\tvar realParent\t= jQuery(this);\n\tvar parent\t\t= realParent;\n\n\tvar animationFrameId;\n\tvar mouseIsDown = false;\n\tvar lastMousePosition = { x: 0, y: 0 };\n\n    // deselected items\n    var deselectedItems = $();\n\n\tdo {\n\t\tif (/auto|scroll|hidden/.test(parent.css('overflow'))) {\n\t\t\tbreak;\n\t\t}\n\t\tparent = parent.parent();\n\t} while (parent[0].parentNode);\n\n\t// Does user want to disable dragToSelect\n\tif (conf == 'disable') {\n\t\tparent.addClass(config.disabledClass);\n\t\treturn this;\n\t}\n\telse if (conf == 'enable') {\n\t\tparent.removeClass(config.disabledClass);\n\t\treturn this;\n\t}\n\n\tvar parentOffset\t= parent.offset();\n\tvar parentDim\t\t= {\n\t\tleft:\tparentOffset.left, \n\t\ttop:\tparentOffset.top, \n\t\twidth:\tparent.width(), \n\t\theight:\tparent.height()\n\t};\n\n\t// Current origin of select box\n\tvar selectBoxOrigin = {\n\t\tleft:\t0,\n\t\ttop:\t0\n\t};\n\n\t// Create select box\n\tvar selectBox = $('<div>')\n\t\t\t\t\t\t.appendTo(parent)\n\t\t\t\t\t\t.attr('class', config.className)\n\t\t\t\t\t\t.css('position', 'absolute');\n\n\t// Shows the select box\n\tvar showSelectBox = function (e) {\n\t\tif (parent.is('.' + config.disabledClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectBoxOrigin.left\t= e.pageX - parentDim.left + parent[0].scrollLeft - 5;\n\t\tselectBoxOrigin.top\t\t= e.pageY - parentDim.top + parent[0].scrollTop - 5;\n\n\t\tvar css = {\n\t\t\tleft:\t\tselectBoxOrigin.left + 'px', \n\t\t\ttop:\t\tselectBoxOrigin.top + 'px', \n\t\t\twidth:\t\t'1px', \n\t\t\theight:\t\t'1px'\n\t\t};\n\t\tselectBox.addClass(config.activeClass).css(css);\n\n\t\tconfig.onShow();\n\t};\n\n\t// Refreshes the select box dimensions and possibly position\n\tvar refreshSelectBox = function () {\n\t\tvar refreshed = false;\n\n\t\tif (!selectBox.is('.' + config.activeClass) || parent.is('.' + config.disabledClass)) {\n\t\t\treturn refreshed;\n\t\t}\n\n        // get scroll position\n        var leftScroll  = 0;\n        var rightScroll = 0;\n\n        if(realParent.data('scrollLeft')){\n            leftScroll  = realParent.data('scrollLeft');\n        }\n\n        if(realParent.data('scrollRight')){\n            rightScroll  = realParent.data('scrollRight');\n        }\n\n\t\tvar left\t\t= lastMousePosition.x - parentDim.left + parent[0].scrollLeft;\n\t\tvar top\t\t\t= lastMousePosition.y - parentDim.top + parent[0].scrollTop;\n\t\tvar newLeft\t\t= left;\n\t\tvar newTop\t\t= top;\n\t\tvar tempWidth\t= selectBoxOrigin.left - newLeft ;\n\t\tvar newHeight\t= selectBoxOrigin.top - newTop;\n        newLeft         = selectBoxOrigin.left - leftScroll;\n        var newWidth\t= left - selectBoxOrigin.left;\n\n\n        if(newWidth < 0){\n            newLeft = newLeft - tempWidth ;\n            newWidth = newWidth * -1;\n        }\n\n\n\t\tif (top > selectBoxOrigin.top) {\n\t\t\tnewTop\t\t= selectBoxOrigin.top;\n\t\t\tnewHeight\t= top - selectBoxOrigin.top;\n\t\t}\n\n\t\t// check if dimension has changed -> save performance\n\t\tvar dimensionHash = [newWidth, newHeight].join('_');\n\n\t\tif(selectBox.data('dimension-hash') !== dimensionHash){\n\t\t\tselectBox.data('dimension-hash', dimensionHash);\n\t\t\tvar css = {\n\t\t\t\tleft:\tnewLeft + 'px',\n\t\t\t\ttop:\tnewTop + 'px',\n\t\t\t\twidth:\tnewWidth + 'px',\n\t\t\t\theight:\tnewHeight + 'px'\n\t\t\t};\n\n\t\t\tselectBox.css(css);\n\t\t\tconfig.onRefresh();\n\t\t\trefreshed = true;\n\t\t}\n\n\t\treturn refreshed;\n\t};\n\n\t// Hides the select box\n\tvar hideSelectBox = function () {\n\t\tif (!selectBox.is('.' + config.activeClass) || parent.is('.' + config.disabledClass)) {\n\t\t\treturn;\n\t\t}\n\t\tif (config.onHide(selectBox, deselectedItems) !== false) {\n\t\t\tselectBox.removeClass(config.activeClass);\n\t\t}\n\t};\n\n\t// Scrolls parent if needed\n\tvar scrollPerhaps = function (e) {\n\t\tif (!selectBox.is('.' + config.activeClass) || parent.is('.' + config.disabledClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Scroll down\n\t\tif ((e.pageY + config.scrollTH) > (parentDim.top + parentDim.height)) {\n\t\t\tparent[0].scrollTop += config.scrollTH;\n\t\t}\n\t\t// Scroll up\n\t\tif ((e.pageY - config.scrollTH) < parentDim.top) {\n\t\t\tparent[0].scrollTop -= config.scrollTH;\n\t\t}\n\t\t// Scroll right\n\t\tif ((e.pageX + config.scrollTH) > (parentDim.left + parentDim.width)) {\n\t\t\tparent[0].scrollLeft += config.scrollTH;\n\t\t}\n\t\t// Scroll left\n\t\tif ((e.pageX - config.scrollTH) < parentDim.left) {\n\t\t\tparent[0].scrollLeft -= config.scrollTH;\n\t\t}\n\t};\n\n\t// Selects all the elements in the select box's range\n\tvar selectElementsInRange = function () {\n\t\tif (!selectBox.is('.' + config.activeClass) || parent.is('.' + config.disabledClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar selectables\t\t= realParent.find(config.selectables + ':not(.' + config.ignoredClass + ')');\n\t\tvar selectBoxOffset\t= selectBox.offset();\n\t\tvar selectBoxDim\t= {\n\t\t\tleft:\tselectBoxOffset.left, \n\t\t\ttop:\tselectBoxOffset.top, \n\t\t\twidth:\tselectBox.width(), \n\t\t\theight:\tselectBox.height()\n\t\t};\n\n\t\tselectables.each(function (i) {\n\t\t\tvar el\t\t\t= $(this);\n\t\t\tvar elOffset\t= el.offset();\n\t\t\tvar elDim\t\t= {\n\t\t\t\tleft:\telOffset.left, \n\t\t\t\ttop:\telOffset.top, \n\t\t\t\twidth:\tel.width(), \n\t\t\t\theight:\tel.height()\n\t\t\t};\n\n\t\t\tif (percentCovered(selectBoxDim, elDim) > config.percentCovered) {\n\t\t\t\tel.addClass(config.selectedClass);\n\t\t\t\t// remove element from \"deselected\" elements (e.g on add -> remove -> add scenario)\n\t\t\t\tdeselectedItems = deselectedItems.not(el);\n\t\t\t}else {\n\n                if(el.hasClass(config.selectedClass)){\n                    el.removeClass(config.selectedClass);\n\t\t\t\t\tdeselectedItems = deselectedItems.add(el);\n                }\n\t\t\t}\n\t\t});\n\n\t};\n\n\t// Returns the amount (in %) that dim1 covers dim2\n\tvar percentCovered = function (dim1, dim2) {\n\t\t// The whole thing is covering the whole other thing\n\t\tif (\n\t\t\t(dim1.left <= dim2.left) && \n\t\t\t(dim1.top <= dim2.top) && \n\t\t\t((dim1.left + dim1.width) >= (dim2.left + dim2.width)) && \n\t\t\t((dim1.top + dim1.height) > (dim2.top + dim2.height))\n\t\t) {\n\t\t\treturn 100;\n\t\t}\n\t\t// Only parts may be covered, calculate percentage\n\t\telse {\n\t\t\tdim1.right\t\t= dim1.left + dim1.width;\n\t\t\tdim1.bottom\t\t= dim1.top + dim1.height;\n\t\t\tdim2.right\t\t= dim2.left + dim2.width;\n\t\t\tdim2.bottom\t\t= dim2.top + dim2.height;\n\n\t\t\tvar l = Math.max(dim1.left, dim2.left);\n\t\t\tvar r = Math.min(dim1.right, dim2.right);\n\t\t\tvar t = Math.max(dim1.top, dim2.top);\n\t\t\tvar b = Math.min(dim1.bottom, dim2.bottom);\n\n\t\t\tif (b >= t && r >= l) {\n\t\t\t/*\t$('<div/>').appendTo(document.body).css({\n\t\t\t\t\tbackground:\t'red', \n\t\t\t\t\tposition:\t'absolute',\n\t\t\t\t\tleft:\t\tl + 'px', \n\t\t\t\t\ttop:\t\tt + 'px', \n\t\t\t\t\twidth:\t\t(r - l) + 'px', \n\t\t\t\t\theight:\t\t(b - t) + 'px', \n\t\t\t\t\tzIndex:\t\t100\n\t\t\t\t}); */\n\n\t\t\t\tvar percent = (((r - l) * (b - t)) / (dim2.width * dim2.height)) * 100;\n\n\t\t\t//\talert(percent + '% covered')\n\n\t\t\t\treturn percent;\n\t\t\t}\n\t\t}\n\t\t// Nothing covered, return 0\n\t\treturn 0;\n\t};\n\n\t// Event functions ----------------------------------------------------------------------------\n\tvar mousemoveCallback = function(){\n\t\tif(mouseIsDown){\n\t\t\tvar refreshed = refreshSelectBox();\n\n\t\t\tif(refreshed && config.selectables && config.selectOnMove){\n\t\t\t\tselectElementsInRange();\n\t\t\t}\n\n\t\t\t// recursive re-call on next render\n\t\t\tanimationFrameId = requestAnimationFrame(mousemoveCallback);\n\t\t}\n\t}\n\n\tvar mouseupCallback = function(){\n\t\tif (config.selectables){\n\t\t\tselectElementsInRange();\n\t\t}\n\t\thideSelectBox();\n\n\t\t// stop animation frame and \"reset\" to default\n\t\tcancelAnimationFrame(animationFrameId);\n\t\tmouseIsDown = false;\n\t\t// reset deselected item array\n\t\tdeselectedItems = $();\n\t}\n\n\t// Do the right stuff then return this --------------------------------------------------------\n\n\tselectBox.mousemove(function(e){\n\t\tlastMousePosition.x = e.pageX;\n\t\tlastMousePosition.y = e.pageY;\n\t\te.preventDefault();\n\t}).mouseup(mouseupCallback);\n\n\tparent.mousedown(function(e){\n\t\tif (\n\t\t\te.which === 1 && // left mouse down\n\t\t\te.target === realParent[0] // prevent while dragging a system :)\n\t\t) {\n\n\t\t\t// Make sure user isn't clicking scrollbar (or disallow clicks far to the right actually)\n\t\t\tif ((e.pageX + 20) > jQuery(document.body).width()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tshowSelectBox(e);\n\t\t\tmouseIsDown = true;\n\t\t\tanimationFrameId = requestAnimationFrame(mousemoveCallback);\n\t\t}\n\n\t\te.preventDefault();\n\t}).mousemove(function(e){\n\t\tlastMousePosition.x = e.pageX;\n\t\tlastMousePosition.y = e.pageY;\n\t\te.preventDefault();\n\t}).mouseup(mouseupCallback);\n\n\n\t// Be nice\n\treturn this;\n};\ndefine(\"dragToSelect\", [\"jquery\"], function(){});\n\n",
    "/*! Select2 4.0.3 | https://github.com/select2/select2/blob/master/LICENSE.md */!function(a){\"function\"==typeof define&&define.amd?define('select2',[\"jquery\"],a):a(\"object\"==typeof exports?require(\"jquery\"):jQuery)}(function(a){var b=function(){if(a&&a.fn&&a.fn.select2&&a.fn.select2.amd)var b=a.fn.select2.amd;var b;return function(){if(!b||!b.requirejs){b?c=b:b={};var a,c,d;!function(b){function e(a,b){return u.call(a,b)}function f(a,b){var c,d,e,f,g,h,i,j,k,l,m,n=b&&b.split(\"/\"),o=s.map,p=o&&o[\"*\"]||{};if(a&&\".\"===a.charAt(0))if(b){for(a=a.split(\"/\"),g=a.length-1,s.nodeIdCompat&&w.test(a[g])&&(a[g]=a[g].replace(w,\"\")),a=n.slice(0,n.length-1).concat(a),k=0;k<a.length;k+=1)if(m=a[k],\".\"===m)a.splice(k,1),k-=1;else if(\"..\"===m){if(1===k&&(\"..\"===a[2]||\"..\"===a[0]))break;k>0&&(a.splice(k-1,2),k-=2)}a=a.join(\"/\")}else 0===a.indexOf(\"./\")&&(a=a.substring(2));if((n||p)&&o){for(c=a.split(\"/\"),k=c.length;k>0;k-=1){if(d=c.slice(0,k).join(\"/\"),n)for(l=n.length;l>0;l-=1)if(e=o[n.slice(0,l).join(\"/\")],e&&(e=e[d])){f=e,h=k;break}if(f)break;!i&&p&&p[d]&&(i=p[d],j=k)}!f&&i&&(f=i,h=j),f&&(c.splice(0,h,f),a=c.join(\"/\"))}return a}function g(a,c){return function(){var d=v.call(arguments,0);return\"string\"!=typeof d[0]&&1===d.length&&d.push(null),n.apply(b,d.concat([a,c]))}}function h(a){return function(b){return f(b,a)}}function i(a){return function(b){q[a]=b}}function j(a){if(e(r,a)){var c=r[a];delete r[a],t[a]=!0,m.apply(b,c)}if(!e(q,a)&&!e(t,a))throw new Error(\"No \"+a);return q[a]}function k(a){var b,c=a?a.indexOf(\"!\"):-1;return c>-1&&(b=a.substring(0,c),a=a.substring(c+1,a.length)),[b,a]}function l(a){return function(){return s&&s.config&&s.config[a]||{}}}var m,n,o,p,q={},r={},s={},t={},u=Object.prototype.hasOwnProperty,v=[].slice,w=/\\.js$/;o=function(a,b){var c,d=k(a),e=d[0];return a=d[1],e&&(e=f(e,b),c=j(e)),e?a=c&&c.normalize?c.normalize(a,h(b)):f(a,b):(a=f(a,b),d=k(a),e=d[0],a=d[1],e&&(c=j(e))),{f:e?e+\"!\"+a:a,n:a,pr:e,p:c}},p={require:function(a){return g(a)},exports:function(a){var b=q[a];return\"undefined\"!=typeof b?b:q[a]={}},module:function(a){return{id:a,uri:\"\",exports:q[a],config:l(a)}}},m=function(a,c,d,f){var h,k,l,m,n,s,u=[],v=typeof d;if(f=f||a,\"undefined\"===v||\"function\"===v){for(c=!c.length&&d.length?[\"require\",\"exports\",\"module\"]:c,n=0;n<c.length;n+=1)if(m=o(c[n],f),k=m.f,\"require\"===k)u[n]=p.require(a);else if(\"exports\"===k)u[n]=p.exports(a),s=!0;else if(\"module\"===k)h=u[n]=p.module(a);else if(e(q,k)||e(r,k)||e(t,k))u[n]=j(k);else{if(!m.p)throw new Error(a+\" missing \"+k);m.p.load(m.n,g(f,!0),i(k),{}),u[n]=q[k]}l=d?d.apply(q[a],u):void 0,a&&(h&&h.exports!==b&&h.exports!==q[a]?q[a]=h.exports:l===b&&s||(q[a]=l))}else a&&(q[a]=d)},a=c=n=function(a,c,d,e,f){if(\"string\"==typeof a)return p[a]?p[a](c):j(o(a,c).f);if(!a.splice){if(s=a,s.deps&&n(s.deps,s.callback),!c)return;c.splice?(a=c,c=d,d=null):a=b}return c=c||function(){},\"function\"==typeof d&&(d=e,e=f),e?m(b,a,c,d):setTimeout(function(){m(b,a,c,d)},4),n},n.config=function(a){return n(a)},a._defined=q,d=function(a,b,c){if(\"string\"!=typeof a)throw new Error(\"See almond README: incorrect module build, no module name\");b.splice||(c=b,b=[]),e(q,a)||e(r,a)||(r[a]=[a,b,c])},d.amd={jQuery:!0}}(),b.requirejs=a,b.require=c,b.define=d}}(),b.define(\"almond\",function(){}),b.define(\"jquery\",[],function(){var b=a||$;return null==b&&console&&console.error&&console.error(\"Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page.\"),b}),b.define(\"select2/utils\",[\"jquery\"],function(a){function b(a){var b=a.prototype,c=[];for(var d in b){var e=b[d];\"function\"==typeof e&&\"constructor\"!==d&&c.push(d)}return c}var c={};c.Extend=function(a,b){function c(){this.constructor=a}var d={}.hasOwnProperty;for(var e in b)d.call(b,e)&&(a[e]=b[e]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},c.Decorate=function(a,c){function d(){var b=Array.prototype.unshift,d=c.prototype.constructor.length,e=a.prototype.constructor;d>0&&(b.call(arguments,a.prototype.constructor),e=c.prototype.constructor),e.apply(this,arguments)}function e(){this.constructor=d}var f=b(c),g=b(a);c.displayName=a.displayName,d.prototype=new e;for(var h=0;h<g.length;h++){var i=g[h];d.prototype[i]=a.prototype[i]}for(var j=(function(a){var b=function(){};a in d.prototype&&(b=d.prototype[a]);var e=c.prototype[a];return function(){var a=Array.prototype.unshift;return a.call(arguments,b),e.apply(this,arguments)}}),k=0;k<f.length;k++){var l=f[k];d.prototype[l]=j(l)}return d};var d=function(){this.listeners={}};return d.prototype.on=function(a,b){this.listeners=this.listeners||{},a in this.listeners?this.listeners[a].push(b):this.listeners[a]=[b]},d.prototype.trigger=function(a){var b=Array.prototype.slice,c=b.call(arguments,1);this.listeners=this.listeners||{},null==c&&(c=[]),0===c.length&&c.push({}),c[0]._type=a,a in this.listeners&&this.invoke(this.listeners[a],b.call(arguments,1)),\"*\"in this.listeners&&this.invoke(this.listeners[\"*\"],arguments)},d.prototype.invoke=function(a,b){for(var c=0,d=a.length;d>c;c++)a[c].apply(this,b)},c.Observable=d,c.generateChars=function(a){for(var b=\"\",c=0;a>c;c++){var d=Math.floor(36*Math.random());b+=d.toString(36)}return b},c.bind=function(a,b){return function(){a.apply(b,arguments)}},c._convertData=function(a){for(var b in a){var c=b.split(\"-\"),d=a;if(1!==c.length){for(var e=0;e<c.length;e++){var f=c[e];f=f.substring(0,1).toLowerCase()+f.substring(1),f in d||(d[f]={}),e==c.length-1&&(d[f]=a[b]),d=d[f]}delete a[b]}}return a},c.hasScroll=function(b,c){var d=a(c),e=c.style.overflowX,f=c.style.overflowY;return e!==f||\"hidden\"!==f&&\"visible\"!==f?\"scroll\"===e||\"scroll\"===f?!0:d.innerHeight()<c.scrollHeight||d.innerWidth()<c.scrollWidth:!1},c.escapeMarkup=function(a){var b={\"\\\\\":\"&#92;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\",\"/\":\"&#47;\"};return\"string\"!=typeof a?a:String(a).replace(/[&<>\"'\\/\\\\]/g,function(a){return b[a]})},c.appendMany=function(b,c){if(\"1.7\"===a.fn.jquery.substr(0,3)){var d=a();a.map(c,function(a){d=d.add(a)}),c=d}b.append(c)},c}),b.define(\"select2/results\",[\"jquery\",\"./utils\"],function(a,b){function c(a,b,d){this.$element=a,this.data=d,this.options=b,c.__super__.constructor.call(this)}return b.Extend(c,b.Observable),c.prototype.render=function(){var b=a('<ul class=\"select2-results__options\" role=\"tree\"></ul>');return this.options.get(\"multiple\")&&b.attr(\"aria-multiselectable\",\"true\"),this.$results=b,b},c.prototype.clear=function(){this.$results.empty()},c.prototype.displayMessage=function(b){var c=this.options.get(\"escapeMarkup\");this.clear(),this.hideLoading();var d=a('<li role=\"treeitem\" aria-live=\"assertive\" class=\"select2-results__option\"></li>'),e=this.options.get(\"translations\").get(b.message);d.append(c(e(b.args))),d[0].className+=\" select2-results__message\",this.$results.append(d)},c.prototype.hideMessages=function(){this.$results.find(\".select2-results__message\").remove()},c.prototype.append=function(a){this.hideLoading();var b=[];if(null==a.results||0===a.results.length)return void(0===this.$results.children().length&&this.trigger(\"results:message\",{message:\"noResults\"}));a.results=this.sort(a.results);for(var c=0;c<a.results.length;c++){var d=a.results[c],e=this.option(d);b.push(e)}this.$results.append(b)},c.prototype.position=function(a,b){var c=b.find(\".select2-results\");c.append(a)},c.prototype.sort=function(a){var b=this.options.get(\"sorter\");return b(a)},c.prototype.highlightFirstItem=function(){var a=this.$results.find(\".select2-results__option[aria-selected]\"),b=a.filter(\"[aria-selected=true]\");b.length>0?b.first().trigger(\"mouseenter\"):a.first().trigger(\"mouseenter\"),this.ensureHighlightVisible()},c.prototype.setClasses=function(){var b=this;this.data.current(function(c){var d=a.map(c,function(a){return a.id.toString()}),e=b.$results.find(\".select2-results__option[aria-selected]\");e.each(function(){var b=a(this),c=a.data(this,\"data\"),e=\"\"+c.id;null!=c.element&&c.element.selected||null==c.element&&a.inArray(e,d)>-1?b.attr(\"aria-selected\",\"true\"):b.attr(\"aria-selected\",\"false\")})})},c.prototype.showLoading=function(a){this.hideLoading();var b=this.options.get(\"translations\").get(\"searching\"),c={disabled:!0,loading:!0,text:b(a)},d=this.option(c);d.className+=\" loading-results\",this.$results.prepend(d)},c.prototype.hideLoading=function(){this.$results.find(\".loading-results\").remove()},c.prototype.option=function(b){var c=document.createElement(\"li\");c.className=\"select2-results__option\";var d={role:\"treeitem\",\"aria-selected\":\"false\"};b.disabled&&(delete d[\"aria-selected\"],d[\"aria-disabled\"]=\"true\"),null==b.id&&delete d[\"aria-selected\"],null!=b._resultId&&(c.id=b._resultId),b.title&&(c.title=b.title),b.children&&(d.role=\"group\",d[\"aria-label\"]=b.text,delete d[\"aria-selected\"]);for(var e in d){var f=d[e];c.setAttribute(e,f)}if(b.children){var g=a(c),h=document.createElement(\"strong\");h.className=\"select2-results__group\";a(h);this.template(b,h);for(var i=[],j=0;j<b.children.length;j++){var k=b.children[j],l=this.option(k);i.push(l)}var m=a(\"<ul></ul>\",{\"class\":\"select2-results__options select2-results__options--nested\"});m.append(i),g.append(h),g.append(m)}else this.template(b,c);return a.data(c,\"data\",b),c},c.prototype.bind=function(b,c){var d=this,e=b.id+\"-results\";this.$results.attr(\"id\",e),b.on(\"results:all\",function(a){d.clear(),d.append(a.data),b.isOpen()&&(d.setClasses(),d.highlightFirstItem())}),b.on(\"results:append\",function(a){d.append(a.data),b.isOpen()&&d.setClasses()}),b.on(\"query\",function(a){d.hideMessages(),d.showLoading(a)}),b.on(\"select\",function(){b.isOpen()&&(d.setClasses(),d.highlightFirstItem())}),b.on(\"unselect\",function(){b.isOpen()&&(d.setClasses(),d.highlightFirstItem())}),b.on(\"open\",function(){d.$results.attr(\"aria-expanded\",\"true\"),d.$results.attr(\"aria-hidden\",\"false\"),d.setClasses(),d.ensureHighlightVisible()}),b.on(\"close\",function(){d.$results.attr(\"aria-expanded\",\"false\"),d.$results.attr(\"aria-hidden\",\"true\"),d.$results.removeAttr(\"aria-activedescendant\")}),b.on(\"results:toggle\",function(){var a=d.getHighlightedResults();0!==a.length&&a.trigger(\"mouseup\")}),b.on(\"results:select\",function(){var a=d.getHighlightedResults();if(0!==a.length){var b=a.data(\"data\");\"true\"==a.attr(\"aria-selected\")?d.trigger(\"close\",{}):d.trigger(\"select\",{data:b})}}),b.on(\"results:previous\",function(){var a=d.getHighlightedResults(),b=d.$results.find(\"[aria-selected]\"),c=b.index(a);if(0!==c){var e=c-1;0===a.length&&(e=0);var f=b.eq(e);f.trigger(\"mouseenter\");var g=d.$results.offset().top,h=f.offset().top,i=d.$results.scrollTop()+(h-g);0===e?d.$results.scrollTop(0):0>h-g&&d.$results.scrollTop(i)}}),b.on(\"results:next\",function(){var a=d.getHighlightedResults(),b=d.$results.find(\"[aria-selected]\"),c=b.index(a),e=c+1;if(!(e>=b.length)){var f=b.eq(e);f.trigger(\"mouseenter\");var g=d.$results.offset().top+d.$results.outerHeight(!1),h=f.offset().top+f.outerHeight(!1),i=d.$results.scrollTop()+h-g;0===e?d.$results.scrollTop(0):h>g&&d.$results.scrollTop(i)}}),b.on(\"results:focus\",function(a){a.element.addClass(\"select2-results__option--highlighted\")}),b.on(\"results:message\",function(a){d.displayMessage(a)}),a.fn.mousewheel&&this.$results.on(\"mousewheel\",function(a){var b=d.$results.scrollTop(),c=d.$results.get(0).scrollHeight-b+a.deltaY,e=a.deltaY>0&&b-a.deltaY<=0,f=a.deltaY<0&&c<=d.$results.height();e?(d.$results.scrollTop(0),a.preventDefault(),a.stopPropagation()):f&&(d.$results.scrollTop(d.$results.get(0).scrollHeight-d.$results.height()),a.preventDefault(),a.stopPropagation())}),this.$results.on(\"mouseup\",\".select2-results__option[aria-selected]\",function(b){var c=a(this),e=c.data(\"data\");return\"true\"===c.attr(\"aria-selected\")?void(d.options.get(\"multiple\")?d.trigger(\"unselect\",{originalEvent:b,data:e}):d.trigger(\"close\",{})):void d.trigger(\"select\",{originalEvent:b,data:e})}),this.$results.on(\"mouseenter\",\".select2-results__option[aria-selected]\",function(b){var c=a(this).data(\"data\");d.getHighlightedResults().removeClass(\"select2-results__option--highlighted\"),d.trigger(\"results:focus\",{data:c,element:a(this)})})},c.prototype.getHighlightedResults=function(){var a=this.$results.find(\".select2-results__option--highlighted\");return a},c.prototype.destroy=function(){this.$results.remove()},c.prototype.ensureHighlightVisible=function(){var a=this.getHighlightedResults();if(0!==a.length){var b=this.$results.find(\"[aria-selected]\"),c=b.index(a),d=this.$results.offset().top,e=a.offset().top,f=this.$results.scrollTop()+(e-d),g=e-d;f-=2*a.outerHeight(!1),2>=c?this.$results.scrollTop(0):(g>this.$results.outerHeight()||0>g)&&this.$results.scrollTop(f)}},c.prototype.template=function(b,c){var d=this.options.get(\"templateResult\"),e=this.options.get(\"escapeMarkup\"),f=d(b,c);null==f?c.style.display=\"none\":\"string\"==typeof f?c.innerHTML=e(f):a(c).append(f)},c}),b.define(\"select2/keys\",[],function(){var a={BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46};return a}),b.define(\"select2/selection/base\",[\"jquery\",\"../utils\",\"../keys\"],function(a,b,c){function d(a,b){this.$element=a,this.options=b,d.__super__.constructor.call(this)}return b.Extend(d,b.Observable),d.prototype.render=function(){var b=a('<span class=\"select2-selection\" role=\"combobox\"  aria-haspopup=\"true\" aria-expanded=\"false\"></span>');return this._tabindex=0,null!=this.$element.data(\"old-tabindex\")?this._tabindex=this.$element.data(\"old-tabindex\"):null!=this.$element.attr(\"tabindex\")&&(this._tabindex=this.$element.attr(\"tabindex\")),b.attr(\"title\",this.$element.attr(\"title\")),b.attr(\"tabindex\",this._tabindex),this.$selection=b,b},d.prototype.bind=function(a,b){var d=this,e=(a.id+\"-container\",a.id+\"-results\");this.container=a,this.$selection.on(\"focus\",function(a){d.trigger(\"focus\",a)}),this.$selection.on(\"blur\",function(a){d._handleBlur(a)}),this.$selection.on(\"keydown\",function(a){d.trigger(\"keypress\",a),a.which===c.SPACE&&a.preventDefault()}),a.on(\"results:focus\",function(a){d.$selection.attr(\"aria-activedescendant\",a.data._resultId)}),a.on(\"selection:update\",function(a){d.update(a.data)}),a.on(\"open\",function(){d.$selection.attr(\"aria-expanded\",\"true\"),d.$selection.attr(\"aria-owns\",e),d._attachCloseHandler(a)}),a.on(\"close\",function(){d.$selection.attr(\"aria-expanded\",\"false\"),d.$selection.removeAttr(\"aria-activedescendant\"),d.$selection.removeAttr(\"aria-owns\"),d.$selection.focus(),d._detachCloseHandler(a)}),a.on(\"enable\",function(){d.$selection.attr(\"tabindex\",d._tabindex)}),a.on(\"disable\",function(){d.$selection.attr(\"tabindex\",\"-1\")})},d.prototype._handleBlur=function(b){var c=this;window.setTimeout(function(){document.activeElement==c.$selection[0]||a.contains(c.$selection[0],document.activeElement)||c.trigger(\"blur\",b)},1)},d.prototype._attachCloseHandler=function(b){a(document.body).on(\"mousedown.select2.\"+b.id,function(b){var c=a(b.target),d=c.closest(\".select2\"),e=a(\".select2.select2-container--open\");e.each(function(){var b=a(this);if(this!=d[0]){var c=b.data(\"element\");c.select2(\"close\")}})})},d.prototype._detachCloseHandler=function(b){a(document.body).off(\"mousedown.select2.\"+b.id)},d.prototype.position=function(a,b){var c=b.find(\".selection\");c.append(a)},d.prototype.destroy=function(){this._detachCloseHandler(this.container)},d.prototype.update=function(a){throw new Error(\"The `update` method must be defined in child classes.\")},d}),b.define(\"select2/selection/single\",[\"jquery\",\"./base\",\"../utils\",\"../keys\"],function(a,b,c,d){function e(){e.__super__.constructor.apply(this,arguments)}return c.Extend(e,b),e.prototype.render=function(){var a=e.__super__.render.call(this);return a.addClass(\"select2-selection--single\"),a.html('<span class=\"select2-selection__rendered\"></span><span class=\"select2-selection__arrow\" role=\"presentation\"><b role=\"presentation\"></b></span>'),a},e.prototype.bind=function(a,b){var c=this;e.__super__.bind.apply(this,arguments);var d=a.id+\"-container\";this.$selection.find(\".select2-selection__rendered\").attr(\"id\",d),this.$selection.attr(\"aria-labelledby\",d),this.$selection.on(\"mousedown\",function(a){1===a.which&&c.trigger(\"toggle\",{originalEvent:a})}),this.$selection.on(\"focus\",function(a){}),this.$selection.on(\"blur\",function(a){}),a.on(\"focus\",function(b){a.isOpen()||c.$selection.focus()}),a.on(\"selection:update\",function(a){c.update(a.data)})},e.prototype.clear=function(){this.$selection.find(\".select2-selection__rendered\").empty()},e.prototype.display=function(a,b){var c=this.options.get(\"templateSelection\"),d=this.options.get(\"escapeMarkup\");return d(c(a,b))},e.prototype.selectionContainer=function(){return a(\"<span></span>\")},e.prototype.update=function(a){if(0===a.length)return void this.clear();var b=a[0],c=this.$selection.find(\".select2-selection__rendered\"),d=this.display(b,c);c.empty().append(d),c.prop(\"title\",b.title||b.text)},e}),b.define(\"select2/selection/multiple\",[\"jquery\",\"./base\",\"../utils\"],function(a,b,c){function d(a,b){d.__super__.constructor.apply(this,arguments)}return c.Extend(d,b),d.prototype.render=function(){var a=d.__super__.render.call(this);return a.addClass(\"select2-selection--multiple\"),a.html('<ul class=\"select2-selection__rendered\"></ul>'),a},d.prototype.bind=function(b,c){var e=this;d.__super__.bind.apply(this,arguments),this.$selection.on(\"click\",function(a){e.trigger(\"toggle\",{originalEvent:a})}),this.$selection.on(\"click\",\".select2-selection__choice__remove\",function(b){if(!e.options.get(\"disabled\")){var c=a(this),d=c.parent(),f=d.data(\"data\");e.trigger(\"unselect\",{originalEvent:b,data:f})}})},d.prototype.clear=function(){this.$selection.find(\".select2-selection__rendered\").empty()},d.prototype.display=function(a,b){var c=this.options.get(\"templateSelection\"),d=this.options.get(\"escapeMarkup\");return d(c(a,b))},d.prototype.selectionContainer=function(){var b=a('<li class=\"select2-selection__choice\"><span class=\"select2-selection__choice__remove\" role=\"presentation\">&times;</span></li>');return b},d.prototype.update=function(a){if(this.clear(),0!==a.length){for(var b=[],d=0;d<a.length;d++){var e=a[d],f=this.selectionContainer(),g=this.display(e,f);f.append(g),f.prop(\"title\",e.title||e.text),f.data(\"data\",e),b.push(f)}var h=this.$selection.find(\".select2-selection__rendered\");c.appendMany(h,b)}},d}),b.define(\"select2/selection/placeholder\",[\"../utils\"],function(a){function b(a,b,c){this.placeholder=this.normalizePlaceholder(c.get(\"placeholder\")),a.call(this,b,c)}return b.prototype.normalizePlaceholder=function(a,b){return\"string\"==typeof b&&(b={id:\"\",text:b}),b},b.prototype.createPlaceholder=function(a,b){var c=this.selectionContainer();return c.html(this.display(b)),c.addClass(\"select2-selection__placeholder\").removeClass(\"select2-selection__choice\"),c},b.prototype.update=function(a,b){var c=1==b.length&&b[0].id!=this.placeholder.id,d=b.length>1;if(d||c)return a.call(this,b);this.clear();var e=this.createPlaceholder(this.placeholder);this.$selection.find(\".select2-selection__rendered\").append(e)},b}),b.define(\"select2/selection/allowClear\",[\"jquery\",\"../keys\"],function(a,b){function c(){}return c.prototype.bind=function(a,b,c){var d=this;a.call(this,b,c),null==this.placeholder&&this.options.get(\"debug\")&&window.console&&console.error&&console.error(\"Select2: The `allowClear` option should be used in combination with the `placeholder` option.\"),this.$selection.on(\"mousedown\",\".select2-selection__clear\",function(a){d._handleClear(a)}),b.on(\"keypress\",function(a){d._handleKeyboardClear(a,b)})},c.prototype._handleClear=function(a,b){if(!this.options.get(\"disabled\")){var c=this.$selection.find(\".select2-selection__clear\");if(0!==c.length){b.stopPropagation();for(var d=c.data(\"data\"),e=0;e<d.length;e++){var f={data:d[e]};if(this.trigger(\"unselect\",f),f.prevented)return}this.$element.val(this.placeholder.id).trigger(\"change\"),this.trigger(\"toggle\",{})}}},c.prototype._handleKeyboardClear=function(a,c,d){d.isOpen()||(c.which==b.DELETE||c.which==b.BACKSPACE)&&this._handleClear(c)},c.prototype.update=function(b,c){if(b.call(this,c),!(this.$selection.find(\".select2-selection__placeholder\").length>0||0===c.length)){var d=a('<span class=\"select2-selection__clear\">&times;</span>');d.data(\"data\",c),this.$selection.find(\".select2-selection__rendered\").prepend(d)}},c}),b.define(\"select2/selection/search\",[\"jquery\",\"../utils\",\"../keys\"],function(a,b,c){function d(a,b,c){a.call(this,b,c)}return d.prototype.render=function(b){var c=a('<li class=\"select2-search select2-search--inline\"><input class=\"select2-search__field\" type=\"search\" tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" role=\"textbox\" aria-autocomplete=\"list\" /></li>');this.$searchContainer=c,this.$search=c.find(\"input\");var d=b.call(this);return this._transferTabIndex(),d},d.prototype.bind=function(a,b,d){var e=this;a.call(this,b,d),b.on(\"open\",function(){e.$search.trigger(\"focus\")}),b.on(\"close\",function(){e.$search.val(\"\"),e.$search.removeAttr(\"aria-activedescendant\"),e.$search.trigger(\"focus\")}),b.on(\"enable\",function(){e.$search.prop(\"disabled\",!1),e._transferTabIndex()}),b.on(\"disable\",function(){e.$search.prop(\"disabled\",!0)}),b.on(\"focus\",function(a){e.$search.trigger(\"focus\")}),b.on(\"results:focus\",function(a){e.$search.attr(\"aria-activedescendant\",a.id)}),this.$selection.on(\"focusin\",\".select2-search--inline\",function(a){e.trigger(\"focus\",a)}),this.$selection.on(\"focusout\",\".select2-search--inline\",function(a){e._handleBlur(a)}),this.$selection.on(\"keydown\",\".select2-search--inline\",function(a){a.stopPropagation(),e.trigger(\"keypress\",a),e._keyUpPrevented=a.isDefaultPrevented();var b=a.which;if(b===c.BACKSPACE&&\"\"===e.$search.val()){var d=e.$searchContainer.prev(\".select2-selection__choice\");if(d.length>0){var f=d.data(\"data\");e.searchRemoveChoice(f),a.preventDefault()}}});var f=document.documentMode,g=f&&11>=f;this.$selection.on(\"input.searchcheck\",\".select2-search--inline\",function(a){return g?void e.$selection.off(\"input.search input.searchcheck\"):void e.$selection.off(\"keyup.search\")}),this.$selection.on(\"keyup.search input.search\",\".select2-search--inline\",function(a){if(g&&\"input\"===a.type)return void e.$selection.off(\"input.search input.searchcheck\");var b=a.which;b!=c.SHIFT&&b!=c.CTRL&&b!=c.ALT&&b!=c.TAB&&e.handleSearch(a)})},d.prototype._transferTabIndex=function(a){this.$search.attr(\"tabindex\",this.$selection.attr(\"tabindex\")),this.$selection.attr(\"tabindex\",\"-1\")},d.prototype.createPlaceholder=function(a,b){this.$search.attr(\"placeholder\",b.text)},d.prototype.update=function(a,b){var c=this.$search[0]==document.activeElement;this.$search.attr(\"placeholder\",\"\"),a.call(this,b),this.$selection.find(\".select2-selection__rendered\").append(this.$searchContainer),this.resizeSearch(),c&&this.$search.focus()},d.prototype.handleSearch=function(){if(this.resizeSearch(),!this._keyUpPrevented){var a=this.$search.val();this.trigger(\"query\",{term:a})}this._keyUpPrevented=!1},d.prototype.searchRemoveChoice=function(a,b){this.trigger(\"unselect\",{data:b}),this.$search.val(b.text),this.handleSearch()},d.prototype.resizeSearch=function(){this.$search.css(\"width\",\"25px\");var a=\"\";if(\"\"!==this.$search.attr(\"placeholder\"))a=this.$selection.find(\".select2-selection__rendered\").innerWidth();else{var b=this.$search.val().length+1;a=.75*b+\"em\"}this.$search.css(\"width\",a)},d}),b.define(\"select2/selection/eventRelay\",[\"jquery\"],function(a){function b(){}return b.prototype.bind=function(b,c,d){var e=this,f=[\"open\",\"opening\",\"close\",\"closing\",\"select\",\"selecting\",\"unselect\",\"unselecting\"],g=[\"opening\",\"closing\",\"selecting\",\"unselecting\"];b.call(this,c,d),c.on(\"*\",function(b,c){if(-1!==a.inArray(b,f)){c=c||{};var d=a.Event(\"select2:\"+b,{params:c});e.$element.trigger(d),-1!==a.inArray(b,g)&&(c.prevented=d.isDefaultPrevented())}})},b}),b.define(\"select2/translation\",[\"jquery\",\"require\"],function(a,b){function c(a){this.dict=a||{}}return c.prototype.all=function(){return this.dict},c.prototype.get=function(a){return this.dict[a]},c.prototype.extend=function(b){this.dict=a.extend({},b.all(),this.dict)},c._cache={},c.loadPath=function(a){if(!(a in c._cache)){var d=b(a);c._cache[a]=d}return new c(c._cache[a])},c}),b.define(\"select2/diacritics\",[],function(){var a={\"Ⓐ\":\"A\",\"Ａ\":\"A\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ầ\":\"A\",\"Ấ\":\"A\",\"Ẫ\":\"A\",\"Ẩ\":\"A\",\"Ã\":\"A\",\"Ā\":\"A\",\"Ă\":\"A\",\"Ằ\":\"A\",\"Ắ\":\"A\",\"Ẵ\":\"A\",\"Ẳ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ả\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ǎ\":\"A\",\"Ȁ\":\"A\",\"Ȃ\":\"A\",\"Ạ\":\"A\",\"Ậ\":\"A\",\"Ặ\":\"A\",\"Ḁ\":\"A\",\"Ą\":\"A\",\"Ⱥ\":\"A\",\"Ɐ\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ⓑ\":\"B\",\"Ｂ\":\"B\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ɓ\":\"B\",\"Ⓒ\":\"C\",\"Ｃ\":\"C\",\"Ć\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ꜿ\":\"C\",\"Ⓓ\":\"D\",\"Ｄ\":\"D\",\"Ḋ\":\"D\",\"Ď\":\"D\",\"Ḍ\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḏ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ɗ\":\"D\",\"Ɖ\":\"D\",\"Ꝺ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"ǲ\":\"Dz\",\"ǅ\":\"Dz\",\"Ⓔ\":\"E\",\"Ｅ\":\"E\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ề\":\"E\",\"Ế\":\"E\",\"Ễ\":\"E\",\"Ể\":\"E\",\"Ẽ\":\"E\",\"Ē\":\"E\",\"Ḕ\":\"E\",\"Ḗ\":\"E\",\"Ĕ\":\"E\",\"Ė\":\"E\",\"Ë\":\"E\",\"Ẻ\":\"E\",\"Ě\":\"E\",\"Ȅ\":\"E\",\"Ȇ\":\"E\",\"Ẹ\":\"E\",\"Ệ\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ę\":\"E\",\"Ḙ\":\"E\",\"Ḛ\":\"E\",\"Ɛ\":\"E\",\"Ǝ\":\"E\",\"Ⓕ\":\"F\",\"Ｆ\":\"F\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ꝼ\":\"F\",\"Ⓖ\":\"G\",\"Ｇ\":\"G\",\"Ǵ\":\"G\",\"Ĝ\":\"G\",\"Ḡ\":\"G\",\"Ğ\":\"G\",\"Ġ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ǥ\":\"G\",\"Ɠ\":\"G\",\"Ꞡ\":\"G\",\"Ᵹ\":\"G\",\"Ꝿ\":\"G\",\"Ⓗ\":\"H\",\"Ｈ\":\"H\",\"Ĥ\":\"H\",\"Ḣ\":\"H\",\"Ḧ\":\"H\",\"Ȟ\":\"H\",\"Ḥ\":\"H\",\"Ḩ\":\"H\",\"Ḫ\":\"H\",\"Ħ\":\"H\",\"Ⱨ\":\"H\",\"Ⱶ\":\"H\",\"Ɥ\":\"H\",\"Ⓘ\":\"I\",\"Ｉ\":\"I\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ĩ\":\"I\",\"Ī\":\"I\",\"Ĭ\":\"I\",\"İ\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"Ỉ\":\"I\",\"Ǐ\":\"I\",\"Ȉ\":\"I\",\"Ȋ\":\"I\",\"Ị\":\"I\",\"Į\":\"I\",\"Ḭ\":\"I\",\"Ɨ\":\"I\",\"Ⓙ\":\"J\",\"Ｊ\":\"J\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ⓚ\":\"K\",\"Ｋ\":\"K\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ḳ\":\"K\",\"Ķ\":\"K\",\"Ḵ\":\"K\",\"Ƙ\":\"K\",\"Ⱪ\":\"K\",\"Ꝁ\":\"K\",\"Ꝃ\":\"K\",\"Ꝅ\":\"K\",\"Ꞣ\":\"K\",\"Ⓛ\":\"L\",\"Ｌ\":\"L\",\"Ŀ\":\"L\",\"Ĺ\":\"L\",\"Ľ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḻ\":\"L\",\"Ł\":\"L\",\"Ƚ\":\"L\",\"Ɫ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ꝇ\":\"L\",\"Ꞁ\":\"L\",\"Ǉ\":\"LJ\",\"ǈ\":\"Lj\",\"Ⓜ\":\"M\",\"Ｍ\":\"M\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ɯ\":\"M\",\"Ⓝ\":\"N\",\"Ｎ\":\"N\",\"Ǹ\":\"N\",\"Ń\":\"N\",\"Ñ\":\"N\",\"Ṅ\":\"N\",\"Ň\":\"N\",\"Ṇ\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"Ɲ\":\"N\",\"Ꞑ\":\"N\",\"Ꞥ\":\"N\",\"Ǌ\":\"NJ\",\"ǋ\":\"Nj\",\"Ⓞ\":\"O\",\"Ｏ\":\"O\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Ồ\":\"O\",\"Ố\":\"O\",\"Ỗ\":\"O\",\"Ổ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ȭ\":\"O\",\"Ṏ\":\"O\",\"Ō\":\"O\",\"Ṑ\":\"O\",\"Ṓ\":\"O\",\"Ŏ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ỏ\":\"O\",\"Ő\":\"O\",\"Ǒ\":\"O\",\"Ȍ\":\"O\",\"Ȏ\":\"O\",\"Ơ\":\"O\",\"Ờ\":\"O\",\"Ớ\":\"O\",\"Ỡ\":\"O\",\"Ở\":\"O\",\"Ợ\":\"O\",\"Ọ\":\"O\",\"Ộ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Ɔ\":\"O\",\"Ɵ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ȣ\":\"OU\",\"Ⓟ\":\"P\",\"Ｐ\":\"P\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ƥ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝓ\":\"P\",\"Ꝕ\":\"P\",\"Ⓠ\":\"Q\",\"Ｑ\":\"Q\",\"Ꝗ\":\"Q\",\"Ꝙ\":\"Q\",\"Ɋ\":\"Q\",\"Ⓡ\":\"R\",\"Ｒ\":\"R\",\"Ŕ\":\"R\",\"Ṙ\":\"R\",\"Ř\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ŗ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꝛ\":\"R\",\"Ꞧ\":\"R\",\"Ꞃ\":\"R\",\"Ⓢ\":\"S\",\"Ｓ\":\"S\",\"ẞ\":\"S\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Ŝ\":\"S\",\"Ṡ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ș\":\"S\",\"Ş\":\"S\",\"Ȿ\":\"S\",\"Ꞩ\":\"S\",\"Ꞅ\":\"S\",\"Ⓣ\":\"T\",\"Ｔ\":\"T\",\"Ṫ\":\"T\",\"Ť\":\"T\",\"Ṭ\":\"T\",\"Ț\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ṯ\":\"T\",\"Ŧ\":\"T\",\"Ƭ\":\"T\",\"Ʈ\":\"T\",\"Ⱦ\":\"T\",\"Ꞇ\":\"T\",\"Ꜩ\":\"TZ\",\"Ⓤ\":\"U\",\"Ｕ\":\"U\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ŭ\":\"U\",\"Ü\":\"U\",\"Ǜ\":\"U\",\"Ǘ\":\"U\",\"Ǖ\":\"U\",\"Ǚ\":\"U\",\"Ủ\":\"U\",\"Ů\":\"U\",\"Ű\":\"U\",\"Ǔ\":\"U\",\"Ȕ\":\"U\",\"Ȗ\":\"U\",\"Ư\":\"U\",\"Ừ\":\"U\",\"Ứ\":\"U\",\"Ữ\":\"U\",\"Ử\":\"U\",\"Ự\":\"U\",\"Ụ\":\"U\",\"Ṳ\":\"U\",\"Ų\":\"U\",\"Ṷ\":\"U\",\"Ṵ\":\"U\",\"Ʉ\":\"U\",\"Ⓥ\":\"V\",\"Ｖ\":\"V\",\"Ṽ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ꝟ\":\"V\",\"Ʌ\":\"V\",\"Ꝡ\":\"VY\",\"Ⓦ\":\"W\",\"Ｗ\":\"W\",\"Ẁ\":\"W\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẇ\":\"W\",\"Ẅ\":\"W\",\"Ẉ\":\"W\",\"Ⱳ\":\"W\",\"Ⓧ\":\"X\",\"Ｘ\":\"X\",\"Ẋ\":\"X\",\"Ẍ\":\"X\",\"Ⓨ\":\"Y\",\"Ｙ\":\"Y\",\"Ỳ\":\"Y\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ỹ\":\"Y\",\"Ȳ\":\"Y\",\"Ẏ\":\"Y\",\"Ÿ\":\"Y\",\"Ỷ\":\"Y\",\"Ỵ\":\"Y\",\"Ƴ\":\"Y\",\"Ɏ\":\"Y\",\"Ỿ\":\"Y\",\"Ⓩ\":\"Z\",\"Ｚ\":\"Z\",\"Ź\":\"Z\",\"Ẑ\":\"Z\",\"Ż\":\"Z\",\"Ž\":\"Z\",\"Ẓ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ȥ\":\"Z\",\"Ɀ\":\"Z\",\"Ⱬ\":\"Z\",\"Ꝣ\":\"Z\",\"ⓐ\":\"a\",\"ａ\":\"a\",\"ẚ\":\"a\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ầ\":\"a\",\"ấ\":\"a\",\"ẫ\":\"a\",\"ẩ\":\"a\",\"ã\":\"a\",\"ā\":\"a\",\"ă\":\"a\",\"ằ\":\"a\",\"ắ\":\"a\",\"ẵ\":\"a\",\"ẳ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ả\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ǎ\":\"a\",\"ȁ\":\"a\",\"ȃ\":\"a\",\"ạ\":\"a\",\"ậ\":\"a\",\"ặ\":\"a\",\"ḁ\":\"a\",\"ą\":\"a\",\"ⱥ\":\"a\",\"ɐ\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ⓑ\":\"b\",\"ｂ\":\"b\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ḇ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɓ\":\"b\",\"ⓒ\":\"c\",\"ｃ\":\"c\",\"ć\":\"c\",\"ĉ\":\"c\",\"ċ\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ꜿ\":\"c\",\"ↄ\":\"c\",\"ⓓ\":\"d\",\"ｄ\":\"d\",\"ḋ\":\"d\",\"ď\":\"d\",\"ḍ\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ḏ\":\"d\",\"đ\":\"d\",\"ƌ\":\"d\",\"ɖ\":\"d\",\"ɗ\":\"d\",\"ꝺ\":\"d\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"ⓔ\":\"e\",\"ｅ\":\"e\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ề\":\"e\",\"ế\":\"e\",\"ễ\":\"e\",\"ể\":\"e\",\"ẽ\":\"e\",\"ē\":\"e\",\"ḕ\":\"e\",\"ḗ\":\"e\",\"ĕ\":\"e\",\"ė\":\"e\",\"ë\":\"e\",\"ẻ\":\"e\",\"ě\":\"e\",\"ȅ\":\"e\",\"ȇ\":\"e\",\"ẹ\":\"e\",\"ệ\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ę\":\"e\",\"ḙ\":\"e\",\"ḛ\":\"e\",\"ɇ\":\"e\",\"ɛ\":\"e\",\"ǝ\":\"e\",\"ⓕ\":\"f\",\"ｆ\":\"f\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ꝼ\":\"f\",\"ⓖ\":\"g\",\"ｇ\":\"g\",\"ǵ\":\"g\",\"ĝ\":\"g\",\"ḡ\":\"g\",\"ğ\":\"g\",\"ġ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ǥ\":\"g\",\"ɠ\":\"g\",\"ꞡ\":\"g\",\"ᵹ\":\"g\",\"ꝿ\":\"g\",\"ⓗ\":\"h\",\"ｈ\":\"h\",\"ĥ\":\"h\",\"ḣ\":\"h\",\"ḧ\":\"h\",\"ȟ\":\"h\",\"ḥ\":\"h\",\"ḩ\":\"h\",\"ḫ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ⱨ\":\"h\",\"ⱶ\":\"h\",\"ɥ\":\"h\",\"ƕ\":\"hv\",\"ⓘ\":\"i\",\"ｉ\":\"i\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ĩ\":\"i\",\"ī\":\"i\",\"ĭ\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ỉ\":\"i\",\"ǐ\":\"i\",\"ȉ\":\"i\",\"ȋ\":\"i\",\"ị\":\"i\",\"į\":\"i\",\"ḭ\":\"i\",\"ɨ\":\"i\",\"ı\":\"i\",\"ⓙ\":\"j\",\"ｊ\":\"j\",\"ĵ\":\"j\",\"ǰ\":\"j\",\"ɉ\":\"j\",\"ⓚ\":\"k\",\"ｋ\":\"k\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ḳ\":\"k\",\"ķ\":\"k\",\"ḵ\":\"k\",\"ƙ\":\"k\",\"ⱪ\":\"k\",\"ꝁ\":\"k\",\"ꝃ\":\"k\",\"ꝅ\":\"k\",\"ꞣ\":\"k\",\"ⓛ\":\"l\",\"ｌ\":\"l\",\"ŀ\":\"l\",\"ĺ\":\"l\",\"ľ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ḻ\":\"l\",\"ſ\":\"l\",\"ł\":\"l\",\"ƚ\":\"l\",\"ɫ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ꞁ\":\"l\",\"ꝇ\":\"l\",\"ǉ\":\"lj\",\"ⓜ\":\"m\",\"ｍ\":\"m\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ɯ\":\"m\",\"ⓝ\":\"n\",\"ｎ\":\"n\",\"ǹ\":\"n\",\"ń\":\"n\",\"ñ\":\"n\",\"ṅ\":\"n\",\"ň\":\"n\",\"ṇ\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ɲ\":\"n\",\"ŉ\":\"n\",\"ꞑ\":\"n\",\"ꞥ\":\"n\",\"ǌ\":\"nj\",\"ⓞ\":\"o\",\"ｏ\":\"o\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"ồ\":\"o\",\"ố\":\"o\",\"ỗ\":\"o\",\"ổ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ȭ\":\"o\",\"ṏ\":\"o\",\"ō\":\"o\",\"ṑ\":\"o\",\"ṓ\":\"o\",\"ŏ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ỏ\":\"o\",\"ő\":\"o\",\"ǒ\":\"o\",\"ȍ\":\"o\",\"ȏ\":\"o\",\"ơ\":\"o\",\"ờ\":\"o\",\"ớ\":\"o\",\"ỡ\":\"o\",\"ở\":\"o\",\"ợ\":\"o\",\"ọ\":\"o\",\"ộ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"ɔ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ɵ\":\"o\",\"ƣ\":\"oi\",\"ȣ\":\"ou\",\"ꝏ\":\"oo\",\"ⓟ\":\"p\",\"ｐ\":\"p\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ƥ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝓ\":\"p\",\"ꝕ\":\"p\",\"ⓠ\":\"q\",\"ｑ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ꝙ\":\"q\",\"ⓡ\":\"r\",\"ｒ\":\"r\",\"ŕ\":\"r\",\"ṙ\":\"r\",\"ř\":\"r\",\"ȑ\":\"r\",\"ȓ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ŗ\":\"r\",\"ṟ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ꝛ\":\"r\",\"ꞧ\":\"r\",\"ꞃ\":\"r\",\"ⓢ\":\"s\",\"ｓ\":\"s\",\"ß\":\"s\",\"ś\":\"s\",\"ṥ\":\"s\",\"ŝ\":\"s\",\"ṡ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ș\":\"s\",\"ş\":\"s\",\"ȿ\":\"s\",\"ꞩ\":\"s\",\"ꞅ\":\"s\",\"ẛ\":\"s\",\"ⓣ\":\"t\",\"ｔ\":\"t\",\"ṫ\":\"t\",\"ẗ\":\"t\",\"ť\":\"t\",\"ṭ\":\"t\",\"ț\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ṯ\":\"t\",\"ŧ\":\"t\",\"ƭ\":\"t\",\"ʈ\":\"t\",\"ⱦ\":\"t\",\"ꞇ\":\"t\",\"ꜩ\":\"tz\",\"ⓤ\":\"u\",\"ｕ\":\"u\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ŭ\":\"u\",\"ü\":\"u\",\"ǜ\":\"u\",\"ǘ\":\"u\",\"ǖ\":\"u\",\"ǚ\":\"u\",\"ủ\":\"u\",\"ů\":\"u\",\"ű\":\"u\",\"ǔ\":\"u\",\"ȕ\":\"u\",\"ȗ\":\"u\",\"ư\":\"u\",\"ừ\":\"u\",\"ứ\":\"u\",\"ữ\":\"u\",\"ử\":\"u\",\"ự\":\"u\",\"ụ\":\"u\",\"ṳ\":\"u\",\"ų\":\"u\",\"ṷ\":\"u\",\"ṵ\":\"u\",\"ʉ\":\"u\",\"ⓥ\":\"v\",\"ｖ\":\"v\",\"ṽ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ꝟ\":\"v\",\"ʌ\":\"v\",\"ꝡ\":\"vy\",\"ⓦ\":\"w\",\"ｗ\":\"w\",\"ẁ\":\"w\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẇ\":\"w\",\"ẅ\":\"w\",\"ẘ\":\"w\",\"ẉ\":\"w\",\"ⱳ\":\"w\",\"ⓧ\":\"x\",\"ｘ\":\"x\",\"ẋ\":\"x\",\"ẍ\":\"x\",\"ⓨ\":\"y\",\"ｙ\":\"y\",\"ỳ\":\"y\",\"ý\":\"y\",\"ŷ\":\"y\",\"ỹ\":\"y\",\"ȳ\":\"y\",\"ẏ\":\"y\",\"ÿ\":\"y\",\"ỷ\":\"y\",\"ẙ\":\"y\",\"ỵ\":\"y\",\"ƴ\":\"y\",\"ɏ\":\"y\",\"ỿ\":\"y\",\"ⓩ\":\"z\",\"ｚ\":\"z\",\"ź\":\"z\",\"ẑ\":\"z\",\"ż\":\"z\",\"ž\":\"z\",\"ẓ\":\"z\",\"ẕ\":\"z\",\"ƶ\":\"z\",\"ȥ\":\"z\",\"ɀ\":\"z\",\"ⱬ\":\"z\",\"ꝣ\":\"z\",\"Ά\":\"Α\",\"Έ\":\"Ε\",\"Ή\":\"Η\",\"Ί\":\"Ι\",\"Ϊ\":\"Ι\",\"Ό\":\"Ο\",\"Ύ\":\"Υ\",\"Ϋ\":\"Υ\",\"Ώ\":\"Ω\",\"ά\":\"α\",\"έ\":\"ε\",\"ή\":\"η\",\"ί\":\"ι\",\"ϊ\":\"ι\",\"ΐ\":\"ι\",\"ό\":\"ο\",\"ύ\":\"υ\",\"ϋ\":\"υ\",\"ΰ\":\"υ\",\"ω\":\"ω\",\"ς\":\"σ\"};return a}),b.define(\"select2/data/base\",[\"../utils\"],function(a){function b(a,c){b.__super__.constructor.call(this)}return a.Extend(b,a.Observable),b.prototype.current=function(a){throw new Error(\"The `current` method must be defined in child classes.\")},b.prototype.query=function(a,b){throw new Error(\"The `query` method must be defined in child classes.\")},b.prototype.bind=function(a,b){},b.prototype.destroy=function(){},b.prototype.generateResultId=function(b,c){var d=b.id+\"-result-\";return d+=a.generateChars(4),d+=null!=c.id?\"-\"+c.id.toString():\"-\"+a.generateChars(4)},b}),b.define(\"select2/data/select\",[\"./base\",\"../utils\",\"jquery\"],function(a,b,c){function d(a,b){this.$element=a,this.options=b,d.__super__.constructor.call(this)}return b.Extend(d,a),d.prototype.current=function(a){var b=[],d=this;this.$element.find(\":selected\").each(function(){var a=c(this),e=d.item(a);b.push(e)}),a(b)},d.prototype.select=function(a){var b=this;if(a.selected=!0,c(a.element).is(\"option\"))return a.element.selected=!0,void this.$element.trigger(\"change\");\n    if(this.$element.prop(\"multiple\"))this.current(function(d){var e=[];a=[a],a.push.apply(a,d);for(var f=0;f<a.length;f++){var g=a[f].id;-1===c.inArray(g,e)&&e.push(g)}b.$element.val(e),b.$element.trigger(\"change\")});else{var d=a.id;this.$element.val(d),this.$element.trigger(\"change\")}},d.prototype.unselect=function(a){var b=this;if(this.$element.prop(\"multiple\"))return a.selected=!1,c(a.element).is(\"option\")?(a.element.selected=!1,void this.$element.trigger(\"change\")):void this.current(function(d){for(var e=[],f=0;f<d.length;f++){var g=d[f].id;g!==a.id&&-1===c.inArray(g,e)&&e.push(g)}b.$element.val(e),b.$element.trigger(\"change\")})},d.prototype.bind=function(a,b){var c=this;this.container=a,a.on(\"select\",function(a){c.select(a.data)}),a.on(\"unselect\",function(a){c.unselect(a.data)})},d.prototype.destroy=function(){this.$element.find(\"*\").each(function(){c.removeData(this,\"data\")})},d.prototype.query=function(a,b){var d=[],e=this,f=this.$element.children();f.each(function(){var b=c(this);if(b.is(\"option\")||b.is(\"optgroup\")){var f=e.item(b),g=e.matches(a,f);null!==g&&d.push(g)}}),b({results:d})},d.prototype.addOptions=function(a){b.appendMany(this.$element,a)},d.prototype.option=function(a){var b;a.children?(b=document.createElement(\"optgroup\"),b.label=a.text):(b=document.createElement(\"option\"),void 0!==b.textContent?b.textContent=a.text:b.innerText=a.text),a.id&&(b.value=a.id),a.disabled&&(b.disabled=!0),a.selected&&(b.selected=!0),a.title&&(b.title=a.title);var d=c(b),e=this._normalizeItem(a);return e.element=b,c.data(b,\"data\",e),d},d.prototype.item=function(a){var b={};if(b=c.data(a[0],\"data\"),null!=b)return b;if(a.is(\"option\"))b={id:a.val(),text:a.text(),disabled:a.prop(\"disabled\"),selected:a.prop(\"selected\"),title:a.prop(\"title\")};else if(a.is(\"optgroup\")){b={text:a.prop(\"label\"),children:[],title:a.prop(\"title\")};for(var d=a.children(\"option\"),e=[],f=0;f<d.length;f++){var g=c(d[f]),h=this.item(g);e.push(h)}b.children=e}return b=this._normalizeItem(b),b.element=a[0],c.data(a[0],\"data\",b),b},d.prototype._normalizeItem=function(a){c.isPlainObject(a)||(a={id:a,text:a}),a=c.extend({},{text:\"\"},a);var b={selected:!1,disabled:!1};return null!=a.id&&(a.id=a.id.toString()),null!=a.text&&(a.text=a.text.toString()),null==a._resultId&&a.id&&null!=this.container&&(a._resultId=this.generateResultId(this.container,a)),c.extend({},b,a)},d.prototype.matches=function(a,b){var c=this.options.get(\"matcher\");return c(a,b)},d}),b.define(\"select2/data/array\",[\"./select\",\"../utils\",\"jquery\"],function(a,b,c){function d(a,b){var c=b.get(\"data\")||[];d.__super__.constructor.call(this,a,b),this.addOptions(this.convertToOptions(c))}return b.Extend(d,a),d.prototype.select=function(a){var b=this.$element.find(\"option\").filter(function(b,c){return c.value==a.id.toString()});0===b.length&&(b=this.option(a),this.addOptions(b)),d.__super__.select.call(this,a)},d.prototype.convertToOptions=function(a){function d(a){return function(){return c(this).val()==a.id}}for(var e=this,f=this.$element.find(\"option\"),g=f.map(function(){return e.item(c(this)).id}).get(),h=[],i=0;i<a.length;i++){var j=this._normalizeItem(a[i]);if(c.inArray(j.id,g)>=0){var k=f.filter(d(j)),l=this.item(k),m=c.extend(!0,{},j,l),n=this.option(m);k.replaceWith(n)}else{var o=this.option(j);if(j.children){var p=this.convertToOptions(j.children);b.appendMany(o,p)}h.push(o)}}return h},d}),b.define(\"select2/data/ajax\",[\"./array\",\"../utils\",\"jquery\"],function(a,b,c){function d(a,b){this.ajaxOptions=this._applyDefaults(b.get(\"ajax\")),null!=this.ajaxOptions.processResults&&(this.processResults=this.ajaxOptions.processResults),d.__super__.constructor.call(this,a,b)}return b.Extend(d,a),d.prototype._applyDefaults=function(a){var b={data:function(a){return c.extend({},a,{q:a.term})},transport:function(a,b,d){var e=c.ajax(a);return e.then(b),e.fail(d),e}};return c.extend({},b,a,!0)},d.prototype.processResults=function(a){return a},d.prototype.query=function(a,b){function d(){var d=f.transport(f,function(d){var f=e.processResults(d,a);e.options.get(\"debug\")&&window.console&&console.error&&(f&&f.results&&c.isArray(f.results)||console.error(\"Select2: The AJAX results did not return an array in the `results` key of the response.\")),b(f)},function(){d.status&&\"0\"===d.status||e.trigger(\"results:message\",{message:\"errorLoading\"})});e._request=d}var e=this;null!=this._request&&(c.isFunction(this._request.abort)&&this._request.abort(),this._request=null);var f=c.extend({type:\"GET\"},this.ajaxOptions);\"function\"==typeof f.url&&(f.url=f.url.call(this.$element,a)),\"function\"==typeof f.data&&(f.data=f.data.call(this.$element,a)),this.ajaxOptions.delay&&null!=a.term?(this._queryTimeout&&window.clearTimeout(this._queryTimeout),this._queryTimeout=window.setTimeout(d,this.ajaxOptions.delay)):d()},d}),b.define(\"select2/data/tags\",[\"jquery\"],function(a){function b(b,c,d){var e=d.get(\"tags\"),f=d.get(\"createTag\");void 0!==f&&(this.createTag=f);var g=d.get(\"insertTag\");if(void 0!==g&&(this.insertTag=g),b.call(this,c,d),a.isArray(e))for(var h=0;h<e.length;h++){var i=e[h],j=this._normalizeItem(i),k=this.option(j);this.$element.append(k)}}return b.prototype.query=function(a,b,c){function d(a,f){for(var g=a.results,h=0;h<g.length;h++){var i=g[h],j=null!=i.children&&!d({results:i.children},!0),k=i.text===b.term;if(k||j)return f?!1:(a.data=g,void c(a))}if(f)return!0;var l=e.createTag(b);if(null!=l){var m=e.option(l);m.attr(\"data-select2-tag\",!0),e.addOptions([m]),e.insertTag(g,l)}a.results=g,c(a)}var e=this;return this._removeOldTags(),null==b.term||null!=b.page?void a.call(this,b,c):void a.call(this,b,d)},b.prototype.createTag=function(b,c){var d=a.trim(c.term);return\"\"===d?null:{id:d,text:d}},b.prototype.insertTag=function(a,b,c){b.unshift(c)},b.prototype._removeOldTags=function(b){var c=(this._lastTag,this.$element.find(\"option[data-select2-tag]\"));c.each(function(){this.selected||a(this).remove()})},b}),b.define(\"select2/data/tokenizer\",[\"jquery\"],function(a){function b(a,b,c){var d=c.get(\"tokenizer\");void 0!==d&&(this.tokenizer=d),a.call(this,b,c)}return b.prototype.bind=function(a,b,c){a.call(this,b,c),this.$search=b.dropdown.$search||b.selection.$search||c.find(\".select2-search__field\")},b.prototype.query=function(b,c,d){function e(b){var c=g._normalizeItem(b),d=g.$element.find(\"option\").filter(function(){return a(this).val()===c.id});if(!d.length){var e=g.option(c);e.attr(\"data-select2-tag\",!0),g._removeOldTags(),g.addOptions([e])}f(c)}function f(a){g.trigger(\"select\",{data:a})}var g=this;c.term=c.term||\"\";var h=this.tokenizer(c,this.options,e);h.term!==c.term&&(this.$search.length&&(this.$search.val(h.term),this.$search.focus()),c.term=h.term),b.call(this,c,d)},b.prototype.tokenizer=function(b,c,d,e){for(var f=d.get(\"tokenSeparators\")||[],g=c.term,h=0,i=this.createTag||function(a){return{id:a.term,text:a.term}};h<g.length;){var j=g[h];if(-1!==a.inArray(j,f)){var k=g.substr(0,h),l=a.extend({},c,{term:k}),m=i(l);null!=m?(e(m),g=g.substr(h+1)||\"\",h=0):h++}else h++}return{term:g}},b}),b.define(\"select2/data/minimumInputLength\",[],function(){function a(a,b,c){this.minimumInputLength=c.get(\"minimumInputLength\"),a.call(this,b,c)}return a.prototype.query=function(a,b,c){return b.term=b.term||\"\",b.term.length<this.minimumInputLength?void this.trigger(\"results:message\",{message:\"inputTooShort\",args:{minimum:this.minimumInputLength,input:b.term,params:b}}):void a.call(this,b,c)},a}),b.define(\"select2/data/maximumInputLength\",[],function(){function a(a,b,c){this.maximumInputLength=c.get(\"maximumInputLength\"),a.call(this,b,c)}return a.prototype.query=function(a,b,c){return b.term=b.term||\"\",this.maximumInputLength>0&&b.term.length>this.maximumInputLength?void this.trigger(\"results:message\",{message:\"inputTooLong\",args:{maximum:this.maximumInputLength,input:b.term,params:b}}):void a.call(this,b,c)},a}),b.define(\"select2/data/maximumSelectionLength\",[],function(){function a(a,b,c){this.maximumSelectionLength=c.get(\"maximumSelectionLength\"),a.call(this,b,c)}return a.prototype.query=function(a,b,c){var d=this;this.current(function(e){var f=null!=e?e.length:0;return d.maximumSelectionLength>0&&f>=d.maximumSelectionLength?void d.trigger(\"results:message\",{message:\"maximumSelected\",args:{maximum:d.maximumSelectionLength}}):void a.call(d,b,c)})},a}),b.define(\"select2/dropdown\",[\"jquery\",\"./utils\"],function(a,b){function c(a,b){this.$element=a,this.options=b,c.__super__.constructor.call(this)}return b.Extend(c,b.Observable),c.prototype.render=function(){var b=a('<span class=\"select2-dropdown\"><span class=\"select2-results\"></span></span>');return b.attr(\"dir\",this.options.get(\"dir\")),this.$dropdown=b,b},c.prototype.bind=function(){},c.prototype.position=function(a,b){},c.prototype.destroy=function(){this.$dropdown.remove()},c}),b.define(\"select2/dropdown/search\",[\"jquery\",\"../utils\"],function(a,b){function c(){}return c.prototype.render=function(b){var c=b.call(this),d=a('<span class=\"select2-search select2-search--dropdown\"><input class=\"select2-search__field\" type=\"search\" tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" role=\"textbox\" /></span>');return this.$searchContainer=d,this.$search=d.find(\"input\"),c.prepend(d),c},c.prototype.bind=function(b,c,d){var e=this;b.call(this,c,d),this.$search.on(\"keydown\",function(a){e.trigger(\"keypress\",a),e._keyUpPrevented=a.isDefaultPrevented()}),this.$search.on(\"input\",function(b){a(this).off(\"keyup\")}),this.$search.on(\"keyup input\",function(a){e.handleSearch(a)}),c.on(\"open\",function(){e.$search.attr(\"tabindex\",0),e.$search.focus(),window.setTimeout(function(){e.$search.focus()},0)}),c.on(\"close\",function(){e.$search.attr(\"tabindex\",-1),e.$search.val(\"\")}),c.on(\"focus\",function(){c.isOpen()&&e.$search.focus()}),c.on(\"results:all\",function(a){if(null==a.query.term||\"\"===a.query.term){var b=e.showSearch(a);b?e.$searchContainer.removeClass(\"select2-search--hide\"):e.$searchContainer.addClass(\"select2-search--hide\")}})},c.prototype.handleSearch=function(a){if(!this._keyUpPrevented){var b=this.$search.val();this.trigger(\"query\",{term:b})}this._keyUpPrevented=!1},c.prototype.showSearch=function(a,b){return!0},c}),b.define(\"select2/dropdown/hidePlaceholder\",[],function(){function a(a,b,c,d){this.placeholder=this.normalizePlaceholder(c.get(\"placeholder\")),a.call(this,b,c,d)}return a.prototype.append=function(a,b){b.results=this.removePlaceholder(b.results),a.call(this,b)},a.prototype.normalizePlaceholder=function(a,b){return\"string\"==typeof b&&(b={id:\"\",text:b}),b},a.prototype.removePlaceholder=function(a,b){for(var c=b.slice(0),d=b.length-1;d>=0;d--){var e=b[d];this.placeholder.id===e.id&&c.splice(d,1)}return c},a}),b.define(\"select2/dropdown/infiniteScroll\",[\"jquery\"],function(a){function b(a,b,c,d){this.lastParams={},a.call(this,b,c,d),this.$loadingMore=this.createLoadingMore(),this.loading=!1}return b.prototype.append=function(a,b){this.$loadingMore.remove(),this.loading=!1,a.call(this,b),this.showLoadingMore(b)&&this.$results.append(this.$loadingMore)},b.prototype.bind=function(b,c,d){var e=this;b.call(this,c,d),c.on(\"query\",function(a){e.lastParams=a,e.loading=!0}),c.on(\"query:append\",function(a){e.lastParams=a,e.loading=!0}),this.$results.on(\"scroll\",function(){var b=a.contains(document.documentElement,e.$loadingMore[0]);if(!e.loading&&b){var c=e.$results.offset().top+e.$results.outerHeight(!1),d=e.$loadingMore.offset().top+e.$loadingMore.outerHeight(!1);c+50>=d&&e.loadMore()}})},b.prototype.loadMore=function(){this.loading=!0;var b=a.extend({},{page:1},this.lastParams);b.page++,this.trigger(\"query:append\",b)},b.prototype.showLoadingMore=function(a,b){return b.pagination&&b.pagination.more},b.prototype.createLoadingMore=function(){var b=a('<li class=\"select2-results__option select2-results__option--load-more\"role=\"treeitem\" aria-disabled=\"true\"></li>'),c=this.options.get(\"translations\").get(\"loadingMore\");return b.html(c(this.lastParams)),b},b}),b.define(\"select2/dropdown/attachBody\",[\"jquery\",\"../utils\"],function(a,b){function c(b,c,d){this.$dropdownParent=d.get(\"dropdownParent\")||a(document.body),b.call(this,c,d)}return c.prototype.bind=function(a,b,c){var d=this,e=!1;a.call(this,b,c),b.on(\"open\",function(){d._showDropdown(),d._attachPositioningHandler(b),e||(e=!0,b.on(\"results:all\",function(){d._positionDropdown(),d._resizeDropdown()}),b.on(\"results:append\",function(){d._positionDropdown(),d._resizeDropdown()}))}),b.on(\"close\",function(){d._hideDropdown(),d._detachPositioningHandler(b)}),this.$dropdownContainer.on(\"mousedown\",function(a){a.stopPropagation()})},c.prototype.destroy=function(a){a.call(this),this.$dropdownContainer.remove()},c.prototype.position=function(a,b,c){b.attr(\"class\",c.attr(\"class\")),b.removeClass(\"select2\"),b.addClass(\"select2-container--open\"),b.css({position:\"absolute\",top:-999999}),this.$container=c},c.prototype.render=function(b){var c=a(\"<span></span>\"),d=b.call(this);return c.append(d),this.$dropdownContainer=c,c},c.prototype._hideDropdown=function(a){this.$dropdownContainer.detach()},c.prototype._attachPositioningHandler=function(c,d){var e=this,f=\"scroll.select2.\"+d.id,g=\"resize.select2.\"+d.id,h=\"orientationchange.select2.\"+d.id,i=this.$container.parents().filter(b.hasScroll);i.each(function(){a(this).data(\"select2-scroll-position\",{x:a(this).scrollLeft(),y:a(this).scrollTop()})}),i.on(f,function(b){var c=a(this).data(\"select2-scroll-position\");a(this).scrollTop(c.y)}),a(window).on(f+\" \"+g+\" \"+h,function(a){e._positionDropdown(),e._resizeDropdown()})},c.prototype._detachPositioningHandler=function(c,d){var e=\"scroll.select2.\"+d.id,f=\"resize.select2.\"+d.id,g=\"orientationchange.select2.\"+d.id,h=this.$container.parents().filter(b.hasScroll);h.off(e),a(window).off(e+\" \"+f+\" \"+g)},c.prototype._positionDropdown=function(){var b=a(window),c=this.$dropdown.hasClass(\"select2-dropdown--above\"),d=this.$dropdown.hasClass(\"select2-dropdown--below\"),e=null,f=this.$container.offset();f.bottom=f.top+this.$container.outerHeight(!1);var g={height:this.$container.outerHeight(!1)};g.top=f.top,g.bottom=f.top+g.height;var h={height:this.$dropdown.outerHeight(!1)},i={top:b.scrollTop(),bottom:b.scrollTop()+b.height()},j=i.top<f.top-h.height,k=i.bottom>f.bottom+h.height,l={left:f.left,top:g.bottom},m=this.$dropdownParent;\"static\"===m.css(\"position\")&&(m=m.offsetParent());var n=m.offset();l.top-=n.top,l.left-=n.left,c||d||(e=\"below\"),k||!j||c?!j&&k&&c&&(e=\"below\"):e=\"above\",(\"above\"==e||c&&\"below\"!==e)&&(l.top=g.top-n.top-h.height),null!=e&&(this.$dropdown.removeClass(\"select2-dropdown--below select2-dropdown--above\").addClass(\"select2-dropdown--\"+e),this.$container.removeClass(\"select2-container--below select2-container--above\").addClass(\"select2-container--\"+e)),this.$dropdownContainer.css(l)},c.prototype._resizeDropdown=function(){var a={width:this.$container.outerWidth(!1)+\"px\"};this.options.get(\"dropdownAutoWidth\")&&(a.minWidth=a.width,a.position=\"relative\",a.width=\"auto\"),this.$dropdown.css(a)},c.prototype._showDropdown=function(a){this.$dropdownContainer.appendTo(this.$dropdownParent),this._positionDropdown(),this._resizeDropdown()},c}),b.define(\"select2/dropdown/minimumResultsForSearch\",[],function(){function a(b){for(var c=0,d=0;d<b.length;d++){var e=b[d];e.children?c+=a(e.children):c++}return c}function b(a,b,c,d){this.minimumResultsForSearch=c.get(\"minimumResultsForSearch\"),this.minimumResultsForSearch<0&&(this.minimumResultsForSearch=1/0),a.call(this,b,c,d)}return b.prototype.showSearch=function(b,c){return a(c.data.results)<this.minimumResultsForSearch?!1:b.call(this,c)},b}),b.define(\"select2/dropdown/selectOnClose\",[],function(){function a(){}return a.prototype.bind=function(a,b,c){var d=this;a.call(this,b,c),b.on(\"close\",function(a){d._handleSelectOnClose(a)})},a.prototype._handleSelectOnClose=function(a,b){if(b&&null!=b.originalSelect2Event){var c=b.originalSelect2Event;if(\"select\"===c._type||\"unselect\"===c._type)return}var d=this.getHighlightedResults();if(!(d.length<1)){var e=d.data(\"data\");null!=e.element&&e.element.selected||null==e.element&&e.selected||this.trigger(\"select\",{data:e})}},a}),b.define(\"select2/dropdown/closeOnSelect\",[],function(){function a(){}return a.prototype.bind=function(a,b,c){var d=this;a.call(this,b,c),b.on(\"select\",function(a){d._selectTriggered(a)}),b.on(\"unselect\",function(a){d._selectTriggered(a)})},a.prototype._selectTriggered=function(a,b){var c=b.originalEvent;c&&c.ctrlKey||this.trigger(\"close\",{originalEvent:c,originalSelect2Event:b})},a}),b.define(\"select2/i18n/en\",[],function(){return{errorLoading:function(){return\"The results could not be loaded.\"},inputTooLong:function(a){var b=a.input.length-a.maximum,c=\"Please delete \"+b+\" character\";return 1!=b&&(c+=\"s\"),c},inputTooShort:function(a){var b=a.minimum-a.input.length,c=\"Please enter \"+b+\" or more characters\";return c},loadingMore:function(){return\"Loading more results…\"},maximumSelected:function(a){var b=\"You can only select \"+a.maximum+\" item\";return 1!=a.maximum&&(b+=\"s\"),b},noResults:function(){return\"No results found\"},searching:function(){return\"Searching…\"}}}),b.define(\"select2/defaults\",[\"jquery\",\"require\",\"./results\",\"./selection/single\",\"./selection/multiple\",\"./selection/placeholder\",\"./selection/allowClear\",\"./selection/search\",\"./selection/eventRelay\",\"./utils\",\"./translation\",\"./diacritics\",\"./data/select\",\"./data/array\",\"./data/ajax\",\"./data/tags\",\"./data/tokenizer\",\"./data/minimumInputLength\",\"./data/maximumInputLength\",\"./data/maximumSelectionLength\",\"./dropdown\",\"./dropdown/search\",\"./dropdown/hidePlaceholder\",\"./dropdown/infiniteScroll\",\"./dropdown/attachBody\",\"./dropdown/minimumResultsForSearch\",\"./dropdown/selectOnClose\",\"./dropdown/closeOnSelect\",\"./i18n/en\"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C){function D(){this.reset()}D.prototype.apply=function(l){if(l=a.extend(!0,{},this.defaults,l),null==l.dataAdapter){if(null!=l.ajax?l.dataAdapter=o:null!=l.data?l.dataAdapter=n:l.dataAdapter=m,l.minimumInputLength>0&&(l.dataAdapter=j.Decorate(l.dataAdapter,r)),l.maximumInputLength>0&&(l.dataAdapter=j.Decorate(l.dataAdapter,s)),l.maximumSelectionLength>0&&(l.dataAdapter=j.Decorate(l.dataAdapter,t)),l.tags&&(l.dataAdapter=j.Decorate(l.dataAdapter,p)),(null!=l.tokenSeparators||null!=l.tokenizer)&&(l.dataAdapter=j.Decorate(l.dataAdapter,q)),null!=l.query){var C=b(l.amdBase+\"compat/query\");l.dataAdapter=j.Decorate(l.dataAdapter,C)}if(null!=l.initSelection){var D=b(l.amdBase+\"compat/initSelection\");l.dataAdapter=j.Decorate(l.dataAdapter,D)}}if(null==l.resultsAdapter&&(l.resultsAdapter=c,null!=l.ajax&&(l.resultsAdapter=j.Decorate(l.resultsAdapter,x)),null!=l.placeholder&&(l.resultsAdapter=j.Decorate(l.resultsAdapter,w)),l.selectOnClose&&(l.resultsAdapter=j.Decorate(l.resultsAdapter,A))),null==l.dropdownAdapter){if(l.multiple)l.dropdownAdapter=u;else{var E=j.Decorate(u,v);l.dropdownAdapter=E}if(0!==l.minimumResultsForSearch&&(l.dropdownAdapter=j.Decorate(l.dropdownAdapter,z)),l.closeOnSelect&&(l.dropdownAdapter=j.Decorate(l.dropdownAdapter,B)),null!=l.dropdownCssClass||null!=l.dropdownCss||null!=l.adaptDropdownCssClass){var F=b(l.amdBase+\"compat/dropdownCss\");l.dropdownAdapter=j.Decorate(l.dropdownAdapter,F)}l.dropdownAdapter=j.Decorate(l.dropdownAdapter,y)}if(null==l.selectionAdapter){if(l.multiple?l.selectionAdapter=e:l.selectionAdapter=d,null!=l.placeholder&&(l.selectionAdapter=j.Decorate(l.selectionAdapter,f)),l.allowClear&&(l.selectionAdapter=j.Decorate(l.selectionAdapter,g)),l.multiple&&(l.selectionAdapter=j.Decorate(l.selectionAdapter,h)),null!=l.containerCssClass||null!=l.containerCss||null!=l.adaptContainerCssClass){var G=b(l.amdBase+\"compat/containerCss\");l.selectionAdapter=j.Decorate(l.selectionAdapter,G)}l.selectionAdapter=j.Decorate(l.selectionAdapter,i)}if(\"string\"==typeof l.language)if(l.language.indexOf(\"-\")>0){var H=l.language.split(\"-\"),I=H[0];l.language=[l.language,I]}else l.language=[l.language];if(a.isArray(l.language)){var J=new k;l.language.push(\"en\");for(var K=l.language,L=0;L<K.length;L++){var M=K[L],N={};try{N=k.loadPath(M)}catch(O){try{M=this.defaults.amdLanguageBase+M,N=k.loadPath(M)}catch(P){l.debug&&window.console&&console.warn&&console.warn('Select2: The language file for \"'+M+'\" could not be automatically loaded. A fallback will be used instead.');continue}}J.extend(N)}l.translations=J}else{var Q=k.loadPath(this.defaults.amdLanguageBase+\"en\"),R=new k(l.language);R.extend(Q),l.translations=R}return l},D.prototype.reset=function(){function b(a){function b(a){return l[a]||a}return a.replace(/[^\\u0000-\\u007E]/g,b)}function c(d,e){if(\"\"===a.trim(d.term))return e;if(e.children&&e.children.length>0){for(var f=a.extend(!0,{},e),g=e.children.length-1;g>=0;g--){var h=e.children[g],i=c(d,h);null==i&&f.children.splice(g,1)}return f.children.length>0?f:c(d,f)}var j=b(e.text).toUpperCase(),k=b(d.term).toUpperCase();return j.indexOf(k)>-1?e:null}this.defaults={amdBase:\"./\",amdLanguageBase:\"./i18n/\",closeOnSelect:!0,debug:!1,dropdownAutoWidth:!1,escapeMarkup:j.escapeMarkup,language:C,matcher:c,minimumInputLength:0,maximumInputLength:0,maximumSelectionLength:0,minimumResultsForSearch:0,selectOnClose:!1,sorter:function(a){return a},templateResult:function(a){return a.text},templateSelection:function(a){return a.text},theme:\"default\",width:\"resolve\"}},D.prototype.set=function(b,c){var d=a.camelCase(b),e={};e[d]=c;var f=j._convertData(e);a.extend(this.defaults,f)};var E=new D;return E}),b.define(\"select2/options\",[\"require\",\"jquery\",\"./defaults\",\"./utils\"],function(a,b,c,d){function e(b,e){if(this.options=b,null!=e&&this.fromElement(e),this.options=c.apply(this.options),e&&e.is(\"input\")){var f=a(this.get(\"amdBase\")+\"compat/inputData\");this.options.dataAdapter=d.Decorate(this.options.dataAdapter,f)}}return e.prototype.fromElement=function(a){var c=[\"select2\"];null==this.options.multiple&&(this.options.multiple=a.prop(\"multiple\")),null==this.options.disabled&&(this.options.disabled=a.prop(\"disabled\")),null==this.options.language&&(a.prop(\"lang\")?this.options.language=a.prop(\"lang\").toLowerCase():a.closest(\"[lang]\").prop(\"lang\")&&(this.options.language=a.closest(\"[lang]\").prop(\"lang\"))),null==this.options.dir&&(a.prop(\"dir\")?this.options.dir=a.prop(\"dir\"):a.closest(\"[dir]\").prop(\"dir\")?this.options.dir=a.closest(\"[dir]\").prop(\"dir\"):this.options.dir=\"ltr\"),a.prop(\"disabled\",this.options.disabled),a.prop(\"multiple\",this.options.multiple),a.data(\"select2Tags\")&&(this.options.debug&&window.console&&console.warn&&console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags=\"true\"` attributes and will be removed in future versions of Select2.'),a.data(\"data\",a.data(\"select2Tags\")),a.data(\"tags\",!0)),a.data(\"ajaxUrl\")&&(this.options.debug&&window.console&&console.warn&&console.warn(\"Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2.\"),a.attr(\"ajax--url\",a.data(\"ajaxUrl\")),a.data(\"ajax--url\",a.data(\"ajaxUrl\")));var e={};e=b.fn.jquery&&\"1.\"==b.fn.jquery.substr(0,2)&&a[0].dataset?b.extend(!0,{},a[0].dataset,a.data()):a.data();var f=b.extend(!0,{},e);f=d._convertData(f);for(var g in f)b.inArray(g,c)>-1||(b.isPlainObject(this.options[g])?b.extend(this.options[g],f[g]):this.options[g]=f[g]);return this},e.prototype.get=function(a){return this.options[a]},e.prototype.set=function(a,b){this.options[a]=b},e}),b.define(\"select2/core\",[\"jquery\",\"./options\",\"./utils\",\"./keys\"],function(a,b,c,d){var e=function(a,c){null!=a.data(\"select2\")&&a.data(\"select2\").destroy(),this.$element=a,this.id=this._generateId(a),c=c||{},this.options=new b(c,a),e.__super__.constructor.call(this);var d=a.attr(\"tabindex\")||0;a.data(\"old-tabindex\",d),a.attr(\"tabindex\",\"-1\");var f=this.options.get(\"dataAdapter\");this.dataAdapter=new f(a,this.options);var g=this.render();this._placeContainer(g);var h=this.options.get(\"selectionAdapter\");this.selection=new h(a,this.options),this.$selection=this.selection.render(),this.selection.position(this.$selection,g);var i=this.options.get(\"dropdownAdapter\");this.dropdown=new i(a,this.options),this.$dropdown=this.dropdown.render(),this.dropdown.position(this.$dropdown,g);var j=this.options.get(\"resultsAdapter\");this.results=new j(a,this.options,this.dataAdapter),this.$results=this.results.render(),this.results.position(this.$results,this.$dropdown);var k=this;this._bindAdapters(),this._registerDomEvents(),this._registerDataEvents(),this._registerSelectionEvents(),this._registerDropdownEvents(),this._registerResultsEvents(),this._registerEvents(),this.dataAdapter.current(function(a){k.trigger(\"selection:update\",{data:a})}),a.addClass(\"select2-hidden-accessible\"),a.attr(\"aria-hidden\",\"true\"),this._syncAttributes(),a.data(\"select2\",this)};return c.Extend(e,c.Observable),e.prototype._generateId=function(a){var b=\"\";return b=null!=a.attr(\"id\")?a.attr(\"id\"):null!=a.attr(\"name\")?a.attr(\"name\")+\"-\"+c.generateChars(2):c.generateChars(4),b=b.replace(/(:|\\.|\\[|\\]|,)/g,\"\"),b=\"select2-\"+b},e.prototype._placeContainer=function(a){a.insertAfter(this.$element);var b=this._resolveWidth(this.$element,this.options.get(\"width\"));null!=b&&a.css(\"width\",b)},e.prototype._resolveWidth=function(a,b){var c=/^width:(([-+]?([0-9]*\\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;if(\"resolve\"==b){var d=this._resolveWidth(a,\"style\");return null!=d?d:this._resolveWidth(a,\"element\")}if(\"element\"==b){var e=a.outerWidth(!1);return 0>=e?\"auto\":e+\"px\"}if(\"style\"==b){var f=a.attr(\"style\");if(\"string\"!=typeof f)return null;for(var g=f.split(\";\"),h=0,i=g.length;i>h;h+=1){var j=g[h].replace(/\\s/g,\"\"),k=j.match(c);if(null!==k&&k.length>=1)return k[1]}return null}return b},e.prototype._bindAdapters=function(){this.dataAdapter.bind(this,this.$container),this.selection.bind(this,this.$container),this.dropdown.bind(this,this.$container),this.results.bind(this,this.$container)},e.prototype._registerDomEvents=function(){var b=this;this.$element.on(\"change.select2\",function(){b.dataAdapter.current(function(a){b.trigger(\"selection:update\",{data:a})})}),this.$element.on(\"focus.select2\",function(a){b.trigger(\"focus\",a)}),this._syncA=c.bind(this._syncAttributes,this),this._syncS=c.bind(this._syncSubtree,this),this.$element[0].attachEvent&&this.$element[0].attachEvent(\"onpropertychange\",this._syncA);var d=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;null!=d?(this._observer=new d(function(c){a.each(c,b._syncA),a.each(c,b._syncS)}),this._observer.observe(this.$element[0],{attributes:!0,childList:!0,subtree:!1})):this.$element[0].addEventListener&&(this.$element[0].addEventListener(\"DOMAttrModified\",b._syncA,!1),this.$element[0].addEventListener(\"DOMNodeInserted\",b._syncS,!1),this.$element[0].addEventListener(\"DOMNodeRemoved\",b._syncS,!1))},e.prototype._registerDataEvents=function(){var a=this;this.dataAdapter.on(\"*\",function(b,c){a.trigger(b,c)})},e.prototype._registerSelectionEvents=function(){var b=this,c=[\"toggle\",\"focus\"];this.selection.on(\"toggle\",function(){b.toggleDropdown()}),this.selection.on(\"focus\",function(a){b.focus(a)}),this.selection.on(\"*\",function(d,e){-1===a.inArray(d,c)&&b.trigger(d,e)})},e.prototype._registerDropdownEvents=function(){var a=this;this.dropdown.on(\"*\",function(b,c){a.trigger(b,c)})},e.prototype._registerResultsEvents=function(){var a=this;this.results.on(\"*\",function(b,c){a.trigger(b,c)})},e.prototype._registerEvents=function(){var a=this;this.on(\"open\",function(){a.$container.addClass(\"select2-container--open\")}),this.on(\"close\",function(){a.$container.removeClass(\"select2-container--open\")}),this.on(\"enable\",function(){a.$container.removeClass(\"select2-container--disabled\")}),this.on(\"disable\",function(){a.$container.addClass(\"select2-container--disabled\")}),this.on(\"blur\",function(){a.$container.removeClass(\"select2-container--focus\")}),this.on(\"query\",function(b){a.isOpen()||a.trigger(\"open\",{}),this.dataAdapter.query(b,function(c){a.trigger(\"results:all\",{data:c,query:b})})}),this.on(\"query:append\",function(b){this.dataAdapter.query(b,function(c){a.trigger(\"results:append\",{data:c,query:b})})}),this.on(\"keypress\",function(b){var c=b.which;a.isOpen()?c===d.ESC||c===d.TAB||c===d.UP&&b.altKey?(a.close(),b.preventDefault()):c===d.ENTER?(a.trigger(\"results:select\",{}),b.preventDefault()):c===d.SPACE&&b.ctrlKey?(a.trigger(\"results:toggle\",{}),b.preventDefault()):c===d.UP?(a.trigger(\"results:previous\",{}),b.preventDefault()):c===d.DOWN&&(a.trigger(\"results:next\",{}),b.preventDefault()):(c===d.ENTER||c===d.SPACE||c===d.DOWN&&b.altKey)&&(a.open(),b.preventDefault())})},e.prototype._syncAttributes=function(){this.options.set(\"disabled\",this.$element.prop(\"disabled\")),this.options.get(\"disabled\")?(this.isOpen()&&this.close(),this.trigger(\"disable\",{})):this.trigger(\"enable\",{})},e.prototype._syncSubtree=function(a,b){var c=!1,d=this;if(!a||!a.target||\"OPTION\"===a.target.nodeName||\"OPTGROUP\"===a.target.nodeName){if(b)if(b.addedNodes&&b.addedNodes.length>0)for(var e=0;e<b.addedNodes.length;e++){var f=b.addedNodes[e];f.selected&&(c=!0)}else b.removedNodes&&b.removedNodes.length>0&&(c=!0);else c=!0;c&&this.dataAdapter.current(function(a){d.trigger(\"selection:update\",{data:a})})}},e.prototype.trigger=function(a,b){var c=e.__super__.trigger,d={open:\"opening\",close:\"closing\",select:\"selecting\",unselect:\"unselecting\"};if(void 0===b&&(b={}),a in d){var f=d[a],g={prevented:!1,name:a,args:b};if(c.call(this,f,g),g.prevented)return void(b.prevented=!0)}c.call(this,a,b)},e.prototype.toggleDropdown=function(){this.options.get(\"disabled\")||(this.isOpen()?this.close():this.open())},e.prototype.open=function(){this.isOpen()||this.trigger(\"query\",{})},e.prototype.close=function(){this.isOpen()&&this.trigger(\"close\",{})},e.prototype.isOpen=function(){return this.$container.hasClass(\"select2-container--open\")},e.prototype.hasFocus=function(){return this.$container.hasClass(\"select2-container--focus\")},e.prototype.focus=function(a){this.hasFocus()||(this.$container.addClass(\"select2-container--focus\"),this.trigger(\"focus\",{}))},e.prototype.enable=function(a){this.options.get(\"debug\")&&window.console&&console.warn&&console.warn('Select2: The `select2(\"enable\")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop(\"disabled\") instead.'),(null==a||0===a.length)&&(a=[!0]);var b=!a[0];this.$element.prop(\"disabled\",b)},e.prototype.data=function(){this.options.get(\"debug\")&&arguments.length>0&&window.console&&console.warn&&console.warn('Select2: Data can no longer be set using `select2(\"data\")`. You should consider setting the value instead using `$element.val()`.');var a=[];return this.dataAdapter.current(function(b){a=b}),a},e.prototype.val=function(b){if(this.options.get(\"debug\")&&window.console&&console.warn&&console.warn('Select2: The `select2(\"val\")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),null==b||0===b.length)return this.$element.val();var c=b[0];a.isArray(c)&&(c=a.map(c,function(a){return a.toString()})),this.$element.val(c).trigger(\"change\")},e.prototype.destroy=function(){this.$container.remove(),this.$element[0].detachEvent&&this.$element[0].detachEvent(\"onpropertychange\",this._syncA),null!=this._observer?(this._observer.disconnect(),this._observer=null):this.$element[0].removeEventListener&&(this.$element[0].removeEventListener(\"DOMAttrModified\",this._syncA,!1),this.$element[0].removeEventListener(\"DOMNodeInserted\",this._syncS,!1),this.$element[0].removeEventListener(\"DOMNodeRemoved\",this._syncS,!1)),this._syncA=null,this._syncS=null,this.$element.off(\".select2\"),this.$element.attr(\"tabindex\",this.$element.data(\"old-tabindex\")),this.$element.removeClass(\"select2-hidden-accessible\"),this.$element.attr(\"aria-hidden\",\"false\"),this.$element.removeData(\"select2\"),this.dataAdapter.destroy(),this.selection.destroy(),this.dropdown.destroy(),this.results.destroy(),this.dataAdapter=null,this.selection=null,this.dropdown=null,this.results=null;\n},e.prototype.render=function(){var b=a('<span class=\"select2 select2-container\"><span class=\"selection\"></span><span class=\"dropdown-wrapper\" aria-hidden=\"true\"></span></span>');return b.attr(\"dir\",this.options.get(\"dir\")),this.$container=b,this.$container.addClass(\"select2-container--\"+this.options.get(\"theme\")),b.data(\"element\",this.$element),b},e}),b.define(\"jquery-mousewheel\",[\"jquery\"],function(a){return a}),b.define(\"jquery.select2\",[\"jquery\",\"jquery-mousewheel\",\"./select2/core\",\"./select2/defaults\"],function(a,b,c,d){if(null==a.fn.select2){var e=[\"open\",\"close\",\"destroy\"];a.fn.select2=function(b){if(b=b||{},\"object\"==typeof b)return this.each(function(){var d=a.extend(!0,{},b);new c(a(this),d)}),this;if(\"string\"==typeof b){var d,f=Array.prototype.slice.call(arguments,1);return this.each(function(){var c=a(this).data(\"select2\");null==c&&window.console&&console.error&&console.error(\"The select2('\"+b+\"') method was called on an element that is not using Select2.\"),d=c[b].apply(c,f)}),a.inArray(b,e)>-1?this:d}throw new Error(\"Invalid arguments for Select2: \"+b)}}return null==a.fn.select2.defaults&&(a.fn.select2.defaults=d),c}),{define:b.define,require:b.require}}(),c=b.require(\"jquery.select2\");return a.fn.select2.amd=b,c});\n",
    "/**\n * context menu\n */\n\ndefine('app/map/contextmenu',[\n    'jquery'\n], function($) {\n\n    'use strict';\n\n    $.fn.contextMenu = function (settings) {\n\n        // animation\n        let animationInType = 'transition.flipXIn';\n        let animationInDuration = 150;\n        let animationOutType = 'transition.flipXOut';\n        let animationOutDuration = 150;\n\n        return this.each(function () {\n\n            // Open context menu\n            $(this).off('pf:openContextMenu').on('pf:openContextMenu', function (e, originalEvent, component, hiddenOptions, activeOptions) {\n\n                // hide all other open context menus\n               $('#pf-dialog-wrapper > .dropdown-menu').hide();\n\n                let contextMenu = $(settings.menuSelector);\n\n                let menuLiElements = contextMenu.find('li');\n\n                // show all menu entries\n                menuLiElements.show();\n\n                // disable specific menu entries\n                for(let i = 0; i < hiddenOptions.length; i++){\n                    contextMenu.find('li[data-action=\"' + hiddenOptions[i] + '\"]').hide();\n                }\n\n                // deactivate all menu entries\n                menuLiElements.removeClass('active');\n\n                //set active specific menu entries\n                for(let j = 0; j < activeOptions.length; j++){\n                    contextMenu.find('li[data-action=\"' + activeOptions[j] + '\"]').addClass('active');\n                }\n\n                //open menu\n                contextMenu.css({\n                    position: 'absolute',\n                    left: getLeftLocation(originalEvent),\n                    top: getTopLocation(originalEvent)\n                }).velocity(animationInType, {\n                    duration: animationInDuration,\n                    complete: function(){\n\n                        let posX = 0;\n                        let posY = 0;\n\n                        if(\n                            originalEvent.offsetX &&\n                            originalEvent.offsetY\n                        ){\n                            // Chrome\n                            posX = originalEvent.offsetX;\n                            posY = originalEvent.offsetY ;\n                        }else if(originalEvent.originalEvent){\n                            // Firefox -> #415\n                            posX =  originalEvent.originalEvent.layerX;\n                            posY = originalEvent.originalEvent.layerY ;\n                        }\n\n                        let position = {\n                            x: posX,\n                            y: posY\n                        };\n\n                        $(this).off('click').one('click', {component: component, position: position}, function (e) {\n                            // hide contextmenu\n                            $(this).hide();\n\n                            let params = {\n                                selectedMenu: $(e.target),\n                                component: e.data.component,\n                                position: e.data.position\n                            };\n\n                            settings.menuSelected.call(this, params);\n                            return false;\n                        });\n                    }\n                });\n\n                //make sure menu closes on any click\n                $(document).one('click.closeContextmenu', function () {\n                    $('.dropdown-menu[role=\"menu\"]').velocity(animationOutType, {\n                        duration: animationOutDuration\n                    });\n                });\n\n                return false;\n            });\n\n        });\n\n        function getLeftLocation(e) {\n            let mouseWidth = e.pageX;\n            let pageWidth = $(window).width();\n            let menuWidth = $(settings.menuSelector).width();\n\n            // opening menu would pass the side of the page\n            if (mouseWidth + menuWidth > pageWidth &&\n                menuWidth < mouseWidth) {\n                return mouseWidth - menuWidth;\n            }\n            return mouseWidth;\n        }\n\n        function getTopLocation(e) {\n            let mouseHeight = e.pageY;\n            let pageHeight = $(window).height();\n            let menuHeight = $(settings.menuSelector).height();\n\n            // opening menu would pass the bottom of the page\n            if (mouseHeight + menuHeight > pageHeight &&\n                menuHeight < mouseHeight) {\n                return mouseHeight - menuHeight;\n            }\n            return mouseHeight;\n        }\n\n    };\n});\n",
    "/**\n *  map overlay functions\n */\n\ndefine('app/map/overlay',[\n    'jquery',\n    'app/init',\n    'app/util'\n], function($, Init, Util) {\n    'use strict';\n\n    let config = {\n        logTimerCount: 3,                                                   // map log timer in seconds\n\n        // map\n        mapWrapperClass: 'pf-map-wrapper',                                  // wrapper div (scrollable)\n\n        // map overlay positions\n        mapOverlayClass: 'pf-map-overlay',                                  // class for all map overlays\n        mapOverlayTimerClass: 'pf-map-overlay-timer',                       // class for map overlay timer e.g. map timer\n        mapOverlayInfoClass: 'pf-map-overlay-info',                         // class for map overlay info e.g. map info\n        overlayLocalClass: 'pf-map-overlay-local',                          // class for map overlay \"local\" table\n\n        // system\n        systemHeadClass: 'pf-system-head',                                  // class for system head\n\n        // overlay IDs\n        connectionOverlayId: 'pf-map-connection-overlay',                   // connection \"normal size\" ID (jsPlumb)\n        connectionOverlayEolId: 'pf-map-connection-eol-overlay',            // connection EOL overlay ID (jsPlumb)\n        connectionOverlayArrowId: 'pf-map-connection-arrow-overlay',        // connection Arrows overlay ID (jsPlumb)\n        connectionOverlaySmallId: 'pf-map-connection-small-overlay',        // connection \"smaller\" overlay ID (jsPlumb)\n\n        // overlay classes\n        connectionOverlayClass: 'pf-map-connection-overlay',                // class for \"normal size\" overlay\n        connectionArrowOverlayClass: 'pf-map-connection-arrow-overlay',     // class for \"connection arrow\" overlay\n        connectionDiamondOverlayClass: 'pf-map-connection-diamond-overlay', // class for \"connection diamond\" overlay\n        connectionOverlaySmallClass: 'pf-map-connection-small-overlay'      // class for \"smaller\" overlays\n    };\n\n    /**\n     *  get MapObject (jsPlumb) from mapElement\n     * @param mapElement\n     * @returns {*}\n     */\n    let getMapObjectFromMapElement = (mapElement) => {\n        let Map = require('app/map/map');\n        return Map.getMapInstance( mapElement.data('id') );\n    };\n\n    /**\n     * get map object (jsPlumb) from iconElement\n     * @param overlayIcon\n     * @returns {*}\n     */\n    let getMapObjectFromOverlayIcon = (overlayIcon) => {\n        let mapElement = Util.getMapElementFromOverlay(overlayIcon);\n\n        return getMapObjectFromMapElement( mapElement );\n    };\n\n    /**\n     * add overlays to connections (signature based data)\n     * @param connections\n     * @param connectionsData\n     */\n    let addConnectionsOverlay = (connections, connectionsData) => {\n        let SystemSignatures = require('app/ui/system_signature');\n\n        /**\n         *  add label to endpoint\n         * @param endpoint\n         * @param label\n         */\n        let addEndpointOverlay = (endpoint, label) => {\n            let newLabel = '';\n            let colorClass = 'txt-color-grayLighter';\n\n            if(label.length > 0){\n                newLabel = label;\n\n                // check if multiple labels found => conflict\n                if( label.includes(', ') ){\n                    colorClass = 'txt-color-orangeLight';\n                }else if( !label.includes('K162') ){\n                    colorClass = 'txt-color-yellow';\n                }\n            }else{\n                // endpoint not connected with a signature\n                newLabel = '<i class=\"fa fa-question-circle\"></i>';\n                colorClass = 'txt-color-red';\n            }\n\n            endpoint.addOverlay([\n                'Label',\n                {\n                    label: '<span class=\"txt-color ' + colorClass + '\">' + newLabel + '</span>',\n                    id: config.connectionOverlaySmallId,\n                    cssClass: config.connectionOverlaySmallClass,\n                    location: [ 0.5, 0.5 ]\n                }\n            ]);\n\n        };\n\n        // loop through all map connections (get from DOM)\n        for(let connection of connections) {\n            let connectionId        = connection.getParameter('connectionId');\n            let sourceEndpoint      = connection.endpoints[0];\n            let targetEndpoint      = connection.endpoints[1];\n            let sourceSystem        = $(sourceEndpoint.element);\n            let targetSystem        = $(targetEndpoint.element);\n            let sourceId            = sourceSystem.data('id');\n            let targetId            = targetSystem.data('id');\n\n            let signatureTypeNames = {\n                sourceLabels: [],\n                targetLabels: []\n            };\n\n            // ... find matching connectionData (from Ajax)\n            for(let connectionData of connectionsData){\n                if(\n                    connectionData.id === connectionId &&\n                    connectionData.signatures               // signature data is required...\n                ){\n\n                    // ... collect overlay/label data from signatures\n                    for(let signatureData of connectionData.signatures){\n                        // ... typeId is required to get a valid name\n                        if(signatureData.typeId > 0){\n\n                            // whether \"source\" or \"target\" system is relevant for current connection and current signature...\n                            let tmpSystem = null;\n                            let tmpSystemType = null;\n\n                            if(signatureData.system.id === sourceId){\n                                // relates to \"source\" endpoint\n                                tmpSystemType = 'sourceLabels';\n                                tmpSystem = sourceSystem;\n                            }else if(signatureData.system.id === targetId){\n                                // relates to \"target\" endpoint\n                                tmpSystemType = 'targetLabels';\n                                tmpSystem = targetSystem;\n                            }\n\n                            // ... get endpoint label for source || target system\n                            if(tmpSystem && tmpSystem){\n                                // ... get all  available signature type (wormholes) names\n                                let availableSigTypeNames = SystemSignatures.getAllSignatureNamesBySystem(tmpSystem, 5);\n                                let flattenSigTypeNames = Util.flattenXEditableSelectArray(availableSigTypeNames);\n\n                                if( flattenSigTypeNames.hasOwnProperty(signatureData.typeId) ){\n                                    let label = flattenSigTypeNames[signatureData.typeId];\n                                    // shorten label, just take the in game name\n                                    label = label.substr(0, label.indexOf(' '));\n                                    signatureTypeNames[tmpSystemType].push(label);\n                                }\n                            }\n                        }\n                    }\n\n                    // ... connection matched -> continue with next one\n                    break;\n                }\n            }\n\n            let sourceLabel =  signatureTypeNames.sourceLabels.join(', ');\n            let targetLabel =  signatureTypeNames.targetLabels.join(', ');\n\n            // add endpoint overlays ------------------------------------------------------\n            addEndpointOverlay(sourceEndpoint, sourceLabel);\n            addEndpointOverlay(targetEndpoint, targetLabel);\n\n            // add arrow (connection) overlay that points from \"XXX\" => \"K162\" ------------\n            let overlayType = 'Diamond'; // not specified\n            let arrowDirection = 1;\n\n            if(\n                (sourceLabel.includes('K162') && targetLabel.includes('K162')) ||\n                (sourceLabel.length === 0 && targetLabel.length === 0) ||\n                (\n                    sourceLabel.length > 0 && targetLabel.length > 0 &&\n                    !sourceLabel.includes('K162') && !targetLabel.includes('K162')\n                )\n            ){\n                // unknown direction\n                overlayType = 'Diamond'; // not specified\n                arrowDirection = 1;\n            }else if(\n                (sourceLabel.includes('K162')) ||\n                (sourceLabel.length === 0 && !targetLabel.includes('K162'))\n            ){\n                // convert default arrow direction\n                overlayType = 'Arrow';\n                arrowDirection = -1;\n            }else{\n                // default arrow direction is fine\n                overlayType = 'Arrow';\n                arrowDirection = 1;\n            }\n\n            connection.addOverlay([\n                overlayType,\n                {\n                    width: 12,\n                    length: 15,\n                    location: 0.5,\n                    foldback: 0.85,\n                    direction: arrowDirection,\n                    id: config.connectionOverlayArrowId,\n                    cssClass: (overlayType === 'Arrow') ? config.connectionArrowOverlayClass :  config.connectionDiamondOverlayClass\n                }\n            ]);\n\n        }\n    };\n\n    /**\n     * remove overviews from a Tooltip\n     * @param endpoint\n     * @param i\n     */\n    let removeEndpointOverlay = (endpoint, i) => {\n        endpoint.removeOverlays(config.connectionOverlaySmallId);\n    };\n\n    /**\n     * format json object with \"time parts\" into string\n     * @param parts\n     * @returns {string}\n     */\n    let formatTimeParts = (parts) => {\n        let label = '';\n        if(parts.days){\n            label += parts.days + 'd ';\n        }\n        label += ('00' + parts.hours).slice(-2);\n        label += ':' + ('00' + parts.min).slice(-2);\n        return label;\n    };\n\n    /**\n     * hide default icon and replace it with \"loading\" icon\n     * @param iconElement\n     */\n    let showLoading = (iconElement) => {\n        iconElement = $(iconElement);\n        let dataName = 'default-icon';\n        let defaultIconClass = iconElement.data(dataName);\n\n        // get default icon class\n        if( !defaultIconClass ){\n            // index 0 == 'fa-fw', index 1 == IconName\n            defaultIconClass = $(iconElement).attr('class').match(/\\bfa-\\S*/g)[1];\n            iconElement.data(dataName, defaultIconClass);\n        }\n\n        iconElement.toggleClass( defaultIconClass + ' fa-refresh fa-spin' );\n    };\n\n    /**\n     * hide \"loading\" icon and replace with default icon\n     * @param iconElement\n     */\n    let hideLoading = (iconElement) => {\n        iconElement = $(iconElement);\n        let dataName = 'default-icon';\n        let defaultIconClass = iconElement.data(dataName);\n\n        iconElement.toggleClass( defaultIconClass + ' fa-refresh fa-spin' );\n    };\n\n    /**\n     * git signature data that is linked to a connection for a mapId\n     * @param mapElement\n     * @param connections\n     * @param callback\n     */\n    let getConnectionSignatureData = (mapElement, connections, callback) => {\n        let mapOverlay = $(mapElement).getMapOverlay('info');\n        let overlayConnectionIcon = mapOverlay.find('.pf-map-overlay-endpoint');\n\n        showLoading(overlayConnectionIcon);\n\n        let requestData = {\n            mapId: mapElement.data('id')\n        };\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.getMapConnectionData,\n            data: requestData,\n            dataType: 'json',\n            context: {\n                mapElement: mapElement,\n                connections: connections,\n                overlayConnectionIcon: overlayConnectionIcon\n            }\n        }).done(function(connectionsData){\n            // hide all connection before add them (refresh)\n            this.mapElement.hideEndpointOverlays();\n            // ... add overlays\n            callback(this.connections, connectionsData);\n        }).always(function() {\n            hideLoading(this.overlayConnectionIcon);\n        });\n    };\n\n    /**\n     * showEndpointOverlays\n     * -> used by \"refresh\" overlays (hover) AND/OR initial menu trigger\n     */\n    $.fn.showEndpointOverlays = function(){\n        let mapElement = $(this);\n        let map = getMapObjectFromMapElement(mapElement);\n        let MapUtil = require('app/map/util');\n        let connections = MapUtil.searchConnectionsByScopeAndType(map, 'wh');\n\n        // get connection signature information ---------------------------------------\n        getConnectionSignatureData(mapElement, connections, addConnectionsOverlay);\n    };\n\n    /**\n     * hideEndpointOverlays\n     * -> see showEndpointOverlays()\n     */\n    $.fn.hideEndpointOverlays = function(){\n        let map = getMapObjectFromMapElement($(this));\n        let MapUtil = require('app/map/util');\n        let connections = MapUtil.searchConnectionsByScopeAndType(map, 'wh');\n\n        for (let connection of connections){\n            connection.removeOverlays(config.connectionOverlayArrowId);\n            connection.endpoints.forEach(removeEndpointOverlay);\n        }\n    };\n\n    /**\n     * Overlay options (all available map options shown in overlay)\n     * \"active\":    (active || hover) indicated whether an icon/option\n     *              is marked as \"active\".\n     *              \"active\": Makes icon active when visible\n     *              \"hover\": Make icon active on hover\n     */\n    let options = {\n        filter: {\n            title: 'active filter',\n            trigger: 'active',\n            class: 'pf-map-overlay-filter',\n            iconClass: ['fa', 'fa-fw', 'fa-filter']\n        },\n        mapSnapToGrid: {\n            title: 'active grid',\n            trigger: 'active',\n            class: 'pf-map-overlay-grid',\n            iconClass: ['glyphicon', 'glyphicon-th']\n        },\n        mapMagnetizer: {\n            title: 'active magnetizer',\n            trigger: 'active',\n            class: 'pf-map-overlay-magnetizer',\n            iconClass: ['fa', 'fa-fw', 'fa-magnet']\n        },\n        systemRegion: {\n            title: 'show regions',\n            trigger: 'hover',\n            class: 'pf-map-overlay-region',\n            iconClass: ['fa', 'fa-fw', 'fa-tags'],\n            hoverIntent: {\n                over: function(e){\n                    let mapElement = Util.getMapElementFromOverlay(this);\n                    mapElement.find('.' + config.systemHeadClass).each(function(){\n                        let system = $(this);\n                        // init tooltip if not already exists\n                        if ( !system.data('bs.tooltip') ){\n                            system.tooltip({\n                                container: mapElement,\n                                placement: 'right',\n                                title: function(){\n                                    return $(this).parent().data('region');\n                                },\n                                trigger: 'manual'\n                            });\n                        }\n                        system.tooltip('show');\n                    });\n                },\n                out: function(e){\n                    let mapElement = Util.getMapElementFromOverlay(this);\n                    mapElement.find('.' + config.systemHeadClass).tooltip('hide');\n                }\n            }\n        },\n        mapEndpoint: {\n            title: 'refresh signature overlays',\n            trigger: 'refresh',\n            class: 'pf-map-overlay-endpoint',\n            iconClass: ['fa', 'fa-fw', 'fa-link'],\n            hoverIntent: {\n                over: function(e){\n                    let mapElement = Util.getMapElementFromOverlay(this);\n                    mapElement.showEndpointOverlays();\n                },\n                out: function(e){\n                    // just \"refresh\" on hover\n                }\n            }\n        },\n        connection: {\n            title: 'WH data',\n            trigger: 'hover',\n            class: 'pf-map-overlay-connection',\n            iconClass: ['fa', 'fa-fw', 'fa-fighter-jet'],\n            hoverIntent: {\n                over: function(e){\n                    let map = getMapObjectFromOverlayIcon(this);\n                    let MapUtil = require('app/map/util');\n                    let connections = MapUtil.searchConnectionsByScopeAndType(map, 'wh');\n                    let serverDate = Util.getServerTime();\n\n                    // show connection overlays ---------------------------------------------------\n                    for (let connection of connections) {\n                        let createdTimestamp = connection.getParameter('created');\n                        let updatedTimestamp = connection.getParameter('updated');\n\n                        let createdDate = Util.convertTimestampToServerTime(createdTimestamp);\n                        let updatedDate = Util.convertTimestampToServerTime(updatedTimestamp);\n\n                        let createdDiff = Util.getTimeDiffParts(createdDate, serverDate);\n                        let updatedDiff = Util.getTimeDiffParts(updatedDate, serverDate);\n\n                        // format overlay label\n                        let labels = [\n                            '<i class=\"fa fa-fw fa-plus-square\"></i>&nbsp;' + formatTimeParts(createdDiff),\n                            '<i class=\"fa fa-fw fa-pencil-square\"></i>&nbsp;' + formatTimeParts(updatedDiff)\n                        ];\n\n                        // add label overlay ------------------------------------------------------\n                        connection.addOverlay([\n                            'Label',\n                            {\n                                label: labels.join('<br>'),\n                                id: config.connectionOverlayId,\n                                cssClass: config.connectionOverlaySmallClass,\n                                location: 0.35\n                            }\n                        ]);\n                    }\n                },\n                out: function(e){\n                    let map = getMapObjectFromOverlayIcon(this);\n                    let MapUtil = require('app/map/util');\n                    let connections = MapUtil.searchConnectionsByScopeAndType(map, 'wh');\n\n                    for (let connection of connections){\n                        connection.removeOverlays(config.connectionOverlayId);\n                    }\n                }\n            }\n        },\n        connectionEol: {\n            title: 'EOL timer',\n            trigger: 'hover',\n            class: 'pf-map-overlay-connection-eol',\n            iconClass: ['fa', 'fa-fw', 'fa-clock-o'],\n            hoverIntent: {\n                over: function(e){\n                    let map = getMapObjectFromOverlayIcon(this);\n                    let MapUtil = require('app/map/util');\n                    let connections = MapUtil.searchConnectionsByScopeAndType(map, 'wh', ['wh_eol']);\n                    let serverDate = Util.getServerTime();\n\n                    for (let connection of connections) {\n                        let eolTimestamp = connection.getParameter('eolUpdated');\n                        let eolDate = Util.convertTimestampToServerTime(eolTimestamp);\n                        let diff = Util.getTimeDiffParts(eolDate, serverDate);\n\n                        connection.addOverlay([\n                            'Label',\n                            {\n                                label: '<i class=\"fa fa-fw fa-clock-o\"></i>&nbsp;' + formatTimeParts(diff),\n                                id: config.connectionOverlayEolId,\n                                cssClass: [config.connectionOverlayClass, 'eol'].join(' '),\n                                location: 0.25\n                            }\n                        ]);\n                    }\n                },\n                out: function(e){\n                    let map = getMapObjectFromOverlayIcon(this);\n                    let MapUtil = require('app/map/util');\n                    let connections = MapUtil.searchConnectionsByScopeAndType(map, 'wh', ['wh_eol']);\n\n                    for (let connection of connections) {\n                        connection.removeOverlay(config.connectionOverlayEolId);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * get map overlay element by type e.g. timer/counter, info - overlay\n     * @param overlayType\n     * @returns {*}\n     */\n    $.fn.getMapOverlay = function(overlayType){\n        let mapWrapperElement = $(this).parents('.' + config.mapWrapperClass);\n\n        let mapOverlay = null;\n        switch(overlayType){\n            case 'timer':\n                mapOverlay = mapWrapperElement.find('.' + config.mapOverlayTimerClass);\n                break;\n            case 'info':\n                mapOverlay = mapWrapperElement.find('.' + config.mapOverlayInfoClass);\n                break;\n            case 'local':\n                mapOverlay = mapWrapperElement.find('.' + config.overlayLocalClass);\n                break;\n        }\n\n        return mapOverlay;\n    };\n\n    /**\n     * draws the map update counter to the map overlay timer\n     * @param percent\n     * @param value\n     * @returns {*}\n     */\n    $.fn.setMapUpdateCounter = function(percent, value){\n\n        let mapOverlayTimer = $(this);\n\n        // check if counter already exists\n        let counterChart = mapOverlayTimer.getMapCounter();\n\n        if(counterChart.length === 0){\n            // create new counter\n\n            counterChart = $('<div>', {\n                class: [Init.classes.pieChart.class, Init.classes.pieChart.pieChartMapCounterClass].join(' ')\n            }).attr('data-percent', percent).append(\n                $('<span>', {\n                    text: value\n                })\n            );\n\n            mapOverlayTimer.append(counterChart);\n\n            // init counter\n            counterChart.initMapUpdateCounter();\n\n            // set tooltip\n            mapOverlayTimer.attr('data-placement', 'left');\n            mapOverlayTimer.attr('title', 'update counter');\n            mapOverlayTimer.tooltip();\n        }\n\n        return counterChart;\n    };\n\n    /**\n     * get the map counter chart from overlay\n     * @returns {JQuery|*|T|{}|jQuery}\n     */\n    $.fn.getMapCounter = function(){\n        return $(this).find('.' + Init.classes.pieChart.pieChartMapCounterClass);\n    };\n\n    $.fn.getMapOverlayInterval = function(){\n        return $(this).getMapOverlay('timer').getMapCounter().data('interval');\n    };\n\n    /**\n     * start the map update counter or reset\n     */\n    $.fn.startMapUpdateCounter = function(){\n\n        let mapOverlayTimer = $(this);\n        let counterChart = mapOverlayTimer.getMapCounter();\n\n        let maxSeconds = config.logTimerCount;\n\n        let counterChartLabel = counterChart.find('span');\n\n        let percentPerCount = 100 / maxSeconds;\n\n        // update counter\n        let updateChart = function(tempSeconds){\n            let pieChart = counterChart.data('easyPieChart');\n\n            if(pieChart !== undefined){\n                counterChart.data('easyPieChart').update( percentPerCount * tempSeconds);\n            }\n            counterChartLabel.text(tempSeconds);\n        };\n\n        // main timer function is called on any counter update\n        let timer = function(mapUpdateCounter){\n            // decrease timer\n            let currentSeconds = counterChart.data('currentSeconds');\n            currentSeconds--;\n            counterChart.data('currentSeconds', currentSeconds);\n\n            if(currentSeconds >= 0){\n                // update counter\n                updateChart(currentSeconds);\n            }else{\n                // hide counter and reset\n                clearInterval(mapUpdateCounter);\n\n                mapOverlayTimer.velocity('transition.whirlOut', {\n                    duration: Init.animationSpeed.mapOverlay,\n                    complete: function(){\n                        counterChart.data('interval', false);\n                        Util.getMapElementFromOverlay(mapOverlayTimer).trigger('pf:unlocked');\n                    }\n                });\n            }\n        };\n\n        // get current seconds (in case the timer is already running)\n        let currentSeconds = counterChart.data('currentSeconds');\n\n        // start values for timer and chart\n        counterChart.data('currentSeconds', maxSeconds);\n        updateChart(maxSeconds);\n\n        if(\n            currentSeconds === undefined ||\n            currentSeconds < 0\n        ){\n            // start timer\n            let mapUpdateCounter = setInterval(() => {\n                timer(mapUpdateCounter);\n            }, 1000);\n\n            // store counter interval\n            counterChart.data('interval', mapUpdateCounter);\n\n            // show overlay\n            if(mapOverlayTimer.is(':hidden')){\n                mapOverlayTimer.velocity('stop').velocity('transition.whirlIn', { duration: Init.animationSpeed.mapOverlay });\n            }\n        }\n    };\n\n    /**\n     * update (show/hide) a overlay icon in the \"info\"-overlay\n     * show/hide the overlay itself is no icons are visible\n     * @param option\n     * @param viewType\n     */\n    $.fn.updateOverlayIcon = function(option, viewType){\n        let mapOverlayInfo = $(this);\n\n        let showOverlay = false;\n\n        let mapOverlayIconClass = options[option].class;\n\n        // look for the overlay icon that should be updated\n        let iconElement = mapOverlayInfo.find('.' + mapOverlayIconClass);\n\n        if(iconElement){\n            if(viewType === 'show'){\n                showOverlay = true;\n\n                // check \"trigger\" and mark as \"active\"\n                if(\n                    options[option].trigger === 'active' ||\n                    options[option].trigger === 'refresh'\n                ){\n                    iconElement.addClass('active');\n                }\n\n                // check if icon is not already visible\n                // -> prevents unnecessary \"show\" animation\n                if( !iconElement.data('visible') ){\n                    // display animation for icon\n                    iconElement.velocity({\n                        opacity: [0.8, 0],\n                        scale: [1, 0],\n                        width: ['30px', 0],\n                        marginLeft: ['3px', 0]\n                    },{\n                        duration: 240,\n                        easing: 'easeInOutQuad'\n                    });\n\n                    iconElement.data('visible', true);\n                }\n            }else if(viewType === 'hide'){\n                iconElement.removeClass('active').velocity('reverse');\n                iconElement.data('visible', false);\n\n                // check if there is any visible icon remaining\n                let visibleIcons = mapOverlayInfo.find('i:visible');\n                if(visibleIcons.length > 0){\n                    showOverlay = true;\n                }\n            }\n        }\n\n        // show the entire overlay if there is at least one active icon\n        if(\n            showOverlay === true &&\n            mapOverlayInfo.is(':hidden')\n        ){\n            // show overlay\n            mapOverlayInfo.velocity('stop').velocity('transition.whirlIn', { duration: Init.animationSpeed.mapOverlay });\n        }else if(\n            showOverlay === false &&\n            mapOverlayInfo.is(':visible')\n        ){\n            // hide overlay\n            mapOverlayInfo.velocity('stop').velocity('transition.whirlOut', { duration: Init.animationSpeed.mapOverlay });\n        }\n    };\n\n    /**\n     * init all map overlays on a \"parent\" element\n     * @returns {*}\n     */\n    $.fn.initMapOverlays = function(){\n        return this.each(function(){\n            let parentElement = $(this);\n\n            let mapOverlayTimer = $('<div>', {\n                class: [config.mapOverlayClass, config.mapOverlayTimerClass].join(' ')\n            });\n            parentElement.append(mapOverlayTimer);\n\n            // ------------------------------------------------------------------------------------\n            // add map overlay info. after scrollbar is initialized\n            let mapOverlayInfo = $('<div>', {\n                class: [config.mapOverlayClass, config.mapOverlayInfoClass].join(' ')\n            });\n\n            // add all overlay elements\n            for (let prop in options) {\n                if(options.hasOwnProperty(prop)){\n                    let icon = $('<i>', {\n                        class: options[prop].iconClass.concat( ['pull-right', options[prop].class] ).join(' ')\n                    }).attr('title', options[prop].title).tooltip({\n                        placement: 'bottom',\n                        container: 'body',\n                        delay: 150\n                    });\n\n                    // add \"hover\" action for some icons\n                    if(\n                        options[prop].trigger === 'hover' ||\n                        options[prop].trigger === 'refresh'\n                    ){\n                        icon.hoverIntent(options[prop].hoverIntent);\n                    }\n\n                    mapOverlayInfo.append(icon);\n                }\n            }\n            parentElement.append(mapOverlayInfo);\n\n            // reset map update timer\n            mapOverlayTimer.setMapUpdateCounter(100, config.logTimerCount);\n        });\n    };\n\n});\n",
    "/**\n * map overlay functions for \"Nearby\" table\n * Created by Exodus on 13.04.2017.\n */\n\ndefine('app/map/local',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/map/util'\n], function($, Init, Util, MapUtil) {\n    'use strict';\n\n    let config = {\n        overlayClass: 'pf-map-overlay',                                     // class for all map overlays\n        overlayLocalClass: 'pf-map-overlay-local',                          // class for \"local\" overlay\n\n        // left section\n        overlayLocalContentClass: 'pf-map-overlay-local-content',           // class for left area - content\n        overlayLocalHeadlineClass: 'pf-map-overlay-headline',               // class for headline\n        overlayLocalTableClass: 'pf-local-table',                           // class for local tables\n\n        // right section\n        overlayLocalTriggerClass: 'pf-map-overlay-local-trigger',           // class for open/close trigger icon\n        overlayLocalOpenClass: 'pf-map-overlay-local-open',                 // class for open status\n        overlayLocalMainClass: 'pf-map-overlay-local-main',                 // class for right area (always visible)\n        overlayLocalUsersClass: 'pf-map-overlay-local-users',               // class for active user count\n        overlayLocalJumpsClass: 'pf-map-overlay-local-jumps',               // class for jump distance for table results\n\n        // dataTable\n        tableImageCellClass: 'pf-table-image-cell',                         // class for table \"image\" cells\n        tableActionCellClass: 'pf-table-action-cell',                       // class for table \"action\" cells\n        tableActionCellIconClass: 'pf-table-action-icon-cell',              // class for table \"action\" icon (icon is part of cell content)\n\n        // toolbar\n        toolbarClass: 'pf-map-overlay-toolbar',                             // class for toolbar - content\n        toolbarIconClass: 'pf-map-overlay-toolbar-icon',                    // class for toolbar icon\n        toolbarCheckboxClass: 'pf-map-overlay-toolbar-checkbox'             // class for toolbar checkbox\n    };\n\n    /**\n     * checks whether overlay is currently open or not\n     * @param overlay\n     * @returns {*}\n     */\n    let isOpen = (overlay) => {\n        return overlay.hasClass(config.overlayLocalOpenClass);\n    };\n\n    /**\n     * open overlay -> animation\n     * @param overlay\n     */\n    let openOverlay = (overlay) => {\n        if( !isOpen(overlay) ){\n            let overlayMain = overlay.find('.' + config.overlayLocalMainClass);\n            overlayMain.find('.' + config.overlayLocalTriggerClass).addClass('right');\n            overlay.addClass(config.overlayLocalOpenClass);\n\n            overlay.velocity({\n                width: '350px'\n            },{\n                duration: Init.animationSpeed.mapOverlayLocal,\n                easing: 'easeOut'\n            });\n        }\n    };\n\n    /**\n     * close overlay -> animation\n     * @param overlay\n     */\n    let closeOverlay = (overlay) => {\n        if( isOpen(overlay) ){\n            let overlayMain = overlay.find('.' + config.overlayLocalMainClass);\n            overlayMain.find('.' + config.overlayLocalTriggerClass).removeClass('right');\n            overlay.removeClass(config.overlayLocalOpenClass);\n\n            overlay.velocity({\n                width: '32px'\n            },{\n                duration: Init.animationSpeed.mapOverlayLocal,\n                easing: 'easeOut'\n            });\n        }\n    };\n\n    /**\n     * sets overlay observer\n     * @param overlay\n     * @param mapId\n     */\n    let setOverlayObserver = (overlay, mapId) => {\n        let overlayMain = overlay.find('.' + config.overlayLocalMainClass);\n\n        overlayMain.on('click', function(){\n            let overlayMain = $(this).parent('.' + config.overlayLocalClass);\n            let isOpenStatus = isOpen(overlayMain);\n\n            // store current state in indexDB (client)\n            MapUtil.storeLocalData('map', mapId, 'showLocal', !isOpenStatus );\n\n           // trigger open/close\n           if( isOpenStatus ){\n               closeOverlay(overlay);\n           }else{\n               openOverlay(overlay);\n           }\n        });\n\n        overlayMain.initTooltips({\n            container: 'body',\n            placement: 'bottom'\n        });\n    };\n\n    /**\n     * filter DataTable rows by column data and return rowIds\n     * @param table\n     * @param data\n     * @param values\n     * @param checkExistence\n     */\n    let filterRows = (table, data = 'id', values = [], checkExistence = true) => {\n        return table.rows().eq(0).filter( function (rowIdx) {\n            let rowExists = values.indexOf( table.row(rowIdx ).data()[data] ) !== -1;\n\n            if( !checkExistence ){\n                rowExists = !rowExists;\n            }\n\n            return rowExists;\n        });\n    };\n\n    /**\n     * Update the \"headline\" within the Overlay\n     * @param overlay\n     * @param systemData\n     * @param characterAll\n     * @param characterLocal\n     */\n    let updateLocaleHeadline = (overlay, systemData, characterAll = 0, characterLocal = 0) => {\n        let headlineElement = overlay.find('.' + config.overlayLocalHeadlineClass);\n        let userCountElement = overlay.find('.' + config.overlayLocalUsersClass);\n\n\n        let secClassBase = Util.getSecurityClassForSystem('security');\n        let secClass = Util.getSecurityClassForSystem(systemData.security);\n\n        let childElements = headlineElement.children('span');\n        childElements.eq(1).removeClass().addClass(\n            [secClassBase, secClass].join(' ')\n        ).text(systemData.security);\n\n        childElements.eq(2).text(systemData.alias ? systemData.alias : systemData.name);\n\n        // update userCount for \"near by\" count -------------------------------------------------------------------\n        if( characterAll > 0){\n            userCountElement.toggleClass( 'txt-color-green', true).toggleClass( 'txt-color-red', false);\n        }else{\n            userCountElement.toggleClass( 'txt-color-green', false).toggleClass( 'txt-color-red', true);\n        }\n        userCountElement.text(characterAll);\n\n        // update userCount in current system ---------------------------------------------------------------------\n        if( characterLocal > 0){\n            childElements.eq(3).toggleClass( 'txt-color-green', true).toggleClass( 'txt-color-red', false);\n        }else{\n            childElements.eq(3).toggleClass( 'txt-color-green', false).toggleClass( 'txt-color-red', true);\n        }\n        childElements.eq(3).text(characterLocal);\n    };\n\n    /**\n     * updates all changed table rows\n     * @param systemData\n     * @param userData\n     */\n    $.fn.updateLocalTable = function(systemData, userData){\n        return this.each(function(){\n            let overlay = $(this);\n            let tableElement = overlay.find('.' + config.overlayLocalTableClass);\n            let localTable = tableElement.DataTable();\n            let mapId = systemData.mapId;\n\n            let characterAllIds = [];\n            let characterLocalIds = [];\n\n            // system is on map (just for security check)\n            for(let jumps in userData) {\n                if( userData.hasOwnProperty(jumps) ){\n                    jumps = parseInt(jumps);\n\n                    for(let j = 0; j < userData[jumps].length; j++){\n                        // add jump distance\n                        userData[jumps][j].jumps = jumps;\n\n                        let rowData = userData[jumps][j];\n\n                        // check for existing rows\n                        let indexes = filterRows(localTable, 'id', [rowData.id]);\n\n                        if(indexes.length > 0){\n                            // row exists -> update\n                            let changedRow = localTable.row( parseInt(indexes[0]) );\n                            let changedRowElement = changedRow.nodes().to$();\n\n                            // remove tooltips\n                            changedRowElement.find('[title]').tooltip('hide').tooltip('destroy');\n\n                            // update data\n                            changedRow.data(rowData);\n                        }else{\n                            // new row\n                            localTable.row.add(rowData);\n                        }\n\n                        if(jumps === 0){\n                            characterLocalIds.push(rowData.id);\n                        }\n\n                        characterAllIds.push(rowData.id);\n                    }\n                }\n            }\n\n            // remove rows that no longer exists ----------------------------------------------------------------------\n            let indexesRemove = filterRows(localTable, 'id', characterAllIds, false);\n            localTable.rows(indexesRemove).remove();\n\n            localTable.draw();\n\n            // update system relevant data in overlay -----------------------------------------------------------------\n            updateLocaleHeadline(overlay, systemData, characterAllIds.length, characterLocalIds.length);\n\n            // open Overlay -------------------------------------------------------------------------------------------\n            if( !isOpen(overlay) ){\n                let promiseStore = MapUtil.getLocaleData('map', mapId);\n                promiseStore.then(function(dataStore) {\n                    if(\n                        dataStore &&\n                        dataStore.showLocal\n                    ){\n                        openOverlay(overlay);\n                    }\n                });\n            }\n        });\n    };\n\n    /**\n     * Access a nested JSON object by \"dot.notation\" syntax\n     * @param obj\n     * @param selector\n     * @returns {*}\n     */\n    let getDescendantProp = (obj, selector) => {\n        return selector.split('.').reduce(function(a, b) {\n            return a[b];\n        }, obj);\n    };\n\n    /**\n     * init tooltip for a \"DataTables\" Cell\n     * @param api\n     * @param cell\n     * @param titleSelector\n     */\n    let initCellTooltip = (api, cell, titleSelector = '') => {\n        $(cell).hover( function(e){\n            let rowIdx = api.cell(cell).index().row;\n            let rowData = api.row(rowIdx).data();\n\n            $(this).tooltip({\n                container: 'body',\n                title: String( getDescendantProp(rowData, titleSelector) ),\n                placement: 'left',\n                delay: 100\n            }).tooltip('show');\n        }, function(e){\n            $(this).tooltip('hide');\n        });\n    };\n\n    /**\n     * init all map local overlay on a \"parent\" element\n     * @returns {*}\n     */\n    $.fn.initLocalOverlay = function(mapId){\n        return this.each(function(){\n            let parentElement = $(this);\n\n            let overlay = $('<div>', {\n                class: [config.overlayClass, config.overlayLocalClass].join(' ')\n            });\n\n            let content = $('<div>', {\n                class: [ 'text-right', config.overlayLocalContentClass].join(' ')\n            });\n\n            // crate new route table\n            let table = $('<table>', {\n                class: ['compact', 'order-column', config.overlayLocalTableClass].join(' ')\n            });\n\n            let overlayMain = $('<div>', {\n                text: '',\n                class: config.overlayLocalMainClass\n            }).append(\n                $('<i>', {\n                    class: ['fa', 'fa-chevron-down', 'fa-fw', 'pf-animate-rotate', config.overlayLocalTriggerClass].join(' ')\n                }),\n                $('<span>', {\n                    class: ['badge', 'txt-color', 'txt-color-red', config.overlayLocalUsersClass].join(' '),\n                    text: 0\n                }),\n                $('<div>', {\n                    class: config.overlayLocalJumpsClass\n                }).append(\n                    $('<span>', {\n                        class: ['badge', 'txt-color', 'txt-color-grayLight'].join(' '),\n                        text: MapUtil.config.defaultLocalJumpRadius\n                    }).attr('title', 'jumps')\n                )\n            );\n\n            let headline = $('<div>', {\n                class: config.overlayLocalHeadlineClass\n            }).append(\n                $('<span>', {\n                    html: 'Nearby&nbsp;&nbsp;&nbsp;',\n                    class: 'pull-left'\n                }),\n                $('<span>'),\n                $('<span>'),\n                $('<span>', {\n                    class: ['badge', ' txt-color', 'txt-color-red'].join(' '),\n                    text: 0\n                })\n            );\n\n            content.append(headline);\n            content.append(table);\n            // toolbar not used for now\n            // content.append(initToolbar());\n\n            overlay.append(overlayMain);\n            overlay.append(content);\n\n            // set observer\n            setOverlayObserver(overlay, mapId);\n\n            parentElement.append(overlay);\n\n            // init local table ---------------------------------------------------------------------------------------\n\n            table.on('draw.dt', function(e, settings){\n                // init table tooltips\n                $(this).find('td').initTooltips({\n                    container: 'body',\n                    placement: 'left'\n                });\n\n                // hide pagination in case of only one page\n                let paginationElement = overlay.find('.dataTables_paginate');\n                let pageElements = paginationElement.find('span .paginate_button');\n                if(pageElements.length <= 1){\n                    paginationElement.hide();\n                }else{\n                    paginationElement.show();\n                }\n            });\n\n            // table init complete\n            table.on( 'init.dt', function (){\n                // init table head tooltips\n                $(this).initTooltips({\n                    container: 'body',\n                    placement: 'top'\n                });\n            });\n\n            let localTable = table.DataTable( {\n                pageLength: 13, // hint: if pagination visible => we need space to show it\n                paging: true,\n                lengthChange: false,\n                ordering: true,\n                order: [ 0, 'asc' ],\n                info: false,\n                searching: false,\n                hover: false,\n                autoWidth: false,\n                rowId: function(rowData) {\n                    return 'pf-local-row_' + rowData.id; // characterId\n                },\n                language: {\n                    emptyTable: '<span>You&nbsp;are&nbsp;alone</span>'\n                },\n                columnDefs: [\n                    {\n                        targets: 0,\n                        orderable: true,\n                        title: '<span title=\"jumps\" data-toggle=\"tooltip\">&nbsp;</span>',\n                        width: '1px',\n                        className: ['pf-help-default', 'text-center'].join(' '),\n                        data: 'jumps',\n                        render: {\n                            _: function(data, type, row, meta){\n                                let value = data;\n                                if(type === 'display'){\n                                    if(value === 0){\n                                        value = '<i class=\"fa fa-map-marker\"></i>';\n                                    }\n                                }\n                                return value;\n                            }\n                        },\n                        createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                            let api = this.DataTable();\n                            initCellTooltip(api, cell, 'log.system.name');\n                        }\n                    },{\n                        targets: 1,\n                        orderable: false,\n                        title: '',\n                        width: '26px',\n                        className: ['pf-help-default', 'text-center', config.tableImageCellClass].join(' '),\n                        data: 'log.ship',\n                        render: {\n                            _: function(data, type, row, meta){\n                                let value = data.typeName;\n                                if(type === 'display'){\n                                    value = '<img src=\"' + Init.url.ccpImageServer + 'Render/' + data.typeId + '_32.png\"/>';\n                                }\n                                return value;\n                            }\n                        },\n                        createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                            let api = this.DataTable();\n                            initCellTooltip(api, cell, 'log.ship.typeName');\n                        }\n                    }, {\n                        targets: 2,\n                        orderable: true,\n                        title: 'ship&nbsp;name',\n                        width: '80px',\n                        data: 'log.ship',\n                        render: {\n                            _: function(data, type, row, meta){\n                                let value = data.name;\n                                if(type === 'display'){\n                                    value = '<div class=\"' + MapUtil.config.tableCellEllipsisClass + ' ' + MapUtil.config.tableCellEllipsis80Class + '\">' + data.name + '</div>';\n                                }\n                                return value;\n                            },\n                            sort: 'name'\n                        }\n                    },{\n                        targets: 3,\n                        orderable: true,\n                        title: 'pilot',\n                        data: 'name',\n                        render: {\n                            _: function(data, type, row, meta){\n                                let value = data;\n                                if(type === 'display'){\n                                    value = '<div class=\"' + MapUtil.config.tableCellEllipsisClass + ' ' + MapUtil.config.tableCellEllipsis90Class + '\">' + data + '</div>';\n                                }\n                                return value;\n                            }\n                        }\n                    },{\n                        targets: 4,\n                        orderable: false,\n                        title: '<i title=\"docked station\" data-toggle=\"tooltip\" class=\"fa fa-home text-right\"></i>',\n                        width: '10px',\n                        className: ['pf-help-default'].join(' '),\n                        data: 'log.station',\n                        render: {\n                            _: function(data, type, row, meta){\n                                let value = '';\n                                if(\n                                    type === 'display' &&\n                                    data.id\n                                ){\n                                    value = '<i class=\"fa fa-home\"></i>';\n                                }\n                                return value;\n                            }\n                        },\n                        createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                            let api = this.DataTable();\n                            initCellTooltip(api, cell, 'log.station.name');\n                        }\n                    },{\n                        targets: 5,\n                        orderable: false,\n                        title: '<i title=\"open ingame\" data-toggle=\"tooltip\" class=\"fa fa-id-card text-right\"></i>',\n                        width: '10px',\n                        className: [config.tableActionCellClass].join(' '),\n                        data: 'id',\n                        render: {\n                            _: function(data, type, row, meta){\n                                let value = data;\n                                if(type === 'display'){\n                                    value = '<i class=\"fa fa-id-card ' + config.tableActionCellIconClass + '\"></i>';\n                                }\n                                return value;\n                            }\n                        },\n                        createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                            // open character information window (ingame)\n                            $(cell).on('click', { tableApi: this.DataTable(), cellData: cellData }, function(e){\n                                let cellData = e.data.tableApi.cell(this).data();\n                                Util.openIngameWindow(e.data.cellData);\n                            });\n                        }\n                    }\n                ]\n            });\n        });\n    };\n\n    let initToolbar = () => {\n\n        let getCheckbox = (options) => {\n          return $('<div>', {\n              class: [config.toolbarCheckboxClass, 'checkbox'].join(' ')\n          }).append(\n              $('<input>', {\n                  type: 'checkbox',\n                  id: options.id,\n                  name: options.name,\n                  value: options.value,\n                  checked: 'checked'\n              }),\n              $('<label>',{\n                  'for': options.id,\n                  html: options.label\n              })\n          );\n        };\n\n        let toolbar = $('<div>', {\n            class: [config.toolbarClass].join(' ')\n        }).append(\n            $('<i>', {\n                class: ['fa', 'fa-fw', 'fa-lg', 'fa-filter', config.toolbarIconClass, 'pull-left'].join(' ')\n            }),\n            getCheckbox({\n                id: 'test',\n                name: 'filter_character_active',\n                value: 1,\n                checked: true,\n                label: 'active'\n            })\n        );\n\n        return toolbar;\n    };\n\n    /**\n     * Clear Overlay and \"Reset\"\n     * @param mapId\n     */\n    $.fn.clearLocalTable = function(mapId){\n        return this.each(function(){\n            let overlay = $(this);\n\n            // update locale overlay headline -------------------------------------------------------------------------\n            updateLocaleHeadline(overlay, {\n                name: 'unknown',\n                security: ''\n            });\n\n            // clear all table rows -----------------------------------------------------------------------------------\n            let tableElement = overlay.find('.' + config.overlayLocalTableClass);\n            let localTable = tableElement.DataTable();\n            localTable.rows().remove().draw();\n        });\n    };\n\n});\n",
    "/**\n * Main map functionality\n */\n\ndefine('app/map/map',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n    'app/map/util',\n    'app/map/system',\n    'app/map/magnetizing',\n    'app/map/scrollbar',\n    'dragToSelect',\n    'select2',\n    'app/map/contextmenu',\n    'app/map/overlay',\n    'app/map/local'\n], function($, Init, Util, Render, bootbox, MapUtil, System, MagnetizerWrapper) {\n\n    'use strict';\n\n    let config = {\n        zIndexCounter: 110,\n\n        mapSnapToGrid: false,                                           // \"Snap to Grid\" feature for drag&drop systems on map (optional)\n        mapWrapperClass: 'pf-map-wrapper',                              // wrapper div (scrollable)\n\n        mapClass: 'pf-map',                                             // class for all maps\n        mapIdPrefix: 'pf-map-',                                         // id prefix for all maps\n        systemClass: 'pf-system',                                       // class for all systems\n        systemActiveClass: 'pf-system-active',                          // class for an active system in a map\n        systemSelectedClass: 'pf-system-selected',                      // class for selected systems in a map\n        systemLockedClass: 'pf-system-locked',                          // class for locked systems in a map\n        systemHeadClass: 'pf-system-head',                              // class for system head\n        systemHeadNameClass: 'pf-system-head-name',                     // class for system name\n        systemHeadExpandClass: 'pf-system-head-expand',                 // class for system head expand arrow\n        systemBodyClass: 'pf-system-body',                              // class for system body\n        systemBodyItemHeight: 16,                                       // px of a system body entry\n        systemBodyItemClass: 'pf-system-body-item',                     // class for a system body entry\n        systemBodyItemStatusClass: 'pf-user-status',                    // class for player status in system body\n        systemBodyItemNameClass: 'pf-system-body-item-name',            // class for player name in system body\n        systemBodyRightClass: 'pf-system-body-right',                   // class for player ship name in system body\n        systemTooltipInnerClass: 'pf-system-tooltip-inner',             // class for system tooltip content\n        systemTooltipInnerIdPrefix: 'pf-system-tooltip-inner-',         // id prefix for system tooltip content\n        dynamicElementWrapperId: 'pf-dialog-wrapper',                   // wrapper div for dynamic content (dialogs, context-menus,...)\n\n        // endpoint classes\n        endpointSourceClass: 'pf-map-endpoint-source',\n        endpointTargetClass: 'pf-map-endpoint-target',\n\n        // context menus\n        mapContextMenuId: 'pf-map-contextmenu',\n        connectionContextMenuId: 'pf-map-connection-contextmenu',\n        systemContextMenuId: 'pf-map-system-contextmenu',\n\n        // dialogs\n        systemDialogId: 'pf-system-dialog',                             // id for system dialog\n        systemDialogSelectClass: 'pf-system-dialog-select',             // class for system select Element\n\n        // system security classes\n        systemSec: 'pf-system-sec'\n    };\n\n    // active jsPlumb instances currently running\n    let activeInstances = {};\n\n    // active connections per map (cache object)\n    let connectionCache = {};\n\n    // mapIds that receive updates while they are \"locked\" (active timer)\n    // -> those maps queue their updates until \"pf:unlocked\" event\n    let mapUpdateQueue = [];\n\n    // jsPlumb config\n    let globalMapConfig =  {\n        source: {\n            filter: '.' + config.systemHeadNameClass,\n            //isSource:true,\n            isTarget:true,                          // add target Endpoint to each system (e.g. for drag&drop)\n            allowLoopback: false,                   // loopBack connections are not allowed\n            cssClass: config.endpointSourceClass,\n            uniqueEndpoint: false,                  // each connection has its own endpoint visible\n            dragOptions:{\n            },\n            connectionsDetachable: true,            // dragOptions are set -> allow detaching them\n            maxConnections: 10,                      // due to isTarget is true, this is the max count of !out!-going connections\n            // isSource:true,\n            anchor: 'Continuous'\n        },\n        target: {\n            filter: '.' + config.systemHeadNameClass,\n            isSource:true,\n            //isTarget:true,\n            //allowLoopback: false,                   // loopback connections are not allowed\n            cssClass: config.endpointTargetClass,\n            dropOptions: {\n                hoverClass: config.systemActiveClass,\n                activeClass: 'dragActive'\n            },\n            // isTarget:true,\n            // uniqueEndpoint: false,\n            anchor: 'Continuous'\n        },\n        connectionTypes: Init.connectionTypes\n    };\n\n    /**\n     * updates a system with current information\n     * @param map\n     * @param data\n     * @param currentUserIsHere boolean - if the current user is in this system\n     */\n    $.fn.updateSystemUserData = function(map, data, currentUserIsHere){\n\n        let system = $(this);\n        let systemId = system.attr('id');\n\n        // find system body\n        let systemBody = $( system.find('.' + config.systemBodyClass) );\n\n        // find expand arrow\n        let systemHeadExpand = $( system.find('.' + config.systemHeadExpandClass) );\n\n        let oldCacheKey = system.data('userCache');\n        let oldUserCount = system.data('userCount');\n        oldUserCount = (oldUserCount !== undefined ? oldUserCount : 0);\n        let userCounter = 0;\n\n        system.data('currentUser', false);\n\n        // if current user is in THIS system trigger event\n        if(currentUserIsHere){\n            system.data('currentUser', true);\n        }\n\n        // add user information\n        if(\n            data &&\n            data.user\n        ){\n            let cacheArray = [];\n            // loop all active pilots and build cache-key\n            for(let i = 0; i < data.user.length; i++){\n                userCounter++;\n                let tempUserData = data.user[i];\n                cacheArray.push(tempUserData.id + '_' + tempUserData.log.ship.id);\n            }\n            let cacheKey = cacheArray.join('_');\n\n            // check for if cacheKey has changed\n            if(cacheKey !== oldCacheKey){\n                // set new CacheKey\n                system.data('userCache', cacheKey);\n                system.data('userCount', userCounter);\n\n                // remove all content\n                systemBody.empty();\n\n                // loop \"again\" and build DOM object with user information\n                for(let j = 0; j < data.user.length; j++){\n                    let userData = data.user[j];\n\n                    let statusClass = Util.getStatusInfoForCharacter(userData, 'class');\n                    let userName = userData.name;\n\n                    let item = $('<div>', {\n                        class: config.systemBodyItemClass\n                    }).append(\n                        $('<span>', {\n                            text: userData.log.ship.typeName,\n                            class: config.systemBodyRightClass\n                        })\n                    ).append(\n                        $('<i>', {\n                            class: ['fa', 'fa-circle', config.systemBodyItemStatusClass, statusClass].join(' ')\n                        })\n                    ).append(\n                        $('<span>', {\n                            class: config.systemBodyItemNameClass,\n                            text: userName\n                        })\n                    );\n\n                    systemBody.append(item);\n                }\n\n\n                // =================================================================\n\n                // user count changed -> change tooltip content\n\n                // set tooltip color\n                let highlight = false;\n                let tooltipIconClass = '';\n                if(userCounter > oldUserCount){\n                    highlight = 'good';\n                    tooltipIconClass = 'fa-caret-up';\n                }else if(userCounter < oldUserCount){\n                    highlight = 'bad';\n                    tooltipIconClass = 'fa-caret-down';\n                }\n\n                let tooltipOptions = {\n                    trigger: 'manual',\n                    id: systemId,\n                    highlight: highlight,\n                    title: '<i class=\"fa ' + tooltipIconClass + '\"></i>&nbsp;' + userCounter\n                };\n\n                // show system head\n                systemHeadExpand.velocity('stop', true).velocity({\n                    width: '10px'\n                },{\n                    duration: 50,\n                    display: 'inline-block',\n                    progress: function(){\n                        //revalidate element size and repaint\n                        map.revalidate( systemId );\n                    },\n                    complete: function(){\n                        // show system body\n                        system.toggleBody(true, map, {complete: function(system){\n                            // complete callback function\n                            // show active user tooltip\n                            system.toggleSystemTooltip('show', tooltipOptions);\n                        }});\n                    }\n                });\n            }\n        }else{\n            // no user data found for this system\n            system.data('userCache', false);\n            system.data('userCount', 0);\n            systemBody.empty();\n\n            if(\n                oldCacheKey &&\n                oldCacheKey.length > 0\n            ){\n                // remove tooltip\n                system.toggleSystemTooltip('destroy', {});\n\n                // no user -> clear SystemBody\n                systemHeadExpand.velocity('stop').velocity('reverse',{\n                    display: 'none',\n                    complete: function(){\n                        system.toggleBody(false, map, {});\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * show/hide system body element\n     * @param type\n     * @param map\n     * @param callback\n     */\n    $.fn.toggleBody = function(type, map, callback){\n        let system = $(this);\n        let systemBody = system.find('.' + config.systemBodyClass);\n\n        let systemDomId = system.attr('id');\n\n        if(type === true){\n            // show minimal body\n            systemBody.velocity({\n                height: config.systemBodyItemHeight + 'px'\n            },{\n                duration: 50,\n                display: 'auto',\n                progress: function(){\n                    //revalidate element size and repaint\n                    map.revalidate( systemDomId );\n                },\n                complete: function(){\n                    map.revalidate( systemDomId );\n\n                    if(callback.complete){\n                        callback.complete(system);\n                    }\n                }\n            });\n        }else if(type === false){\n            // hide body\n            // remove all inline styles -> possible relict from previous hover-extend\n            systemBody.velocity({\n                height: 0 + 'px',\n                width: '100%',\n                'min-width': 'none'\n            },{\n                duration: 50,\n                display: 'none',\n                begin: function(){\n                },\n                progress: function(){\n                    // revalidate element size and repaint\n                    map.revalidate( systemDomId );\n                },\n                complete: function(){\n                    map.revalidate( systemDomId );\n                }\n            });\n        }\n    };\n\n    /**\n     * show/hide systems tooltip\n     * @param show\n     * @param options\n     */\n    $.fn.toggleSystemTooltip = function(show, options){\n\n        // tooltip colors\n        let colorClasses = {\n            good: 'txt-color-green',\n            bad: 'txt-color-red'\n        };\n\n        return this.each(function(){\n            let system = $(this);\n            let tooltipId = 0;\n            let tooltipClassHighlight = false;\n\n            // do not update tooltips while a system is dragged\n            if(system.hasClass('jsPlumb_dragged')){\n                // skip system\n                return true;\n            }\n\n            if(show === 'destroy'){\n                system.tooltip( show );\n                system.removeAttr('data-original-title');\n            }else if(show === 'hide'){\n                system.tooltip( show );\n            } else if(show === 'toggle'){\n                system.tooltip( show );\n            }else if(show === 'show'){\n\n                // check if tooltip is currently visible\n                let tooltipActive = (system.attr('aria-describedby') !== undefined);\n\n                if(options === undefined){\n                    options = {};\n                }\n\n                // optional color highlight\n                if(colorClasses.hasOwnProperty( options.highlight )){\n                    tooltipClassHighlight = colorClasses[ options.highlight ];\n                }\n\n                if(\n                    tooltipActive === false &&\n                    options.id\n                ){\n\n                    // init new tooltip\n                    tooltipId = config.systemTooltipInnerIdPrefix + options.id;\n\n                    let template = '<div class=\"tooltip\" role=\"tooltip\">' +\n                        '<div class=\"tooltip-arrow\"></div>' +\n                        '<div id=\"' + tooltipId + '\" class=\"tooltip-inner txt-color ' + config.systemTooltipInnerClass + '\"></div>' +\n                        '</div>';\n\n                    options.placement = getSystemTooltipPlacement(system);\n                    options.html = true;\n                    options.animation = true;\n                    options.template = template;\n                    options.viewport = system.parent('.' + config.mapClass);\n\n                    system.attr('title', options.title);\n\n                    system.tooltip(options);\n\n                    system.tooltip(show);\n\n                    if(tooltipClassHighlight !== false){\n                        // set tooltip observer and set new class after open -> due to transition effect\n\n                        system.on('shown.bs.tooltip', function() {\n                            $('#' + tooltipId).addClass( tooltipClassHighlight );\n                            // remove observer -> color should not be changed every time a tooltip toggles e.g. dragging system\n                            $(this).off('shown.bs.tooltip');\n                        });\n                    }\n                }else{\n                    // update/change/toggle tooltip text or color without tooltip reload\n\n                    let tooltipInner = false;\n                    if(\n                        options.title ||\n                        tooltipClassHighlight !== false\n                    ){\n                        tooltipInner = system.tooltip('fixTitle')\n                            .data('bs.tooltip')\n                            .$tip.find('.tooltip-inner');\n\n                        if(options.title){\n                            tooltipInner.html( options.title );\n                        }\n\n                        if(tooltipClassHighlight !== false){\n                            tooltipInner.removeClass( colorClasses.good + ' ' + colorClasses.bad).addClass(tooltipClassHighlight);\n                        }\n                    }\n\n                    // update tooltip placement based on system position\n                    if (system.data('bs.tooltip')) {\n                        system.data('bs.tooltip').options.placement = getSystemTooltipPlacement(system);\n                    }\n\n                    // show() can be forced\n                    if(options.show === true){\n                        system.tooltip('show');\n                    }\n\n                }\n            }\n        });\n    };\n\n    /**\n     * get tooltip position based on current system position\n     * @param system\n     * @returns {string}\n     */\n    let getSystemTooltipPlacement = (system) => {\n        let offsetParent = system.parent().offset();\n        let offsetSystem = system.offset();\n\n        return (offsetSystem.top - offsetParent.top < 27)  ? 'bottom' : 'top';\n    };\n\n    /**\n     * set or change the status of a system\n     * @param status\n     */\n    $.fn.setSystemStatus = function(status){\n        let system = $(this);\n\n        let statusId = Util.getStatusInfoForSystem(status, 'id');\n        let statusClass = Util.getStatusInfoForSystem(status, 'class');\n\n        for(let property in Init.systemStatus) {\n            if (Init.systemStatus.hasOwnProperty(property)) {\n                system.removeClass( Init.systemStatus[property].class );\n            }\n        }\n\n        // add new class\n        system.data('statusId', statusId);\n        system.addClass( statusClass );\n    };\n\n    /**\n     * returns a new system or updates an existing system\n     * @param map\n     * @param data\n     * @returns {HTMLElement}\n     */\n    $.fn.getSystem = function(map, data){\n        // get map container for mapId information\n        let mapContainer = $(this);\n        let systemId = MapUtil.getSystemId(mapContainer.data('id'), data.id);\n\n        // check if system already exists\n        let system = document.getElementById( systemId );\n        let newPosX =  data.position.x + 'px';\n        let newPosY = data.position.y + 'px';\n\n        if(!system){\n            // set system name or alias\n            let systemName = data.name;\n\n            if(\n                data.alias &&\n                data.alias !== ''\n            ){\n                systemName = data.alias;\n            }\n\n            // get system info classes\n            let effectBasicClass = MapUtil.getEffectInfoForSystem('effect', 'class');\n            let effectName = MapUtil.getEffectInfoForSystem(data.effect, 'name');\n            let effectClass = MapUtil.getEffectInfoForSystem(data.effect, 'class');\n            let secClass = Util.getSecurityClassForSystem(data.security);\n\n            system = $('<div>', {\n                // system\n                id: systemId,\n                class: config.systemClass\n            }).append(\n                // system head\n                $('<div>', {\n                    class: config.systemHeadClass\n                }).append(\n                    // System name is editable\n                    $('<a>', {\n                        href: '#',\n                        class: config.systemHeadNameClass\n                    }).attr('data-value', systemName)\n                ).append(\n                    // System locked status\n                    $('<i>', {\n                        class: ['fa', 'fa-lock', 'fa-fw'].join(' ')\n                    }).attr('title', 'locked')\n                ).append(\n                    // System effect color\n                    $('<i>', {\n                        class: ['fa', 'fa-square ', 'fa-fw', effectBasicClass, effectClass].join(' ')\n                    }).attr('title', effectName)\n                ).append(\n                    // expand option\n                    $('<i>', {\n                        class: ['fa', 'fa-angle-down ', config.systemHeadExpandClass].join(' ')\n                    })\n                ).prepend(\n                    $('<span>', {\n                        class: [config.systemSec, secClass].join(' '),\n                        text: data.security\n                    })\n                )\n            ).append(\n                // system body\n                $('<div>', {\n                    class: config.systemBodyClass\n                })\n            );\n\n            // set initial system position\n            system.css({\n                'left': newPosX,\n                'top': newPosY\n            });\n\n        }else{\n            system = $(system);\n\n            // set system position\n            let currentPosX = system.css('left');\n            let currentPosY = system.css('top');\n\n            if(\n                newPosX !== currentPosX ||\n                newPosY !== currentPosY\n            ){\n                // change position with animation\n                system.velocity(\n                    {\n                        left: newPosX,\n                        top: newPosY\n                    },{\n                        easing: 'linear',\n                        duration: Init.animationSpeed.mapMoveSystem,\n                        begin: function(system){\n                            // hide system tooltip\n                            $(system).toggleSystemTooltip('hide', {});\n\n                            // move them to the \"top\"\n                            $(system).updateSystemZIndex();\n                        },\n                        progress: function(){\n                            map.revalidate( systemId );\n                        },\n                        complete: function(system){\n                            // show tooltip\n                            $(system).toggleSystemTooltip('show', {show: true});\n\n                            map.revalidate( systemId );\n                        }\n                    }\n                );\n            }\n\n            // set system alias\n            let alias = system.getSystemInfo(['alias']);\n\n            if(alias !== data.alias){\n                // alias changed\n                system.find('.' + config.systemHeadNameClass).editable('setValue', data.alias);\n            }\n        }\n\n        // set system status\n        system.setSystemStatus(data.status.name);\n        system.data('id', parseInt(data.id));\n        system.data('systemId', parseInt(data.systemId));\n        system.data('name', data.name);\n        system.data('typeId', parseInt(data.type.id));\n        system.data('effect', data.effect);\n        system.data('security', data.security);\n        system.data('trueSec', parseFloat(data.trueSec));\n        system.data('regionId', parseInt(data.region.id));\n        system.data('region', data.region.name);\n        system.data('constellationId', parseInt(data.constellation.id));\n        system.data('constellation', data.constellation.name);\n        system.data('statics', data.statics);\n        system.data('updated', parseInt(data.updated.updated));\n        system.data('changed', false);\n        system.attr('data-mapid', parseInt(mapContainer.data('id')));\n\n        // locked system\n        if( Boolean( system.data( 'locked') ) !== data.locked ){\n            system.toggleLockSystem(false, {hideNotification: true, hideCounter: true, map: map});\n        }\n\n        // rally system\n        system.setSystemRally(data.rallyUpdated,  {\n            poke: data.rallyPoke || false,\n            hideNotification: true,\n            hideCounter: true,\n        });\n\n        return system;\n    };\n\n    /**\n     * set observer for a given connection\n     * @param map\n     * @param connection\n     */\n    let setConnectionObserver = function(map, connection){\n\n        // get map container\n        let mapElement = $( map.getContainer() );\n\n        // if the connection already exists -> do not set it twice\n        connection.unbind('contextmenu').bind('contextmenu', function(component, e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            // trigger menu \"open\n\n            // get invisible menu entries\n            let hideOptions = getHiddenContextMenuOptions(component);\n            let activeOptions = getActiveContextMenuOptions(component);\n            $(e.target).trigger('pf:openContextMenu', [e, component, hideOptions, activeOptions]);\n\n            return false;\n        });\n\n        /**\n         *  init context menu for all connections\n         *  must be triggered manually on demand\n         */\n        $(connection.canvas).contextMenu({\n            menuSelector: '#' + config.connectionContextMenuId,\n            menuSelected: function (params){\n\n                let action = params.selectedMenu.attr('data-action');\n                let activeConnection = params.component;\n                let activeScope = activeConnection.scope;\n                let activeScopeName = MapUtil.getScopeInfoForConnection( activeScope, 'label');\n\n                switch(action){\n                    case 'delete_connection':\n                        // delete a single connection\n\n                        // confirm dialog\n                        bootbox.confirm('Is this connection really gone?', function(result) {\n                            if(result){\n                                $().deleteConnections([activeConnection]);\n                            }\n                        });\n                        break;\n                    case 'frigate':         // set as frigate hole\n                    case 'preserve_mass':   // set \"preserve mass\n                    case 'wh_eol':          // set \"end of life\"\n                        mapElement.getMapOverlay('timer').startMapUpdateCounter();\n\n                        activeConnection.toggleType( action );\n\n                        $(activeConnection).markAsChanged();\n                        break;\n                    case 'status_fresh':\n                    case 'status_reduced':\n                    case 'status_critical':\n                        let newStatus = action.split('_')[1];\n                        mapElement.getMapOverlay('timer').startMapUpdateCounter();\n\n                        MapUtil.setConnectionWHStatus(activeConnection, 'wh_' + newStatus);\n                        $(activeConnection).markAsChanged();\n                        break;\n                    case 'scope_wh':\n                    case 'scope_stargate':\n                    case 'scope_jumpbridge':\n                        let newScope = action.split('_')[1];\n                        let newScopeName =  MapUtil.getScopeInfoForConnection( newScope, 'label');\n\n                        bootbox.confirm('Change scope from ' + activeScopeName + ' to ' + newScopeName + '?', function(result) {\n                            if(result){\n\n                                mapElement.getMapOverlay('timer').startMapUpdateCounter();\n\n                                setConnectionScope(activeConnection, newScope);\n\n                                Util.showNotify({title: 'Connection scope changed', text: 'New scope: ' + newScopeName, type: 'success'});\n\n                                $(activeConnection).markAsChanged();\n                            }\n                        });\n                        break;\n                }\n\n            }\n        });\n\n    };\n\n    /**\n     * set/change connection scope\n     * @param connection\n     * @param scope\n     */\n    let setConnectionScope = function(connection, scope){\n        let map = connection._jsPlumb.instance;\n        let currentConnector = connection.getConnector();\n        let newConnector = MapUtil.getScopeInfoForConnection(scope, 'connectorDefinition');\n\n        if(currentConnector.type !== newConnector[0]){\n            // connector has changed\n\n            connection.setConnector( newConnector );\n\n            // remove all connection types\n            connection.clearTypes();\n\n            // set new new connection type\n            // if scope changed -> connection type == scope\n            connection.setType( MapUtil.getDefaultConnectionTypeByScope(scope) );\n\n            // change scope\n            connection.scope = scope;\n\n            // new observer is required after scope change\n            setConnectionObserver(map, connection);\n        }\n    };\n\n    /**\n     * connect two systems\n     * @param map\n     * @param connectionData\n     * @returns new connection\n     */\n    let drawConnection = function(map, connectionData){\n        let mapContainer = $( map.getContainer() );\n        let mapId = mapContainer.data('id');\n        let connectionId = connectionData.id || 0;\n        let connection;\n        let sourceSystem = $('#' + MapUtil.getSystemId(mapId, connectionData.source) );\n        let targetSystem = $('#' + MapUtil.getSystemId(mapId, connectionData.target) );\n\n        // check if both systems exists\n        // (If not -> something went wrong e.g. DB-Foreign keys for \"ON DELETE\",...)\n        if(\n            sourceSystem.length &&\n            targetSystem.length\n        ){\n            connection = map.connect({\n                source: sourceSystem[0],\n                target: targetSystem[0],\n                /*\n                 parameters: {\n                 connectionId: connectionId,\n                 updated: connectionData.updated\n                 },\n                 */\n                type: null\n                /* experimental (straight connections)\n                 anchors: [\n                 [ \"Perimeter\", { shape: 'Rectangle' }],\n                 [ \"Perimeter\", { shape: 'Rectangle' }]\n                 ]\n                 */\n            });\n\n            // check if connection is valid (e.g. source/target exist\n            if( connection instanceof jsPlumb.Connection ){\n\n                // set connection parameters\n                // they should persist even through connection type change (e.g. wh -> stargate,..)\n                // therefore they should be part of the connection not of the connector\n                connection.setParameters({\n                    connectionId: connectionId,\n                    updated: connectionData.updated,\n                    created: connectionData.created,\n                    eolUpdated: connectionData.eolUpdated\n                });\n\n                // add connection types -------------------------------------------------------------------------\n                if(connectionData.type){\n                    for(let i = 0; i < connectionData.type.length; i++){\n                        connection.addType(connectionData.type[i]);\n                    }\n                }\n\n                // add connection scope -------------------------------------------------------------------------\n                // connection have the default map Scope scope\n                let scope = map.Defaults.Scope;\n                if(connectionData.scope){\n                    scope = connectionData.scope;\n                }\n                setConnectionScope(connection, scope);\n            }\n\n            // set Observer for new Connection -> is automatically set\n        }else{\n            if( !sourceSystem.length ){\n                console.warn('drawConnection(): source system (id: ' + connectionData.source + ') not found');\n            }\n            if( !targetSystem.length ){\n                console.warn('drawConnection(): target system (id: ' + connectionData.target + ') not found');\n            }\n        }\n\n        return connection;\n    };\n\n    /**\n     * compares the current data and new data of a connection and updates status\n     * @param connection\n     * @param connectionData\n     * @param newConnectionData\n     * @returns {*}\n     */\n    let updateConnection = function(connection, connectionData, newConnectionData){\n\n        let map = connection._jsPlumb.instance;\n        let mapContainer = $( map.getContainer() );\n        let mapId = mapContainer.data('id');\n\n        // check id, IDs should never change but must be set after initial save\n        if(connection.getParameter('connectionId') !== newConnectionData.id){\n            connection.setParameter('connectionId', newConnectionData.id);\n        }\n\n        // check scope\n        if(connectionData.scope !== newConnectionData.scope){\n            setConnectionScope(connection, newConnectionData.scope);\n            // for some reason the observers are gone after scope change...\n            setConnectionObserver(map, connection);\n        }\n\n        let addType = newConnectionData.type.diff( connectionData.type );\n        let removeType = connectionData.type.diff( newConnectionData.type );\n\n        // check if source or target has changed\n        if(connectionData.source !== newConnectionData.source ){\n            map.setSource(connection, MapUtil.getSystemId(mapId, newConnectionData.source) );\n        }\n        if(connectionData.target !== newConnectionData.target ){\n            map.setTarget(connection, MapUtil.getSystemId(mapId, newConnectionData.target) );\n        }\n\n        // connection.targetId\n        // add types\n        for(let i = 0; i < addType.length; i++){\n            if(\n                addType[i].indexOf('fresh') !== -1 ||\n                addType[i].indexOf('reduced') !== -1 ||\n                addType[i].indexOf('critical') !== -1\n            ){\n                MapUtil.setConnectionWHStatus(connection, addType[i]);\n            }else if( connection.hasType(addType[i]) !== true ){\n                // additional types e.g. eol, frig, preserve mass\n                connection.addType(addType[i]);\n                setConnectionObserver(map, connection);\n            }\n        }\n\n        // remove types\n        for(let j = 0; j < removeType.length; j++){\n            if(\n                removeType[j] === 'wh_eol' ||\n                removeType[j] === 'frigate' ||\n                removeType[j] === 'preserve_mass'\n            ){\n                connection.removeType(removeType[j]);\n                setConnectionObserver(map, connection);\n            }\n        }\n\n        // set update date (important for update check)\n        // important: set parameters ONE-by-ONE!\n        // -> (setParameters() will overwrite all previous params)\n        connection.setParameter('created', newConnectionData.created);\n        connection.setParameter('updated', newConnectionData.updated);\n        connection.setParameter('eolUpdated', newConnectionData.eolUpdated);\n        connection.setParameter('changed', false);\n\n        return connection;\n    };\n\n    /**\n     * get a mapMapElement\n     * @param parentElement\n     * @param mapConfig\n     * @returns {*}\n     */\n    let newMapElement = (parentElement, mapConfig) => {\n        let mapId = mapConfig.config.id;\n\n        // create map wrapper\n        let mapWrapper = $('<div>', {\n            class: config.mapWrapperClass\n        });\n\n        // create new map container\n        let mapContainer = $('<div>', {\n            id: config.mapIdPrefix + mapId,\n            class: [config.mapClass].join(' ')\n        });\n\n        // add additional information\n        mapContainer.data('id', mapId);\n\n        mapWrapper.append(mapContainer);\n\n        // append mapWrapper to parent element (at the top)\n        $(parentElement).prepend(mapWrapper);\n\n        // set main Container for current map -> the container exists now in DOM !! very important\n        mapConfig.map.setContainer( config.mapIdPrefix + mapId );\n\n        // set map observer\n        setMapObserver(mapConfig.map);\n\n        return mapConfig;\n    };\n\n    /**\n     * draw a new map or update an existing map with all its systems and connections\n     * @param mapConfig\n     * @returns {*}\n     */\n    let updateMap = function(mapConfig){\n        let mapContainer = mapConfig.map.getContainer();\n        let mapId = mapConfig.config.id;\n        let newSystems = 0;\n\n        mapContainer = $(mapContainer);\n\n        // add additional information for this map\n        if(mapContainer.data('updated') !== mapConfig.config.updated){\n            mapContainer.data('name', mapConfig.config.name);\n            mapContainer.data('scopeId', mapConfig.config.scope.id);\n            mapContainer.data('typeId', mapConfig.config.type.id);\n            mapContainer.data('typeName', mapConfig.config.type.name);\n            mapContainer.data('icon', mapConfig.config.icon);\n            mapContainer.data('created', mapConfig.config.created);\n            mapContainer.data('updated', mapConfig.config.updated);\n        }\n\n        // get map data\n        let mapData = mapContainer.getMapDataFromClient({forceData: false});\n\n        if(mapData !== false){\n            // map data available -> map not locked by update counter :)\n\n            let currentSystemData = mapData.data.systems;\n            let currentConnectionData = mapData.data.connections;\n\n            // update systems ===========================================================\n            for(let i = 0; i < mapConfig.data.systems.length; i++){\n                let systemData = mapConfig.data.systems[i];\n\n                // add system\n                let addNewSystem = true;\n\n                for(let k = 0; k < currentSystemData.length; k++){\n                    if(currentSystemData[k].id === systemData.id){\n                        if( currentSystemData[k].updated.updated < systemData.updated.updated ){\n                            // system changed -> update\n                            mapContainer.getSystem(mapConfig.map, systemData);\n                        }\n\n                        addNewSystem = false;\n                        break;\n                    }\n                }\n\n                if( addNewSystem === true){\n                    drawSystem(mapConfig.map, systemData);\n                    newSystems++;\n                }\n            }\n\n            // check for systems that are gone -> delete system\n            for(let a = 0; a < currentSystemData.length; a++){\n\n                let deleteThisSystem = true;\n\n                for(let b = 0; b < mapConfig.data.systems.length; b++){\n                    let deleteSystemData = mapConfig.data.systems[b];\n\n                    if(deleteSystemData.id === currentSystemData[a].id){\n                        deleteThisSystem = false;\n                        break;\n                    }\n                }\n\n                if(deleteThisSystem === true){\n                    let deleteSystem = $('#' + MapUtil.getSystemId(mapContainer.data('id'), currentSystemData[a].id) );\n\n                    // system not found -> delete system\n                    System.removeSystems(mapConfig.map, deleteSystem);\n                }\n            }\n\n            // update connections =========================================================\n\n            // jsPlumb batch() is used, otherwise there are some \"strange\" visual bugs\n            // when switching maps (Endpoints are not displayed correctly)\n            mapConfig.map.batch(function() {\n\n                for(let j = 0; j < mapConfig.data.connections.length; j++){\n                    let connectionData = mapConfig.data.connections[j];\n\n                    // add connection\n                    let addNewConnection= true;\n\n                    for(let c = 0; c < currentConnectionData.length; c++){\n                        if(\n                            currentConnectionData[c].id === connectionData.id\n                        ){\n                            // connection already exists -> check for updates\n                            if(\n                                currentConnectionData[c].updated < connectionData.updated\n                            ){\n                                // connection changed -> update\n                                let tempConnection = $().getConnectionById(mapData.config.id, connectionData.id);\n                                updateConnection(tempConnection, currentConnectionData[c], connectionData);\n                            }\n\n                            addNewConnection = false;\n                            break;\n                        }\n                    }\n\n                    if(addNewConnection === true){\n                        drawConnection(mapConfig.map, connectionData);\n                    }\n                }\n\n                // check for connections that are gone -> delete connection\n                for(let d = 0; d < currentConnectionData.length; d++){\n\n                    let deleteThisConnection = true;\n\n                    for(let e = 0; e < mapConfig.data.connections.length;e++){\n                        let deleteConnectionData = mapConfig.data.connections[e];\n\n                        if(deleteConnectionData.id === currentConnectionData[d].id){\n                            deleteThisConnection = false;\n                            break;\n                        }\n                    }\n\n                    if(deleteThisConnection === true){\n                        // get connection from cache -> delete connection\n                        let deleteConnection = $().getConnectionById(mapData.config.id, currentConnectionData[d].id);\n\n                        if(deleteConnection){\n                            // check if \"source\" and \"target\" still exist before remove\n                            // this is NOT the case if the system was removed previous\n                            if(\n                                deleteConnection.source &&\n                                deleteConnection.target\n                            ){\n                                mapConfig.map.detach(deleteConnection, {fireEvent: false});\n                            }\n                        }\n                    }\n                }\n\n            });\n\n            // update local connection cache\n            updateConnectionsCache(mapConfig.map);\n\n            // update map \"magnetization\" when new systems where added\n            if(newSystems > 0){\n                MagnetizerWrapper.setElements(mapConfig.map);\n            }\n        }else{\n            // map is currently logged -> queue update for this map until unlock\n            if( mapUpdateQueue.indexOf(mapId) === -1 ){\n                mapUpdateQueue.push(mapId);\n            }\n        }\n\n        return mapContainer;\n    };\n\n    /**\n     * update local connections cache (cache all connections from a map)\n     * @param map\n     */\n    let updateConnectionsCache = (map) => {\n        let connections = map.getAllConnections();\n        let mapContainer = $( map.getContainer() );\n        let mapId = mapContainer.data('id');\n\n        if(mapId > 0){\n            // clear cache\n            connectionCache[mapId] = [];\n\n            for(let i = 0; i < connections.length; i++){\n                updateConnectionCache(mapId, connections[i]);\n            }\n        }else{\n            console.warn('updateConnectionsCache', 'missing mapId');\n        }\n    };\n\n    /**\n     * update local connection cache (single connection)\n     * @param mapId\n     * @param connection\n     */\n    let updateConnectionCache = function(mapId, connection){\n\n        if(\n            mapId > 0 &&\n            connection\n        ){\n            let connectionId = parseInt( connection.getParameter('connectionId') );\n\n            if(connectionId > 0){\n                connectionCache[mapId][connectionId] = connection;\n            }\n        }else{\n            console.warn('updateConnectionCache', 'missing data');\n        }\n    };\n\n    /**\n     * get a connection object from \"cache\" (this requires the \"connectionCache\" cache to be actual!\n     * @param mapId\n     * @param connectionId\n     * @returns {*}\n     */\n    $.fn.getConnectionById = function(mapId, connectionId){\n\n        let connection = null;\n\n        if(\n            connectionCache[mapId] &&\n            connectionCache[mapId][connectionId]\n        ){\n            connection = connectionCache[mapId][connectionId];\n        }\n\n        return connection;\n    };\n\n    /**\n     * make all systems appear visual on the map with its connections\n     * @param show\n     * @param callback\n     */\n    $.fn.visualizeMap = function(show, callback){\n        let mapElement = $(this);\n\n        // start map update counter -> prevent map updates during animations\n        mapElement.getMapOverlay('timer').startMapUpdateCounter();\n\n        let systemElements = mapElement.find('.' + config.systemClass);\n        let endpointElements =  mapElement.find('.jsplumb-endpoint');\n        let connectorElements = mapElement.find('.jsplumb-connector');\n        let overlayElements = mapElement.find('.jsplumb-overlay, .tooltip');\n\n        let hideElements = (elements) => {\n            if(elements.length > 0){\n                // disable transition for next opacity change\n                elements.addClass('pf-notransition');\n                // hide elements\n                elements.css('opacity', 0);\n                // Trigger a reflow, flushing the CSS changes\n                // -> http://stackoverflow.com/questions/11131875/what-is-the-cleanest-way-to-disable-css-transition-effects-temporarily\n                elements[0].offsetHeight; // jshint ignore:line\n                elements.removeClass('pf-notransition');\n            }\n\n            return elements;\n        };\n\n        // if map empty (no systems), execute callback and return\n        // no visual effects on larger maps\n        if(\n            systemElements.length === 0 ||\n            systemElements.length > 20 ||\n            endpointElements.length === 0\n        ){\n            callback();\n            return;\n        }\n\n        // show nice animation\n        if(show === 'show'){\n            systemElements = hideElements(systemElements);\n            endpointElements = hideElements(endpointElements);\n            connectorElements = hideElements(connectorElements);\n            overlayElements = hideElements(overlayElements);\n\n            systemElements.velocity({\n                translateY: [ 0, -20],\n                opacity: [ 1, 0 ]\n            },{\n                duration: 300,\n                easing: 'easeOut',\n                complete: function(){\n                    // show connections\n                    endpointElements.velocity('transition.fadeIn', {\n                        duration: 0\n                    });\n\n                    connectorElements.velocity('transition.fadeIn', {\n                        stagger: 30,\n                        duration: 120,\n                        complete: function(){\n                            callback();\n                        }\n                    });\n\n                    // show overlay elements (if some exist)\n                    if(overlayElements.length > 0){\n                        overlayElements.delay(300).velocity('transition.fadeIn', {\n                            stagger: 50,\n                            duration: 180,\n                            display: 'auto'\n                        });\n                    }\n                }\n            });\n        }else if(show === 'hide'){\n\n            $('.mCSB_container').velocity('callout.shake', {\n                stagger: 0,\n                drag: false,\n                duration: 180,\n                display: 'auto'\n            });\n\n            overlayElements.velocity('transition.fadeOut', {\n                stagger: 50,\n                drag: true,\n                duration: 180,\n                display: 'auto'\n            });\n\n            endpointElements.velocity('transition.fadeOut', {\n                duration: 0,\n                display: 'block',\n                complete: function(){\n                    // show connections\n                    connectorElements.velocity('transition.fadeOut', {\n                        stagger: 0,\n                        drag: true,\n                        duration: 20,\n                        display: 'block'\n                    });\n\n                    systemElements.delay(100).velocity({\n                        translateY: [ -20, 0 ],\n                        opacity: [ 0, 1 ]\n                    },{\n                        duration: 180,\n                        display: 'block',\n                        easing: 'easeOut',\n                        complete: function(){\n                            callback();\n                        }\n                    });\n                }\n            });\n        }\n    };\n\n    /**\n     * mark a system as source\n     * @param map\n     * @param system\n     */\n    let makeSource = function(map, system){\n        if( !map.isSource(system) ){\n            // get scope from map defaults\n            let sourceConfig = globalMapConfig.source;\n            sourceConfig.scope = map.Defaults.Scope;    // set all allowed connections for this scopes\n\n            // default connector for initial dragging a new connection\n            sourceConfig.connector = MapUtil.getScopeInfoForConnection('wh', 'connectorDefinition');\n\n            map.makeSource(system, sourceConfig);\n        }\n    };\n\n    /**\n     * mark a system as target\n     * @param map\n     * @param system\n     */\n    let makeTarget = function(map, system){\n        if( !map.isTarget(system) ){\n            // get scope from map defaults\n            let targetConfig = globalMapConfig.target;\n            targetConfig.scope = map.Defaults.Scope;    // set all allowed connections for this scopes\n\n            map.makeTarget(system, targetConfig);\n        }\n    };\n\n    /**\n     * checks if json system data is valid\n     * @param systemData\n     * @returns {boolean}\n     */\n    let isValidSystem = function(systemData){\n\n        let isValid = true;\n\n        if(\n            ! systemData.hasOwnProperty('name') ||\n            systemData.name.length === 0\n        ){\n            return false;\n        }\n\n        return isValid;\n    };\n\n    /**\n     * draw a system with its data to a map\n     * @param map\n     * @param systemData\n     * @param connectedSystem\n     */\n    let drawSystem = function(map, systemData, connectedSystem){\n\n        // check if systemData is valid\n        if(isValidSystem(systemData)){\n            let mapContainer = $(map.getContainer());\n\n            // get System Element by data\n            let newSystem = mapContainer.getSystem(map, systemData);\n\n            // add new system to map\n            mapContainer.append(newSystem);\n\n            // make new system editable\n            makeEditable(newSystem);\n\n            // make target\n            makeTarget(map, newSystem);\n\n            // make source\n            makeSource(map, newSystem);\n\n            // set system observer\n            setSystemObserver(map, newSystem);\n\n            // connect new system (if connection data is given)\n            if(connectedSystem){\n\n                // hint: \"type\" will be auto detected by jump distance\n                let connectionData = {\n                    source: $(connectedSystem).data('id'),\n                    target: newSystem.data('id'),\n                    type: ['wh_fresh'] // default type.\n                };\n                let connection = drawConnection(map, connectionData);\n\n                // store connection\n                saveConnection(connection);\n            }\n        }\n    };\n\n    /**\n     * save a new system and add it to the map\n     * @param map\n     * @param requestData\n     * @param sourceSystem\n     * @param callback\n     */\n    let saveSystem = function(map, requestData, sourceSystem, callback){\n        $.ajax({\n            type: 'POST',\n            url: Init.path.saveSystem,\n            data: requestData,\n            dataType: 'json',\n            context: {\n                map: map,\n                sourceSystem: sourceSystem\n            }\n        }).done(function(newSystemData){\n            Util.showNotify({title: 'New system', text: newSystemData.name, type: 'success'});\n\n            // draw new system to map\n            drawSystem(this.map, newSystemData, this.sourceSystem);\n\n            // re/arrange systems (prevent overlapping)\n            MagnetizerWrapper.setElements(this.map);\n\n            if(callback){\n                callback();\n            }\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            Util.showNotify({title: jqXHR.status + ': saveSystem', text: reason, type: 'warning'});\n            $(document).setProgramStatus('problem');\n        });\n    };\n\n    /**\n     * open \"new system\" dialog and add the system to map\n     * optional the new system is connected to a \"sourceSystem\" (if available)\n     *\n     * @param map\n     * @param options\n     */\n    let showNewSystemDialog = function(map, options){\n        let mapContainer = $(map.getContainer());\n\n        // format system status for form select -------------------------------------------------------------\n        let systemStatus = {};\n        // \"default\" selection (id = 0) prevents status from being overwritten\n        // -> e.g. keep status information if system was just inactive (active = 0)\n        systemStatus[0] = 'default';\n\n        $.each(Init.systemStatus, function(status, statusData){\n            systemStatus[statusData.id] = statusData.label;\n        });\n\n        // default system status -> first status entry\n        let defaultSystemStatus = 0;\n\n        // get current map data -----------------------------------------------------------------------------\n        let mapData = mapContainer.getMapDataFromClient({forceData: true});\n        let mapSystems = mapData.data.systems;\n        let mapSystemCount = mapSystems.length;\n        let mapTypeName = mapContainer.data('typeName');\n        let maxAllowedSystems = Init.mapTypes[mapTypeName].defaultConfig.max_systems;\n\n        // show error if system max count reached -----------------------------------------------------------\n        if(mapSystemCount >= maxAllowedSystems){\n            Util.showNotify({title: 'Max system count exceeded', text: 'Limit of ' + maxAllowedSystems + ' systems reached', type: 'warning'});\n            return;\n        }\n\n        // disable systems that are already on it -----------------------------------------------------------\n        let mapSystemIds = [];\n        for(let i = 0; i < mapSystems.length; i++ ){\n            mapSystemIds.push( mapSystems[i].systemId );\n        }\n\n        // dialog data --------------------------------------------------------------------------------------\n        let data = {\n            id: config.systemDialogId,\n            selectClass: config.systemDialogSelectClass\n        };\n\n        // set current position as \"default\" system to add --------------------------------------------------\n        let currentCharacterLog = Util.getCurrentCharacterLog();\n\n        if(\n            currentCharacterLog !== false &&\n            mapSystemIds.indexOf( currentCharacterLog.system.id ) === -1\n        ){\n            // current system is NOT already on this map\n            // set current position as \"default\" system to add\n            data.currentSystem = currentCharacterLog.system;\n        }\n\n        requirejs(['text!templates/dialog/system.html', 'mustache'], function(template, Mustache) {\n\n            let content = Mustache.render(template, data);\n\n            let systemDialog = bootbox.dialog({\n                title: 'Add new system',\n                message: content,\n                buttons: {\n                    close: {\n                        label: 'cancel',\n                        className: 'btn-default'\n                    },\n                    success: {\n                        label: '<i class=\"fa fa-fw fa-check\"></i> save',\n                        className: 'btn-success',\n                        callback: function (e) {\n                            // get form Values\n                            let form = $('#' + config.systemDialogId).find('form');\n\n                            let systemDialogData = $(form).getFormValues();\n\n                            // validate form\n                            form.validator('validate');\n\n                            // check whether the form is valid\n                            let formValid = form.isValidForm();\n\n                            if(formValid === false){\n                                // don't close dialog\n                                return false;\n                            }\n\n                            // calculate new system position ------------------------------------------------\n                            let newPosition = {\n                                x: 0,\n                                y: 0\n                            };\n\n                            let sourceSystem = null;\n\n                            // add new position\n                            if(options.sourceSystem !== undefined){\n\n                                sourceSystem = options.sourceSystem;\n\n                                // get new position\n                                newPosition = System.calculateNewSystemPosition(sourceSystem);\n                            }else{\n                                // check mouse cursor position (add system to map)\n                                newPosition = {\n                                    x: options.position.x,\n                                    y: options.position.y\n                                };\n                            }\n\n                            systemDialogData.position = newPosition;\n\n                            // ------------------------------------------------------------------------------\n\n                            let requestData = {\n                                systemData: systemDialogData,\n                                mapData: {\n                                    id: mapContainer.data('id')\n                                }\n                            };\n\n                            saveSystem(map, requestData, sourceSystem, function(){\n                                bootbox.hideAll();\n                            });\n                            return false;\n                        }\n                    }\n                }\n            });\n\n            // init dialog\n            systemDialog.on('shown.bs.modal', function(e) {\n\n                let modalContent = $('#' + config.systemDialogId);\n\n                // init system select live search  - some delay until modal transition has finished\n                let selectElement = modalContent.find('.' + config.systemDialogSelectClass);\n                selectElement.delay(240).initSystemSelect({\n                    key: 'systemId',\n                    disabledOptions: mapSystemIds\n                });\n            });\n\n            // init system status select\n            let modalFields = $('.bootbox .modal-dialog').find('.pf-editable-system-status');\n\n            modalFields.editable({\n                mode: 'inline',\n                emptytext: 'unknown',\n                onblur: 'submit',\n                showbuttons: false,\n                source: systemStatus,\n                value: defaultSystemStatus,\n                inputclass: config.systemDialogSelectClass\n            });\n        });\n    };\n\n    /**\n     * make a system name/alias editable by x-editable\n     * @param system\n     */\n    let makeEditable = function(system){\n        system = $(system);\n        let headElement = $(system).find('.' + config.systemHeadNameClass);\n\n        headElement.editable({\n            mode: 'popup',\n            type: 'text',\n            name: 'alias',\n            emptytext: system.data('name'),\n            title: 'System alias',\n            placement: 'top',\n            onblur: 'submit',\n            container: 'body',\n            toggle: 'manual',       // is triggered manually on dblClick\n            showbuttons: false\n        });\n\n        headElement.on('save', function(e, params) {\n            // system alias changed -> mark system as updated\n            system.markAsChanged();\n        });\n\n        headElement.on('shown', function(e, editable) {\n            let inputElement =  editable.input.$input.select();\n\n            // \"fake\" timeout until dom rendered\n            setTimeout(function(input){\n                // pre-select value\n                input.select();\n            }, 0, inputElement);\n        });\n    };\n\n    /**\n     * update z-index for a system (dragged systems should be always on top)\n     */\n    $.fn.updateSystemZIndex = function(){\n        return this.each(function(){\n            // increase global counter\n            let newZIndexSystem = config.zIndexCounter++;\n            $(this).css('z-index', newZIndexSystem);\n        });\n    };\n\n    /**\n     * get all relevant data for a connection object\n     * @param connection\n     * @returns {{id: Number, source: Number, sourceName: (*|T|JQuery|{}), target: Number, targetName: (*|T|JQuery), scope: *, type: *, updated: Number}}\n     */\n    let getDataByConnection = function(connection){\n        let source = $(connection.source);\n        let target = $(connection.target);\n\n        let id = connection.getParameter('connectionId');\n        let updated = connection.getParameter('updated');\n\n        let connectionTypes = connection.getType();\n\n        // normalize connection array\n        connectionTypes = $.grep(connectionTypes, function(n){\n            // 'default' is added by jsPlumb by default -_-\n            return ( n.length > 0 && n !== 'default');\n        });\n\n        let data = {\n            id: id ? id : 0,\n            source: parseInt( source.data('id') ),\n            sourceName: source.data('name'),\n            sourceAlias: source.getSystemInfo(['alias']) || source.data('name'),\n            target: parseInt( target.data('id') ),\n            targetName: target.data('name'),\n            targetAlias: target.getSystemInfo(['alias']) || target.data('name'),\n            scope: connection.scope,\n            type: connectionTypes,\n            updated: updated ? updated : 0\n        };\n\n        return data;\n    };\n\n    /**\n     * stores a connection in database\n     * @param connection\n     */\n    let saveConnection = function(connection){\n        if( connection instanceof jsPlumb.Connection ){\n\n            let map = connection._jsPlumb.instance;\n            let mapContainer = $( map.getContainer() );\n\n            let mapId = mapContainer.data('id');\n            let connectionData = getDataByConnection(connection);\n\n            let requestData = {\n                mapData: {\n                    id: mapId\n                },\n                connectionData: connectionData\n            };\n\n            $.ajax({\n                type: 'POST',\n                url: Init.path.saveConnection,\n                data: requestData,\n                dataType: 'json',\n                context: {\n                    connection: connection,\n                    map: map,\n                    mapId: mapId,\n                    oldConnectionData: connectionData\n                }\n            }).done(function(newConnectionData){\n\n                if( !$.isEmptyObject(newConnectionData) ){\n                    let updateCon = false;\n\n                    if(this.oldConnectionData.id > 0){\n                        // connection exists (e.g. drag&drop new target system... (ids should never changed)\n                        let connection = $().getConnectionById(this.mapId, this.oldConnectionData.id);\n                        updateCon = true;\n                    }else{\n                        // new connection, check if connectionId was already updated (webSocket push is faster than ajax callback)\n                        let connection = $().getConnectionById(this.mapId, newConnectionData.id);\n\n                        if(connection){\n                            // connection already updated\n                            this.map.detach(this.connection, {fireEvent: false});\n                        }else{\n                            // .. else update this connection\n                            connection = this.connection;\n                            updateCon = true;\n                        }\n                    }\n\n                    if(updateCon){\n                        // update connection data e.g. \"scope\" has auto detected\n                        connection = updateConnection(connection, this.oldConnectionData, newConnectionData);\n\n                        // new/updated connection should be cached immediately!\n                        updateConnectionCache(this.mapId, connection);\n                    }\n\n                    // connection scope\n                    let scope = MapUtil.getScopeInfoForConnection(newConnectionData.scope, 'label');\n\n                    let title = 'New connection established';\n                    if(this.oldConnectionData.id > 0){\n                        title = 'Connection switched';\n                    }\n\n                    Util.showNotify({title: title, text: 'Scope: ' + scope, type: 'success'});\n                }else{\n                    // some save errors\n                    this.map.detach(this.connection, {fireEvent: false});\n                }\n\n            }).fail(function( jqXHR, status, error) {\n                // remove this connection from map\n                this.map.detach(this.connection, {fireEvent: false});\n\n                let reason = status + ' ' + error;\n                Util.showNotify({title: jqXHR.status + ': saveConnection', text: reason, type: 'warning'});\n                $(document).setProgramStatus('problem');\n            });\n        }\n    };\n\n    /**\n     * delete a connection and all related data\n     * @param connections\n     * @param callback\n     */\n    $.fn.deleteConnections = function(connections, callback){\n        if(connections.length > 0){\n\n            // remove connections from map\n            let removeConnections = function(tempConnections){\n                for(let i = 0; i < tempConnections.length; i++){\n                    // if a connection is manually (drag&drop) detached, the jsPlumb instance does not exist any more\n                    // connection is already deleted!\n                    if(tempConnections[i]._jsPlumb){\n                        tempConnections[i]._jsPlumb.instance.detach(tempConnections[i], {fireEvent: false});\n                    }\n                }\n            };\n\n            // prepare delete request\n            let map = connections[0]._jsPlumb.instance;\n            let mapContainer = $( map.getContainer() );\n\n            let connectionIds = [];\n            // connectionIds for delete request\n            for(let i = 0; i < connections.length; i++){\n                let connectionId = connections[i].getParameter('connectionId');\n                // drag&drop a new connection does not have an id yet, if connection is not established correct\n                if(connectionId !== undefined){\n                    connectionIds[i] = connections[i].getParameter('connectionId');\n                }\n            }\n\n            if(connectionIds.length > 0){\n                let requestData = {\n                    mapId: mapContainer.data('id'),\n                    connectionIds: connectionIds\n                };\n\n                $.ajax({\n                    type: 'POST',\n                    url: Init.path.deleteConnection,\n                    data: requestData,\n                    dataType: 'json',\n                    context: connections\n                }).done(function(data){\n\n                    // remove connections from map\n                    removeConnections(this);\n\n                    // optional callback\n                    if(callback){\n                        callback();\n                    }\n\n                }).fail(function( jqXHR, status, error) {\n                    let reason = status + ' ' + error;\n                    Util.showNotify({title: jqXHR.status + ': deleteSystem', text: reason, type: 'warning'});\n                    $(document).setProgramStatus('problem');\n                });\n            }\n        }\n    };\n\n    /**\n     * load context menu template for map\n     */\n    let initMapContextMenu = function(){\n        let moduleConfig = {\n            name: 'modules/contextmenu',\n            position: $('#' + config.dynamicElementWrapperId)\n        };\n\n        let moduleData = {\n            id: config.mapContextMenuId,\n            items: [\n                {icon: 'fa-street-view', action: 'info', text: 'information'},\n                {icon: 'fa-plus', action: 'add_system', text: 'add system'},\n                {icon: 'fa-object-ungroup', action: 'select_all', text: 'select all'},\n                {icon: 'fa-filter', action: 'filter_scope', text: 'filter scope', subitems: [\n                    {subIcon: '', subAction: 'filter_wh', subText: 'wormhole'},\n                    {subIcon: '', subAction: 'filter_stargate', subText: 'stargate'},\n                    {subIcon: '', subAction: 'filter_jumpbridge', subText: 'jumpbridge'}\n                ]},\n                {divider: true, action: 'delete_systems'},\n                {icon: 'fa-trash', action: 'delete_systems', text: 'delete systems'}\n            ]\n        };\n\n        Render.showModule(moduleConfig, moduleData);\n    };\n\n    /**\n     * load contextmenu template for connections\n     */\n    let initConnectionContextMenu = function(){\n        let moduleConfig = {\n            name: 'modules/contextmenu',\n            position: $('#' + config.dynamicElementWrapperId)\n        };\n\n        let moduleData = {\n            id: config.connectionContextMenuId,\n            items: [\n                {icon: 'fa-plane', action: 'frigate', text: 'frigate hole'},\n                {icon: 'fa-warning', action: 'preserve_mass', text: 'preserve mass'},\n                {icon: 'fa-crosshairs', action: 'change_scope', text: 'change scope', subitems: [\n                    {subIcon: 'fa-minus-circle', subIconClass: '', subAction: 'scope_wh', subText: 'wormhole'},\n                    {subIcon: 'fa-minus-circle', subIconClass: 'txt-color  txt-color-indigoDarkest', subAction: 'scope_stargate', subText: 'stargate'},\n                    {subIcon: 'fa-minus-circle', subIconClass: 'txt-color  txt-color-tealLighter', subAction: 'scope_jumpbridge', subText: 'jumpbridge'}\n\n                ]},\n                {icon: 'fa-reply fa-rotate-180', action: 'change_status', text: 'change status', subitems: [\n                    {subIcon: 'fa-clock-o', subAction: 'wh_eol', subText: 'toggle EOL'},\n                    {subDivider: true},\n                    {subIcon: 'fa-circle', subAction: 'status_fresh', subText: 'stage 1 (fresh)'},\n                    {subIcon: 'fa-adjust', subAction: 'status_reduced', subText: 'stage 2 (reduced)'},\n                    {subIcon: 'fa-circle-o', subAction: 'status_critical', subText: 'stage 3 (critical)'}\n\n                ]},\n                {divider: true, action: 'delete_connection'},\n                {icon: 'fa-trash', action: 'delete_connection', text: 'delete'}\n            ]\n        };\n\n        Render.showModule(moduleConfig, moduleData);\n\n    };\n\n    /**\n     * load contextmenu template for systems\n     */\n    let initSystemContextMenu = function(){\n        let systemStatus = [];\n\n        $.each(Init.systemStatus, function(status, statusData){\n            let tempStatus = {\n                subIcon: 'fa-tag',\n                subIconClass: statusData.class,\n                subAction: 'change_status_' + status,\n                subText: statusData.label\n            };\n            systemStatus.push(tempStatus);\n        });\n\n        let moduleConfig = {\n            name: 'modules/contextmenu',\n            position: $('#' + config.dynamicElementWrapperId)\n        };\n\n        let moduleData = {\n            id: config.systemContextMenuId,\n            items: [\n                {icon: 'fa-plus', action: 'add_system', text: 'add system'},\n                {icon: 'fa-lock', action: 'lock_system', text: 'lock system'},\n                {icon: 'fa-users', action: 'set_rally', text: 'set rally point'},\n                {icon: 'fa-tags', text: 'set status', subitems: systemStatus},\n                {icon: 'fa-reply fa-rotate-180', text: 'waypoints', subitems: [\n                    {subIcon: 'fa-flag-checkered', subAction: 'set_destination', subText: 'set destination'},\n                    {subDivider: true, action: ''},\n                    {subIcon: 'fa-step-backward', subAction: 'add_first_waypoint', subText: 'add new [start]'},\n                    {subIcon: 'fa-step-forward', subAction: 'add_last_waypoint', subText: 'add new [end]'}\n                ]},\n                {divider: true, action: 'delete_system'},\n                {icon: 'fa-trash', action: 'delete_system', text: 'delete system(s)'}\n            ]\n        };\n\n        Render.showModule(moduleConfig, moduleData);\n\n    };\n\n    /**\n     * get hidden menu entry options for a context menu\n     * @param component\n     * @returns {Array}\n     */\n    let getHiddenContextMenuOptions = function(component){\n        let hiddenOptions = [];\n\n        if(component instanceof jsPlumb.Connection){\n            // disable connection menu entries\n\n            let scope = component.scope;\n\n            if(scope === 'stargate'){\n                hiddenOptions.push('frigate');\n                hiddenOptions.push('preserve_mass');\n                hiddenOptions.push('change_status');\n\n                hiddenOptions.push('scope_stargate');\n            }else if(scope === 'jumpbridge'){\n                hiddenOptions.push('frigate');\n                hiddenOptions.push('preserve_mass');\n                hiddenOptions.push('change_status');\n                hiddenOptions.push('scope_jumpbridge');\n            }else if(scope === 'wh'){\n                hiddenOptions.push('scope_wh');\n            }\n\n        }else if( component.hasClass(config.systemClass) ){\n            // disable system menu entries\n            if(component.data('locked') === true){\n                hiddenOptions.push('delete_system');\n            }\n        }\n\n        return hiddenOptions;\n    };\n\n    /**\n     * get active menu entry options for a context menu\n     * @param component\n     * @returns {Array}\n     */\n    let getActiveContextMenuOptions = function(component){\n        let activeOptions = [];\n\n        if(component instanceof jsPlumb.Connection){\n            let scope = component.scope;\n\n            if(component.hasType('wh_eol') === true){\n                activeOptions.push('wh_eol');\n            }\n\n            if(component.hasType('frigate') === true){\n                activeOptions.push('frigate');\n            }\n            if(component.hasType('preserve_mass') === true){\n                activeOptions.push('preserve_mass');\n            }\n            if(component.hasType('wh_reduced') === true){\n                activeOptions.push('status_reduced');\n            }else if(component.hasType('wh_critical') === true){\n                activeOptions.push('status_critical');\n            }else{\n                // not reduced is default\n                activeOptions.push('status_fresh');\n            }\n\n        }else if( component.hasClass(config.mapClass) ){\n\n            // active map menu entries\n            if(component.data('filter_scope') === 'wh'){\n                activeOptions.push('filter_wh');\n            }\n            if(component.data('filter_scope') === 'stargate'){\n                activeOptions.push('filter_stargate');\n            }\n            if(component.data('filter_scope') === 'jumpbridge'){\n                activeOptions.push('filter_jumpbridge');\n            }\n        }else if( component.hasClass(config.systemClass) ){\n            // active system menu entries\n            if(component.data('locked') === true){\n                activeOptions.push('lock_system');\n            }\n            if(component.data('rallyUpdated') > 0){\n                activeOptions.push('set_rally');\n            }\n        }\n\n        return activeOptions;\n    };\n\n    /**\n     * set up all actions that can be preformed on a system\n     * @param map\n     * @param system\n     */\n    let setSystemObserver = function(map, system){\n        system = $(system);\n\n        // get map container\n        let mapContainer = $( map.getContainer() );\n        let systemHeadExpand = $( system.find('.' + config.systemHeadExpandClass) );\n        let systemBody = $( system.find('.' + config.systemBodyClass) );\n\n        // map overlay will be set on \"drag\" start\n        let mapOverlayTimer = null;\n\n        // make system draggable\n        map.draggable(system, {\n            containment: 'parent',\n            constrain: true,\n            //scroll: true,                                             // not working because of customized scrollbar\n            filter: '.' + config.systemHeadNameClass,                   // disable drag on \"system name\"\n            snapThreshold: MapUtil.config.mapSnapToGridDimension,       // distance for grid snapping \"magnet\" effect (optional)\n            start: function(params){\n                let dragSystem = $(params.el);\n\n                mapOverlayTimer = dragSystem.getMapOverlay('timer');\n\n                // start map update timer\n                mapOverlayTimer.startMapUpdateCounter();\n\n                // check if grid-snap is enable -> this enables napping for !CURRENT! Element\n                if( mapContainer.hasClass(MapUtil.config.mapGridClass) ){\n                    params.drag.params.grid = [MapUtil.config.mapSnapToGridDimension, MapUtil.config.mapSnapToGridDimension];\n                }else{\n                    delete( params.drag.params.grid );\n                }\n\n                // stop \"system click event\" right after drop event is finished\n                dragSystem.addClass('no-click');\n\n                // drag system is not always selected\n                let selectedSystems = mapContainer.getSelectedSystems().get();\n                selectedSystems = selectedSystems.concat( dragSystem.get() );\n                selectedSystems = $.unique( selectedSystems );\n\n                // hide tooltip\n                $(selectedSystems).toggleSystemTooltip('hide', {});\n\n                // move them to the \"top\"\n                $(selectedSystems).updateSystemZIndex();\n            },\n            drag: function(p){\n                // start map update timer\n                mapOverlayTimer.startMapUpdateCounter();\n\n                // update system positions for \"all\" systems that are effected by drag&drop\n                // this requires \"magnet\" feature to be active! (optional)\n                MagnetizerWrapper.executeAtEvent(map, p.e);\n            },\n            stop: function(params){\n                let dragSystem = $(params.el);\n\n                // start map update timer\n                mapOverlayTimer.startMapUpdateCounter();\n\n                setTimeout(function(){\n                    dragSystem.removeClass('no-click');\n                }, Init.timer.DBL_CLICK + 50);\n\n                // show tooltip\n                dragSystem.toggleSystemTooltip('show', {show: true});\n\n                // mark as \"changed\"\n                dragSystem.markAsChanged();\n\n                // set new position for popover edit field (system name)\n                let newPosition = dragSystem.position();\n\n                let placement = 'top';\n                if(newPosition.top < 100){\n                    placement = 'bottom';\n                }\n                if(newPosition.left < 100){\n                    placement = 'right';\n                }\n                dragSystem.find('.' + config.systemHeadNameClass).editable('option', 'placement', placement);\n\n                // drag system is not always selected\n                let selectedSystems = mapContainer.getSelectedSystems().get();\n                selectedSystems = selectedSystems.concat( dragSystem.get() );\n                selectedSystems = $.unique( selectedSystems );\n\n                for(let i = 0; i < selectedSystems.length; i++){\n                    let tempSystem = $(selectedSystems[i]);\n                    // repaint connections -> just in case something fails...\n                    map.revalidate( tempSystem.attr('id') );\n                }\n            }\n        });\n\n        if(system.data('locked') === true){\n            map.setDraggable(system, false);\n        }\n\n        // init system tooltips =============================================================================\n        let systemTooltipOptions = {\n            toggle: 'tooltip',\n            placement: 'right',\n            container: 'body',\n            viewport: system.id\n        };\n\n        system.find('.fa').tooltip(systemTooltipOptions);\n\n        // init system body expand ==========================================================================\n        systemHeadExpand.hoverIntent(function(e){\n            // hover in\n            let hoverSystem = $(this).parents('.' + config.systemClass);\n            let hoverSystemId = hoverSystem.attr('id');\n\n            // bring system in front (increase zIndex)\n            hoverSystem.updateSystemZIndex();\n\n            // get ship counter and calculate expand height\n            let userCount = parseInt( hoverSystem.data('userCount') );\n\n            let expandHeight = userCount * config.systemBodyItemHeight;\n\n            systemBody.velocity('stop').velocity(\n                {\n                    height: expandHeight + 'px',\n                    width: 150,\n                    'min-width': '150px'\n                },{\n                    easing: 'easeInOutQuart',\n                    duration: 150,\n                    progress: function(){\n                        // repaint connections of current system\n                        map.revalidate( hoverSystemId );\n                    },\n                    complete: function(){\n                        map.revalidate( hoverSystemId );\n\n                        // extend player name element\n                        $(this).find('.' + config.systemBodyItemNameClass).css({width: '80px'});\n\n                        $(this).find('.' + config.systemBodyRightClass).velocity('stop').velocity({\n                            opacity: 1\n                        },{\n                            duration: 150,\n                            display: 'auto'\n                        });\n                    }\n                }\n            );\n\n        }, function(e){\n            // hover out\n            let hoverSystem = $(this).parents('.' + config.systemClass);\n            let hoverSystemId = hoverSystem.attr('id');\n\n            // stop animation (prevent visual bug if user spams hover-icon [in - out])\n            systemBody.velocity('stop');\n\n            // reduce player name element back to \"normal\" size (css class width is used)\n            systemBody.find('.' + config.systemBodyItemNameClass).css({width: ''});\n\n            systemBody.find('.' + config.systemBodyRightClass).velocity('stop').velocity( {\n                opacity: 0,\n                'min-width': '0px'\n            },{\n                easing: 'easeInOutQuart',\n                duration: 150,\n                display: 'none',\n                complete: function(){\n                    systemBody.velocity('stop').velocity('reverse', {\n                        complete: function(){\n                            // overwrite \"complete\" function from first \"hover\"-open\n                            map.revalidate( hoverSystemId );\n                        }\n                    });\n                }\n            });\n\n        });\n\n        // context menu =====================================================================================\n\n        // trigger context menu\n        system.off('contextmenu').on('contextmenu', function(e){\n            e.preventDefault();\n            e.stopPropagation();\n\n            let systemElement = $(this);\n\n            // hide all map contextmenu options\n            let hideOptions = getHiddenContextMenuOptions(systemElement);\n\n            let activeOptions = getActiveContextMenuOptions(systemElement);\n\n            $(e.target).trigger('pf:openContextMenu', [e, this, hideOptions, activeOptions]);\n            return false;\n        });\n\n        // init context menu\n        system.contextMenu({\n            menuSelector: '#' + config.systemContextMenuId,\n            menuSelected: function (params) {\n\n                // click action\n                let action = params.selectedMenu.attr('data-action');\n\n                // current system\n                let currentSystem = $(params.component);\n\n                // system name\n                let currentSystemName = currentSystem.getSystemInfo( ['alias'] );\n\n                let systemData = {};\n\n                switch(action){\n                    case 'add_system':\n                        // add a new system\n                        showNewSystemDialog(map, {sourceSystem: currentSystem} );\n\n                        break;\n                    case 'lock_system':\n                        // lock system\n                        currentSystem.toggleLockSystem(true, {map: map});\n\n                        // repaint connections, -> system changed its size!\n                        map.repaint( currentSystem );\n\n                        currentSystem.markAsChanged();\n                        break;\n                    case 'set_rally':\n                        // toggle rally point\n                        if( !currentSystem.data( 'rallyUpdated' ) ){\n                            $.fn.showRallyPointDialog(currentSystem);\n                        }else{\n                            // remove rally point\n                            currentSystem.setSystemRally(0);\n                            currentSystem.markAsChanged();\n                        }\n                        break;\n                    case 'change_status_unknown':\n                    case 'change_status_friendly':\n                    case 'change_status_occupied':\n                    case 'change_status_hostile':\n                    case 'change_status_empty':\n                    case 'change_status_unscanned':\n                        // change system status\n                        currentSystem.getMapOverlay('timer').startMapUpdateCounter();\n\n                        let statusString = action.split('_');\n\n                        currentSystem.setSystemStatus(statusString[2]);\n\n                        currentSystem.markAsChanged();\n                        break;\n                    case 'delete_system':\n                        // delete this system AND delete selected systems as well\n                        let selectedSystems = mapContainer.getSelectedSystems();\n                        $.merge(selectedSystems, currentSystem);\n                        $.uniqueSort(selectedSystems);\n                        $.fn.showDeleteSystemDialog(map, selectedSystems);\n                        break;\n                    case 'set_destination':\n                    case 'add_first_waypoint':\n                    case 'add_last_waypoint':\n                        systemData = system.getSystemData();\n                        Util.setDestination(systemData, action);\n                        break;\n                }\n            }\n        });\n\n        // system click events ==============================================================================\n        let double = function(e){\n            let system = $(this);\n            let headElement = $(system).find('.' + config.systemHeadNameClass);\n\n            // update z-index for system, editable field should be on top\n            // move them to the \"top\"\n            $(system).updateSystemZIndex();\n\n            // show \"set alias\" input (x-editable)\n            headElement.editable('show');\n        };\n\n        let single = function(e){\n\n            // check if click was performed on \"popover\" (x-editable)\n            let popoverClick = false;\n            if( $(e.target).parents('.popover').length ){\n                popoverClick = true;\n            }\n\n            // continue if click was *not* on a popover dialog of a system\n            if( !popoverClick ){\n                let system = $(this);\n\n                // check if system is locked for \"click\" events\n                if( !system.hasClass('no-click') ){\n                    // left mouse button\n                    if(e.which === 1){\n                        if(! system.hasClass('no-click')){\n                            if(e.ctrlKey === true){\n                                // select system\n                                system.toggleSelectSystem(map);\n                            }else{\n                                system.showSystemInfo(map);\n                            }\n                        }\n                    }\n                }\n            }\n\n        };\n\n        system.singleDoubleClick(single, double);\n    };\n\n    /**\n     * mark a dom element (map, system, connection) as changed\n     */\n    $.fn.markAsChanged = function(){\n        return this.each(function(){\n            let element = $(this);\n\n            if( element.hasClass(config.systemClass) ){\n                // system element\n                element.data('changed', true);\n            }else{\n                // connection element\n                this.setParameter('changed', true);\n            }\n        });\n    };\n\n    /**\n     * check if an dom element (system, connection) has changed\n     * @returns {boolean}\n     */\n    $.fn.hasChanged = function(){\n        let element = $(this);\n        let changed = false;\n\n        if( element.hasClass(config.systemClass) ){\n            // system element\n            changed = element.data('changed') || false;\n        }else{\n            // connection element\n            changed = this[0].getParameter('changed') || false;\n        }\n\n        return changed;\n    };\n\n    /**\n     * triggers the \"showSystemInfo\" event, that is responsible for initializing the \"map info\" panel\n     * @param map\n     */\n    $.fn.showSystemInfo = function(map){\n        let system = $(this);\n\n        // activate system\n        markSystemActive(map, system);\n\n        // get parent Tab Content and fire update event\n        let tabContentElement = MapUtil.getTabContentElementByMapElement( system );\n\n        // collect all required data from map module to update the info element\n        // store them global and assessable for each module\n        let currentSystemData = {\n            systemData: system.getSystemData(),\n            mapId: parseInt( system.attr('data-mapid') )\n        };\n\n        Util.setCurrentSystemData(currentSystemData);\n\n        $(tabContentElement).trigger('pf:drawSystemModules');\n    };\n\n    /**\n     * select all (selectable) systems on a mapElement\n     */\n    $.fn.selectAllSystems = function(){\n        return this.each(function(){\n            let mapElement = $(this);\n            let map = getMapInstance(mapElement.data('id'));\n\n            let allSystems =  mapElement.find('.' + config.systemClass + ':not(.' + config.systemSelectedClass + ')');\n\n            // filter non-locked systems\n            allSystems = allSystems.filter(function(i, el){\n                return ( $(el).data('locked') !== true );\n            });\n\n            allSystems.toggleSelectSystem(map);\n\n            Util.showNotify({title: allSystems.length + ' systems selected', type: 'success'});\n\n        });\n    };\n\n    /**\n     * toggle selectable status of a system\n     */\n    $.fn.toggleSelectSystem = function(map){\n\n        return this.each(function(){\n            let system = $(this);\n\n            if( system.data('locked') !== true ){\n\n                if( system.hasClass( config.systemSelectedClass ) ){\n                    system.removeClass( config.systemSelectedClass );\n\n                    map.removeFromDragSelection(system);\n                }else{\n                    system.addClass( config.systemSelectedClass );\n                    map.addToDragSelection(system);\n                }\n            }\n        });\n    };\n\n    /**\n     * toggle log status of a system\n     * @param poke\n     * @param options\n     */\n    $.fn.toggleLockSystem = function(poke, options){\n\n        let system = $(this);\n\n        let map = options.map;\n\n        let hideNotification = false;\n        if(options.hideNotification === true){\n            hideNotification = true;\n        }\n\n        let hideCounter = false;\n        if(options.hideCounter === true){\n            hideCounter = true;\n        }\n\n        let systemName = system.getSystemInfo( ['alias'] );\n\n        if( system.data( 'locked' ) === true ){\n            system.data('locked', false);\n            system.removeClass( config.systemLockedClass );\n\n            // enable draggable\n            map.setDraggable(system, true);\n\n            if(! hideNotification){\n                Util.showNotify({title: 'System unlocked', text: systemName, type: 'unlock'});\n            }\n        }else{\n            system.data('locked', true);\n            system.addClass( config.systemLockedClass );\n\n            // enable draggable\n            map.setDraggable(system, false);\n\n            if(! hideNotification){\n                Util.showNotify({title: 'System locked', text: systemName,  type: 'lock'});\n            }\n        }\n\n        // repaint connections\n        map.revalidate( system.attr('id') );\n\n\n        if(! hideCounter){\n            $(system).getMapOverlay('timer').startMapUpdateCounter();\n        }\n\n    };\n\n    /**\n     * get a new jsPlumb map instance or or get a cached one for update\n     * @param mapId\n     * @returns {*}\n     */\n    let getMapInstance = function(mapId){\n\n        if(typeof activeInstances[mapId] !== 'object'){\n            // create new instance\n            jsPlumb.Defaults.LogEnabled = true;\n\n            let newJsPlumbInstance =  jsPlumb.getInstance({\n                Anchor: 'Continuous',                                               // anchors on each site\n                Container: null,                                                    // will be set as soon as container is connected to DOM\n                PaintStyle: {\n                    lineWidth: 4,                                                   // width of a Connector's line. An integer.\n                    strokeStyle: 'red',                                             // color for a Connector\n                    outlineColor: 'red',                                            // color of the outline for an Endpoint or Connector. see fillStyle examples.\n                    outlineWidth: 2                                                 // width of the outline for an Endpoint or Connector. An integer.\n                },\n                Connector: [ 'Bezier', { curviness: 40 } ],                         // default connector style (this is not used!) all connections have their own style (by scope)\n                Endpoint: [ 'Dot', { radius: 5 } ],\n                ReattachConnections: false,                                         // re-attach connection if dragged with mouse to \"nowhere\"\n                Scope: Init.defaultMapScope,                                        // default map scope for connections\n                LogEnabled: true\n            });\n\n            // register all available connection types ------------------------------------------------------\n            newJsPlumbInstance.registerConnectionTypes(globalMapConfig.connectionTypes);\n\n            // event after a new connection is established --------------------------\n            newJsPlumbInstance.bind('connection', function(info, e) {\n                // set connection observer\n                setConnectionObserver(newJsPlumbInstance, info.connection);\n            });\n\n            // event after connection moved -----------------------------------------------------------------\n            newJsPlumbInstance.bind('connectionMoved', function(info, e) {\n\n            });\n\n            // event after DragStop a connection or new connection ------------------------------------------\n            newJsPlumbInstance.bind('beforeDrop', function(info) {\n                let connection = info.connection;\n                let dropEndpoint = info.dropEndpoint;\n                let sourceId = info.sourceId;\n                let targetId = info.targetId;\n\n                // lock the target system for \"click\" events\n                // to prevent loading system information\n                let sourceSystem = $('#' + sourceId);\n                let targetSystem = $('#' + targetId);\n                sourceSystem.addClass('no-click');\n                targetSystem.addClass('no-click');\n                setTimeout(function(){\n                    sourceSystem.removeClass('no-click');\n                    targetSystem.removeClass('no-click');\n                }, Init.timer.DBL_CLICK + 50);\n\n                // loop connection not allowed\n                if(sourceId === targetId){\n                    console.warn('Source/Target systems are identical');\n                    return false;\n                }\n\n                // connection can not be dropped on an endpoint that already has other connections on it\n                if(dropEndpoint.connections.length > 0){\n                    console.warn('Endpoint already occupied');\n                    return false;\n                }\n\n                // set \"default\" connection status only for NEW connections\n                if(!connection.suspendedElement){\n                    MapUtil.setConnectionWHStatus(connection, MapUtil.getDefaultConnectionTypeByScope(connection.scope) );\n                }\n\n                // prevent multiple connections between same systems\n                let connections = MapUtil.checkForConnection(newJsPlumbInstance, sourceId, targetId);\n                if(connections.length > 1){\n                    bootbox.confirm('Connection already exists. Do you really want to add an additional one?', function(result) {\n                        if(!result){\n                            connection._jsPlumb.instance.detach(connection);\n                        }\n                    });\n                }\n\n                // always save the new connection\n                saveConnection(connection);\n\n                return true;\n            });\n\n            // event before detach (existing connection) ----------------------------------------------------\n            newJsPlumbInstance.bind('beforeStartDetach', function(info) {\n                return true;\n            });\n\n            // event before detach connection ---------------------------------------------------------------\n            newJsPlumbInstance.bind('beforeDetach', function(info) {\n                return true;\n            });\n\n            newJsPlumbInstance.bind('connectionDetached', function(info, e){\n                // a connection is manually (drag&drop) detached! otherwise this event should not be send!\n                let connection = info.connection;\n                $().deleteConnections([connection]);\n            });\n\n            newJsPlumbInstance.bind('checkDropAllowed', function(params){\n                let sourceEndpoint = params.sourceEndpoint;\n                let targetEndpoint = params.targetEndpoint;\n\n                // connections can not be attached to foreign endpoints\n                // the only endpoint available is the endpoint from where the connection was dragged away (re-attach)\n                return (targetEndpoint.connections.length === 0);\n            });\n\n            activeInstances[mapId] = newJsPlumbInstance;\n        }\n\n        return activeInstances[mapId];\n    };\n\n    /**\n     * set observer for a map container\n     * @param map\n     */\n    let setMapObserver = function(map){\n        // get map container\n        let mapContainer = $( map.getContainer() );\n\n        mapContainer.bind('contextmenu', function(e){\n            e.preventDefault();\n            e.stopPropagation();\n\n            // make sure map is clicked and NOT a connection\n            if($(e.target).hasClass( config.mapClass )){\n                let mapElement = $(this);\n\n                let hideOptions = getHiddenContextMenuOptions(mapElement);\n\n                let activeOptions = getActiveContextMenuOptions(mapElement);\n\n                $(e.target).trigger('pf:openContextMenu', [e, mapElement, hideOptions, activeOptions]);\n            }\n\n            return false;\n        });\n\n        mapContainer.contextMenu({\n            menuSelector: '#' + config.mapContextMenuId,\n            menuSelected: function (params) {\n\n                // click action\n                let action = params.selectedMenu.attr('data-action');\n\n                // current map\n                let currentMapElement = $(params.component);\n\n                let currentMapId = parseInt( currentMapElement.data('id') );\n\n                // get map instance\n                let currentMap = getMapInstance(currentMapId);\n\n                // click position\n                let position = params.position;\n\n                switch(action){\n                    case 'add_system':\n                        // add new system dialog\n                        showNewSystemDialog(currentMap, {position: position});\n                        break;\n                    case 'select_all':\n                        currentMapElement.selectAllSystems();\n                        break;\n                    case 'filter_wh':\n                    case 'filter_stargate':\n                    case 'filter_jumpbridge':\n                        // filter (show/hide)\n                        let filterScope = action.split('_')[1];\n\n                        // scope label\n                        let filterScopeLabel = MapUtil.getScopeInfoForMap(filterScope, 'label');\n\n                        let showScope = true;\n                        if(\n                            currentMapElement.data('filter_scope') &&\n                            currentMapElement.data('filter_scope') === filterScope\n                        ){\n                            // remove scope filter\n                            currentMapElement.data('filter_scope', false);\n                            showScope = false;\n\n                            // hide map overlay filter info\n                            currentMapElement.getMapOverlay('info').updateOverlayIcon('filter', 'hide');\n                        }else{\n                            // set scope filter\n                            currentMapElement.data('filter_scope', filterScope);\n\n                            // show map overlay filter info\n                            currentMapElement.getMapOverlay('info').updateOverlayIcon('filter', 'show');\n                        }\n\n                        let filteredConnections = currentMap.getAllConnections(filterScope);\n\n                        for(let i = 0; i < filteredConnections.length; i++){\n                            let tempConnection = filteredConnections[i];\n\n                            let tempEndpoints = tempConnection.endpoints;\n                            let setVisible = true;\n\n                            if(\n                                showScope &&\n                                tempConnection.scope !== filterScope\n                            ){\n                                setVisible = false;\n                            }\n\n\n                            for(let j = 0; j < tempEndpoints.length; j++){\n                                tempEndpoints[j].setVisible( setVisible );\n                            }\n                        }\n\n                        Util.showNotify({title: 'Scope filter changed', text: filterScopeLabel, type: 'success'});\n\n                        break;\n                    case 'delete_systems':\n                        // delete all selected systems with its connections\n                        let selectedSystems = currentMapElement.getSelectedSystems();\n                        $.fn.showDeleteSystemDialog(currentMap, selectedSystems);\n                        break;\n                    case 'info':\n                        // open map info dialog\n                        $(document).triggerMenuEvent('ShowMapInfo', {tab: 'information'});\n                        break;\n\n                }\n            }\n        });\n\n        // init drag-frame selection\n        mapContainer.dragToSelect({\n            selectOnMove: true,\n            selectables: '.' + config.systemClass,\n            onHide: function (selectBox, deselectedSystems) {\n                let selectedSystems = mapContainer.getSelectedSystems();\n\n                if(selectedSystems.length > 0){\n                    // make all selected systems draggable\n                    Util.showNotify({title: selectedSystems.length + ' systems selected', type: 'success'});\n\n                    // convert former group draggable systems so single draggable\n                    for(let i = 0; i < selectedSystems.length; i++){\n                        map.addToDragSelection( selectedSystems[i] );\n                    }\n                }\n\n                // convert former group draggable systems so single draggable\n                for(let j = 0; j < deselectedSystems.length; j++){\n                    map.removeFromDragSelection( deselectedSystems[j] );\n                }\n            },\n            onShow: function(){\n                $(document).trigger('pf:closeMenu', [{}]);\n            },\n            onRefresh: function(){\n            }\n        });\n\n        // catch events =====================================================================================\n\n        // toggle global map option (e.g. \"grid snap\", \"magnetization\")\n        mapContainer.on('pf:menuMapOption', function(e, mapOption){\n            let mapElement = $(this);\n\n            // get map menu config options\n            let data = MapUtil.mapOptions[mapOption.option];\n\n            let promiseStore = MapUtil.getLocaleData('map', mapElement.data('id') );\n            promiseStore.then(function(dataStore) {\n                let notificationText = 'disabled';\n                let button = $('#' + this.data.buttonId);\n                let dataExists = false;\n\n                if(\n                    dataStore &&\n                    dataStore[this.mapOption.option]\n                ){\n                    dataExists = true;\n                }\n\n                if(dataExists === mapOption.toggle){\n\n                    // toggle button class\n                    button.removeClass('active');\n\n                    // toggle map class (e.g. for grid)\n                    if(this.data.class){\n                        this.mapElement.removeClass( MapUtil.config[this.data.class] );\n                    }\n\n                    // call optional jQuery extension on mapElement\n                    if(this.data.onDisable){\n                        $.fn[ this.data.onDisable ].apply( this.mapElement );\n                    }\n\n                    // show map overlay info icon\n                    this.mapElement.getMapOverlay('info').updateOverlayIcon(this.mapOption.option, 'hide');\n\n                    // delete map option\n                    MapUtil.deleteLocalData('map', this.mapElement.data('id'), this.mapOption.option );\n                }else{\n\n                    // toggle button class\n                    button.addClass('active');\n\n                    // toggle map class (e.g. for grid)\n                    if(this.data.class){\n                        this.mapElement.addClass( MapUtil.config[this.data.class] );\n                    }\n\n                    // call optional jQuery extension on mapElement\n                    if(this.data.onEnable){\n                        $.fn[ this.data.onEnable ].apply( this.mapElement );\n                    }\n\n                    // hide map overlay info icon\n                    this.mapElement.getMapOverlay('info').updateOverlayIcon(this.mapOption.option, 'show');\n\n                    // store map option\n                    MapUtil.storeLocalData('map', this.mapElement.data('id'), this.mapOption.option, 1 );\n\n                    notificationText = 'enabled';\n                }\n\n                if(mapOption.toggle){\n                    Util.showNotify({title: this.data.description, text: notificationText, type: 'info'});\n                }\n            }.bind({\n                mapOption: mapOption,\n                data: data,\n                mapElement: mapElement\n            }));\n        });\n\n        // delete system event\n        // triggered from \"map info\" dialog scope\n        mapContainer.on('pf:deleteSystems', function(e, data){\n            System.deleteSystems(map, data.systems, data.callback);\n        });\n\n        // triggered from \"header\" link (if user is active in one of the systems)\n        mapContainer.on('pf:menuSelectSystem', function(e, data){\n            let tempMapContainer = $(this);\n            let systemId = MapUtil.getSystemId(tempMapContainer.data('id'), data.systemId);\n            let system = $(this).find('#' + systemId);\n\n            if(system.length === 1){\n                // scroll to system\n                let tempMapWrapper = tempMapContainer.parents('.' + config.mapWrapperClass);\n                tempMapWrapper.mCustomScrollbar('scrollTo', system);\n\n                // select system\n                system.showSystemInfo(map);\n            }\n        });\n\n        // triggered when map lock timer (interval) was cleared\n        mapContainer.on('pf:unlocked', function(){\n            let mapElement = $(this);\n            let mapId = mapElement.data('id');\n\n            // check if there was a mapUpdate during map was locked\n            let mapQueueIndex = mapUpdateQueue.indexOf(mapId);\n            if(mapQueueIndex !== -1){\n                // get current mapConfig\n                let mapConfig = Util.getCurrentMapData(mapId);\n\n                if(mapConfig){\n                    // map data is available => update map\n                    updateMap(mapConfig);\n                }\n\n                // update done -> clear mapId from mapUpdateQueue\n                mapUpdateQueue.splice(mapQueueIndex, 1);\n            }\n        });\n\n        // update \"local\" overlay for this map\n        mapContainer.on('pf:updateLocal', function(e, userData){\n            let mapElement = $(this);\n            let mapOverlay = mapElement.getMapOverlay('local');\n\n            let currentCharacterLog = Util.getCurrentCharacterLog();\n            let currentMapData = Util.getCurrentMapData(userData.config.id);\n            let clearLocal = true;\n\n            if(\n                currentMapData &&\n                currentCharacterLog &&\n                currentCharacterLog.system\n            ){\n                let currentSystemData = currentMapData.data.systems.filter(function (system) {\n                    return system.systemId === currentCharacterLog.system.id;\n                });\n\n                if(currentSystemData.length){\n                    // current user system is on this map\n                    currentSystemData = currentSystemData[0];\n\n                    // check for active users \"nearby\" (x jumps radius)\n                    let nearBySystemData = Util.getNearBySystemData(currentSystemData, currentMapData, MapUtil.config.defaultLocalJumpRadius);\n                    let nearByCharacterData = Util.getNearByCharacterData(nearBySystemData, userData.data.systems);\n\n                    // update \"local\" table in overlay\n                    mapOverlay.updateLocalTable(currentSystemData, nearByCharacterData);\n                    clearLocal = false;\n                }\n            }\n\n            if(clearLocal){\n                mapOverlay.clearLocalTable();\n            }\n\n        });\n    };\n\n    /**\n     * mark a system as active\n     * @param map\n     * @param system\n     */\n    let markSystemActive = function(map, system){\n\n        // deactivate all systems in map\n        let mapContainer = $( map.getContainer() );\n\n        mapContainer.find('.' + config.systemClass).removeClass(config.systemActiveClass);\n\n        // set current system active\n        system.addClass(config.systemActiveClass);\n    };\n\n    /**\n     * get system data out of its object\n     * @param info\n     * @returns {*}\n     */\n    $.fn.getSystemInfo = function(info){\n        let systemInfo = [];\n\n        for(let i = 0; i < info.length; i++){\n            switch(info[i]){\n                case 'alias':\n                    // get current system alias\n                    let systemHeadNameElement = $(this).find('.' + config.systemHeadNameClass);\n                    let alias = '';\n                    if( systemHeadNameElement.hasClass('editable') ){\n                        // xEditable is initiated\n                        alias = systemHeadNameElement.editable('getValue', true);\n                    }\n\n                    systemInfo.push(alias );\n                    break;\n                default:\n                    systemInfo.push('bad system query');\n            }\n\n        }\n\n        if(systemInfo.length === 1){\n            return systemInfo[0];\n        }else{\n            return systemInfo;\n        }\n    };\n\n    /**\n     * updates all systems on map with current user Data (all users on this map)\n     * update the Data of the user that is currently viewing the map (if available)\n     * @param userData\n     * @returns {boolean}\n     */\n    $.fn.updateUserData = function(userData){\n\n        let returnStatus = true;\n\n        // get new map instance or load existing\n        let map = getMapInstance(userData.config.id);\n\n        let mapElement = map.getContainer();\n\n        // container must exist! otherwise systems can not be updated\n        if(mapElement !== undefined){\n\n            mapElement = $(mapElement);\n\n            // get current character log data\n            let characterLogExists = false;\n            let currentCharacterLog = Util.getCurrentCharacterLog();\n\n            // check if map is frozen\n            if(mapElement.data('frozen') === true){\n                return returnStatus;\n            }\n\n            // data for header update\n            let headerUpdateData = {\n                mapId: userData.config.id,\n                userCount: 0                        // active user in a map\n            };\n\n            if(\n                currentCharacterLog &&\n                currentCharacterLog.system\n            ){\n                characterLogExists = true;\n                headerUpdateData.currentSystemName = currentCharacterLog.system.name;\n            }\n\n            // check if current user was found on the map\n            let currentUserOnMap = false;\n\n            // get all systems\n            let systems = mapElement.find('.' + config.systemClass);\n\n            for(let i = 0; i < systems.length; i++){\n                // get user Data for System\n\n                let system = $( systems[i] );\n\n                let systemId = $(system).data('systemId');\n\n                let tempUserData = null;\n\n                // check if user is currently in \"this\" system\n                let currentUserIsHere = false;\n\n                let j = userData.data.systems.length;\n\n                // search backwards to avoid decrement the counter after splice()\n                while (j--) {\n                    let systemData = userData.data.systems[j];\n\n                    // check if any user is in this system\n                    if (systemId === systemData.id) {\n                        tempUserData = systemData;\n\n                        // add  \"user count\" to \"total map user count\"\n                        headerUpdateData.userCount += tempUserData.user.length;\n\n                        // remove system from \"search\" array -> speed up loop\n                        userData.data.systems.splice(j, 1);\n                    }\n                }\n\n                // the current user can only be in a single system ------------------------------------------\n                if(\n                    characterLogExists &&\n                    currentCharacterLog.system.id === systemId\n                ){\n                    if( !currentUserOnMap ){\n                        currentUserIsHere = true;\n                        currentUserOnMap = true;\n\n                        // set current location data for header update\n                        headerUpdateData.currentSystemId =  $(system).data('id');\n                        headerUpdateData.currentSystemName = currentCharacterLog.system.name;\n                    }\n                }\n\n                system.updateSystemUserData(map, tempUserData, currentUserIsHere);\n            }\n\n            // trigger document event -> update header\n            $(document).trigger('pf:updateHeaderMapData', headerUpdateData);\n        }\n\n        return returnStatus;\n    };\n\n    /**\n     * collect all map data for export/save for a map\n     * this function returns the \"client\" data NOT the \"server\" data for a map\n     * @param options\n     * @returns {*}\n     */\n    $.fn.getMapDataFromClient = function(options){\n        let mapElement = $(this);\n        let map = getMapInstance( mapElement.data('id') );\n        let mapData = {};\n\n        // check if there is an active map counter that prevents collecting map data (locked map)\n        let interval = mapElement.getMapOverlayInterval();\n\n        if(\n            ! interval ||\n            options.forceData === true\n        ){\n\n            // map config -----------------------------------------------------------------------------------\n            mapData.config = {\n                id: parseInt( mapElement.data('id') ),\n                name: mapElement.data('name'),\n                scope: {\n                    id: parseInt( mapElement.data('scopeId') )\n                },\n                icon: mapElement.data('icon'),\n                type: {\n                    id: parseInt( mapElement.data('typeId') )\n                },\n                created: parseInt( mapElement.data('created') ),\n                updated: parseInt( mapElement.data('updated') ),\n            };\n\n            // map data -------------------------------------------------------------------------------------\n            let data = {};\n\n            // systems data ---------------------------------------------------------------------------------\n            let systemsData = [];\n            let systems = mapElement.getSystems();\n\n            for(let i = 0; i < systems.length; i++){\n                let tempSystem = $(systems[i]);\n\n                // check if system data should be added\n                let addSystemData = true;\n                if(\n                    options.getAll !== true &&\n                    options.checkForChange === true &&\n                    !tempSystem.hasChanged()\n                ){\n                    addSystemData = false;\n                }\n\n                if(addSystemData){\n                    systemsData.push( tempSystem.getSystemData() );\n                }\n            }\n\n            data.systems = systemsData;\n\n            // connections ----------------------------------------------------------------------------------\n            let connections = map.getAllConnections();\n            let connectionsFormatted = [];\n\n            // format connections\n            for(let j = 0; j < connections.length; j++){\n                let tempConnection = connections[j];\n                let connectionData = getDataByConnection(tempConnection);\n\n                // only add valid connections (id is required, this is not the case if connection is new)\n                if(connectionData.id > 0){\n                    // check if connection data should be added\n                    let addConnectionData = true;\n                    if(\n                        options.getAll !== true &&\n                        options.checkForChange === true &&\n                        !$(tempConnection).hasChanged()\n                    ){\n                        addConnectionData = false;\n                    }\n\n\n                    if(addConnectionData){\n                        connectionsFormatted.push( connectionData );\n                    }\n\n                    // add to cache\n                    updateConnectionCache(mapData.config.id, tempConnection);\n                }\n            }\n\n            data.connections = connectionsFormatted;\n\n            mapData.data = data;\n        }else{\n            return false;\n        }\n\n        return mapData;\n    };\n\n    /**\n     * get all relevant data for a system object\n     * @returns {{}}\n     */\n    $.fn.getSystemData = function(){\n        let system = $(this);\n\n        let systemData = {};\n        systemData.id = parseInt( system.data('id') );\n        systemData.systemId = parseInt( system.data('systemId') );\n        systemData.name = system.data('name');\n        systemData.alias = system.getSystemInfo(['alias']);\n        systemData.effect = system.data('effect');\n        systemData.type = {\n            id: system.data('typeId')\n        };\n        systemData.security = system.data('security');\n        systemData.trueSec = system.data('trueSec');\n        systemData.region = {\n            id: system.data('regionId'),\n            name: system.data('region')\n        };\n        systemData.constellation = {\n            id: system.data('constellationId'),\n            name: system.data('constellation')\n        };\n        systemData.status = {\n            id: system.data('statusId')\n        };\n        systemData.locked = system.data('locked') ? 1 : 0;\n        systemData.rallyUpdated = system.data('rallyUpdated') || 0;\n        systemData.rallyPoke = system.data('rallyPoke') ? 1 : 0;\n        systemData.currentUser = system.data('currentUser'); // if user is currently in this system\n        systemData.statics = system.data('statics');\n        systemData.updated = {\n            updated: parseInt( system.data('updated') )\n        };\n        systemData.userCount = (system.data('userCount') ? parseInt( system.data('userCount') ) : 0);\n\n        // position -----------------------------------------------------------------------------------------\n        let positionData = {};\n        let currentX = system.css('left');\n        let currentY = system.css('top');\n\n        // remove 'px'\n        positionData.x = parseInt( currentX.substring(0, currentX.length - 2) );\n        positionData.y = parseInt( currentY.substring(0, currentY.length - 2) );\n\n        systemData.position = positionData;\n\n        return systemData;\n    };\n\n    /**\n     * removes a map instance from local cache\n     * @param mapId\n     */\n    let clearMapInstance = function(mapId){\n        if(typeof activeInstances[mapId] === 'object'){\n            delete activeInstances[mapId];\n        }\n    };\n\n    /**\n     * load OR updates system map\n     * @param mapConfig\n     * @param options\n     */\n    $.fn.loadMap = function(mapConfig, options){\n        // parent element where the map will be loaded\n        let parentElement = $(this);\n\n        // add context menus to dom (if not already\n        initMapContextMenu();\n        initConnectionContextMenu();\n        initSystemContextMenu();\n\n        // init jsPlumb\n        jsPlumb.ready(function() {\n            // get new map instance or load existing\n            mapConfig.map = getMapInstance(mapConfig.config.id);\n\n            // check for map Container -> first time initialization\n            if(mapConfig.map.getContainer() === undefined){\n                // new map instance\n                mapConfig = newMapElement(parentElement, mapConfig);\n\n                // init custom scrollbars and add overlay\n                parentElement.initMapScrollbar();\n\n                let mapElement = $(mapConfig.map.getContainer());\n\n                // set shortcuts\n                parentElement.find('.' + config.mapWrapperClass).setMapShortcuts();\n\n                // show static overlay actions\n                let mapOverlay = mapElement.getMapOverlay('info');\n                mapOverlay.updateOverlayIcon('systemRegion', 'show');\n                mapOverlay.updateOverlayIcon('connection', 'show');\n                mapOverlay.updateOverlayIcon('connectionEol', 'show');\n            }\n\n            //  draw/update map initial map and set container\n            let mapContainer = updateMap(mapConfig);\n\n            // callback function after tab switch\n            function switchTabCallback( mapName, mapContainer ){\n                Util.showNotify({title: 'Map initialized', text: mapName  + ' - loaded', type: 'success'});\n\n                let mapWrapper = mapContainer.parents('.' + config.mapWrapperClass);\n\n                // auto scroll map to previous position -----------------------------------------------------\n                let promiseStore = MapUtil.getLocaleData('map', mapContainer.data('id') );\n                promiseStore.then(function(data) {\n                    // This code runs once the value has been loaded\n                    // from the offline store.\n                    if(\n                        data &&\n                        data.offsetX\n                    ){\n                        mapWrapper.scrollToX(data.offsetX);\n                    }\n                });\n\n                // init magnetizer --------------------------------------------------------------------------\n                mapContainer.triggerMenuEvent('MapOption', {\n                    option: 'mapMagnetizer',\n                    toggle: false\n                });\n\n                // init grid snap ---------------------------------------------------------------------------\n                mapContainer.triggerMenuEvent('MapOption', {\n                    option: 'mapSnapToGrid',\n                    toggle: false\n                });\n\n                // init endpoint overlay --------------------------------------------------------------------\n                mapContainer.triggerMenuEvent('MapOption', {\n                    option: 'mapEndpoint',\n                    toggle: false\n                });\n\n                return false;\n            }\n\n            if(options.showAnimation){\n                // show nice visualization effect\n                mapContainer.visualizeMap('show', function(){\n                    switchTabCallback( mapConfig.config.name, mapContainer );\n                });\n            }\n        });\n    };\n\n    /**\n     * init scrollbar for Map element\n     */\n    $.fn.initMapScrollbar = function(){\n        // get Map Scrollbar\n        let mapTabContentElement = $(this);\n        let scrollableElement = mapTabContentElement.find('.' + config.mapWrapperClass);\n        let mapElement = mapTabContentElement.find('.' + config.mapClass);\n        let mapId = mapElement.data('id');\n\n\n        scrollableElement.initCustomScrollbar({\n            callbacks: {\n                onScroll: function(){\n                    // store new map scrollOffset -> localDB\n                    MapUtil.storeLocalData('map', mapId, 'offsetX', Math.abs(this.mcs.left) );\n                },\n                onScrollStart: function(){\n                    // hide all open xEditable fields\n                    $(this).find('.editable').editable('hide');\n\n                    // hide all system head tooltips\n                    $(this).find('.' + config.systemHeadClass + ' .fa').tooltip('hide');\n                },\n                whileScrolling:function(){\n                    // update scroll position for drag-frame-selection\n                    mapElement.data('scrollLeft', this.mcs.left);\n                    mapElement.data('scrollTop', this.mcs.top);\n                }\n            }\n        });\n\n        // --------------------------------------------------------------------------------------------------\n        // add map overlays after scrollbar is initialized\n        // because of its absolute position\n        scrollableElement.initMapOverlays();\n\n        scrollableElement.initLocalOverlay(mapId);\n    };\n\n    return {\n        getMapInstance: getMapInstance,\n        clearMapInstance: clearMapInstance,\n        getDataByConnection: getDataByConnection,\n        showNewSystemDialog: showNewSystemDialog\n    };\n\n});\n",
    "define('app/counter',[\n    'jquery',\n    'app/init',\n    'app/util'\n], function($, Init, Util) {\n    'use strict';\n\n    let config = {\n      counterDigitSmallClass: 'pf-digit-counter-small',\n      counterDigitLargeClass: 'pf-digit-counter-large'\n    };\n\n    /**\n     * update element with time information\n     * @param element\n     * @param tempDate\n     */\n    let updateDateDiff = function(element, tempDate){\n        let diff = Util.getTimeDiffParts(tempDate, new Date());\n        let days = diff.days;\n        let hrs = diff.hours;\n        let min = diff.min;\n        let leftSec = diff.sec;\n        let value = [];\n\n        if(\n            days > 0 ||\n            value.length > 0\n        ){\n            value.push('<span class=\"' + config.counterDigitLargeClass + '\">' + days + 'd' + '</span>');\n        }\n        if(\n            hrs > 0 ||\n            value.length > 0\n        ){\n            value.push('<span class=\"' + config.counterDigitSmallClass + '\">' + hrs + 'h' + '</span>');\n        }\n        if(\n            min > 0 ||\n            value.length > 0\n        ){\n            value.push('<span class=\"' + config.counterDigitSmallClass + '\">' + min + 'm' + '</span>');\n        }\n\n        if(\n            leftSec >= 0 ||\n            value.length > 0\n        ){\n            value.push('<span class=\"' + config.counterDigitSmallClass + '\">' + leftSec + 's' + '</span>');\n        }\n\n        element.html(value.join(' '));\n    };\n\n    /**\n     * init a live counter based on a unix timestamp\n     * @returns {*}\n     */\n    $.fn.initTimestampCounter = function(){\n        return this.each(function(){\n            let element = $(this);\n            let timestamp = parseInt( element.text() );\n\n            // do not init twice\n            if(timestamp > 0){\n                // mark as init\n                element.attr('data-counter', 'init');\n\n                let date = new Date( timestamp * 1000);\n\n                updateDateDiff(element, date);\n\n                // show element (if invisible) after first update\n                element.css({'visibility': 'initial'});\n\n                let refreshIntervalId = window.setInterval(function(){\n\n                    // update element with current time\n                    if( !element.hasClass('stopCounter')){\n                        updateDateDiff(element, date);\n                    }else{\n                        clearInterval( element.data('interval') );\n                    }\n                }, 500);\n\n                element.data('interval', refreshIntervalId);\n            }\n        });\n    };\n});\n\n",
    "/**\n *  System info module\n */\n\ndefine('app/ui/system_info',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'app/map/util'\n], function($, Init, Util, Render, MapUtil) {\n    'use strict';\n\n    let config = {\n        // module info\n        moduleClass: 'pf-module',                                               // class for each module\n\n        // system info module\n        systemInfoModuleClass: 'pf-system-info-module',                         // module wrapper\n\n        // breadcrumb\n        constellationLinkClass: 'pf-system-info-constellation',                 // class for \"constellation\" name\n        regionLinkClass: 'pf-system-info-region',                               // class for \"region\" name\n        typeLinkClass: 'pf-system-info-type',                                   // class for \"type\" name\n\n        // info table\n        systemInfoTableClass: 'pf-system-info-table',                           // class for system info table\n        systemInfoNameInfoClass: 'pf-system-info-name',                         // class for \"name\" information element\n        systemInfoEffectInfoClass: 'pf-system-info-effect',                     // class for \"effect\" information element\n        systemInfoStatusLabelClass: 'pf-system-info-status-label',              // class for \"status\" information element\n        systemInfoStatusAttributeName: 'data-status',                           // attribute name for status label\n        systemInfoWormholeClass: 'pf-system-info-wormhole-',                    // class prefix for static wormhole element\n\n        // description field\n        descriptionArea: 'pf-system-info-description-area',                     // class for \"description\" area\n        addDescriptionButtonClass: 'pf-system-info-description-button',         // class for \"add description\" button\n        moduleElementToolbarClass: 'pf-table-tools',                            // class for \"module toolbar\" element\n        tableToolsActionClass: 'pf-table-tools-action',                         // class for \"edit\" action\n\n        descriptionTextareaElementClass: 'pf-system-info-description',          // class for \"description\" textarea element (xEditable)\n        descriptionTextareaCharCounter: 'pf-form-field-char-count'              // class for \"character counter\" element for form field\n    };\n\n    // disable Module update temporary (until. some requests/animations) are finished\n    let disableModuleUpdate = true;\n\n    // animation speed values\n    let animationSpeedToolbarAction = 200;\n\n    // max character length for system description\n    let maxDescriptionLength = 512;\n\n    /**\n     * set module observer and look for relevant system data to update\n     */\n    let setModuleObserver = function(moduleElement){\n\n        $(document).off('pf:updateSystemInfoModule').on('pf:updateSystemInfoModule', function(e, data){\n            if(data){\n                moduleElement.updateSystemInfoModule(data);\n            }\n        });\n    };\n\n    /**\n     * shows the tool action element by animation\n     * @param toolsActionElement\n     */\n    let showToolsActionElement = function(toolsActionElement){\n        toolsActionElement.velocity('stop').velocity({\n            opacity: 1,\n            height: '100%'\n        },{\n            duration: animationSpeedToolbarAction,\n            display: 'block',\n            visibility: 'visible'\n        });\n    };\n\n    /**\n     * hides the tool action element by animation\n     * @param toolsActionElement\n     */\n    let hideToolsActionElement = function(toolsActionElement){\n        toolsActionElement.velocity('stop').velocity('reverse', {\n            display: 'none',\n            visibility: 'hidden'\n        });\n    };\n\n    /**\n     * update trigger function for this module\n     * compare data and update module\n     * @param systemData\n     */\n    $.fn.updateSystemInfoModule = function(systemData){\n\n        // module update is disabled\n        if(disableModuleUpdate === true){\n            return;\n        }\n\n        let moduleElement = $(this);\n\n        let systemId = moduleElement.data('id');\n\n        if(systemId === systemData.id){\n            // update module\n\n            // system status =====================================================================================\n            let systemStatusLabelElement = moduleElement.find('.' + config.systemInfoStatusLabelClass);\n            let systemStatusId = parseInt( systemStatusLabelElement.attr( config.systemInfoStatusAttributeName ) );\n\n            if(systemStatusId !== systemData.status.id){\n                // status changed\n\n                let currentStatusClass = Util.getStatusInfoForSystem(systemStatusId, 'class');\n                let newStatusClass = Util.getStatusInfoForSystem(systemData.status.id, 'class');\n                let newStatusLabel = Util.getStatusInfoForSystem(systemData.status.id, 'label');\n\n                systemStatusLabelElement.removeClass(currentStatusClass).addClass(newStatusClass).text(newStatusLabel);\n\n                // set new status attribute\n                systemStatusLabelElement.attr( config.systemInfoStatusAttributeName, systemData.status.id);\n            }\n\n            // description textarea element ======================================================================\n            let descriptionTextareaElement =  moduleElement.find('.' + config.descriptionTextareaElementClass);\n            let description = descriptionTextareaElement.editable('getValue', true);\n\n            if(description !== systemData.description){\n                // description changed\n\n                // description button\n                let descriptionButton = moduleElement.find('.' + config.addDescriptionButtonClass);\n\n                // set new value\n                descriptionTextareaElement.editable('setValue', systemData.description);\n\n                let actionElement = descriptionButton.siblings('.' + config.tableToolsActionClass);\n\n                if(systemData.description.length === 0){\n                    // show/activate description field\n\n                    // show button if value is empty\n                    descriptionButton.show();\n\n                    hideToolsActionElement(actionElement);\n                }else{\n                    // hide/disable description field\n                    // hide tool button\n                    descriptionButton.hide();\n                    showToolsActionElement(actionElement);\n                }\n            }\n\n            // created/updated tooltip ===========================================================================\n\n            let nameRowElement = $(moduleElement).find('.' + config.systemInfoNameInfoClass);\n\n            let tooltipData = {\n                created: systemData.created,\n                updated: systemData.updated\n            };\n\n            nameRowElement.addCharacterInfoTooltip( tooltipData );\n        }\n\n        moduleElement.find('.' + config.descriptionArea).hideLoadingAnimation();\n    };\n\n    /**\n     * update a character counter field with current value length - maxCharLength\n     * @param field\n     * @param charCounterElement\n     * @param maxCharLength\n     */\n    let updateCounter = function(field, charCounterElement, maxCharLength){\n        let value = field.val();\n        let inputLength = value.length;\n\n        // line breaks are 2 characters!\n        let newLines = value.match(/(\\r\\n|\\n|\\r)/g);\n        let addition = 0;\n        if (newLines != null) {\n            addition = newLines.length;\n        }\n        inputLength += addition;\n\n        charCounterElement.text(maxCharLength - inputLength);\n\n        if(maxCharLength <= inputLength){\n            charCounterElement.toggleClass('txt-color-red', true);\n        }else{\n            charCounterElement.toggleClass('txt-color-red', false);\n        }\n    };\n\n    /**\n     *\n     * @param parentElement\n     * @param mapId\n     * @param systemData\n     */\n    let drawModule = function(parentElement, mapId, systemData){\n\n        // create new module container\n        let moduleElement = $('<div>', {\n            class: [config.moduleClass, config.systemInfoModuleClass].join(' '),\n            css: {opacity: 0}\n        });\n\n        // store systemId -> module can be updated with the correct data\n        moduleElement.data('id', systemData.id);\n\n        parentElement.prepend(moduleElement);\n\n        // shattered wormhole info data\n        let shatteredWormholeInfo = false;\n\n        // add security class for statics\n        if(\n            systemData.statics &&\n            systemData.statics.length > 0\n        ){\n            for(let i = 0; i < systemData.statics.length; i++){\n                systemData.statics[i].class = Util.getSecurityClassForSystem( systemData.statics[i].security );\n            }\n        }else if(systemData.type.id === 1){\n            // system type \"wormhole\" but no statics => \"shattered wormhole\"\n            shatteredWormholeInfo = true;\n        }\n\n        let effectName = MapUtil.getEffectInfoForSystem(systemData.effect, 'name');\n        let effectClass = MapUtil.getEffectInfoForSystem(systemData.effect, 'class');\n\n        // systemInfo template config\n        let moduleConfig = {\n            name: 'modules/system_info',\n            position: moduleElement,\n            link: 'append',\n            functions: {\n                after: function(){\n                    let tempModuleElement = parentElement.find('.' + config.systemInfoModuleClass);\n\n                    // lock \"description\" field until first update\n                    tempModuleElement.find('.' + config.descriptionArea).showLoadingAnimation();\n\n                    // \"add description\" button\n                    let descriptionButton = tempModuleElement.find('.' + config.addDescriptionButtonClass);\n\n                    // description textarea element\n                    let descriptionTextareaElement =  tempModuleElement.find('.' + config.descriptionTextareaElementClass);\n\n                    // init description textarea\n                    descriptionTextareaElement.editable({\n                        url: Init.path.saveSystem,\n                        dataType: 'json',\n                        pk: systemData.id,\n                        type: 'textarea',\n                        mode: 'inline',\n                        emptytext: '',\n                        onblur: 'cancel',\n                        showbuttons: true,\n                        value: '',  // value is set by trigger function updateSystemInfoModule()\n                        rows: 5,\n                        name: 'description',\n                        inputclass: config.descriptionTextareaElementClass,\n                        tpl: '<textarea maxlength=\"' + maxDescriptionLength + '\"></textarea>',\n                        params: function(params){\n\n                            params.mapData = {\n                                id: mapId\n                            };\n\n                            params.systemData = {};\n                            params.systemData.id = params.pk;\n                            params.systemData[params.name] = params.value;\n\n                            // clear unnecessary data\n                            delete params.pk;\n                            delete params.name;\n                            delete params.value;\n\n                            return params;\n                        },\n                        validate: function(value){\n                            if(value.length > 0 && $.trim(value).length === 0) {\n                                return {newValue: ''};\n                            }\n                        },\n                        success: function(response, newValue){\n                            Util.showNotify({title: 'System updated', text: 'Name: ' + response.name, type: 'success'});\n                        },\n                        error: function(jqXHR, newValue){\n                            let reason = '';\n                            let status = '';\n                            if(jqXHR.name){\n                                // save error new sig (mass save)\n                                reason = jqXHR.name;\n                                status = 'Error';\n                            }else{\n                                reason = jqXHR.responseJSON.text;\n                                status = jqXHR.status;\n                            }\n\n                            Util.showNotify({title: status + ': save system information', text: reason, type: 'warning'});\n                            $(document).setProgramStatus('problem');\n                            return reason;\n                        }\n                    });\n\n                    // on xEditable open -------------------------------------------------------------------------\n                    descriptionTextareaElement.on('shown', function(e, editable){\n                        let textarea = editable.input.$input;\n\n                        // disable module update until description field is open\n                        disableModuleUpdate = true;\n\n                        // create character counter\n                        let charCounter = $('<kbd>', {\n                            class: [config.descriptionTextareaCharCounter, 'txt-color', 'text-right'].join(' ')\n                        });\n                        textarea.parent().next().append(charCounter);\n\n                        // update character counter\n                        updateCounter(textarea, charCounter, maxDescriptionLength);\n\n                        textarea.on('keyup', function(){\n                            updateCounter($(this), charCounter, maxDescriptionLength);\n                        });\n                    });\n\n                    // on xEditable close ------------------------------------------------------------------------\n                    descriptionTextareaElement.on('hidden', function(e){\n                        let value = $(this).editable('getValue', true);\n                        if(value.length === 0){\n                            // show button if value is empty\n                            hideToolsActionElement(descriptionButton.siblings('.' + config.tableToolsActionClass));\n                            descriptionButton.show();\n                        }\n\n                        // enable module update\n                        disableModuleUpdate = false;\n                    });\n\n                    // enable xEditable field on Button click ----------------------------------------------------\n                    descriptionButton.on('click', function(e){\n                        e.stopPropagation();\n                        let descriptionButton = $(this);\n\n                        // hide tool buttons\n                        descriptionButton.hide();\n\n                        // show field *before* showing the element\n                        descriptionTextareaElement.editable('show');\n\n                        showToolsActionElement(descriptionButton.siblings('.' + config.tableToolsActionClass));\n                    });\n\n                    // init tooltips -----------------------------------------------------------------------------\n                    let tooltipElements = tempModuleElement.find('[data-toggle=\"tooltip\"]');\n                    tooltipElements.tooltip();\n\n                    // init system effect popover ----------------------------------------------------------------\n                    let infoEffectElement = $(moduleElement).find('.' + config.systemInfoEffectInfoClass);\n\n                    if(infoEffectElement.length){\n                        // effect row exists -> get effect data\n                        let systemEffectData = Util.getSystemEffectData( systemData.security, systemData.effect);\n\n                        if(systemEffectData !== false){\n                            // transform data into table\n                            let systemEffectTable = Util.getSystemEffectTable( systemEffectData );\n\n                            infoEffectElement.popover({\n                                html: true,\n                                trigger: 'hover',\n                                placement: 'top',\n                                delay: 200,\n                                title: 'System effects',\n                                container: 'body',\n                                content: systemEffectTable\n                            });\n                        }else{\n                            // effect data not found (e.g. !unknown! shattered system) -> hide \"popover\" icon icon\n                            infoEffectElement.children().hide();\n                        }\n                    }\n\n                    // init static wormhole information ----------------------------------------------------------\n                    if(systemData.statics){\n                        for(let i = 0; i < systemData.statics.length; i++){\n                            let staticData = systemData.statics[i];\n                            let staticRowElement = tempModuleElement.find('.' + config.systemInfoWormholeClass + staticData.name);\n                            staticRowElement.addWormholeInfoTooltip(staticData);\n                        }\n                    }\n\n                    // constellation popover ---------------------------------------------------------------------\n                    tempModuleElement.find('a.popup-ajax').popover({\n                        html: true,\n                        trigger: 'hover',\n                        placement: 'top',\n                        delay: 200,\n                        container: 'body',\n                        content: function(){\n                            return details_in_popup(this);\n                        }\n                    });\n\n                    function details_in_popup(popoverElement){\n                        popoverElement = $(popoverElement);\n                        let popover = popoverElement.data('bs.popover');\n\n\n                        $.ajax({\n                            url: popoverElement.data('url'),\n                            success: function(data){\n                                let systemEffectTable = Util.getSystemsInfoTable( data.systemData );\n                                popover.options.content = systemEffectTable;\n                                // reopen popover (new content size)\n                                popover.show();\n                            }\n                        });\n                        return 'Loading...';\n                    }\n\n                    showModule(moduleElement);\n                }\n            }\n        };\n\n        let moduleData = {\n            system: systemData,\n            tableClass: config.systemInfoTableClass,\n            nameInfoClass: config.systemInfoNameInfoClass,\n            effectInfoClass: config.systemInfoEffectInfoClass,\n            wormholePrefixClass: config.systemInfoWormholeClass,\n            statusInfoClass: config.systemInfoStatusLabelClass,\n\n            systemTypeName: MapUtil.getSystemTypeInfo(systemData.type.id, 'name'),\n            systemStatusId: systemData.status.id,\n            systemStatusClass: Util.getStatusInfoForSystem(systemData.status.id, 'class'),\n            systemStatusLabel: Util.getStatusInfoForSystem(systemData.status.id, 'label'),\n            securityClass: Util.getSecurityClassForSystem( systemData.security ),\n            trueSec: systemData.trueSec.toFixed(1),\n            trueSecClass: Util.getTrueSecClassForSystem( systemData.trueSec ),\n            effectName: effectName,\n            effectClass: effectClass,\n            moduleToolbarClass: config.moduleElementToolbarClass,\n            descriptionButtonClass: config.addDescriptionButtonClass,\n            tableToolsActionClass: config.tableToolsActionClass,\n            descriptionTextareaClass: config.descriptionTextareaElementClass,\n\n            shatteredWormholeInfo: shatteredWormholeInfo,\n\n            ajaxConstellationInfoUrl: Init.path.getConstellationData,\n\n            systemConstellationLinkClass: config.constellationLinkClass,\n            systemRegionLinkClass: config.regionLinkClass,\n            systemTypeLinkClass: config.typeLinkClass\n\n        };\n\n        Render.showModule(moduleConfig, moduleData);\n    };\n\n    /**\n     * show system info module with animation\n     * @param moduleElement\n     */\n    let showModule = function(moduleElement){\n        moduleElement.velocity('transition.slideDownIn', {\n            duration: Init.animationSpeed.mapModule,\n            delay: Init.animationSpeed.mapModule,\n            complete: function(){\n                // set module observer\n                setModuleObserver(moduleElement);\n\n                // enable auto update\n                disableModuleUpdate = false;\n            }\n        });\n    };\n\n    /**\n     * update system info module\n     * @param mapId\n     * @param systemData\n     */\n    $.fn.drawSystemInfoModule = function(mapId, systemData){\n\n        let parentElement = $(this);\n\n        // check if module already exists\n        let moduleElement = parentElement.find('.' + config.systemInfoModuleClass);\n\n        if(moduleElement.length > 0){\n            moduleElement.velocity('transition.slideDownOut', {\n                duration: Init.animationSpeed.mapModule,\n                complete: function(tempElement){\n                    $(tempElement).remove();\n\n                    drawModule(parentElement, mapId, systemData);\n                }\n            });\n        }else{\n            drawModule(parentElement, mapId, systemData);\n        }\n    };\n\n});\n\n\n\n\n",
    "// ┌────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.1.2 - JavaScript Vector Library                          │ \\\\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\n// └────────────────────────────────────────────────────────────────────┘ \\\\\n!function(a){var b,c,d=\"0.4.2\",e=\"hasOwnProperty\",f=/[\\.\\/]/,g=\"*\",h=function(){},i=function(a,b){return a-b},j={n:{}},k=function(a,d){a=String(a);var e,f=c,g=Array.prototype.slice.call(arguments,2),h=k.listeners(a),j=0,l=[],m={},n=[],o=b;b=a,c=0;for(var p=0,q=h.length;q>p;p++)\"zIndex\"in h[p]&&(l.push(h[p].zIndex),h[p].zIndex<0&&(m[h[p].zIndex]=h[p]));for(l.sort(i);l[j]<0;)if(e=m[l[j++]],n.push(e.apply(d,g)),c)return c=f,n;for(p=0;q>p;p++)if(e=h[p],\"zIndex\"in e)if(e.zIndex==l[j]){if(n.push(e.apply(d,g)),c)break;do if(j++,e=m[l[j]],e&&n.push(e.apply(d,g)),c)break;while(e)}else m[e.zIndex]=e;else if(n.push(e.apply(d,g)),c)break;return c=f,b=o,n.length?n:null};k._events=j,k.listeners=function(a){var b,c,d,e,h,i,k,l,m=a.split(f),n=j,o=[n],p=[];for(e=0,h=m.length;h>e;e++){for(l=[],i=0,k=o.length;k>i;i++)for(n=o[i].n,c=[n[m[e]],n[g]],d=2;d--;)b=c[d],b&&(l.push(b),p=p.concat(b.f||[]));o=l}return p},k.on=function(a,b){if(a=String(a),\"function\"!=typeof b)return function(){};for(var c=a.split(f),d=j,e=0,g=c.length;g>e;e++)d=d.n,d=d.hasOwnProperty(c[e])&&d[c[e]]||(d[c[e]]={n:{}});for(d.f=d.f||[],e=0,g=d.f.length;g>e;e++)if(d.f[e]==b)return h;return d.f.push(b),function(a){+a==+a&&(b.zIndex=+a)}},k.f=function(a){var b=[].slice.call(arguments,1);return function(){k.apply(null,[a,null].concat(b).concat([].slice.call(arguments,0)))}},k.stop=function(){c=1},k.nt=function(a){return a?new RegExp(\"(?:\\\\.|\\\\/|^)\"+a+\"(?:\\\\.|\\\\/|$)\").test(b):b},k.nts=function(){return b.split(f)},k.off=k.unbind=function(a,b){if(!a)return void(k._events=j={n:{}});var c,d,h,i,l,m,n,o=a.split(f),p=[j];for(i=0,l=o.length;l>i;i++)for(m=0;m<p.length;m+=h.length-2){if(h=[m,1],c=p[m].n,o[i]!=g)c[o[i]]&&h.push(c[o[i]]);else for(d in c)c[e](d)&&h.push(c[d]);p.splice.apply(p,h)}for(i=0,l=p.length;l>i;i++)for(c=p[i];c.n;){if(b){if(c.f){for(m=0,n=c.f.length;n>m;m++)if(c.f[m]==b){c.f.splice(m,1);break}!c.f.length&&delete c.f}for(d in c.n)if(c.n[e](d)&&c.n[d].f){var q=c.n[d].f;for(m=0,n=q.length;n>m;m++)if(q[m]==b){q.splice(m,1);break}!q.length&&delete c.n[d].f}}else{delete c.f;for(d in c.n)c.n[e](d)&&c.n[d].f&&delete c.n[d].f}c=c.n}},k.once=function(a,b){var c=function(){return k.unbind(a,c),b.apply(this,arguments)};return k.on(a,c)},k.version=d,k.toString=function(){return\"You are running Eve \"+d},\"undefined\"!=typeof module&&module.exports?module.exports=k:\"undefined\"!=typeof define?define(\"eve\",[],function(){return k}):a.eve=k}(window||this),function(a,b){\"function\"==typeof define&&define.amd?define('raphael',[\"eve\"],function(c){return b(a,c)}):b(a,a.eve)}(this,function(a,b){function c(a){if(c.is(a,\"function\"))return u?a():b.on(\"raphael.DOMload\",a);if(c.is(a,V))return c._engine.create[D](c,a.splice(0,3+c.is(a[0],T))).add(a);var d=Array.prototype.slice.call(arguments,0);if(c.is(d[d.length-1],\"function\")){var e=d.pop();return u?e.call(c._engine.create[D](c,d)):b.on(\"raphael.DOMload\",function(){e.call(c._engine.create[D](c,d))})}return c._engine.create[D](c,arguments)}function d(a){if(\"function\"==typeof a||Object(a)!==a)return a;var b=new a.constructor;for(var c in a)a[z](c)&&(b[c]=d(a[c]));return b}function e(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return a.push(a.splice(c,1)[0])}function f(a,b,c){function d(){var f=Array.prototype.slice.call(arguments,0),g=f.join(\"␀\"),h=d.cache=d.cache||{},i=d.count=d.count||[];return h[z](g)?(e(i,g),c?c(h[g]):h[g]):(i.length>=1e3&&delete h[i.shift()],i.push(g),h[g]=a[D](b,f),c?c(h[g]):h[g])}return d}function g(){return this.hex}function h(a,b){for(var c=[],d=0,e=a.length;e-2*!b>d;d+=2){var f=[{x:+a[d-2],y:+a[d-1]},{x:+a[d],y:+a[d+1]},{x:+a[d+2],y:+a[d+3]},{x:+a[d+4],y:+a[d+5]}];b?d?e-4==d?f[3]={x:+a[0],y:+a[1]}:e-2==d&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[e-2],y:+a[e-1]}:e-4==d?f[3]=f[2]:d||(f[0]={x:+a[d],y:+a[d+1]}),c.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return c}function i(a,b,c,d,e){var f=-3*b+9*c-9*d+3*e,g=a*f+6*b-12*c+6*d;return a*g-3*b+3*c}function j(a,b,c,d,e,f,g,h,j){null==j&&(j=1),j=j>1?1:0>j?0:j;for(var k=j/2,l=12,m=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],n=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],o=0,p=0;l>p;p++){var q=k*m[p]+k,r=i(q,a,c,e,g),s=i(q,b,d,f,h),t=r*r+s*s;o+=n[p]*N.sqrt(t)}return k*o}function k(a,b,c,d,e,f,g,h,i){if(!(0>i||j(a,b,c,d,e,f,g,h)<i)){var k,l=1,m=l/2,n=l-m,o=.01;for(k=j(a,b,c,d,e,f,g,h,n);Q(k-i)>o;)m/=2,n+=(i>k?1:-1)*m,k=j(a,b,c,d,e,f,g,h,n);return n}}function l(a,b,c,d,e,f,g,h){if(!(O(a,c)<P(e,g)||P(a,c)>O(e,g)||O(b,d)<P(f,h)||P(b,d)>O(f,h))){var i=(a*d-b*c)*(e-g)-(a-c)*(e*h-f*g),j=(a*d-b*c)*(f-h)-(b-d)*(e*h-f*g),k=(a-c)*(f-h)-(b-d)*(e-g);if(k){var l=i/k,m=j/k,n=+l.toFixed(2),o=+m.toFixed(2);if(!(n<+P(a,c).toFixed(2)||n>+O(a,c).toFixed(2)||n<+P(e,g).toFixed(2)||n>+O(e,g).toFixed(2)||o<+P(b,d).toFixed(2)||o>+O(b,d).toFixed(2)||o<+P(f,h).toFixed(2)||o>+O(f,h).toFixed(2)))return{x:l,y:m}}}}function m(a,b,d){var e=c.bezierBBox(a),f=c.bezierBBox(b);if(!c.isBBoxIntersect(e,f))return d?0:[];for(var g=j.apply(0,a),h=j.apply(0,b),i=O(~~(g/5),1),k=O(~~(h/5),1),m=[],n=[],o={},p=d?0:[],q=0;i+1>q;q++){var r=c.findDotsAtSegment.apply(c,a.concat(q/i));m.push({x:r.x,y:r.y,t:q/i})}for(q=0;k+1>q;q++)r=c.findDotsAtSegment.apply(c,b.concat(q/k)),n.push({x:r.x,y:r.y,t:q/k});for(q=0;i>q;q++)for(var s=0;k>s;s++){var t=m[q],u=m[q+1],v=n[s],w=n[s+1],x=Q(u.x-t.x)<.001?\"y\":\"x\",y=Q(w.x-v.x)<.001?\"y\":\"x\",z=l(t.x,t.y,u.x,u.y,v.x,v.y,w.x,w.y);if(z){if(o[z.x.toFixed(4)]==z.y.toFixed(4))continue;o[z.x.toFixed(4)]=z.y.toFixed(4);var A=t.t+Q((z[x]-t[x])/(u[x]-t[x]))*(u.t-t.t),B=v.t+Q((z[y]-v[y])/(w[y]-v[y]))*(w.t-v.t);A>=0&&1.001>=A&&B>=0&&1.001>=B&&(d?p++:p.push({x:z.x,y:z.y,t1:P(A,1),t2:P(B,1)}))}}return p}function n(a,b,d){a=c._path2curve(a),b=c._path2curve(b);for(var e,f,g,h,i,j,k,l,n,o,p=d?0:[],q=0,r=a.length;r>q;q++){var s=a[q];if(\"M\"==s[0])e=i=s[1],f=j=s[2];else{\"C\"==s[0]?(n=[e,f].concat(s.slice(1)),e=n[6],f=n[7]):(n=[e,f,e,f,i,j,i,j],e=i,f=j);for(var t=0,u=b.length;u>t;t++){var v=b[t];if(\"M\"==v[0])g=k=v[1],h=l=v[2];else{\"C\"==v[0]?(o=[g,h].concat(v.slice(1)),g=o[6],h=o[7]):(o=[g,h,g,h,k,l,k,l],g=k,h=l);var w=m(n,o,d);if(d)p+=w;else{for(var x=0,y=w.length;y>x;x++)w[x].segment1=q,w[x].segment2=t,w[x].bez1=n,w[x].bez2=o;p=p.concat(w)}}}}}return p}function o(a,b,c,d,e,f){null!=a?(this.a=+a,this.b=+b,this.c=+c,this.d=+d,this.e=+e,this.f=+f):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}function p(){return this.x+H+this.y+H+this.width+\" × \"+this.height}function q(a,b,c,d,e,f){function g(a){return((l*a+k)*a+j)*a}function h(a,b){var c=i(a,b);return((o*c+n)*c+m)*c}function i(a,b){var c,d,e,f,h,i;for(e=a,i=0;8>i;i++){if(f=g(e)-a,Q(f)<b)return e;if(h=(3*l*e+2*k)*e+j,Q(h)<1e-6)break;e-=f/h}if(c=0,d=1,e=a,c>e)return c;if(e>d)return d;for(;d>c;){if(f=g(e),Q(f-a)<b)return e;a>f?c=e:d=e,e=(d-c)/2+c}return e}var j=3*b,k=3*(d-b)-j,l=1-j-k,m=3*c,n=3*(e-c)-m,o=1-m-n;return h(a,1/(200*f))}function r(a,b){var c=[],d={};if(this.ms=b,this.times=1,a){for(var e in a)a[z](e)&&(d[_(e)]=a[e],c.push(_(e)));c.sort(lb)}this.anim=d,this.top=c[c.length-1],this.percents=c}function s(a,d,e,f,g,h){e=_(e);var i,j,k,l,m,n,p=a.ms,r={},s={},t={};if(f)for(v=0,x=ic.length;x>v;v++){var u=ic[v];if(u.el.id==d.id&&u.anim==a){u.percent!=e?(ic.splice(v,1),k=1):j=u,d.attr(u.totalOrigin);break}}else f=+s;for(var v=0,x=a.percents.length;x>v;v++){if(a.percents[v]==e||a.percents[v]>f*a.top){e=a.percents[v],m=a.percents[v-1]||0,p=p/a.top*(e-m),l=a.percents[v+1],i=a.anim[e];break}f&&d.attr(a.anim[a.percents[v]])}if(i){if(j)j.initstatus=f,j.start=new Date-j.ms*f;else{for(var y in i)if(i[z](y)&&(db[z](y)||d.paper.customAttributes[z](y)))switch(r[y]=d.attr(y),null==r[y]&&(r[y]=cb[y]),s[y]=i[y],db[y]){case T:t[y]=(s[y]-r[y])/p;break;case\"colour\":r[y]=c.getRGB(r[y]);var A=c.getRGB(s[y]);t[y]={r:(A.r-r[y].r)/p,g:(A.g-r[y].g)/p,b:(A.b-r[y].b)/p};break;case\"path\":var B=Kb(r[y],s[y]),C=B[1];for(r[y]=B[0],t[y]=[],v=0,x=r[y].length;x>v;v++){t[y][v]=[0];for(var D=1,F=r[y][v].length;F>D;D++)t[y][v][D]=(C[v][D]-r[y][v][D])/p}break;case\"transform\":var G=d._,H=Pb(G[y],s[y]);if(H)for(r[y]=H.from,s[y]=H.to,t[y]=[],t[y].real=!0,v=0,x=r[y].length;x>v;v++)for(t[y][v]=[r[y][v][0]],D=1,F=r[y][v].length;F>D;D++)t[y][v][D]=(s[y][v][D]-r[y][v][D])/p;else{var K=d.matrix||new o,L={_:{transform:G.transform},getBBox:function(){return d.getBBox(1)}};r[y]=[K.a,K.b,K.c,K.d,K.e,K.f],Nb(L,s[y]),s[y]=L._.transform,t[y]=[(L.matrix.a-K.a)/p,(L.matrix.b-K.b)/p,(L.matrix.c-K.c)/p,(L.matrix.d-K.d)/p,(L.matrix.e-K.e)/p,(L.matrix.f-K.f)/p]}break;case\"csv\":var M=I(i[y])[J](w),N=I(r[y])[J](w);if(\"clip-rect\"==y)for(r[y]=N,t[y]=[],v=N.length;v--;)t[y][v]=(M[v]-r[y][v])/p;s[y]=M;break;default:for(M=[][E](i[y]),N=[][E](r[y]),t[y]=[],v=d.paper.customAttributes[y].length;v--;)t[y][v]=((M[v]||0)-(N[v]||0))/p}var O=i.easing,P=c.easing_formulas[O];if(!P)if(P=I(O).match(Z),P&&5==P.length){var Q=P;P=function(a){return q(a,+Q[1],+Q[2],+Q[3],+Q[4],p)}}else P=nb;if(n=i.start||a.start||+new Date,u={anim:a,percent:e,timestamp:n,start:n+(a.del||0),status:0,initstatus:f||0,stop:!1,ms:p,easing:P,from:r,diff:t,to:s,el:d,callback:i.callback,prev:m,next:l,repeat:h||a.times,origin:d.attr(),totalOrigin:g},ic.push(u),f&&!j&&!k&&(u.stop=!0,u.start=new Date-p*f,1==ic.length))return kc();k&&(u.start=new Date-u.ms*f),1==ic.length&&jc(kc)}b(\"raphael.anim.start.\"+d.id,d,a)}}function t(a){for(var b=0;b<ic.length;b++)ic[b].el.paper==a&&ic.splice(b--,1)}c.version=\"2.1.2\",c.eve=b;var u,v,w=/[, ]+/,x={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},y=/\\{(\\d+)\\}/g,z=\"hasOwnProperty\",A={doc:document,win:a},B={was:Object.prototype[z].call(A.win,\"Raphael\"),is:A.win.Raphael},C=function(){this.ca=this.customAttributes={}},D=\"apply\",E=\"concat\",F=\"ontouchstart\"in A.win||A.win.DocumentTouch&&A.doc instanceof DocumentTouch,G=\"\",H=\" \",I=String,J=\"split\",K=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[J](H),L={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},M=I.prototype.toLowerCase,N=Math,O=N.max,P=N.min,Q=N.abs,R=N.pow,S=N.PI,T=\"number\",U=\"string\",V=\"array\",W=Object.prototype.toString,X=(c._ISURL=/^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i),Y={NaN:1,Infinity:1,\"-Infinity\":1},Z=/^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,$=N.round,_=parseFloat,ab=parseInt,bb=I.prototype.toUpperCase,cb=c._availableAttrs={\"arrow-end\":\"none\",\"arrow-start\":\"none\",blur:0,\"clip-rect\":\"0 0 1e9 1e9\",cursor:\"default\",cx:0,cy:0,fill:\"#fff\",\"fill-opacity\":1,font:'10px \"Arial\"',\"font-family\":'\"Arial\"',\"font-size\":\"10\",\"font-style\":\"normal\",\"font-weight\":400,gradient:0,height:0,href:\"http://raphaeljs.com/\",\"letter-spacing\":0,opacity:1,path:\"M0,0\",r:0,rx:0,ry:0,src:\"\",stroke:\"#000\",\"stroke-dasharray\":\"\",\"stroke-linecap\":\"butt\",\"stroke-linejoin\":\"butt\",\"stroke-miterlimit\":0,\"stroke-opacity\":1,\"stroke-width\":1,target:\"_blank\",\"text-anchor\":\"middle\",title:\"Raphael\",transform:\"\",width:0,x:0,y:0},db=c._availableAnimAttrs={blur:T,\"clip-rect\":\"csv\",cx:T,cy:T,fill:\"colour\",\"fill-opacity\":T,\"font-size\":T,height:T,opacity:T,path:\"path\",r:T,rx:T,ry:T,stroke:\"colour\",\"stroke-opacity\":T,\"stroke-width\":T,transform:\"transform\",width:T,x:T,y:T},eb=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,fb={hs:1,rg:1},gb=/,?([achlmqrstvxz]),?/gi,hb=/([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,ib=/([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,jb=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/gi,kb=(c._radial_gradient=/^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,{}),lb=function(a,b){return _(a)-_(b)},mb=function(){},nb=function(a){return a},ob=c._rectPath=function(a,b,c,d,e){return e?[[\"M\",a+e,b],[\"l\",c-2*e,0],[\"a\",e,e,0,0,1,e,e],[\"l\",0,d-2*e],[\"a\",e,e,0,0,1,-e,e],[\"l\",2*e-c,0],[\"a\",e,e,0,0,1,-e,-e],[\"l\",0,2*e-d],[\"a\",e,e,0,0,1,e,-e],[\"z\"]]:[[\"M\",a,b],[\"l\",c,0],[\"l\",0,d],[\"l\",-c,0],[\"z\"]]},pb=function(a,b,c,d){return null==d&&(d=c),[[\"M\",a,b],[\"m\",0,-d],[\"a\",c,d,0,1,1,0,2*d],[\"a\",c,d,0,1,1,0,-2*d],[\"z\"]]},qb=c._getPath={path:function(a){return a.attr(\"path\")},circle:function(a){var b=a.attrs;return pb(b.cx,b.cy,b.r)},ellipse:function(a){var b=a.attrs;return pb(b.cx,b.cy,b.rx,b.ry)},rect:function(a){var b=a.attrs;return ob(b.x,b.y,b.width,b.height,b.r)},image:function(a){var b=a.attrs;return ob(b.x,b.y,b.width,b.height)},text:function(a){var b=a._getBBox();return ob(b.x,b.y,b.width,b.height)},set:function(a){var b=a._getBBox();return ob(b.x,b.y,b.width,b.height)}},rb=c.mapPath=function(a,b){if(!b)return a;var c,d,e,f,g,h,i;for(a=Kb(a),e=0,g=a.length;g>e;e++)for(i=a[e],f=1,h=i.length;h>f;f+=2)c=b.x(i[f],i[f+1]),d=b.y(i[f],i[f+1]),i[f]=c,i[f+1]=d;return a};if(c._g=A,c.type=A.win.SVGAngle||A.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")?\"SVG\":\"VML\",\"VML\"==c.type){var sb,tb=A.doc.createElement(\"div\");if(tb.innerHTML='<v:shape adj=\"1\"/>',sb=tb.firstChild,sb.style.behavior=\"url(#default#VML)\",!sb||\"object\"!=typeof sb.adj)return c.type=G;tb=null}c.svg=!(c.vml=\"VML\"==c.type),c._Paper=C,c.fn=v=C.prototype=c.prototype,c._id=0,c._oid=0,c.is=function(a,b){return b=M.call(b),\"finite\"==b?!Y[z](+a):\"array\"==b?a instanceof Array:\"null\"==b&&null===a||b==typeof a&&null!==a||\"object\"==b&&a===Object(a)||\"array\"==b&&Array.isArray&&Array.isArray(a)||W.call(a).slice(8,-1).toLowerCase()==b},c.angle=function(a,b,d,e,f,g){if(null==f){var h=a-d,i=b-e;return h||i?(180+180*N.atan2(-i,-h)/S+360)%360:0}return c.angle(a,b,f,g)-c.angle(d,e,f,g)},c.rad=function(a){return a%360*S/180},c.deg=function(a){return 180*a/S%360},c.snapTo=function(a,b,d){if(d=c.is(d,\"finite\")?d:10,c.is(a,V)){for(var e=a.length;e--;)if(Q(a[e]-b)<=d)return a[e]}else{a=+a;var f=b%a;if(d>f)return b-f;if(f>a-d)return b-f+a}return b};c.createUUID=function(a,b){return function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(a,b).toUpperCase()}}(/[xy]/g,function(a){var b=16*N.random()|0,c=\"x\"==a?b:3&b|8;return c.toString(16)});c.setWindow=function(a){b(\"raphael.setWindow\",c,A.win,a),A.win=a,A.doc=A.win.document,c._engine.initWin&&c._engine.initWin(A.win)};var ub=function(a){if(c.vml){var b,d=/^\\s+|\\s+$/g;try{var e=new ActiveXObject(\"htmlfile\");e.write(\"<body>\"),e.close(),b=e.body}catch(g){b=createPopup().document.body}var h=b.createTextRange();ub=f(function(a){try{b.style.color=I(a).replace(d,G);var c=h.queryCommandValue(\"ForeColor\");return c=(255&c)<<16|65280&c|(16711680&c)>>>16,\"#\"+(\"000000\"+c.toString(16)).slice(-6)}catch(e){return\"none\"}})}else{var i=A.doc.createElement(\"i\");i.title=\"Raphaël Colour Picker\",i.style.display=\"none\",A.doc.body.appendChild(i),ub=f(function(a){return i.style.color=a,A.doc.defaultView.getComputedStyle(i,G).getPropertyValue(\"color\")})}return ub(a)},vb=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},wb=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},xb=function(){return this.hex},yb=function(a,b,d){if(null==b&&c.is(a,\"object\")&&\"r\"in a&&\"g\"in a&&\"b\"in a&&(d=a.b,b=a.g,a=a.r),null==b&&c.is(a,U)){var e=c.getRGB(a);a=e.r,b=e.g,d=e.b}return(a>1||b>1||d>1)&&(a/=255,b/=255,d/=255),[a,b,d]},zb=function(a,b,d,e){a*=255,b*=255,d*=255;var f={r:a,g:b,b:d,hex:c.rgb(a,b,d),toString:xb};return c.is(e,\"finite\")&&(f.opacity=e),f};c.color=function(a){var b;return c.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"b\"in a?(b=c.hsb2rgb(a),a.r=b.r,a.g=b.g,a.b=b.b,a.hex=b.hex):c.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"l\"in a?(b=c.hsl2rgb(a),a.r=b.r,a.g=b.g,a.b=b.b,a.hex=b.hex):(c.is(a,\"string\")&&(a=c.getRGB(a)),c.is(a,\"object\")&&\"r\"in a&&\"g\"in a&&\"b\"in a?(b=c.rgb2hsl(a),a.h=b.h,a.s=b.s,a.l=b.l,b=c.rgb2hsb(a),a.v=b.b):(a={hex:\"none\"},a.r=a.g=a.b=a.h=a.s=a.v=a.l=-1)),a.toString=xb,a},c.hsb2rgb=function(a,b,c,d){this.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"b\"in a&&(c=a.b,b=a.s,a=a.h,d=a.o),a*=360;var e,f,g,h,i;return a=a%360/60,i=c*b,h=i*(1-Q(a%2-1)),e=f=g=c-i,a=~~a,e+=[i,h,0,0,h,i][a],f+=[h,i,i,h,0,0][a],g+=[0,0,h,i,i,h][a],zb(e,f,g,d)},c.hsl2rgb=function(a,b,c,d){this.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"l\"in a&&(c=a.l,b=a.s,a=a.h),(a>1||b>1||c>1)&&(a/=360,b/=100,c/=100),a*=360;var e,f,g,h,i;return a=a%360/60,i=2*b*(.5>c?c:1-c),h=i*(1-Q(a%2-1)),e=f=g=c-i/2,a=~~a,e+=[i,h,0,0,h,i][a],f+=[h,i,i,h,0,0][a],g+=[0,0,h,i,i,h][a],zb(e,f,g,d)},c.rgb2hsb=function(a,b,c){c=yb(a,b,c),a=c[0],b=c[1],c=c[2];var d,e,f,g;return f=O(a,b,c),g=f-P(a,b,c),d=0==g?null:f==a?(b-c)/g:f==b?(c-a)/g+2:(a-b)/g+4,d=(d+360)%6*60/360,e=0==g?0:g/f,{h:d,s:e,b:f,toString:vb}},c.rgb2hsl=function(a,b,c){c=yb(a,b,c),a=c[0],b=c[1],c=c[2];var d,e,f,g,h,i;return g=O(a,b,c),h=P(a,b,c),i=g-h,d=0==i?null:g==a?(b-c)/i:g==b?(c-a)/i+2:(a-b)/i+4,d=(d+360)%6*60/360,f=(g+h)/2,e=0==i?0:.5>f?i/(2*f):i/(2-2*f),{h:d,s:e,l:f,toString:wb}},c._path2string=function(){return this.join(\",\").replace(gb,\"$1\")};c._preload=function(a,b){var c=A.doc.createElement(\"img\");c.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",c.onload=function(){b.call(this),this.onload=null,A.doc.body.removeChild(this)},c.onerror=function(){A.doc.body.removeChild(this)},A.doc.body.appendChild(c),c.src=a};c.getRGB=f(function(a){if(!a||(a=I(a)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:g};if(\"none\"==a)return{r:-1,g:-1,b:-1,hex:\"none\",toString:g};!(fb[z](a.toLowerCase().substring(0,2))||\"#\"==a.charAt())&&(a=ub(a));var b,d,e,f,h,i,j=a.match(X);return j?(j[2]&&(e=ab(j[2].substring(5),16),d=ab(j[2].substring(3,5),16),b=ab(j[2].substring(1,3),16)),j[3]&&(e=ab((h=j[3].charAt(3))+h,16),d=ab((h=j[3].charAt(2))+h,16),b=ab((h=j[3].charAt(1))+h,16)),j[4]&&(i=j[4][J](eb),b=_(i[0]),\"%\"==i[0].slice(-1)&&(b*=2.55),d=_(i[1]),\"%\"==i[1].slice(-1)&&(d*=2.55),e=_(i[2]),\"%\"==i[2].slice(-1)&&(e*=2.55),\"rgba\"==j[1].toLowerCase().slice(0,4)&&(f=_(i[3])),i[3]&&\"%\"==i[3].slice(-1)&&(f/=100)),j[5]?(i=j[5][J](eb),b=_(i[0]),\"%\"==i[0].slice(-1)&&(b*=2.55),d=_(i[1]),\"%\"==i[1].slice(-1)&&(d*=2.55),e=_(i[2]),\"%\"==i[2].slice(-1)&&(e*=2.55),(\"deg\"==i[0].slice(-3)||\"°\"==i[0].slice(-1))&&(b/=360),\"hsba\"==j[1].toLowerCase().slice(0,4)&&(f=_(i[3])),i[3]&&\"%\"==i[3].slice(-1)&&(f/=100),c.hsb2rgb(b,d,e,f)):j[6]?(i=j[6][J](eb),b=_(i[0]),\"%\"==i[0].slice(-1)&&(b*=2.55),d=_(i[1]),\"%\"==i[1].slice(-1)&&(d*=2.55),e=_(i[2]),\"%\"==i[2].slice(-1)&&(e*=2.55),(\"deg\"==i[0].slice(-3)||\"°\"==i[0].slice(-1))&&(b/=360),\"hsla\"==j[1].toLowerCase().slice(0,4)&&(f=_(i[3])),i[3]&&\"%\"==i[3].slice(-1)&&(f/=100),c.hsl2rgb(b,d,e,f)):(j={r:b,g:d,b:e,toString:g},j.hex=\"#\"+(16777216|e|d<<8|b<<16).toString(16).slice(1),c.is(f,\"finite\")&&(j.opacity=f),j)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:g}},c),c.hsb=f(function(a,b,d){return c.hsb2rgb(a,b,d).hex}),c.hsl=f(function(a,b,d){return c.hsl2rgb(a,b,d).hex}),c.rgb=f(function(a,b,c){return\"#\"+(16777216|c|b<<8|a<<16).toString(16).slice(1)}),c.getColor=function(a){var b=this.getColor.start=this.getColor.start||{h:0,s:1,b:a||.75},c=this.hsb2rgb(b.h,b.s,b.b);return b.h+=.075,b.h>1&&(b.h=0,b.s-=.2,b.s<=0&&(this.getColor.start={h:0,s:1,b:b.b})),c.hex},c.getColor.reset=function(){delete this.start},c.parsePathString=function(a){if(!a)return null;var b=Ab(a);if(b.arr)return Cb(b.arr);var d={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},e=[];return c.is(a,V)&&c.is(a[0],V)&&(e=Cb(a)),e.length||I(a).replace(hb,function(a,b,c){var f=[],g=b.toLowerCase();if(c.replace(jb,function(a,b){b&&f.push(+b)}),\"m\"==g&&f.length>2&&(e.push([b][E](f.splice(0,2))),g=\"l\",b=\"m\"==b?\"l\":\"L\"),\"r\"==g)e.push([b][E](f));else for(;f.length>=d[g]&&(e.push([b][E](f.splice(0,d[g]))),d[g]););}),e.toString=c._path2string,b.arr=Cb(e),e},c.parseTransformString=f(function(a){if(!a)return null;var b=[];return c.is(a,V)&&c.is(a[0],V)&&(b=Cb(a)),b.length||I(a).replace(ib,function(a,c,d){{var e=[];M.call(c)}d.replace(jb,function(a,b){b&&e.push(+b)}),b.push([c][E](e))}),b.toString=c._path2string,b});var Ab=function(a){var b=Ab.ps=Ab.ps||{};return b[a]?b[a].sleep=100:b[a]={sleep:100},setTimeout(function(){for(var c in b)b[z](c)&&c!=a&&(b[c].sleep--,!b[c].sleep&&delete b[c])}),b[a]};c.findDotsAtSegment=function(a,b,c,d,e,f,g,h,i){var j=1-i,k=R(j,3),l=R(j,2),m=i*i,n=m*i,o=k*a+3*l*i*c+3*j*i*i*e+n*g,p=k*b+3*l*i*d+3*j*i*i*f+n*h,q=a+2*i*(c-a)+m*(e-2*c+a),r=b+2*i*(d-b)+m*(f-2*d+b),s=c+2*i*(e-c)+m*(g-2*e+c),t=d+2*i*(f-d)+m*(h-2*f+d),u=j*a+i*c,v=j*b+i*d,w=j*e+i*g,x=j*f+i*h,y=90-180*N.atan2(q-s,r-t)/S;return(q>s||t>r)&&(y+=180),{x:o,y:p,m:{x:q,y:r},n:{x:s,y:t},start:{x:u,y:v},end:{x:w,y:x},alpha:y}},c.bezierBBox=function(a,b,d,e,f,g,h,i){c.is(a,\"array\")||(a=[a,b,d,e,f,g,h,i]);var j=Jb.apply(null,a);return{x:j.min.x,y:j.min.y,x2:j.max.x,y2:j.max.y,width:j.max.x-j.min.x,height:j.max.y-j.min.y}},c.isPointInsideBBox=function(a,b,c){return b>=a.x&&b<=a.x2&&c>=a.y&&c<=a.y2},c.isBBoxIntersect=function(a,b){var d=c.isPointInsideBBox;return d(b,a.x,a.y)||d(b,a.x2,a.y)||d(b,a.x,a.y2)||d(b,a.x2,a.y2)||d(a,b.x,b.y)||d(a,b.x2,b.y)||d(a,b.x,b.y2)||d(a,b.x2,b.y2)||(a.x<b.x2&&a.x>b.x||b.x<a.x2&&b.x>a.x)&&(a.y<b.y2&&a.y>b.y||b.y<a.y2&&b.y>a.y)},c.pathIntersection=function(a,b){return n(a,b)},c.pathIntersectionNumber=function(a,b){return n(a,b,1)},c.isPointInsidePath=function(a,b,d){var e=c.pathBBox(a);return c.isPointInsideBBox(e,b,d)&&n(a,[[\"M\",b,d],[\"H\",e.x2+10]],1)%2==1},c._removedFactory=function(a){return function(){b(\"raphael.log\",null,\"Raphaël: you are calling to method “\"+a+\"” of removed object\",a)}};var Bb=c.pathBBox=function(a){var b=Ab(a);if(b.bbox)return d(b.bbox);if(!a)return{x:0,y:0,width:0,height:0,x2:0,y2:0};a=Kb(a);for(var c,e=0,f=0,g=[],h=[],i=0,j=a.length;j>i;i++)if(c=a[i],\"M\"==c[0])e=c[1],f=c[2],g.push(e),h.push(f);else{var k=Jb(e,f,c[1],c[2],c[3],c[4],c[5],c[6]);g=g[E](k.min.x,k.max.x),h=h[E](k.min.y,k.max.y),e=c[5],f=c[6]}var l=P[D](0,g),m=P[D](0,h),n=O[D](0,g),o=O[D](0,h),p=n-l,q=o-m,r={x:l,y:m,x2:n,y2:o,width:p,height:q,cx:l+p/2,cy:m+q/2};return b.bbox=d(r),r},Cb=function(a){var b=d(a);return b.toString=c._path2string,b},Db=c._pathToRelative=function(a){var b=Ab(a);if(b.rel)return Cb(b.rel);c.is(a,V)&&c.is(a&&a[0],V)||(a=c.parsePathString(a));var d=[],e=0,f=0,g=0,h=0,i=0;\"M\"==a[0][0]&&(e=a[0][1],f=a[0][2],g=e,h=f,i++,d.push([\"M\",e,f]));for(var j=i,k=a.length;k>j;j++){var l=d[j]=[],m=a[j];if(m[0]!=M.call(m[0]))switch(l[0]=M.call(m[0]),l[0]){case\"a\":l[1]=m[1],l[2]=m[2],l[3]=m[3],l[4]=m[4],l[5]=m[5],l[6]=+(m[6]-e).toFixed(3),l[7]=+(m[7]-f).toFixed(3);break;case\"v\":l[1]=+(m[1]-f).toFixed(3);break;case\"m\":g=m[1],h=m[2];default:for(var n=1,o=m.length;o>n;n++)l[n]=+(m[n]-(n%2?e:f)).toFixed(3)}else{l=d[j]=[],\"m\"==m[0]&&(g=m[1]+e,h=m[2]+f);for(var p=0,q=m.length;q>p;p++)d[j][p]=m[p]}var r=d[j].length;switch(d[j][0]){case\"z\":e=g,f=h;break;case\"h\":e+=+d[j][r-1];break;case\"v\":f+=+d[j][r-1];break;default:e+=+d[j][r-2],f+=+d[j][r-1]}}return d.toString=c._path2string,b.rel=Cb(d),d},Eb=c._pathToAbsolute=function(a){var b=Ab(a);if(b.abs)return Cb(b.abs);if(c.is(a,V)&&c.is(a&&a[0],V)||(a=c.parsePathString(a)),!a||!a.length)return[[\"M\",0,0]];var d=[],e=0,f=0,g=0,i=0,j=0;\"M\"==a[0][0]&&(e=+a[0][1],f=+a[0][2],g=e,i=f,j++,d[0]=[\"M\",e,f]);for(var k,l,m=3==a.length&&\"M\"==a[0][0]&&\"R\"==a[1][0].toUpperCase()&&\"Z\"==a[2][0].toUpperCase(),n=j,o=a.length;o>n;n++){if(d.push(k=[]),l=a[n],l[0]!=bb.call(l[0]))switch(k[0]=bb.call(l[0]),k[0]){case\"A\":k[1]=l[1],k[2]=l[2],k[3]=l[3],k[4]=l[4],k[5]=l[5],k[6]=+(l[6]+e),k[7]=+(l[7]+f);break;case\"V\":k[1]=+l[1]+f;break;case\"H\":k[1]=+l[1]+e;break;case\"R\":for(var p=[e,f][E](l.slice(1)),q=2,r=p.length;r>q;q++)p[q]=+p[q]+e,p[++q]=+p[q]+f;d.pop(),d=d[E](h(p,m));break;case\"M\":g=+l[1]+e,i=+l[2]+f;default:for(q=1,r=l.length;r>q;q++)k[q]=+l[q]+(q%2?e:f)}else if(\"R\"==l[0])p=[e,f][E](l.slice(1)),d.pop(),d=d[E](h(p,m)),k=[\"R\"][E](l.slice(-2));else for(var s=0,t=l.length;t>s;s++)k[s]=l[s];switch(k[0]){case\"Z\":e=g,f=i;break;case\"H\":e=k[1];break;case\"V\":f=k[1];break;case\"M\":g=k[k.length-2],i=k[k.length-1];default:e=k[k.length-2],f=k[k.length-1]}}return d.toString=c._path2string,b.abs=Cb(d),d},Fb=function(a,b,c,d){return[a,b,c,d,c,d]},Gb=function(a,b,c,d,e,f){var g=1/3,h=2/3;return[g*a+h*c,g*b+h*d,g*e+h*c,g*f+h*d,e,f]},Hb=function(a,b,c,d,e,g,h,i,j,k){var l,m=120*S/180,n=S/180*(+e||0),o=[],p=f(function(a,b,c){var d=a*N.cos(c)-b*N.sin(c),e=a*N.sin(c)+b*N.cos(c);return{x:d,y:e}});if(k)y=k[0],z=k[1],w=k[2],x=k[3];else{l=p(a,b,-n),a=l.x,b=l.y,l=p(i,j,-n),i=l.x,j=l.y;var q=(N.cos(S/180*e),N.sin(S/180*e),(a-i)/2),r=(b-j)/2,s=q*q/(c*c)+r*r/(d*d);s>1&&(s=N.sqrt(s),c=s*c,d=s*d);var t=c*c,u=d*d,v=(g==h?-1:1)*N.sqrt(Q((t*u-t*r*r-u*q*q)/(t*r*r+u*q*q))),w=v*c*r/d+(a+i)/2,x=v*-d*q/c+(b+j)/2,y=N.asin(((b-x)/d).toFixed(9)),z=N.asin(((j-x)/d).toFixed(9));y=w>a?S-y:y,z=w>i?S-z:z,0>y&&(y=2*S+y),0>z&&(z=2*S+z),h&&y>z&&(y-=2*S),!h&&z>y&&(z-=2*S)}var A=z-y;if(Q(A)>m){var B=z,C=i,D=j;z=y+m*(h&&z>y?1:-1),i=w+c*N.cos(z),j=x+d*N.sin(z),o=Hb(i,j,c,d,e,0,h,C,D,[z,B,w,x])}A=z-y;var F=N.cos(y),G=N.sin(y),H=N.cos(z),I=N.sin(z),K=N.tan(A/4),L=4/3*c*K,M=4/3*d*K,O=[a,b],P=[a+L*G,b-M*F],R=[i+L*I,j-M*H],T=[i,j];if(P[0]=2*O[0]-P[0],P[1]=2*O[1]-P[1],k)return[P,R,T][E](o);o=[P,R,T][E](o).join()[J](\",\");for(var U=[],V=0,W=o.length;W>V;V++)U[V]=V%2?p(o[V-1],o[V],n).y:p(o[V],o[V+1],n).x;return U},Ib=function(a,b,c,d,e,f,g,h,i){var j=1-i;return{x:R(j,3)*a+3*R(j,2)*i*c+3*j*i*i*e+R(i,3)*g,y:R(j,3)*b+3*R(j,2)*i*d+3*j*i*i*f+R(i,3)*h}},Jb=f(function(a,b,c,d,e,f,g,h){var i,j=e-2*c+a-(g-2*e+c),k=2*(c-a)-2*(e-c),l=a-c,m=(-k+N.sqrt(k*k-4*j*l))/2/j,n=(-k-N.sqrt(k*k-4*j*l))/2/j,o=[b,h],p=[a,g];return Q(m)>\"1e12\"&&(m=.5),Q(n)>\"1e12\"&&(n=.5),m>0&&1>m&&(i=Ib(a,b,c,d,e,f,g,h,m),p.push(i.x),o.push(i.y)),n>0&&1>n&&(i=Ib(a,b,c,d,e,f,g,h,n),p.push(i.x),o.push(i.y)),j=f-2*d+b-(h-2*f+d),k=2*(d-b)-2*(f-d),l=b-d,m=(-k+N.sqrt(k*k-4*j*l))/2/j,n=(-k-N.sqrt(k*k-4*j*l))/2/j,Q(m)>\"1e12\"&&(m=.5),Q(n)>\"1e12\"&&(n=.5),m>0&&1>m&&(i=Ib(a,b,c,d,e,f,g,h,m),p.push(i.x),o.push(i.y)),n>0&&1>n&&(i=Ib(a,b,c,d,e,f,g,h,n),p.push(i.x),o.push(i.y)),{min:{x:P[D](0,p),y:P[D](0,o)},max:{x:O[D](0,p),y:O[D](0,o)}}}),Kb=c._path2curve=f(function(a,b){var c=!b&&Ab(a);if(!b&&c.curve)return Cb(c.curve);for(var d=Eb(a),e=b&&Eb(b),f={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},g={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},h=(function(a,b,c){var d,e,f={T:1,Q:1};if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];switch(!(a[0]in f)&&(b.qx=b.qy=null),a[0]){case\"M\":b.X=a[1],b.Y=a[2];break;case\"A\":a=[\"C\"][E](Hb[D](0,[b.x,b.y][E](a.slice(1))));break;case\"S\":\"C\"==c||\"S\"==c?(d=2*b.x-b.bx,e=2*b.y-b.by):(d=b.x,e=b.y),a=[\"C\",d,e][E](a.slice(1));break;case\"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y),a=[\"C\"][E](Gb(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case\"Q\":b.qx=a[1],b.qy=a[2],a=[\"C\"][E](Gb(b.x,b.y,a[1],a[2],a[3],a[4]));break;case\"L\":a=[\"C\"][E](Fb(b.x,b.y,a[1],a[2]));break;case\"H\":a=[\"C\"][E](Fb(b.x,b.y,a[1],b.y));break;case\"V\":a=[\"C\"][E](Fb(b.x,b.y,b.x,a[1]));break;case\"Z\":a=[\"C\"][E](Fb(b.x,b.y,b.X,b.Y))}return a}),i=function(a,b){if(a[b].length>7){a[b].shift();for(var c=a[b];c.length;)a.splice(b++,0,[\"C\"][E](c.splice(0,6)));a.splice(b,1),l=O(d.length,e&&e.length||0)}},j=function(a,b,c,f,g){a&&b&&\"M\"==a[g][0]&&\"M\"!=b[g][0]&&(b.splice(g,0,[\"M\",f.x,f.y]),c.bx=0,c.by=0,c.x=a[g][1],c.y=a[g][2],l=O(d.length,e&&e.length||0))},k=0,l=O(d.length,e&&e.length||0);l>k;k++){d[k]=h(d[k],f),i(d,k),e&&(e[k]=h(e[k],g)),e&&i(e,k),j(d,e,f,g,k),j(e,d,g,f,k);var m=d[k],n=e&&e[k],o=m.length,p=e&&n.length;f.x=m[o-2],f.y=m[o-1],f.bx=_(m[o-4])||f.x,f.by=_(m[o-3])||f.y,g.bx=e&&(_(n[p-4])||g.x),g.by=e&&(_(n[p-3])||g.y),g.x=e&&n[p-2],g.y=e&&n[p-1]}return e||(c.curve=Cb(d)),e?[d,e]:d},null,Cb),Lb=(c._parseDots=f(function(a){for(var b=[],d=0,e=a.length;e>d;d++){var f={},g=a[d].match(/^([^:]*):?([\\d\\.]*)/);if(f.color=c.getRGB(g[1]),f.color.error)return null;f.color=f.color.hex,g[2]&&(f.offset=g[2]+\"%\"),b.push(f)}for(d=1,e=b.length-1;e>d;d++)if(!b[d].offset){for(var h=_(b[d-1].offset||0),i=0,j=d+1;e>j;j++)if(b[j].offset){i=b[j].offset;break}i||(i=100,j=e),i=_(i);for(var k=(i-h)/(j-d+1);j>d;d++)h+=k,b[d].offset=h+\"%\"}return b}),c._tear=function(a,b){a==b.top&&(b.top=a.prev),a==b.bottom&&(b.bottom=a.next),a.next&&(a.next.prev=a.prev),a.prev&&(a.prev.next=a.next)}),Mb=(c._tofront=function(a,b){b.top!==a&&(Lb(a,b),a.next=null,a.prev=b.top,b.top.next=a,b.top=a)},c._toback=function(a,b){b.bottom!==a&&(Lb(a,b),a.next=b.bottom,a.prev=null,b.bottom.prev=a,b.bottom=a)},c._insertafter=function(a,b,c){Lb(a,c),b==c.top&&(c.top=a),b.next&&(b.next.prev=a),a.next=b.next,a.prev=b,b.next=a},c._insertbefore=function(a,b,c){Lb(a,c),b==c.bottom&&(c.bottom=a),b.prev&&(b.prev.next=a),a.prev=b.prev,b.prev=a,a.next=b},c.toMatrix=function(a,b){var c=Bb(a),d={_:{transform:G},getBBox:function(){return c}};return Nb(d,b),d.matrix}),Nb=(c.transformPath=function(a,b){return rb(a,Mb(a,b))},c._extractTransform=function(a,b){if(null==b)return a._.transform;b=I(b).replace(/\\.{3}|\\u2026/g,a._.transform||G);var d=c.parseTransformString(b),e=0,f=0,g=0,h=1,i=1,j=a._,k=new o;if(j.transform=d||[],d)for(var l=0,m=d.length;m>l;l++){var n,p,q,r,s,t=d[l],u=t.length,v=I(t[0]).toLowerCase(),w=t[0]!=v,x=w?k.invert():0;\"t\"==v&&3==u?w?(n=x.x(0,0),p=x.y(0,0),q=x.x(t[1],t[2]),r=x.y(t[1],t[2]),k.translate(q-n,r-p)):k.translate(t[1],t[2]):\"r\"==v?2==u?(s=s||a.getBBox(1),k.rotate(t[1],s.x+s.width/2,s.y+s.height/2),e+=t[1]):4==u&&(w?(q=x.x(t[2],t[3]),r=x.y(t[2],t[3]),k.rotate(t[1],q,r)):k.rotate(t[1],t[2],t[3]),e+=t[1]):\"s\"==v?2==u||3==u?(s=s||a.getBBox(1),k.scale(t[1],t[u-1],s.x+s.width/2,s.y+s.height/2),h*=t[1],i*=t[u-1]):5==u&&(w?(q=x.x(t[3],t[4]),r=x.y(t[3],t[4]),k.scale(t[1],t[2],q,r)):k.scale(t[1],t[2],t[3],t[4]),h*=t[1],i*=t[2]):\"m\"==v&&7==u&&k.add(t[1],t[2],t[3],t[4],t[5],t[6]),j.dirtyT=1,a.matrix=k}a.matrix=k,j.sx=h,j.sy=i,j.deg=e,j.dx=f=k.e,j.dy=g=k.f,1==h&&1==i&&!e&&j.bbox?(j.bbox.x+=+f,j.bbox.y+=+g):j.dirtyT=1}),Ob=function(a){var b=a[0];switch(b.toLowerCase()){case\"t\":return[b,0,0];case\"m\":return[b,1,0,0,1,0,0];case\"r\":return 4==a.length?[b,0,a[2],a[3]]:[b,0];case\"s\":return 5==a.length?[b,1,1,a[3],a[4]]:3==a.length?[b,1,1]:[b,1]}},Pb=c._equaliseTransform=function(a,b){b=I(b).replace(/\\.{3}|\\u2026/g,a),a=c.parseTransformString(a)||[],b=c.parseTransformString(b)||[];for(var d,e,f,g,h=O(a.length,b.length),i=[],j=[],k=0;h>k;k++){if(f=a[k]||Ob(b[k]),g=b[k]||Ob(f),f[0]!=g[0]||\"r\"==f[0].toLowerCase()&&(f[2]!=g[2]||f[3]!=g[3])||\"s\"==f[0].toLowerCase()&&(f[3]!=g[3]||f[4]!=g[4]))return;for(i[k]=[],j[k]=[],d=0,e=O(f.length,g.length);e>d;d++)d in f&&(i[k][d]=f[d]),d in g&&(j[k][d]=g[d])\n}return{from:i,to:j}};c._getContainer=function(a,b,d,e){var f;return f=null!=e||c.is(a,\"object\")?a:A.doc.getElementById(a),null!=f?f.tagName?null==b?{container:f,width:f.style.pixelWidth||f.offsetWidth,height:f.style.pixelHeight||f.offsetHeight}:{container:f,width:b,height:d}:{container:1,x:a,y:b,width:d,height:e}:void 0},c.pathToRelative=Db,c._engine={},c.path2curve=Kb,c.matrix=function(a,b,c,d,e,f){return new o(a,b,c,d,e,f)},function(a){function b(a){return a[0]*a[0]+a[1]*a[1]}function d(a){var c=N.sqrt(b(a));a[0]&&(a[0]/=c),a[1]&&(a[1]/=c)}a.add=function(a,b,c,d,e,f){var g,h,i,j,k=[[],[],[]],l=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],m=[[a,c,e],[b,d,f],[0,0,1]];for(a&&a instanceof o&&(m=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1]]),g=0;3>g;g++)for(h=0;3>h;h++){for(j=0,i=0;3>i;i++)j+=l[g][i]*m[i][h];k[g][h]=j}this.a=k[0][0],this.b=k[1][0],this.c=k[0][1],this.d=k[1][1],this.e=k[0][2],this.f=k[1][2]},a.invert=function(){var a=this,b=a.a*a.d-a.b*a.c;return new o(a.d/b,-a.b/b,-a.c/b,a.a/b,(a.c*a.f-a.d*a.e)/b,(a.b*a.e-a.a*a.f)/b)},a.clone=function(){return new o(this.a,this.b,this.c,this.d,this.e,this.f)},a.translate=function(a,b){this.add(1,0,0,1,a,b)},a.scale=function(a,b,c,d){null==b&&(b=a),(c||d)&&this.add(1,0,0,1,c,d),this.add(a,0,0,b,0,0),(c||d)&&this.add(1,0,0,1,-c,-d)},a.rotate=function(a,b,d){a=c.rad(a),b=b||0,d=d||0;var e=+N.cos(a).toFixed(9),f=+N.sin(a).toFixed(9);this.add(e,f,-f,e,b,d),this.add(1,0,0,1,-b,-d)},a.x=function(a,b){return a*this.a+b*this.c+this.e},a.y=function(a,b){return a*this.b+b*this.d+this.f},a.get=function(a){return+this[I.fromCharCode(97+a)].toFixed(4)},a.toString=function(){return c.svg?\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},a.toFilter=function(){return\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+this.get(0)+\", M12=\"+this.get(2)+\", M21=\"+this.get(1)+\", M22=\"+this.get(3)+\", Dx=\"+this.get(4)+\", Dy=\"+this.get(5)+\", sizingmethod='auto expand')\"},a.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},a.split=function(){var a={};a.dx=this.e,a.dy=this.f;var e=[[this.a,this.c],[this.b,this.d]];a.scalex=N.sqrt(b(e[0])),d(e[0]),a.shear=e[0][0]*e[1][0]+e[0][1]*e[1][1],e[1]=[e[1][0]-e[0][0]*a.shear,e[1][1]-e[0][1]*a.shear],a.scaley=N.sqrt(b(e[1])),d(e[1]),a.shear/=a.scaley;var f=-e[0][1],g=e[1][1];return 0>g?(a.rotate=c.deg(N.acos(g)),0>f&&(a.rotate=360-a.rotate)):a.rotate=c.deg(N.asin(f)),a.isSimple=!(+a.shear.toFixed(9)||a.scalex.toFixed(9)!=a.scaley.toFixed(9)&&a.rotate),a.isSuperSimple=!+a.shear.toFixed(9)&&a.scalex.toFixed(9)==a.scaley.toFixed(9)&&!a.rotate,a.noRotation=!+a.shear.toFixed(9)&&!a.rotate,a},a.toTransformString=function(a){var b=a||this[J]();return b.isSimple?(b.scalex=+b.scalex.toFixed(4),b.scaley=+b.scaley.toFixed(4),b.rotate=+b.rotate.toFixed(4),(b.dx||b.dy?\"t\"+[b.dx,b.dy]:G)+(1!=b.scalex||1!=b.scaley?\"s\"+[b.scalex,b.scaley,0,0]:G)+(b.rotate?\"r\"+[b.rotate,0,0]:G)):\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(o.prototype);var Qb=navigator.userAgent.match(/Version\\/(.*?)\\s/)||navigator.userAgent.match(/Chrome\\/(\\d+)/);v.safari=\"Apple Computer, Inc.\"==navigator.vendor&&(Qb&&Qb[1]<4||\"iP\"==navigator.platform.slice(0,2))||\"Google Inc.\"==navigator.vendor&&Qb&&Qb[1]<8?function(){var a=this.rect(-99,-99,this.width+99,this.height+99).attr({stroke:\"none\"});setTimeout(function(){a.remove()})}:mb;for(var Rb=function(){this.returnValue=!1},Sb=function(){return this.originalEvent.preventDefault()},Tb=function(){this.cancelBubble=!0},Ub=function(){return this.originalEvent.stopPropagation()},Vb=function(a){var b=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,c=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft;return{x:a.clientX+c,y:a.clientY+b}},Wb=function(){return A.doc.addEventListener?function(a,b,c,d){var e=function(a){var b=Vb(a);return c.call(d,a,b.x,b.y)};if(a.addEventListener(b,e,!1),F&&L[b]){var f=function(b){for(var e=Vb(b),f=b,g=0,h=b.targetTouches&&b.targetTouches.length;h>g;g++)if(b.targetTouches[g].target==a){b=b.targetTouches[g],b.originalEvent=f,b.preventDefault=Sb,b.stopPropagation=Ub;break}return c.call(d,b,e.x,e.y)};a.addEventListener(L[b],f,!1)}return function(){return a.removeEventListener(b,e,!1),F&&L[b]&&a.removeEventListener(L[b],e,!1),!0}}:A.doc.attachEvent?function(a,b,c,d){var e=function(a){a=a||A.win.event;var b=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,e=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft,f=a.clientX+e,g=a.clientY+b;return a.preventDefault=a.preventDefault||Rb,a.stopPropagation=a.stopPropagation||Tb,c.call(d,a,f,g)};a.attachEvent(\"on\"+b,e);var f=function(){return a.detachEvent(\"on\"+b,e),!0};return f}:void 0}(),Xb=[],Yb=function(a){for(var c,d=a.clientX,e=a.clientY,f=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,g=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft,h=Xb.length;h--;){if(c=Xb[h],F&&a.touches){for(var i,j=a.touches.length;j--;)if(i=a.touches[j],i.identifier==c.el._drag.id){d=i.clientX,e=i.clientY,(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();var k,l=c.el.node,m=l.nextSibling,n=l.parentNode,o=l.style.display;A.win.opera&&n.removeChild(l),l.style.display=\"none\",k=c.el.paper.getElementByPoint(d,e),l.style.display=o,A.win.opera&&(m?n.insertBefore(l,m):n.appendChild(l)),k&&b(\"raphael.drag.over.\"+c.el.id,c.el,k),d+=g,e+=f,b(\"raphael.drag.move.\"+c.el.id,c.move_scope||c.el,d-c.el._drag.x,e-c.el._drag.y,d,e,a)}},Zb=function(a){c.unmousemove(Yb).unmouseup(Zb);for(var d,e=Xb.length;e--;)d=Xb[e],d.el._drag={},b(\"raphael.drag.end.\"+d.el.id,d.end_scope||d.start_scope||d.move_scope||d.el,a);Xb=[]},$b=c.el={},_b=K.length;_b--;)!function(a){c[a]=$b[a]=function(b,d){return c.is(b,\"function\")&&(this.events=this.events||[],this.events.push({name:a,f:b,unbind:Wb(this.shape||this.node||A.doc,a,b,d||this)})),this},c[\"un\"+a]=$b[\"un\"+a]=function(b){for(var d=this.events||[],e=d.length;e--;)d[e].name!=a||!c.is(b,\"undefined\")&&d[e].f!=b||(d[e].unbind(),d.splice(e,1),!d.length&&delete this.events);return this}}(K[_b]);$b.data=function(a,d){var e=kb[this.id]=kb[this.id]||{};if(0==arguments.length)return e;if(1==arguments.length){if(c.is(a,\"object\")){for(var f in a)a[z](f)&&this.data(f,a[f]);return this}return b(\"raphael.data.get.\"+this.id,this,e[a],a),e[a]}return e[a]=d,b(\"raphael.data.set.\"+this.id,this,d,a),this},$b.removeData=function(a){return null==a?kb[this.id]={}:kb[this.id]&&delete kb[this.id][a],this},$b.getData=function(){return d(kb[this.id]||{})},$b.hover=function(a,b,c,d){return this.mouseover(a,c).mouseout(b,d||c)},$b.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var ac=[];$b.drag=function(a,d,e,f,g,h){function i(i){(i.originalEvent||i).preventDefault();var j=i.clientX,k=i.clientY,l=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,m=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft;if(this._drag.id=i.identifier,F&&i.touches)for(var n,o=i.touches.length;o--;)if(n=i.touches[o],this._drag.id=n.identifier,n.identifier==this._drag.id){j=n.clientX,k=n.clientY;break}this._drag.x=j+m,this._drag.y=k+l,!Xb.length&&c.mousemove(Yb).mouseup(Zb),Xb.push({el:this,move_scope:f,start_scope:g,end_scope:h}),d&&b.on(\"raphael.drag.start.\"+this.id,d),a&&b.on(\"raphael.drag.move.\"+this.id,a),e&&b.on(\"raphael.drag.end.\"+this.id,e),b(\"raphael.drag.start.\"+this.id,g||f||this,i.clientX+m,i.clientY+l,i)}return this._drag={},ac.push({el:this,start:i}),this.mousedown(i),this},$b.onDragOver=function(a){a?b.on(\"raphael.drag.over.\"+this.id,a):b.unbind(\"raphael.drag.over.\"+this.id)},$b.undrag=function(){for(var a=ac.length;a--;)ac[a].el==this&&(this.unmousedown(ac[a].start),ac.splice(a,1),b.unbind(\"raphael.drag.*.\"+this.id));!ac.length&&c.unmousemove(Yb).unmouseup(Zb),Xb=[]},v.circle=function(a,b,d){var e=c._engine.circle(this,a||0,b||0,d||0);return this.__set__&&this.__set__.push(e),e},v.rect=function(a,b,d,e,f){var g=c._engine.rect(this,a||0,b||0,d||0,e||0,f||0);return this.__set__&&this.__set__.push(g),g},v.ellipse=function(a,b,d,e){var f=c._engine.ellipse(this,a||0,b||0,d||0,e||0);return this.__set__&&this.__set__.push(f),f},v.path=function(a){a&&!c.is(a,U)&&!c.is(a[0],V)&&(a+=G);var b=c._engine.path(c.format[D](c,arguments),this);return this.__set__&&this.__set__.push(b),b},v.image=function(a,b,d,e,f){var g=c._engine.image(this,a||\"about:blank\",b||0,d||0,e||0,f||0);return this.__set__&&this.__set__.push(g),g},v.text=function(a,b,d){var e=c._engine.text(this,a||0,b||0,I(d));return this.__set__&&this.__set__.push(e),e},v.set=function(a){!c.is(a,\"array\")&&(a=Array.prototype.splice.call(arguments,0,arguments.length));var b=new mc(a);return this.__set__&&this.__set__.push(b),b.paper=this,b.type=\"set\",b},v.setStart=function(a){this.__set__=a||this.set()},v.setFinish=function(){var a=this.__set__;return delete this.__set__,a},v.setSize=function(a,b){return c._engine.setSize.call(this,a,b)},v.setViewBox=function(a,b,d,e,f){return c._engine.setViewBox.call(this,a,b,d,e,f)},v.top=v.bottom=null,v.raphael=c;var bc=function(a){var b=a.getBoundingClientRect(),c=a.ownerDocument,d=c.body,e=c.documentElement,f=e.clientTop||d.clientTop||0,g=e.clientLeft||d.clientLeft||0,h=b.top+(A.win.pageYOffset||e.scrollTop||d.scrollTop)-f,i=b.left+(A.win.pageXOffset||e.scrollLeft||d.scrollLeft)-g;return{y:h,x:i}};v.getElementByPoint=function(a,b){var c=this,d=c.canvas,e=A.doc.elementFromPoint(a,b);if(A.win.opera&&\"svg\"==e.tagName){var f=bc(d),g=d.createSVGRect();g.x=a-f.x,g.y=b-f.y,g.width=g.height=1;var h=d.getIntersectionList(g,null);h.length&&(e=h[h.length-1])}if(!e)return null;for(;e.parentNode&&e!=d.parentNode&&!e.raphael;)e=e.parentNode;return e==c.canvas.parentNode&&(e=d),e=e&&e.raphael?c.getById(e.raphaelid):null},v.getElementsByBBox=function(a){var b=this.set();return this.forEach(function(d){c.isBBoxIntersect(d.getBBox(),a)&&b.push(d)}),b},v.getById=function(a){for(var b=this.bottom;b;){if(b.id==a)return b;b=b.next}return null},v.forEach=function(a,b){for(var c=this.bottom;c;){if(a.call(b,c)===!1)return this;c=c.next}return this},v.getElementsByPoint=function(a,b){var c=this.set();return this.forEach(function(d){d.isPointInside(a,b)&&c.push(d)}),c},$b.isPointInside=function(a,b){var d=this.realPath=qb[this.type](this);return this.attr(\"transform\")&&this.attr(\"transform\").length&&(d=c.transformPath(d,this.attr(\"transform\"))),c.isPointInsidePath(d,a,b)},$b.getBBox=function(a){if(this.removed)return{};var b=this._;return a?((b.dirty||!b.bboxwt)&&(this.realPath=qb[this.type](this),b.bboxwt=Bb(this.realPath),b.bboxwt.toString=p,b.dirty=0),b.bboxwt):((b.dirty||b.dirtyT||!b.bbox)&&((b.dirty||!this.realPath)&&(b.bboxwt=0,this.realPath=qb[this.type](this)),b.bbox=Bb(rb(this.realPath,this.matrix)),b.bbox.toString=p,b.dirty=b.dirtyT=0),b.bbox)},$b.clone=function(){if(this.removed)return null;var a=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(a),a},$b.glow=function(a){if(\"text\"==this.type)return null;a=a||{};var b={width:(a.width||10)+(+this.attr(\"stroke-width\")||1),fill:a.fill||!1,opacity:a.opacity||.5,offsetx:a.offsetx||0,offsety:a.offsety||0,color:a.color||\"#000\"},c=b.width/2,d=this.paper,e=d.set(),f=this.realPath||qb[this.type](this);f=this.matrix?rb(f,this.matrix):f;for(var g=1;c+1>g;g++)e.push(d.path(f).attr({stroke:b.color,fill:b.fill?b.color:\"none\",\"stroke-linejoin\":\"round\",\"stroke-linecap\":\"round\",\"stroke-width\":+(b.width/c*g).toFixed(3),opacity:+(b.opacity/c).toFixed(3)}));return e.insertBefore(this).translate(b.offsetx,b.offsety)};var cc=function(a,b,d,e,f,g,h,i,l){return null==l?j(a,b,d,e,f,g,h,i):c.findDotsAtSegment(a,b,d,e,f,g,h,i,k(a,b,d,e,f,g,h,i,l))},dc=function(a,b){return function(d,e,f){d=Kb(d);for(var g,h,i,j,k,l=\"\",m={},n=0,o=0,p=d.length;p>o;o++){if(i=d[o],\"M\"==i[0])g=+i[1],h=+i[2];else{if(j=cc(g,h,i[1],i[2],i[3],i[4],i[5],i[6]),n+j>e){if(b&&!m.start){if(k=cc(g,h,i[1],i[2],i[3],i[4],i[5],i[6],e-n),l+=[\"C\"+k.start.x,k.start.y,k.m.x,k.m.y,k.x,k.y],f)return l;m.start=l,l=[\"M\"+k.x,k.y+\"C\"+k.n.x,k.n.y,k.end.x,k.end.y,i[5],i[6]].join(),n+=j,g=+i[5],h=+i[6];continue}if(!a&&!b)return k=cc(g,h,i[1],i[2],i[3],i[4],i[5],i[6],e-n),{x:k.x,y:k.y,alpha:k.alpha}}n+=j,g=+i[5],h=+i[6]}l+=i.shift()+i}return m.end=l,k=a?n:b?m:c.findDotsAtSegment(g,h,i[0],i[1],i[2],i[3],i[4],i[5],1),k.alpha&&(k={x:k.x,y:k.y,alpha:k.alpha}),k}},ec=dc(1),fc=dc(),gc=dc(0,1);c.getTotalLength=ec,c.getPointAtLength=fc,c.getSubpath=function(a,b,c){if(this.getTotalLength(a)-c<1e-6)return gc(a,b).end;var d=gc(a,c,1);return b?gc(d,b).end:d},$b.getTotalLength=function(){var a=this.getPath();if(a)return this.node.getTotalLength?this.node.getTotalLength():ec(a)},$b.getPointAtLength=function(a){var b=this.getPath();if(b)return fc(b,a)},$b.getPath=function(){var a,b=c._getPath[this.type];if(\"text\"!=this.type&&\"set\"!=this.type)return b&&(a=b(this)),a},$b.getSubpath=function(a,b){var d=this.getPath();if(d)return c.getSubpath(d,a,b)};var hc=c.easing_formulas={linear:function(a){return a},\"<\":function(a){return R(a,1.7)},\">\":function(a){return R(a,.48)},\"<>\":function(a){var b=.48-a/1.04,c=N.sqrt(.1734+b*b),d=c-b,e=R(Q(d),1/3)*(0>d?-1:1),f=-c-b,g=R(Q(f),1/3)*(0>f?-1:1),h=e+g+.5;return 3*(1-h)*h*h+h*h*h},backIn:function(a){var b=1.70158;return a*a*((b+1)*a-b)},backOut:function(a){a-=1;var b=1.70158;return a*a*((b+1)*a+b)+1},elastic:function(a){return a==!!a?a:R(2,-10*a)*N.sin(2*(a-.075)*S/.3)+1},bounce:function(a){var b,c=7.5625,d=2.75;return 1/d>a?b=c*a*a:2/d>a?(a-=1.5/d,b=c*a*a+.75):2.5/d>a?(a-=2.25/d,b=c*a*a+.9375):(a-=2.625/d,b=c*a*a+.984375),b}};hc.easeIn=hc[\"ease-in\"]=hc[\"<\"],hc.easeOut=hc[\"ease-out\"]=hc[\">\"],hc.easeInOut=hc[\"ease-in-out\"]=hc[\"<>\"],hc[\"back-in\"]=hc.backIn,hc[\"back-out\"]=hc.backOut;var ic=[],jc=a.requestAnimationFrame||a.webkitRequestAnimationFrame||a.mozRequestAnimationFrame||a.oRequestAnimationFrame||a.msRequestAnimationFrame||function(a){setTimeout(a,16)},kc=function(){for(var a=+new Date,d=0;d<ic.length;d++){var e=ic[d];if(!e.el.removed&&!e.paused){var f,g,h=a-e.start,i=e.ms,j=e.easing,k=e.from,l=e.diff,m=e.to,n=(e.t,e.el),o={},p={};if(e.initstatus?(h=(e.initstatus*e.anim.top-e.prev)/(e.percent-e.prev)*i,e.status=e.initstatus,delete e.initstatus,e.stop&&ic.splice(d--,1)):e.status=(e.prev+(e.percent-e.prev)*(h/i))/e.anim.top,!(0>h))if(i>h){var q=j(h/i);for(var r in k)if(k[z](r)){switch(db[r]){case T:f=+k[r]+q*i*l[r];break;case\"colour\":f=\"rgb(\"+[lc($(k[r].r+q*i*l[r].r)),lc($(k[r].g+q*i*l[r].g)),lc($(k[r].b+q*i*l[r].b))].join(\",\")+\")\";break;case\"path\":f=[];for(var t=0,u=k[r].length;u>t;t++){f[t]=[k[r][t][0]];for(var v=1,w=k[r][t].length;w>v;v++)f[t][v]=+k[r][t][v]+q*i*l[r][t][v];f[t]=f[t].join(H)}f=f.join(H);break;case\"transform\":if(l[r].real)for(f=[],t=0,u=k[r].length;u>t;t++)for(f[t]=[k[r][t][0]],v=1,w=k[r][t].length;w>v;v++)f[t][v]=k[r][t][v]+q*i*l[r][t][v];else{var x=function(a){return+k[r][a]+q*i*l[r][a]};f=[[\"m\",x(0),x(1),x(2),x(3),x(4),x(5)]]}break;case\"csv\":if(\"clip-rect\"==r)for(f=[],t=4;t--;)f[t]=+k[r][t]+q*i*l[r][t];break;default:var y=[][E](k[r]);for(f=[],t=n.paper.customAttributes[r].length;t--;)f[t]=+y[t]+q*i*l[r][t]}o[r]=f}n.attr(o),function(a,c,d){setTimeout(function(){b(\"raphael.anim.frame.\"+a,c,d)})}(n.id,n,e.anim)}else{if(function(a,d,e){setTimeout(function(){b(\"raphael.anim.frame.\"+d.id,d,e),b(\"raphael.anim.finish.\"+d.id,d,e),c.is(a,\"function\")&&a.call(d)})}(e.callback,n,e.anim),n.attr(m),ic.splice(d--,1),e.repeat>1&&!e.next){for(g in m)m[z](g)&&(p[g]=e.totalOrigin[g]);e.el.attr(p),s(e.anim,e.el,e.anim.percents[0],null,e.totalOrigin,e.repeat-1)}e.next&&!e.stop&&s(e.anim,e.el,e.next,null,e.totalOrigin,e.repeat)}}}c.svg&&n&&n.paper&&n.paper.safari(),ic.length&&jc(kc)},lc=function(a){return a>255?255:0>a?0:a};$b.animateWith=function(a,b,d,e,f,g){var h=this;if(h.removed)return g&&g.call(h),h;var i=d instanceof r?d:c.animation(d,e,f,g);s(i,h,i.percents[0],null,h.attr());for(var j=0,k=ic.length;k>j;j++)if(ic[j].anim==b&&ic[j].el==a){ic[k-1].start=ic[j].start;break}return h},$b.onAnimation=function(a){return a?b.on(\"raphael.anim.frame.\"+this.id,a):b.unbind(\"raphael.anim.frame.\"+this.id),this},r.prototype.delay=function(a){var b=new r(this.anim,this.ms);return b.times=this.times,b.del=+a||0,b},r.prototype.repeat=function(a){var b=new r(this.anim,this.ms);return b.del=this.del,b.times=N.floor(O(a,0))||1,b},c.animation=function(a,b,d,e){if(a instanceof r)return a;(c.is(d,\"function\")||!d)&&(e=e||d||null,d=null),a=Object(a),b=+b||0;var f,g,h={};for(g in a)a[z](g)&&_(g)!=g&&_(g)+\"%\"!=g&&(f=!0,h[g]=a[g]);return f?(d&&(h.easing=d),e&&(h.callback=e),new r({100:h},b)):new r(a,b)},$b.animate=function(a,b,d,e){var f=this;if(f.removed)return e&&e.call(f),f;var g=a instanceof r?a:c.animation(a,b,d,e);return s(g,f,g.percents[0],null,f.attr()),f},$b.setTime=function(a,b){return a&&null!=b&&this.status(a,P(b,a.ms)/a.ms),this},$b.status=function(a,b){var c,d,e=[],f=0;if(null!=b)return s(a,this,-1,P(b,1)),this;for(c=ic.length;c>f;f++)if(d=ic[f],d.el.id==this.id&&(!a||d.anim==a)){if(a)return d.status;e.push({anim:d.anim,status:d.status})}return a?0:e},$b.pause=function(a){for(var c=0;c<ic.length;c++)ic[c].el.id!=this.id||a&&ic[c].anim!=a||b(\"raphael.anim.pause.\"+this.id,this,ic[c].anim)!==!1&&(ic[c].paused=!0);return this},$b.resume=function(a){for(var c=0;c<ic.length;c++)if(ic[c].el.id==this.id&&(!a||ic[c].anim==a)){var d=ic[c];b(\"raphael.anim.resume.\"+this.id,this,d.anim)!==!1&&(delete d.paused,this.status(d.anim,d.status))}return this},$b.stop=function(a){for(var c=0;c<ic.length;c++)ic[c].el.id!=this.id||a&&ic[c].anim!=a||b(\"raphael.anim.stop.\"+this.id,this,ic[c].anim)!==!1&&ic.splice(c--,1);return this},b.on(\"raphael.remove\",t),b.on(\"raphael.clear\",t),$b.toString=function(){return\"Raphaël’s object\"};var mc=function(a){if(this.items=[],this.length=0,this.type=\"set\",a)for(var b=0,c=a.length;c>b;b++)!a[b]||a[b].constructor!=$b.constructor&&a[b].constructor!=mc||(this[this.items.length]=this.items[this.items.length]=a[b],this.length++)},nc=mc.prototype;nc.push=function(){for(var a,b,c=0,d=arguments.length;d>c;c++)a=arguments[c],!a||a.constructor!=$b.constructor&&a.constructor!=mc||(b=this.items.length,this[b]=this.items[b]=a,this.length++);return this},nc.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},nc.forEach=function(a,b){for(var c=0,d=this.items.length;d>c;c++)if(a.call(b,this.items[c],c)===!1)return this;return this};for(var oc in $b)$b[z](oc)&&(nc[oc]=function(a){return function(){var b=arguments;return this.forEach(function(c){c[a][D](c,b)})}}(oc));return nc.attr=function(a,b){if(a&&c.is(a,V)&&c.is(a[0],\"object\"))for(var d=0,e=a.length;e>d;d++)this.items[d].attr(a[d]);else for(var f=0,g=this.items.length;g>f;f++)this.items[f].attr(a,b);return this},nc.clear=function(){for(;this.length;)this.pop()},nc.splice=function(a,b){a=0>a?O(this.length+a,0):a,b=O(0,P(this.length-a,b));var c,d=[],e=[],f=[];for(c=2;c<arguments.length;c++)f.push(arguments[c]);for(c=0;b>c;c++)e.push(this[a+c]);for(;c<this.length-a;c++)d.push(this[a+c]);var g=f.length;for(c=0;c<g+d.length;c++)this.items[a+c]=this[a+c]=g>c?f[c]:d[c-g];for(c=this.items.length=this.length-=b-g;this[c];)delete this[c++];return new mc(e)},nc.exclude=function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]==a)return this.splice(b,1),!0},nc.animate=function(a,b,d,e){(c.is(d,\"function\")||!d)&&(e=d||null);var f,g,h=this.items.length,i=h,j=this;if(!h)return this;e&&(g=function(){!--h&&e.call(j)}),d=c.is(d,U)?d:g;var k=c.animation(a,b,d,g);for(f=this.items[--i].animate(k);i--;)this.items[i]&&!this.items[i].removed&&this.items[i].animateWith(f,k,k),this.items[i]&&!this.items[i].removed||h--;return this},nc.insertAfter=function(a){for(var b=this.items.length;b--;)this.items[b].insertAfter(a);return this},nc.getBBox=function(){for(var a=[],b=[],c=[],d=[],e=this.items.length;e--;)if(!this.items[e].removed){var f=this.items[e].getBBox();a.push(f.x),b.push(f.y),c.push(f.x+f.width),d.push(f.y+f.height)}return a=P[D](0,a),b=P[D](0,b),c=O[D](0,c),d=O[D](0,d),{x:a,y:b,x2:c,y2:d,width:c-a,height:d-b}},nc.clone=function(a){a=this.paper.set();for(var b=0,c=this.items.length;c>b;b++)a.push(this.items[b].clone());return a},nc.toString=function(){return\"Raphaël‘s set\"},nc.glow=function(a){var b=this.paper.set();return this.forEach(function(c){var d=c.glow(a);null!=d&&d.forEach(function(a){b.push(a)})}),b},nc.isPointInside=function(a,b){var c=!1;return this.forEach(function(d){return d.isPointInside(a,b)?(c=!0,!1):void 0}),c},c.registerFont=function(a){if(!a.face)return a;this.fonts=this.fonts||{};var b={w:a.w,face:{},glyphs:{}},c=a.face[\"font-family\"];for(var d in a.face)a.face[z](d)&&(b.face[d]=a.face[d]);if(this.fonts[c]?this.fonts[c].push(b):this.fonts[c]=[b],!a.svg){b.face[\"units-per-em\"]=ab(a.face[\"units-per-em\"],10);for(var e in a.glyphs)if(a.glyphs[z](e)){var f=a.glyphs[e];if(b.glyphs[e]={w:f.w,k:{},d:f.d&&\"M\"+f.d.replace(/[mlcxtrv]/g,function(a){return{l:\"L\",c:\"C\",x:\"z\",t:\"m\",r:\"l\",v:\"c\"}[a]||\"M\"})+\"z\"},f.k)for(var g in f.k)f[z](g)&&(b.glyphs[e].k[g]=f.k[g])}}return a},v.getFont=function(a,b,d,e){if(e=e||\"normal\",d=d||\"normal\",b=+b||{normal:400,bold:700,lighter:300,bolder:800}[b]||400,c.fonts){var f=c.fonts[a];if(!f){var g=new RegExp(\"(^|\\\\s)\"+a.replace(/[^\\w\\d\\s+!~.:_-]/g,G)+\"(\\\\s|$)\",\"i\");for(var h in c.fonts)if(c.fonts[z](h)&&g.test(h)){f=c.fonts[h];break}}var i;if(f)for(var j=0,k=f.length;k>j&&(i=f[j],i.face[\"font-weight\"]!=b||i.face[\"font-style\"]!=d&&i.face[\"font-style\"]||i.face[\"font-stretch\"]!=e);j++);return i}},v.print=function(a,b,d,e,f,g,h,i){g=g||\"middle\",h=O(P(h||0,1),-1),i=O(P(i||1,3),1);var j,k=I(d)[J](G),l=0,m=0,n=G;if(c.is(e,\"string\")&&(e=this.getFont(e)),e){j=(f||16)/e.face[\"units-per-em\"];for(var o=e.face.bbox[J](w),p=+o[0],q=o[3]-o[1],r=0,s=+o[1]+(\"baseline\"==g?q+ +e.face.descent:q/2),t=0,u=k.length;u>t;t++){if(\"\\n\"==k[t])l=0,x=0,m=0,r+=q*i;else{var v=m&&e.glyphs[k[t-1]]||{},x=e.glyphs[k[t]];l+=m?(v.w||e.w)+(v.k&&v.k[k[t]]||0)+e.w*h:0,m=1}x&&x.d&&(n+=c.transformPath(x.d,[\"t\",l*j,r*j,\"s\",j,j,p,s,\"t\",(a-p)/j,(b-s)/j]))}}return this.path(n).attr({fill:\"#000\",stroke:\"none\"})},v.add=function(a){if(c.is(a,\"array\"))for(var b,d=this.set(),e=0,f=a.length;f>e;e++)b=a[e]||{},x[z](b.type)&&d.push(this[b.type]().attr(b));return d},c.format=function(a,b){var d=c.is(b,V)?[0][E](b):arguments;return a&&c.is(a,U)&&d.length-1&&(a=a.replace(y,function(a,b){return null==d[++b]?G:d[b]})),a||G},c.fullfill=function(){var a=/\\{([^\\}]+)\\}/g,b=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,c=function(a,c,d){var e=d;return c.replace(b,function(a,b,c,d,f){b=b||d,e&&(b in e&&(e=e[b]),\"function\"==typeof e&&f&&(e=e()))}),e=(null==e||e==d?a:e)+\"\"};return function(b,d){return String(b).replace(a,function(a,b){return c(a,b,d)})}}(),c.ninja=function(){return B.was?A.win.Raphael=B.is:delete Raphael,c},c.st=nc,function(a,b,d){function e(){/in/.test(a.readyState)?setTimeout(e,9):c.eve(\"raphael.DOMload\")}null==a.readyState&&a.addEventListener&&(a.addEventListener(b,d=function(){a.removeEventListener(b,d,!1),a.readyState=\"complete\"},!1),a.readyState=\"loading\"),e()}(document,\"DOMContentLoaded\"),b.on(\"raphael.DOMload\",function(){u=!0}),function(){if(c.svg){var a=\"hasOwnProperty\",b=String,d=parseFloat,e=parseInt,f=Math,g=f.max,h=f.abs,i=f.pow,j=/[, ]+/,k=c.eve,l=\"\",m=\" \",n=\"http://www.w3.org/1999/xlink\",o={block:\"M5,0 0,2.5 5,5z\",classic:\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",diamond:\"M2.5,0 5,2.5 2.5,5 0,2.5z\",open:\"M6,1 1,3.5 6,6\",oval:\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"},p={};c.toString=function(){return\"Your browser supports SVG.\\nYou are running Raphaël \"+this.version};var q=function(d,e){if(e){\"string\"==typeof d&&(d=q(d));for(var f in e)e[a](f)&&(\"xlink:\"==f.substring(0,6)?d.setAttributeNS(n,f.substring(6),b(e[f])):d.setAttribute(f,b(e[f])))}else d=c._g.doc.createElementNS(\"http://www.w3.org/2000/svg\",d),d.style&&(d.style.webkitTapHighlightColor=\"rgba(0,0,0,0)\");return d},r=function(a,e){var j=\"linear\",k=a.id+e,m=.5,n=.5,o=a.node,p=a.paper,r=o.style,s=c._g.doc.getElementById(k);if(!s){if(e=b(e).replace(c._radial_gradient,function(a,b,c){if(j=\"radial\",b&&c){m=d(b),n=d(c);var e=2*(n>.5)-1;i(m-.5,2)+i(n-.5,2)>.25&&(n=f.sqrt(.25-i(m-.5,2))*e+.5)&&.5!=n&&(n=n.toFixed(5)-1e-5*e)}return l}),e=e.split(/\\s*\\-\\s*/),\"linear\"==j){var t=e.shift();if(t=-d(t),isNaN(t))return null;var u=[0,0,f.cos(c.rad(t)),f.sin(c.rad(t))],v=1/(g(h(u[2]),h(u[3]))||1);u[2]*=v,u[3]*=v,u[2]<0&&(u[0]=-u[2],u[2]=0),u[3]<0&&(u[1]=-u[3],u[3]=0)}var w=c._parseDots(e);if(!w)return null;if(k=k.replace(/[\\(\\)\\s,\\xb0#]/g,\"_\"),a.gradient&&k!=a.gradient.id&&(p.defs.removeChild(a.gradient),delete a.gradient),!a.gradient){s=q(j+\"Gradient\",{id:k}),a.gradient=s,q(s,\"radial\"==j?{fx:m,fy:n}:{x1:u[0],y1:u[1],x2:u[2],y2:u[3],gradientTransform:a.matrix.invert()}),p.defs.appendChild(s);for(var x=0,y=w.length;y>x;x++)s.appendChild(q(\"stop\",{offset:w[x].offset?w[x].offset:x?\"100%\":\"0%\",\"stop-color\":w[x].color||\"#fff\"}))}}return q(o,{fill:\"url(#\"+k+\")\",opacity:1,\"fill-opacity\":1}),r.fill=l,r.opacity=1,r.fillOpacity=1,1},s=function(a){var b=a.getBBox(1);q(a.pattern,{patternTransform:a.matrix.invert()+\" translate(\"+b.x+\",\"+b.y+\")\"})},t=function(d,e,f){if(\"path\"==d.type){for(var g,h,i,j,k,m=b(e).toLowerCase().split(\"-\"),n=d.paper,r=f?\"end\":\"start\",s=d.node,t=d.attrs,u=t[\"stroke-width\"],v=m.length,w=\"classic\",x=3,y=3,z=5;v--;)switch(m[v]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":w=m[v];break;case\"wide\":y=5;break;case\"narrow\":y=2;break;case\"long\":x=5;break;case\"short\":x=2}if(\"open\"==w?(x+=2,y+=2,z+=2,i=1,j=f?4:1,k={fill:\"none\",stroke:t.stroke}):(j=i=x/2,k={fill:t.stroke,stroke:\"none\"}),d._.arrows?f?(d._.arrows.endPath&&p[d._.arrows.endPath]--,d._.arrows.endMarker&&p[d._.arrows.endMarker]--):(d._.arrows.startPath&&p[d._.arrows.startPath]--,d._.arrows.startMarker&&p[d._.arrows.startMarker]--):d._.arrows={},\"none\"!=w){var A=\"raphael-marker-\"+w,B=\"raphael-marker-\"+r+w+x+y;c._g.doc.getElementById(A)?p[A]++:(n.defs.appendChild(q(q(\"path\"),{\"stroke-linecap\":\"round\",d:o[w],id:A})),p[A]=1);var C,D=c._g.doc.getElementById(B);D?(p[B]++,C=D.getElementsByTagName(\"use\")[0]):(D=q(q(\"marker\"),{id:B,markerHeight:y,markerWidth:x,orient:\"auto\",refX:j,refY:y/2}),C=q(q(\"use\"),{\"xlink:href\":\"#\"+A,transform:(f?\"rotate(180 \"+x/2+\" \"+y/2+\") \":l)+\"scale(\"+x/z+\",\"+y/z+\")\",\"stroke-width\":(1/((x/z+y/z)/2)).toFixed(4)}),D.appendChild(C),n.defs.appendChild(D),p[B]=1),q(C,k);var E=i*(\"diamond\"!=w&&\"oval\"!=w);f?(g=d._.arrows.startdx*u||0,h=c.getTotalLength(t.path)-E*u):(g=E*u,h=c.getTotalLength(t.path)-(d._.arrows.enddx*u||0)),k={},k[\"marker-\"+r]=\"url(#\"+B+\")\",(h||g)&&(k.d=c.getSubpath(t.path,g,h)),q(s,k),d._.arrows[r+\"Path\"]=A,d._.arrows[r+\"Marker\"]=B,d._.arrows[r+\"dx\"]=E,d._.arrows[r+\"Type\"]=w,d._.arrows[r+\"String\"]=e}else f?(g=d._.arrows.startdx*u||0,h=c.getTotalLength(t.path)-g):(g=0,h=c.getTotalLength(t.path)-(d._.arrows.enddx*u||0)),d._.arrows[r+\"Path\"]&&q(s,{d:c.getSubpath(t.path,g,h)}),delete d._.arrows[r+\"Path\"],delete d._.arrows[r+\"Marker\"],delete d._.arrows[r+\"dx\"],delete d._.arrows[r+\"Type\"],delete d._.arrows[r+\"String\"];for(k in p)if(p[a](k)&&!p[k]){var F=c._g.doc.getElementById(k);F&&F.parentNode.removeChild(F)}}},u={\"\":[0],none:[0],\"-\":[3,1],\".\":[1,1],\"-.\":[3,1,1,1],\"-..\":[3,1,1,1,1,1],\". \":[1,3],\"- \":[4,3],\"--\":[8,3],\"- .\":[4,3,1,3],\"--.\":[8,3,1,3],\"--..\":[8,3,1,3,1,3]},v=function(a,c,d){if(c=u[b(c).toLowerCase()]){for(var e=a.attrs[\"stroke-width\"]||\"1\",f={round:e,square:e,butt:0}[a.attrs[\"stroke-linecap\"]||d[\"stroke-linecap\"]]||0,g=[],h=c.length;h--;)g[h]=c[h]*e+(h%2?1:-1)*f;q(a.node,{\"stroke-dasharray\":g.join(\",\")})}},w=function(d,f){var i=d.node,k=d.attrs,m=i.style.visibility;i.style.visibility=\"hidden\";for(var o in f)if(f[a](o)){if(!c._availableAttrs[a](o))continue;var p=f[o];switch(k[o]=p,o){case\"blur\":d.blur(p);break;case\"title\":var u=i.getElementsByTagName(\"title\");if(u.length&&(u=u[0]))u.firstChild.nodeValue=p;else{u=q(\"title\");var w=c._g.doc.createTextNode(p);u.appendChild(w),i.appendChild(u)}break;case\"href\":case\"target\":var x=i.parentNode;if(\"a\"!=x.tagName.toLowerCase()){var z=q(\"a\");x.insertBefore(z,i),z.appendChild(i),x=z}\"target\"==o?x.setAttributeNS(n,\"show\",\"blank\"==p?\"new\":p):x.setAttributeNS(n,o,p);break;case\"cursor\":i.style.cursor=p;break;case\"transform\":d.transform(p);break;case\"arrow-start\":t(d,p);break;case\"arrow-end\":t(d,p,1);break;case\"clip-rect\":var A=b(p).split(j);if(4==A.length){d.clip&&d.clip.parentNode.parentNode.removeChild(d.clip.parentNode);var B=q(\"clipPath\"),C=q(\"rect\");B.id=c.createUUID(),q(C,{x:A[0],y:A[1],width:A[2],height:A[3]}),B.appendChild(C),d.paper.defs.appendChild(B),q(i,{\"clip-path\":\"url(#\"+B.id+\")\"}),d.clip=C}if(!p){var D=i.getAttribute(\"clip-path\");if(D){var E=c._g.doc.getElementById(D.replace(/(^url\\(#|\\)$)/g,l));E&&E.parentNode.removeChild(E),q(i,{\"clip-path\":l}),delete d.clip}}break;case\"path\":\"path\"==d.type&&(q(i,{d:p?k.path=c._pathToAbsolute(p):\"M0,0\"}),d._.dirty=1,d._.arrows&&(\"startString\"in d._.arrows&&t(d,d._.arrows.startString),\"endString\"in d._.arrows&&t(d,d._.arrows.endString,1)));break;case\"width\":if(i.setAttribute(o,p),d._.dirty=1,!k.fx)break;o=\"x\",p=k.x;case\"x\":k.fx&&(p=-k.x-(k.width||0));case\"rx\":if(\"rx\"==o&&\"rect\"==d.type)break;case\"cx\":i.setAttribute(o,p),d.pattern&&s(d),d._.dirty=1;break;case\"height\":if(i.setAttribute(o,p),d._.dirty=1,!k.fy)break;o=\"y\",p=k.y;case\"y\":k.fy&&(p=-k.y-(k.height||0));case\"ry\":if(\"ry\"==o&&\"rect\"==d.type)break;case\"cy\":i.setAttribute(o,p),d.pattern&&s(d),d._.dirty=1;break;case\"r\":\"rect\"==d.type?q(i,{rx:p,ry:p}):i.setAttribute(o,p),d._.dirty=1;break;case\"src\":\"image\"==d.type&&i.setAttributeNS(n,\"href\",p);break;case\"stroke-width\":(1!=d._.sx||1!=d._.sy)&&(p/=g(h(d._.sx),h(d._.sy))||1),d.paper._vbSize&&(p*=d.paper._vbSize),i.setAttribute(o,p),k[\"stroke-dasharray\"]&&v(d,k[\"stroke-dasharray\"],f),d._.arrows&&(\"startString\"in d._.arrows&&t(d,d._.arrows.startString),\"endString\"in d._.arrows&&t(d,d._.arrows.endString,1));break;case\"stroke-dasharray\":v(d,p,f);break;case\"fill\":var F=b(p).match(c._ISURL);if(F){B=q(\"pattern\");var G=q(\"image\");B.id=c.createUUID(),q(B,{x:0,y:0,patternUnits:\"userSpaceOnUse\",height:1,width:1}),q(G,{x:0,y:0,\"xlink:href\":F[1]}),B.appendChild(G),function(a){c._preload(F[1],function(){var b=this.offsetWidth,c=this.offsetHeight;q(a,{width:b,height:c}),q(G,{width:b,height:c}),d.paper.safari()})}(B),d.paper.defs.appendChild(B),q(i,{fill:\"url(#\"+B.id+\")\"}),d.pattern=B,d.pattern&&s(d);break}var H=c.getRGB(p);if(H.error){if((\"circle\"==d.type||\"ellipse\"==d.type||\"r\"!=b(p).charAt())&&r(d,p)){if(\"opacity\"in k||\"fill-opacity\"in k){var I=c._g.doc.getElementById(i.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,l));if(I){var J=I.getElementsByTagName(\"stop\");q(J[J.length-1],{\"stop-opacity\":(\"opacity\"in k?k.opacity:1)*(\"fill-opacity\"in k?k[\"fill-opacity\"]:1)})}}k.gradient=p,k.fill=\"none\";break}}else delete f.gradient,delete k.gradient,!c.is(k.opacity,\"undefined\")&&c.is(f.opacity,\"undefined\")&&q(i,{opacity:k.opacity}),!c.is(k[\"fill-opacity\"],\"undefined\")&&c.is(f[\"fill-opacity\"],\"undefined\")&&q(i,{\"fill-opacity\":k[\"fill-opacity\"]});H[a](\"opacity\")&&q(i,{\"fill-opacity\":H.opacity>1?H.opacity/100:H.opacity});case\"stroke\":H=c.getRGB(p),i.setAttribute(o,H.hex),\"stroke\"==o&&H[a](\"opacity\")&&q(i,{\"stroke-opacity\":H.opacity>1?H.opacity/100:H.opacity}),\"stroke\"==o&&d._.arrows&&(\"startString\"in d._.arrows&&t(d,d._.arrows.startString),\"endString\"in d._.arrows&&t(d,d._.arrows.endString,1));break;case\"gradient\":(\"circle\"==d.type||\"ellipse\"==d.type||\"r\"!=b(p).charAt())&&r(d,p);break;case\"opacity\":k.gradient&&!k[a](\"stroke-opacity\")&&q(i,{\"stroke-opacity\":p>1?p/100:p});case\"fill-opacity\":if(k.gradient){I=c._g.doc.getElementById(i.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,l)),I&&(J=I.getElementsByTagName(\"stop\"),q(J[J.length-1],{\"stop-opacity\":p}));break}default:\"font-size\"==o&&(p=e(p,10)+\"px\");var K=o.replace(/(\\-.)/g,function(a){return a.substring(1).toUpperCase()});i.style[K]=p,d._.dirty=1,i.setAttribute(o,p)}}y(d,f),i.style.visibility=m},x=1.2,y=function(d,f){if(\"text\"==d.type&&(f[a](\"text\")||f[a](\"font\")||f[a](\"font-size\")||f[a](\"x\")||f[a](\"y\"))){var g=d.attrs,h=d.node,i=h.firstChild?e(c._g.doc.defaultView.getComputedStyle(h.firstChild,l).getPropertyValue(\"font-size\"),10):10;\nif(f[a](\"text\")){for(g.text=f.text;h.firstChild;)h.removeChild(h.firstChild);for(var j,k=b(f.text).split(\"\\n\"),m=[],n=0,o=k.length;o>n;n++)j=q(\"tspan\"),n&&q(j,{dy:i*x,x:g.x}),j.appendChild(c._g.doc.createTextNode(k[n])),h.appendChild(j),m[n]=j}else for(m=h.getElementsByTagName(\"tspan\"),n=0,o=m.length;o>n;n++)n?q(m[n],{dy:i*x,x:g.x}):q(m[0],{dy:0});q(h,{x:g.x,y:g.y}),d._.dirty=1;var p=d._getBBox(),r=g.y-(p.y+p.height/2);r&&c.is(r,\"finite\")&&q(m[0],{dy:r})}},z=function(a,b){this[0]=this.node=a,a.raphael=!0,this.id=c._oid++,a.raphaelid=this.id,this.matrix=c.matrix(),this.realPath=null,this.paper=b,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!b.bottom&&(b.bottom=this),this.prev=b.top,b.top&&(b.top.next=this),b.top=this,this.next=null},A=c.el;z.prototype=A,A.constructor=z,c._engine.path=function(a,b){var c=q(\"path\");b.canvas&&b.canvas.appendChild(c);var d=new z(c,b);return d.type=\"path\",w(d,{fill:\"none\",stroke:\"#000\",path:a}),d},A.rotate=function(a,c,e){if(this.removed)return this;if(a=b(a).split(j),a.length-1&&(c=d(a[1]),e=d(a[2])),a=d(a[0]),null==e&&(c=e),null==c||null==e){var f=this.getBBox(1);c=f.x+f.width/2,e=f.y+f.height/2}return this.transform(this._.transform.concat([[\"r\",a,c,e]])),this},A.scale=function(a,c,e,f){if(this.removed)return this;if(a=b(a).split(j),a.length-1&&(c=d(a[1]),e=d(a[2]),f=d(a[3])),a=d(a[0]),null==c&&(c=a),null==f&&(e=f),null==e||null==f)var g=this.getBBox(1);return e=null==e?g.x+g.width/2:e,f=null==f?g.y+g.height/2:f,this.transform(this._.transform.concat([[\"s\",a,c,e,f]])),this},A.translate=function(a,c){return this.removed?this:(a=b(a).split(j),a.length-1&&(c=d(a[1])),a=d(a[0])||0,c=+c||0,this.transform(this._.transform.concat([[\"t\",a,c]])),this)},A.transform=function(b){var d=this._;if(null==b)return d.transform;if(c._extractTransform(this,b),this.clip&&q(this.clip,{transform:this.matrix.invert()}),this.pattern&&s(this),this.node&&q(this.node,{transform:this.matrix}),1!=d.sx||1!=d.sy){var e=this.attrs[a](\"stroke-width\")?this.attrs[\"stroke-width\"]:1;this.attr({\"stroke-width\":e})}return this},A.hide=function(){return!this.removed&&this.paper.safari(this.node.style.display=\"none\"),this},A.show=function(){return!this.removed&&this.paper.safari(this.node.style.display=\"\"),this},A.remove=function(){if(!this.removed&&this.node.parentNode){var a=this.paper;a.__set__&&a.__set__.exclude(this),k.unbind(\"raphael.*.*.\"+this.id),this.gradient&&a.defs.removeChild(this.gradient),c._tear(this,a),\"a\"==this.node.parentNode.tagName.toLowerCase()?this.node.parentNode.parentNode.removeChild(this.node.parentNode):this.node.parentNode.removeChild(this.node);for(var b in this)this[b]=\"function\"==typeof this[b]?c._removedFactory(b):null;this.removed=!0}},A._getBBox=function(){if(\"none\"==this.node.style.display){this.show();var a=!0}var b={};try{b=this.node.getBBox()}catch(c){}finally{b=b||{}}return a&&this.hide(),b},A.attr=function(b,d){if(this.removed)return this;if(null==b){var e={};for(var f in this.attrs)this.attrs[a](f)&&(e[f]=this.attrs[f]);return e.gradient&&\"none\"==e.fill&&(e.fill=e.gradient)&&delete e.gradient,e.transform=this._.transform,e}if(null==d&&c.is(b,\"string\")){if(\"fill\"==b&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if(\"transform\"==b)return this._.transform;for(var g=b.split(j),h={},i=0,l=g.length;l>i;i++)b=g[i],h[b]=b in this.attrs?this.attrs[b]:c.is(this.paper.customAttributes[b],\"function\")?this.paper.customAttributes[b].def:c._availableAttrs[b];return l-1?h:h[g[0]]}if(null==d&&c.is(b,\"array\")){for(h={},i=0,l=b.length;l>i;i++)h[b[i]]=this.attr(b[i]);return h}if(null!=d){var m={};m[b]=d}else null!=b&&c.is(b,\"object\")&&(m=b);for(var n in m)k(\"raphael.attr.\"+n+\".\"+this.id,this,m[n]);for(n in this.paper.customAttributes)if(this.paper.customAttributes[a](n)&&m[a](n)&&c.is(this.paper.customAttributes[n],\"function\")){var o=this.paper.customAttributes[n].apply(this,[].concat(m[n]));this.attrs[n]=m[n];for(var p in o)o[a](p)&&(m[p]=o[p])}return w(this,m),this},A.toFront=function(){if(this.removed)return this;\"a\"==this.node.parentNode.tagName.toLowerCase()?this.node.parentNode.parentNode.appendChild(this.node.parentNode):this.node.parentNode.appendChild(this.node);var a=this.paper;return a.top!=this&&c._tofront(this,a),this},A.toBack=function(){if(this.removed)return this;var a=this.node.parentNode;\"a\"==a.tagName.toLowerCase()?a.parentNode.insertBefore(this.node.parentNode,this.node.parentNode.parentNode.firstChild):a.firstChild!=this.node&&a.insertBefore(this.node,this.node.parentNode.firstChild),c._toback(this,this.paper);this.paper;return this},A.insertAfter=function(a){if(this.removed)return this;var b=a.node||a[a.length-1].node;return b.nextSibling?b.parentNode.insertBefore(this.node,b.nextSibling):b.parentNode.appendChild(this.node),c._insertafter(this,a,this.paper),this},A.insertBefore=function(a){if(this.removed)return this;var b=a.node||a[0].node;return b.parentNode.insertBefore(this.node,b),c._insertbefore(this,a,this.paper),this},A.blur=function(a){var b=this;if(0!==+a){var d=q(\"filter\"),e=q(\"feGaussianBlur\");b.attrs.blur=a,d.id=c.createUUID(),q(e,{stdDeviation:+a||1.5}),d.appendChild(e),b.paper.defs.appendChild(d),b._blur=d,q(b.node,{filter:\"url(#\"+d.id+\")\"})}else b._blur&&(b._blur.parentNode.removeChild(b._blur),delete b._blur,delete b.attrs.blur),b.node.removeAttribute(\"filter\");return b},c._engine.circle=function(a,b,c,d){var e=q(\"circle\");a.canvas&&a.canvas.appendChild(e);var f=new z(e,a);return f.attrs={cx:b,cy:c,r:d,fill:\"none\",stroke:\"#000\"},f.type=\"circle\",q(e,f.attrs),f},c._engine.rect=function(a,b,c,d,e,f){var g=q(\"rect\");a.canvas&&a.canvas.appendChild(g);var h=new z(g,a);return h.attrs={x:b,y:c,width:d,height:e,r:f||0,rx:f||0,ry:f||0,fill:\"none\",stroke:\"#000\"},h.type=\"rect\",q(g,h.attrs),h},c._engine.ellipse=function(a,b,c,d,e){var f=q(\"ellipse\");a.canvas&&a.canvas.appendChild(f);var g=new z(f,a);return g.attrs={cx:b,cy:c,rx:d,ry:e,fill:\"none\",stroke:\"#000\"},g.type=\"ellipse\",q(f,g.attrs),g},c._engine.image=function(a,b,c,d,e,f){var g=q(\"image\");q(g,{x:c,y:d,width:e,height:f,preserveAspectRatio:\"none\"}),g.setAttributeNS(n,\"href\",b),a.canvas&&a.canvas.appendChild(g);var h=new z(g,a);return h.attrs={x:c,y:d,width:e,height:f,src:b},h.type=\"image\",h},c._engine.text=function(a,b,d,e){var f=q(\"text\");a.canvas&&a.canvas.appendChild(f);var g=new z(f,a);return g.attrs={x:b,y:d,\"text-anchor\":\"middle\",text:e,font:c._availableAttrs.font,stroke:\"none\",fill:\"#000\"},g.type=\"text\",w(g,g.attrs),g},c._engine.setSize=function(a,b){return this.width=a||this.width,this.height=b||this.height,this.canvas.setAttribute(\"width\",this.width),this.canvas.setAttribute(\"height\",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},c._engine.create=function(){var a=c._getContainer.apply(0,arguments),b=a&&a.container,d=a.x,e=a.y,f=a.width,g=a.height;if(!b)throw new Error(\"SVG container not found.\");var h,i=q(\"svg\"),j=\"overflow:hidden;\";return d=d||0,e=e||0,f=f||512,g=g||342,q(i,{height:g,version:1.1,width:f,xmlns:\"http://www.w3.org/2000/svg\"}),1==b?(i.style.cssText=j+\"position:absolute;left:\"+d+\"px;top:\"+e+\"px\",c._g.doc.body.appendChild(i),h=1):(i.style.cssText=j+\"position:relative\",b.firstChild?b.insertBefore(i,b.firstChild):b.appendChild(i)),b=new c._Paper,b.width=f,b.height=g,b.canvas=i,b.clear(),b._left=b._top=0,h&&(b.renderfix=function(){}),b.renderfix(),b},c._engine.setViewBox=function(a,b,c,d,e){k(\"raphael.setViewBox\",this,this._viewBox,[a,b,c,d,e]);var f,h,i=g(c/this.width,d/this.height),j=this.top,l=e?\"xMidYMid meet\":\"xMinYMin\";for(null==a?(this._vbSize&&(i=1),delete this._vbSize,f=\"0 0 \"+this.width+m+this.height):(this._vbSize=i,f=a+m+b+m+c+m+d),q(this.canvas,{viewBox:f,preserveAspectRatio:l});i&&j;)h=\"stroke-width\"in j.attrs?j.attrs[\"stroke-width\"]:1,j.attr({\"stroke-width\":h}),j._.dirty=1,j._.dirtyT=1,j=j.prev;return this._viewBox=[a,b,c,d,!!e],this},c.prototype.renderfix=function(){var a,b=this.canvas,c=b.style;try{a=b.getScreenCTM()||b.createSVGMatrix()}catch(d){a=b.createSVGMatrix()}var e=-a.e%1,f=-a.f%1;(e||f)&&(e&&(this._left=(this._left+e)%1,c.left=this._left+\"px\"),f&&(this._top=(this._top+f)%1,c.top=this._top+\"px\"))},c.prototype.clear=function(){c.eve(\"raphael.clear\",this);for(var a=this.canvas;a.firstChild;)a.removeChild(a.firstChild);this.bottom=this.top=null,(this.desc=q(\"desc\")).appendChild(c._g.doc.createTextNode(\"Created with Raphaël \"+c.version)),a.appendChild(this.desc),a.appendChild(this.defs=q(\"defs\"))},c.prototype.remove=function(){k(\"raphael.remove\",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var a in this)this[a]=\"function\"==typeof this[a]?c._removedFactory(a):null};var B=c.st;for(var C in A)A[a](C)&&!B[a](C)&&(B[C]=function(a){return function(){var b=arguments;return this.forEach(function(c){c[a].apply(c,b)})}}(C))}}(),function(){if(c.vml){var a=\"hasOwnProperty\",b=String,d=parseFloat,e=Math,f=e.round,g=e.max,h=e.min,i=e.abs,j=\"fill\",k=/[, ]+/,l=c.eve,m=\" progid:DXImageTransform.Microsoft\",n=\" \",o=\"\",p={M:\"m\",L:\"l\",C:\"c\",Z:\"x\",m:\"t\",l:\"r\",c:\"v\",z:\"x\"},q=/([clmz]),?([^clmz]*)/gi,r=/ progid:\\S+Blur\\([^\\)]+\\)/g,s=/-?[^,\\s-]+/g,t=\"position:absolute;left:0;top:0;width:1px;height:1px\",u=21600,v={path:1,rect:1,image:1},w={circle:1,ellipse:1},x=function(a){var d=/[ahqstv]/gi,e=c._pathToAbsolute;if(b(a).match(d)&&(e=c._path2curve),d=/[clmz]/g,e==c._pathToAbsolute&&!b(a).match(d)){var g=b(a).replace(q,function(a,b,c){var d=[],e=\"m\"==b.toLowerCase(),g=p[b];return c.replace(s,function(a){e&&2==d.length&&(g+=d+p[\"m\"==b?\"l\":\"L\"],d=[]),d.push(f(a*u))}),g+d});return g}var h,i,j=e(a);g=[];for(var k=0,l=j.length;l>k;k++){h=j[k],i=j[k][0].toLowerCase(),\"z\"==i&&(i=\"x\");for(var m=1,r=h.length;r>m;m++)i+=f(h[m]*u)+(m!=r-1?\",\":o);g.push(i)}return g.join(n)},y=function(a,b,d){var e=c.matrix();return e.rotate(-a,.5,.5),{dx:e.x(b,d),dy:e.y(b,d)}},z=function(a,b,c,d,e,f){var g=a._,h=a.matrix,k=g.fillpos,l=a.node,m=l.style,o=1,p=\"\",q=u/b,r=u/c;if(m.visibility=\"hidden\",b&&c){if(l.coordsize=i(q)+n+i(r),m.rotation=f*(0>b*c?-1:1),f){var s=y(f,d,e);d=s.dx,e=s.dy}if(0>b&&(p+=\"x\"),0>c&&(p+=\" y\")&&(o=-1),m.flip=p,l.coordorigin=d*-q+n+e*-r,k||g.fillsize){var t=l.getElementsByTagName(j);t=t&&t[0],l.removeChild(t),k&&(s=y(f,h.x(k[0],k[1]),h.y(k[0],k[1])),t.position=s.dx*o+n+s.dy*o),g.fillsize&&(t.size=g.fillsize[0]*i(b)+n+g.fillsize[1]*i(c)),l.appendChild(t)}m.visibility=\"visible\"}};c.toString=function(){return\"Your browser doesn’t support SVG. Falling down to VML.\\nYou are running Raphaël \"+this.version};var A=function(a,c,d){for(var e=b(c).toLowerCase().split(\"-\"),f=d?\"end\":\"start\",g=e.length,h=\"classic\",i=\"medium\",j=\"medium\";g--;)switch(e[g]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":h=e[g];break;case\"wide\":case\"narrow\":j=e[g];break;case\"long\":case\"short\":i=e[g]}var k=a.node.getElementsByTagName(\"stroke\")[0];k[f+\"arrow\"]=h,k[f+\"arrowlength\"]=i,k[f+\"arrowwidth\"]=j},B=function(e,i){e.attrs=e.attrs||{};var l=e.node,m=e.attrs,p=l.style,q=v[e.type]&&(i.x!=m.x||i.y!=m.y||i.width!=m.width||i.height!=m.height||i.cx!=m.cx||i.cy!=m.cy||i.rx!=m.rx||i.ry!=m.ry||i.r!=m.r),r=w[e.type]&&(m.cx!=i.cx||m.cy!=i.cy||m.r!=i.r||m.rx!=i.rx||m.ry!=i.ry),s=e;for(var t in i)i[a](t)&&(m[t]=i[t]);if(q&&(m.path=c._getPath[e.type](e),e._.dirty=1),i.href&&(l.href=i.href),i.title&&(l.title=i.title),i.target&&(l.target=i.target),i.cursor&&(p.cursor=i.cursor),\"blur\"in i&&e.blur(i.blur),(i.path&&\"path\"==e.type||q)&&(l.path=x(~b(m.path).toLowerCase().indexOf(\"r\")?c._pathToAbsolute(m.path):m.path),\"image\"==e.type&&(e._.fillpos=[m.x,m.y],e._.fillsize=[m.width,m.height],z(e,1,1,0,0,0))),\"transform\"in i&&e.transform(i.transform),r){var y=+m.cx,B=+m.cy,D=+m.rx||+m.r||0,E=+m.ry||+m.r||0;l.path=c.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\",f((y-D)*u),f((B-E)*u),f((y+D)*u),f((B+E)*u),f(y*u)),e._.dirty=1}if(\"clip-rect\"in i){var G=b(i[\"clip-rect\"]).split(k);if(4==G.length){G[2]=+G[2]+ +G[0],G[3]=+G[3]+ +G[1];var H=l.clipRect||c._g.doc.createElement(\"div\"),I=H.style;I.clip=c.format(\"rect({1}px {2}px {3}px {0}px)\",G),l.clipRect||(I.position=\"absolute\",I.top=0,I.left=0,I.width=e.paper.width+\"px\",I.height=e.paper.height+\"px\",l.parentNode.insertBefore(H,l),H.appendChild(l),l.clipRect=H)}i[\"clip-rect\"]||l.clipRect&&(l.clipRect.style.clip=\"auto\")}if(e.textpath){var J=e.textpath.style;i.font&&(J.font=i.font),i[\"font-family\"]&&(J.fontFamily='\"'+i[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g,o)+'\"'),i[\"font-size\"]&&(J.fontSize=i[\"font-size\"]),i[\"font-weight\"]&&(J.fontWeight=i[\"font-weight\"]),i[\"font-style\"]&&(J.fontStyle=i[\"font-style\"])}if(\"arrow-start\"in i&&A(s,i[\"arrow-start\"]),\"arrow-end\"in i&&A(s,i[\"arrow-end\"],1),null!=i.opacity||null!=i[\"stroke-width\"]||null!=i.fill||null!=i.src||null!=i.stroke||null!=i[\"stroke-width\"]||null!=i[\"stroke-opacity\"]||null!=i[\"fill-opacity\"]||null!=i[\"stroke-dasharray\"]||null!=i[\"stroke-miterlimit\"]||null!=i[\"stroke-linejoin\"]||null!=i[\"stroke-linecap\"]){var K=l.getElementsByTagName(j),L=!1;if(K=K&&K[0],!K&&(L=K=F(j)),\"image\"==e.type&&i.src&&(K.src=i.src),i.fill&&(K.on=!0),(null==K.on||\"none\"==i.fill||null===i.fill)&&(K.on=!1),K.on&&i.fill){var M=b(i.fill).match(c._ISURL);if(M){K.parentNode==l&&l.removeChild(K),K.rotate=!0,K.src=M[1],K.type=\"tile\";var N=e.getBBox(1);K.position=N.x+n+N.y,e._.fillpos=[N.x,N.y],c._preload(M[1],function(){e._.fillsize=[this.offsetWidth,this.offsetHeight]})}else K.color=c.getRGB(i.fill).hex,K.src=o,K.type=\"solid\",c.getRGB(i.fill).error&&(s.type in{circle:1,ellipse:1}||\"r\"!=b(i.fill).charAt())&&C(s,i.fill,K)&&(m.fill=\"none\",m.gradient=i.fill,K.rotate=!1)}if(\"fill-opacity\"in i||\"opacity\"in i){var O=((+m[\"fill-opacity\"]+1||2)-1)*((+m.opacity+1||2)-1)*((+c.getRGB(i.fill).o+1||2)-1);O=h(g(O,0),1),K.opacity=O,K.src&&(K.color=\"none\")}l.appendChild(K);var P=l.getElementsByTagName(\"stroke\")&&l.getElementsByTagName(\"stroke\")[0],Q=!1;!P&&(Q=P=F(\"stroke\")),(i.stroke&&\"none\"!=i.stroke||i[\"stroke-width\"]||null!=i[\"stroke-opacity\"]||i[\"stroke-dasharray\"]||i[\"stroke-miterlimit\"]||i[\"stroke-linejoin\"]||i[\"stroke-linecap\"])&&(P.on=!0),(\"none\"==i.stroke||null===i.stroke||null==P.on||0==i.stroke||0==i[\"stroke-width\"])&&(P.on=!1);var R=c.getRGB(i.stroke);P.on&&i.stroke&&(P.color=R.hex),O=((+m[\"stroke-opacity\"]+1||2)-1)*((+m.opacity+1||2)-1)*((+R.o+1||2)-1);var S=.75*(d(i[\"stroke-width\"])||1);if(O=h(g(O,0),1),null==i[\"stroke-width\"]&&(S=m[\"stroke-width\"]),i[\"stroke-width\"]&&(P.weight=S),S&&1>S&&(O*=S)&&(P.weight=1),P.opacity=O,i[\"stroke-linejoin\"]&&(P.joinstyle=i[\"stroke-linejoin\"]||\"miter\"),P.miterlimit=i[\"stroke-miterlimit\"]||8,i[\"stroke-linecap\"]&&(P.endcap=\"butt\"==i[\"stroke-linecap\"]?\"flat\":\"square\"==i[\"stroke-linecap\"]?\"square\":\"round\"),\"stroke-dasharray\"in i){var T={\"-\":\"shortdash\",\".\":\"shortdot\",\"-.\":\"shortdashdot\",\"-..\":\"shortdashdotdot\",\". \":\"dot\",\"- \":\"dash\",\"--\":\"longdash\",\"- .\":\"dashdot\",\"--.\":\"longdashdot\",\"--..\":\"longdashdotdot\"};P.dashstyle=T[a](i[\"stroke-dasharray\"])?T[i[\"stroke-dasharray\"]]:o}Q&&l.appendChild(P)}if(\"text\"==s.type){s.paper.canvas.style.display=o;var U=s.paper.span,V=100,W=m.font&&m.font.match(/\\d+(?:\\.\\d*)?(?=px)/);p=U.style,m.font&&(p.font=m.font),m[\"font-family\"]&&(p.fontFamily=m[\"font-family\"]),m[\"font-weight\"]&&(p.fontWeight=m[\"font-weight\"]),m[\"font-style\"]&&(p.fontStyle=m[\"font-style\"]),W=d(m[\"font-size\"]||W&&W[0])||10,p.fontSize=W*V+\"px\",s.textpath.string&&(U.innerHTML=b(s.textpath.string).replace(/</g,\"&#60;\").replace(/&/g,\"&#38;\").replace(/\\n/g,\"<br>\"));var X=U.getBoundingClientRect();s.W=m.w=(X.right-X.left)/V,s.H=m.h=(X.bottom-X.top)/V,s.X=m.x,s.Y=m.y+s.H/2,(\"x\"in i||\"y\"in i)&&(s.path.v=c.format(\"m{0},{1}l{2},{1}\",f(m.x*u),f(m.y*u),f(m.x*u)+1));for(var Y=[\"x\",\"y\",\"text\",\"font\",\"font-family\",\"font-weight\",\"font-style\",\"font-size\"],Z=0,$=Y.length;$>Z;Z++)if(Y[Z]in i){s._.dirty=1;break}switch(m[\"text-anchor\"]){case\"start\":s.textpath.style[\"v-text-align\"]=\"left\",s.bbx=s.W/2;break;case\"end\":s.textpath.style[\"v-text-align\"]=\"right\",s.bbx=-s.W/2;break;default:s.textpath.style[\"v-text-align\"]=\"center\",s.bbx=0}s.textpath.style[\"v-text-kern\"]=!0}},C=function(a,f,g){a.attrs=a.attrs||{};var h=(a.attrs,Math.pow),i=\"linear\",j=\".5 .5\";if(a.attrs.gradient=f,f=b(f).replace(c._radial_gradient,function(a,b,c){return i=\"radial\",b&&c&&(b=d(b),c=d(c),h(b-.5,2)+h(c-.5,2)>.25&&(c=e.sqrt(.25-h(b-.5,2))*(2*(c>.5)-1)+.5),j=b+n+c),o}),f=f.split(/\\s*\\-\\s*/),\"linear\"==i){var k=f.shift();if(k=-d(k),isNaN(k))return null}var l=c._parseDots(f);if(!l)return null;if(a=a.shape||a.node,l.length){a.removeChild(g),g.on=!0,g.method=\"none\",g.color=l[0].color,g.color2=l[l.length-1].color;for(var m=[],p=0,q=l.length;q>p;p++)l[p].offset&&m.push(l[p].offset+n+l[p].color);g.colors=m.length?m.join():\"0% \"+g.color,\"radial\"==i?(g.type=\"gradientTitle\",g.focus=\"100%\",g.focussize=\"0 0\",g.focusposition=j,g.angle=0):(g.type=\"gradient\",g.angle=(270-k)%360),a.appendChild(g)}return 1},D=function(a,b){this[0]=this.node=a,a.raphael=!0,this.id=c._oid++,a.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=b,this.matrix=c.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!b.bottom&&(b.bottom=this),this.prev=b.top,b.top&&(b.top.next=this),b.top=this,this.next=null},E=c.el;D.prototype=E,E.constructor=D,E.transform=function(a){if(null==a)return this._.transform;var d,e=this.paper._viewBoxShift,f=e?\"s\"+[e.scale,e.scale]+\"-1-1t\"+[e.dx,e.dy]:o;e&&(d=a=b(a).replace(/\\.{3}|\\u2026/g,this._.transform||o)),c._extractTransform(this,f+a);var g,h=this.matrix.clone(),i=this.skew,j=this.node,k=~b(this.attrs.fill).indexOf(\"-\"),l=!b(this.attrs.fill).indexOf(\"url(\");if(h.translate(1,1),l||k||\"image\"==this.type)if(i.matrix=\"1 0 0 1\",i.offset=\"0 0\",g=h.split(),k&&g.noRotation||!g.isSimple){j.style.filter=h.toFilter();var m=this.getBBox(),p=this.getBBox(1),q=m.x-p.x,r=m.y-p.y;j.coordorigin=q*-u+n+r*-u,z(this,1,1,q,r,0)}else j.style.filter=o,z(this,g.scalex,g.scaley,g.dx,g.dy,g.rotate);else j.style.filter=o,i.matrix=b(h),i.offset=h.offset();return d&&(this._.transform=d),this},E.rotate=function(a,c,e){if(this.removed)return this;if(null!=a){if(a=b(a).split(k),a.length-1&&(c=d(a[1]),e=d(a[2])),a=d(a[0]),null==e&&(c=e),null==c||null==e){var f=this.getBBox(1);c=f.x+f.width/2,e=f.y+f.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([[\"r\",a,c,e]])),this}},E.translate=function(a,c){return this.removed?this:(a=b(a).split(k),a.length-1&&(c=d(a[1])),a=d(a[0])||0,c=+c||0,this._.bbox&&(this._.bbox.x+=a,this._.bbox.y+=c),this.transform(this._.transform.concat([[\"t\",a,c]])),this)},E.scale=function(a,c,e,f){if(this.removed)return this;if(a=b(a).split(k),a.length-1&&(c=d(a[1]),e=d(a[2]),f=d(a[3]),isNaN(e)&&(e=null),isNaN(f)&&(f=null)),a=d(a[0]),null==c&&(c=a),null==f&&(e=f),null==e||null==f)var g=this.getBBox(1);return e=null==e?g.x+g.width/2:e,f=null==f?g.y+g.height/2:f,this.transform(this._.transform.concat([[\"s\",a,c,e,f]])),this._.dirtyT=1,this},E.hide=function(){return!this.removed&&(this.node.style.display=\"none\"),this},E.show=function(){return!this.removed&&(this.node.style.display=o),this},E._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},E.remove=function(){if(!this.removed&&this.node.parentNode){this.paper.__set__&&this.paper.__set__.exclude(this),c.eve.unbind(\"raphael.*.*.\"+this.id),c._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape);for(var a in this)this[a]=\"function\"==typeof this[a]?c._removedFactory(a):null;this.removed=!0}},E.attr=function(b,d){if(this.removed)return this;if(null==b){var e={};for(var f in this.attrs)this.attrs[a](f)&&(e[f]=this.attrs[f]);return e.gradient&&\"none\"==e.fill&&(e.fill=e.gradient)&&delete e.gradient,e.transform=this._.transform,e}if(null==d&&c.is(b,\"string\")){if(b==j&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var g=b.split(k),h={},i=0,m=g.length;m>i;i++)b=g[i],h[b]=b in this.attrs?this.attrs[b]:c.is(this.paper.customAttributes[b],\"function\")?this.paper.customAttributes[b].def:c._availableAttrs[b];return m-1?h:h[g[0]]}if(this.attrs&&null==d&&c.is(b,\"array\")){for(h={},i=0,m=b.length;m>i;i++)h[b[i]]=this.attr(b[i]);return h}var n;null!=d&&(n={},n[b]=d),null==d&&c.is(b,\"object\")&&(n=b);for(var o in n)l(\"raphael.attr.\"+o+\".\"+this.id,this,n[o]);if(n){for(o in this.paper.customAttributes)if(this.paper.customAttributes[a](o)&&n[a](o)&&c.is(this.paper.customAttributes[o],\"function\")){var p=this.paper.customAttributes[o].apply(this,[].concat(n[o]));this.attrs[o]=n[o];for(var q in p)p[a](q)&&(n[q]=p[q])}n.text&&\"text\"==this.type&&(this.textpath.string=n.text),B(this,n)}return this},E.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&c._tofront(this,this.paper),this},E.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),c._toback(this,this.paper)),this)},E.insertAfter=function(a){return this.removed?this:(a.constructor==c.st.constructor&&(a=a[a.length-1]),a.node.nextSibling?a.node.parentNode.insertBefore(this.node,a.node.nextSibling):a.node.parentNode.appendChild(this.node),c._insertafter(this,a,this.paper),this)},E.insertBefore=function(a){return this.removed?this:(a.constructor==c.st.constructor&&(a=a[0]),a.node.parentNode.insertBefore(this.node,a.node),c._insertbefore(this,a,this.paper),this)},E.blur=function(a){var b=this.node.runtimeStyle,d=b.filter;return d=d.replace(r,o),0!==+a?(this.attrs.blur=a,b.filter=d+n+m+\".Blur(pixelradius=\"+(+a||1.5)+\")\",b.margin=c.format(\"-{0}px 0 0 -{0}px\",f(+a||1.5))):(b.filter=d,b.margin=0,delete this.attrs.blur),this},c._engine.path=function(a,b){var c=F(\"shape\");c.style.cssText=t,c.coordsize=u+n+u,c.coordorigin=b.coordorigin;var d=new D(c,b),e={fill:\"none\",stroke:\"#000\"};a&&(e.path=a),d.type=\"path\",d.path=[],d.Path=o,B(d,e),b.canvas.appendChild(c);var f=F(\"skew\");return f.on=!0,c.appendChild(f),d.skew=f,d.transform(o),d},c._engine.rect=function(a,b,d,e,f,g){var h=c._rectPath(b,d,e,f,g),i=a.path(h),j=i.attrs;return i.X=j.x=b,i.Y=j.y=d,i.W=j.width=e,i.H=j.height=f,j.r=g,j.path=h,i.type=\"rect\",i},c._engine.ellipse=function(a,b,c,d,e){{var f=a.path();f.attrs}return f.X=b-d,f.Y=c-e,f.W=2*d,f.H=2*e,f.type=\"ellipse\",B(f,{cx:b,cy:c,rx:d,ry:e}),f},c._engine.circle=function(a,b,c,d){{var e=a.path();e.attrs}return e.X=b-d,e.Y=c-d,e.W=e.H=2*d,e.type=\"circle\",B(e,{cx:b,cy:c,r:d}),e},c._engine.image=function(a,b,d,e,f,g){var h=c._rectPath(d,e,f,g),i=a.path(h).attr({stroke:\"none\"}),k=i.attrs,l=i.node,m=l.getElementsByTagName(j)[0];return k.src=b,i.X=k.x=d,i.Y=k.y=e,i.W=k.width=f,i.H=k.height=g,k.path=h,i.type=\"image\",m.parentNode==l&&l.removeChild(m),m.rotate=!0,m.src=b,m.type=\"tile\",i._.fillpos=[d,e],i._.fillsize=[f,g],l.appendChild(m),z(i,1,1,0,0,0),i},c._engine.text=function(a,d,e,g){var h=F(\"shape\"),i=F(\"path\"),j=F(\"textpath\");d=d||0,e=e||0,g=g||\"\",i.v=c.format(\"m{0},{1}l{2},{1}\",f(d*u),f(e*u),f(d*u)+1),i.textpathok=!0,j.string=b(g),j.on=!0,h.style.cssText=t,h.coordsize=u+n+u,h.coordorigin=\"0 0\";var k=new D(h,a),l={fill:\"#000\",stroke:\"none\",font:c._availableAttrs.font,text:g};k.shape=h,k.path=i,k.textpath=j,k.type=\"text\",k.attrs.text=b(g),k.attrs.x=d,k.attrs.y=e,k.attrs.w=1,k.attrs.h=1,B(k,l),h.appendChild(j),h.appendChild(i),a.canvas.appendChild(h);var m=F(\"skew\");return m.on=!0,h.appendChild(m),k.skew=m,k.transform(o),k},c._engine.setSize=function(a,b){var d=this.canvas.style;return this.width=a,this.height=b,a==+a&&(a+=\"px\"),b==+b&&(b+=\"px\"),d.width=a,d.height=b,d.clip=\"rect(0 \"+a+\" \"+b+\" 0)\",this._viewBox&&c._engine.setViewBox.apply(this,this._viewBox),this},c._engine.setViewBox=function(a,b,d,e,f){c.eve(\"raphael.setViewBox\",this,this._viewBox,[a,b,d,e,f]);var h,i,j=this.width,k=this.height,l=1/g(d/j,e/k);return f&&(h=k/e,i=j/d,j>d*h&&(a-=(j-d*h)/2/h),k>e*i&&(b-=(k-e*i)/2/i)),this._viewBox=[a,b,d,e,!!f],this._viewBoxShift={dx:-a,dy:-b,scale:l},this.forEach(function(a){a.transform(\"...\")}),this};var F;c._engine.initWin=function(a){var b=a.document;b.createStyleSheet().addRule(\".rvml\",\"behavior:url(#default#VML)\");try{!b.namespaces.rvml&&b.namespaces.add(\"rvml\",\"urn:schemas-microsoft-com:vml\"),F=function(a){return b.createElement(\"<rvml:\"+a+' class=\"rvml\">')}}catch(c){F=function(a){return b.createElement(\"<\"+a+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">')}}},c._engine.initWin(c._g.win),c._engine.create=function(){var a=c._getContainer.apply(0,arguments),b=a.container,d=a.height,e=a.width,f=a.x,g=a.y;if(!b)throw new Error(\"VML container not found.\");var h=new c._Paper,i=h.canvas=c._g.doc.createElement(\"div\"),j=i.style;return f=f||0,g=g||0,e=e||512,d=d||342,h.width=e,h.height=d,e==+e&&(e+=\"px\"),d==+d&&(d+=\"px\"),h.coordsize=1e3*u+n+1e3*u,h.coordorigin=\"0 0\",h.span=c._g.doc.createElement(\"span\"),h.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\",i.appendChild(h.span),j.cssText=c.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\",e,d),1==b?(c._g.doc.body.appendChild(i),j.left=f+\"px\",j.top=g+\"px\",j.position=\"absolute\"):b.firstChild?b.insertBefore(i,b.firstChild):b.appendChild(i),h.renderfix=function(){},h},c.prototype.clear=function(){c.eve(\"raphael.clear\",this),this.canvas.innerHTML=o,this.span=c._g.doc.createElement(\"span\"),this.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\",this.canvas.appendChild(this.span),this.bottom=this.top=null},c.prototype.remove=function(){c.eve(\"raphael.remove\",this),this.canvas.parentNode.removeChild(this.canvas);for(var a in this)this[a]=\"function\"==typeof this[a]?c._removedFactory(a):null;return!0};var G=c.st;for(var H in E)E[a](H)&&!G[a](H)&&(G[H]=function(a){return function(){var b=arguments;return this.forEach(function(c){c[a].apply(c,b)})}}(H))}}(),B.was?A.win.Raphael=c:Raphael=c,c});\n",
    "/* @license\nmorris.js v0.5.0\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n(function(){var a,b,c,d,e=[].slice,f=function(a,b){return function(){return a.apply(b,arguments)}},g={}.hasOwnProperty,h=function(a,b){function c(){this.constructor=a}for(var d in b)g.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},i=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};b=window.Morris={},a=jQuery,b.EventEmitter=function(){function a(){}return a.prototype.on=function(a,b){return null==this.handlers&&(this.handlers={}),null==this.handlers[a]&&(this.handlers[a]=[]),this.handlers[a].push(b),this},a.prototype.fire=function(){var a,b,c,d,f,g,h;if(c=arguments[0],a=2<=arguments.length?e.call(arguments,1):[],null!=this.handlers&&null!=this.handlers[c]){for(g=this.handlers[c],h=[],d=0,f=g.length;f>d;d++)b=g[d],h.push(b.apply(null,a));return h}},a}(),b.commas=function(a){var b,c,d,e;return null!=a?(d=0>a?\"-\":\"\",b=Math.abs(a),c=Math.floor(b).toFixed(0),d+=c.replace(/(?=(?:\\d{3})+$)(?!^)/g,\",\"),e=b.toString(),e.length>c.length&&(d+=e.slice(c.length)),d):\"-\"},b.pad2=function(a){return(10>a?\"0\":\"\")+a},b.Grid=function(c){function d(b){this.resizeHandler=f(this.resizeHandler,this);var c=this;if(this.el=\"string\"==typeof b.element?a(document.getElementById(b.element)):a(b.element),null==this.el||0===this.el.length)throw new Error(\"Graph container element not found\");\"static\"===this.el.css(\"position\")&&this.el.css(\"position\",\"relative\"),this.options=a.extend({},this.gridDefaults,this.defaults||{},b),\"string\"==typeof this.options.units&&(this.options.postUnits=b.units),this.raphael=new Raphael(this.el[0]),this.elementWidth=null,this.elementHeight=null,this.dirty=!1,this.selectFrom=null,this.init&&this.init(),this.setData(this.options.data),this.el.bind(\"mousemove\",function(a){var b,d,e,f,g;return d=c.el.offset(),g=a.pageX-d.left,c.selectFrom?(b=c.data[c.hitTest(Math.min(g,c.selectFrom))]._x,e=c.data[c.hitTest(Math.max(g,c.selectFrom))]._x,f=e-b,c.selectionRect.attr({x:b,width:f})):c.fire(\"hovermove\",g,a.pageY-d.top)}),this.el.bind(\"mouseleave\",function(){return c.selectFrom&&(c.selectionRect.hide(),c.selectFrom=null),c.fire(\"hoverout\")}),this.el.bind(\"touchstart touchmove touchend\",function(a){var b,d;return d=a.originalEvent.touches[0]||a.originalEvent.changedTouches[0],b=c.el.offset(),c.fire(\"hovermove\",d.pageX-b.left,d.pageY-b.top)}),this.el.bind(\"click\",function(a){var b;return b=c.el.offset(),c.fire(\"gridclick\",a.pageX-b.left,a.pageY-b.top)}),this.options.rangeSelect&&(this.selectionRect=this.raphael.rect(0,0,0,this.el.innerHeight()).attr({fill:this.options.rangeSelectColor,stroke:!1}).toBack().hide(),this.el.bind(\"mousedown\",function(a){var b;return b=c.el.offset(),c.startRange(a.pageX-b.left)}),this.el.bind(\"mouseup\",function(a){var b;return b=c.el.offset(),c.endRange(a.pageX-b.left),c.fire(\"hovermove\",a.pageX-b.left,a.pageY-b.top)})),this.options.resize&&a(window).bind(\"resize\",function(){return null!=c.timeoutId&&window.clearTimeout(c.timeoutId),c.timeoutId=window.setTimeout(c.resizeHandler,100)}),this.el.css(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\"),this.postInit&&this.postInit()}return h(d,c),d.prototype.gridDefaults={dateFormat:null,axes:!0,grid:!0,gridLineColor:\"#aaa\",gridStrokeWidth:.5,gridTextColor:\"#888\",gridTextSize:12,gridTextFamily:\"sans-serif\",gridTextWeight:\"normal\",hideHover:!1,yLabelFormat:null,xLabelAngle:0,numLines:5,padding:25,parseTime:!0,postUnits:\"\",preUnits:\"\",ymax:\"auto\",ymin:\"auto 0\",goals:[],goalStrokeWidth:1,goalLineColors:[\"#666633\",\"#999966\",\"#cc6666\",\"#663333\"],events:[],eventStrokeWidth:1,eventLineColors:[\"#005a04\",\"#ccffbb\",\"#3a5f0b\",\"#005502\"],rangeSelect:null,rangeSelectColor:\"#eef\",resize:!1},d.prototype.setData=function(a,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;return null==c&&(c=!0),this.options.data=a,null==a||0===a.length?(this.data=[],this.raphael.clear(),null!=this.hover&&this.hover.hide(),void 0):(o=this.cumulative?0:null,p=this.cumulative?0:null,this.options.goals.length>0&&(h=Math.min.apply(Math,this.options.goals),g=Math.max.apply(Math,this.options.goals),p=null!=p?Math.min(p,h):h,o=null!=o?Math.max(o,g):g),this.data=function(){var c,d,g;for(g=[],f=c=0,d=a.length;d>c;f=++c)j=a[f],i={src:j},i.label=j[this.options.xkey],this.options.parseTime?(i.x=b.parseDate(i.label),this.options.dateFormat?i.label=this.options.dateFormat(i.x):\"number\"==typeof i.label&&(i.label=new Date(i.label).toString())):(i.x=f,this.options.xLabelFormat&&(i.label=this.options.xLabelFormat(i))),l=0,i.y=function(){var a,b,c,d;for(c=this.options.ykeys,d=[],e=a=0,b=c.length;b>a;e=++a)n=c[e],q=j[n],\"string\"==typeof q&&(q=parseFloat(q)),null!=q&&\"number\"!=typeof q&&(q=null),null!=q&&(this.cumulative?l+=q:null!=o?(o=Math.max(q,o),p=Math.min(q,p)):o=p=q),this.cumulative&&null!=l&&(o=Math.max(l,o),p=Math.min(l,p)),d.push(q);return d}.call(this),g.push(i);return g}.call(this),this.options.parseTime&&(this.data=this.data.sort(function(a,b){return(a.x>b.x)-(b.x>a.x)})),this.xmin=this.data[0].x,this.xmax=this.data[this.data.length-1].x,this.events=[],this.options.events.length>0&&(this.events=this.options.parseTime?function(){var a,c,e,f;for(e=this.options.events,f=[],a=0,c=e.length;c>a;a++)d=e[a],f.push(b.parseDate(d));return f}.call(this):this.options.events,this.xmax=Math.max(this.xmax,Math.max.apply(Math,this.events)),this.xmin=Math.min(this.xmin,Math.min.apply(Math,this.events))),this.xmin===this.xmax&&(this.xmin-=1,this.xmax+=1),this.ymin=this.yboundary(\"min\",p),this.ymax=this.yboundary(\"max\",o),this.ymin===this.ymax&&(p&&(this.ymin-=1),this.ymax+=1),((r=this.options.axes)===!0||\"both\"===r||\"y\"===r||this.options.grid===!0)&&(this.options.ymax===this.gridDefaults.ymax&&this.options.ymin===this.gridDefaults.ymin?(this.grid=this.autoGridLines(this.ymin,this.ymax,this.options.numLines),this.ymin=Math.min(this.ymin,this.grid[0]),this.ymax=Math.max(this.ymax,this.grid[this.grid.length-1])):(k=(this.ymax-this.ymin)/(this.options.numLines-1),this.grid=function(){var a,b,c,d;for(d=[],m=a=b=this.ymin,c=this.ymax;k>0?c>=a:a>=c;m=a+=k)d.push(m);return d}.call(this))),this.dirty=!0,c?this.redraw():void 0)},d.prototype.yboundary=function(a,b){var c,d;return c=this.options[\"y\"+a],\"string\"==typeof c?\"auto\"===c.slice(0,4)?c.length>5?(d=parseInt(c.slice(5),10),null==b?d:Math[a](b,d)):null!=b?b:0:parseInt(c,10):c},d.prototype.autoGridLines=function(a,b,c){var d,e,f,g,h,i,j,k,l;return h=b-a,l=Math.floor(Math.log(h)/Math.log(10)),j=Math.pow(10,l),e=Math.floor(a/j)*j,d=Math.ceil(b/j)*j,i=(d-e)/(c-1),1===j&&i>1&&Math.ceil(i)!==i&&(i=Math.ceil(i),d=e+i*(c-1)),0>e&&d>0&&(e=Math.floor(a/i)*i,d=Math.ceil(b/i)*i),1>i?(g=Math.floor(Math.log(i)/Math.log(10)),f=function(){var a,b;for(b=[],k=a=e;i>0?d>=a:a>=d;k=a+=i)b.push(parseFloat(k.toFixed(1-g)));return b}()):f=function(){var a,b;for(b=[],k=a=e;i>0?d>=a:a>=d;k=a+=i)b.push(k);return b}(),f},d.prototype._calc=function(){var a,b,c,d,e,f,g,h;return e=this.el.width(),c=this.el.height(),(this.elementWidth!==e||this.elementHeight!==c||this.dirty)&&(this.elementWidth=e,this.elementHeight=c,this.dirty=!1,this.left=this.options.padding,this.right=this.elementWidth-this.options.padding,this.top=this.options.padding,this.bottom=this.elementHeight-this.options.padding,((g=this.options.axes)===!0||\"both\"===g||\"y\"===g)&&(f=function(){var a,c,d,e;for(d=this.grid,e=[],a=0,c=d.length;c>a;a++)b=d[a],e.push(this.measureText(this.yAxisFormat(b)).width);return e}.call(this),this.left+=Math.max.apply(Math,f)),((h=this.options.axes)===!0||\"both\"===h||\"x\"===h)&&(a=function(){var a,b,c;for(c=[],d=a=0,b=this.data.length;b>=0?b>a:a>b;d=b>=0?++a:--a)c.push(this.measureText(this.data[d].text,-this.options.xLabelAngle).height);return c}.call(this),this.bottom-=Math.max.apply(Math,a)),this.width=Math.max(1,this.right-this.left),this.height=Math.max(1,this.bottom-this.top),this.dx=this.width/(this.xmax-this.xmin),this.dy=this.height/(this.ymax-this.ymin),this.calc)?this.calc():void 0},d.prototype.transY=function(a){return this.bottom-(a-this.ymin)*this.dy},d.prototype.transX=function(a){return 1===this.data.length?(this.left+this.right)/2:this.left+(a-this.xmin)*this.dx},d.prototype.redraw=function(){return this.raphael.clear(),this._calc(),this.drawGrid(),this.drawGoals(),this.drawEvents(),this.draw?this.draw():void 0},d.prototype.measureText=function(a,b){var c,d;return null==b&&(b=0),d=this.raphael.text(100,100,a).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).rotate(b),c=d.getBBox(),d.remove(),c},d.prototype.yAxisFormat=function(a){return this.yLabelFormat(a)},d.prototype.yLabelFormat=function(a){return\"function\"==typeof this.options.yLabelFormat?this.options.yLabelFormat(a):\"\"+this.options.preUnits+b.commas(a)+this.options.postUnits},d.prototype.drawGrid=function(){var a,b,c,d,e,f,g,h;if(this.options.grid!==!1||(e=this.options.axes)===!0||\"both\"===e||\"y\"===e){for(f=this.grid,h=[],c=0,d=f.length;d>c;c++)a=f[c],b=this.transY(a),((g=this.options.axes)===!0||\"both\"===g||\"y\"===g)&&this.drawYAxisLabel(this.left-this.options.padding/2,b,this.yAxisFormat(a)),this.options.grid?h.push(this.drawGridLine(\"M\"+this.left+\",\"+b+\"H\"+(this.left+this.width))):h.push(void 0);return h}},d.prototype.drawGoals=function(){var a,b,c,d,e,f,g;for(f=this.options.goals,g=[],c=d=0,e=f.length;e>d;c=++d)b=f[c],a=this.options.goalLineColors[c%this.options.goalLineColors.length],g.push(this.drawGoal(b,a));return g},d.prototype.drawEvents=function(){var a,b,c,d,e,f,g;for(f=this.events,g=[],c=d=0,e=f.length;e>d;c=++d)b=f[c],a=this.options.eventLineColors[c%this.options.eventLineColors.length],g.push(this.drawEvent(b,a));return g},d.prototype.drawGoal=function(a,b){return this.raphael.path(\"M\"+this.left+\",\"+this.transY(a)+\"H\"+this.right).attr(\"stroke\",b).attr(\"stroke-width\",this.options.goalStrokeWidth)},d.prototype.drawEvent=function(a,b){return this.raphael.path(\"M\"+this.transX(a)+\",\"+this.bottom+\"V\"+this.top).attr(\"stroke\",b).attr(\"stroke-width\",this.options.eventStrokeWidth)},d.prototype.drawYAxisLabel=function(a,b,c){return this.raphael.text(a,b,c).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor).attr(\"text-anchor\",\"end\")},d.prototype.drawGridLine=function(a){return this.raphael.path(a).attr(\"stroke\",this.options.gridLineColor).attr(\"stroke-width\",this.options.gridStrokeWidth)},d.prototype.startRange=function(a){return this.hover.hide(),this.selectFrom=a,this.selectionRect.attr({x:a,width:0}).show()},d.prototype.endRange=function(a){var b,c;return this.selectFrom?(c=Math.min(this.selectFrom,a),b=Math.max(this.selectFrom,a),this.options.rangeSelect.call(this.el,{start:this.data[this.hitTest(c)].x,end:this.data[this.hitTest(b)].x}),this.selectFrom=null):void 0},d.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},d}(b.EventEmitter),b.parseDate=function(a){var b,c,d,e,f,g,h,i,j,k,l;return\"number\"==typeof a?a:(c=a.match(/^(\\d+) Q(\\d)$/),e=a.match(/^(\\d+)-(\\d+)$/),f=a.match(/^(\\d+)-(\\d+)-(\\d+)$/),h=a.match(/^(\\d+) W(\\d+)$/),i=a.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),j=a.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),c?new Date(parseInt(c[1],10),3*parseInt(c[2],10)-1,1).getTime():e?new Date(parseInt(e[1],10),parseInt(e[2],10)-1,1).getTime():f?new Date(parseInt(f[1],10),parseInt(f[2],10)-1,parseInt(f[3],10)).getTime():h?(k=new Date(parseInt(h[1],10),0,1),4!==k.getDay()&&k.setMonth(0,1+(4-k.getDay()+7)%7),k.getTime()+6048e5*parseInt(h[2],10)):i?i[6]?(g=0,\"Z\"!==i[6]&&(g=60*parseInt(i[8],10)+parseInt(i[9],10),\"+\"===i[7]&&(g=0-g)),Date.UTC(parseInt(i[1],10),parseInt(i[2],10)-1,parseInt(i[3],10),parseInt(i[4],10),parseInt(i[5],10)+g)):new Date(parseInt(i[1],10),parseInt(i[2],10)-1,parseInt(i[3],10),parseInt(i[4],10),parseInt(i[5],10)).getTime():j?(l=parseFloat(j[6]),b=Math.floor(l),d=Math.round(1e3*(l-b)),j[8]?(g=0,\"Z\"!==j[8]&&(g=60*parseInt(j[10],10)+parseInt(j[11],10),\"+\"===j[9]&&(g=0-g)),Date.UTC(parseInt(j[1],10),parseInt(j[2],10)-1,parseInt(j[3],10),parseInt(j[4],10),parseInt(j[5],10)+g,b,d)):new Date(parseInt(j[1],10),parseInt(j[2],10)-1,parseInt(j[3],10),parseInt(j[4],10),parseInt(j[5],10),b,d).getTime()):new Date(parseInt(a,10),0,1).getTime())},b.Hover=function(){function c(c){null==c&&(c={}),this.options=a.extend({},b.Hover.defaults,c),this.el=a(\"<div class='\"+this.options[\"class\"]+\"'></div>\"),this.el.hide(),this.options.parent.append(this.el)}return c.defaults={\"class\":\"morris-hover morris-default-style\"},c.prototype.update=function(a,b,c){return a?(this.html(a),this.show(),this.moveTo(b,c)):this.hide()},c.prototype.html=function(a){return this.el.html(a)},c.prototype.moveTo=function(a,b){var c,d,e,f,g,h;return g=this.options.parent.innerWidth(),f=this.options.parent.innerHeight(),d=this.el.outerWidth(),c=this.el.outerHeight(),e=Math.min(Math.max(0,a-d/2),g-d),null!=b?(h=b-c-10,0>h&&(h=b+10,h+c>f&&(h=f/2-c/2))):h=f/2-c/2,this.el.css({left:e+\"px\",top:parseInt(h)+\"px\"})},c.prototype.show=function(){return this.el.show()},c.prototype.hide=function(){return this.el.hide()},c}(),b.Line=function(a){function c(a){return this.hilight=f(this.hilight,this),this.onHoverOut=f(this.onHoverOut,this),this.onHoverMove=f(this.onHoverMove,this),this.onGridClick=f(this.onGridClick,this),this instanceof b.Line?(c.__super__.constructor.call(this,a),void 0):new b.Line(a)}return h(c,a),c.prototype.init=function(){return\"always\"!==this.options.hideHover?(this.hover=new b.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)):void 0},c.prototype.defaults={lineWidth:3,pointSize:4,lineColors:[\"#0b62a4\",\"#7A92A3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],pointStrokeWidths:[1],pointStrokeColors:[\"#ffffff\"],pointFillColors:[],smooth:!0,xLabels:\"auto\",xLabelFormat:null,xLabelMargin:24,hideHover:!1},c.prototype.calc=function(){return this.calcPoints(),this.generatePaths()},c.prototype.calcPoints=function(){var a,b,c,d,e,f;for(e=this.data,f=[],c=0,d=e.length;d>c;c++)a=e[c],a._x=this.transX(a.x),a._y=function(){var c,d,e,f;for(e=a.y,f=[],c=0,d=e.length;d>c;c++)b=e[c],null!=b?f.push(this.transY(b)):f.push(b);return f}.call(this),f.push(a._ymax=Math.min.apply(Math,[this.bottom].concat(function(){var c,d,e,f;for(e=a._y,f=[],c=0,d=e.length;d>c;c++)b=e[c],null!=b&&f.push(b);return f}())));return f},c.prototype.hitTest=function(a){var b,c,d,e,f;if(0===this.data.length)return null;for(f=this.data.slice(1),b=d=0,e=f.length;e>d&&(c=f[b],!(a<(c._x+this.data[b]._x)/2));b=++d);return b},c.prototype.onGridClick=function(a,b){var c;return c=this.hitTest(a),this.fire(\"click\",c,this.data[c].src,a,b)},c.prototype.onHoverMove=function(a){var b;return b=this.hitTest(a),this.displayHoverForRow(b)},c.prototype.onHoverOut=function(){return this.options.hideHover!==!1?this.displayHoverForRow(null):void 0},c.prototype.displayHoverForRow=function(a){var b;return null!=a?((b=this.hover).update.apply(b,this.hoverContentForRow(a)),this.hilight(a)):(this.hover.hide(),this.hilight())},c.prototype.hoverContentForRow=function(a){var b,c,d,e,f,g,h;for(d=this.data[a],b=\"<div class='morris-hover-row-label'>\"+d.label+\"</div>\",h=d.y,c=f=0,g=h.length;g>f;c=++f)e=h[c],b+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(d,c,\"label\")+\"'>\\n  \"+this.options.labels[c]+\":\\n  \"+this.yLabelFormat(e)+\"\\n</div>\";return\"function\"==typeof this.options.hoverCallback&&(b=this.options.hoverCallback(a,this.options,b,d.src)),[b,d._x,d._ymax]},c.prototype.generatePaths=function(){var a,c,d,e;return this.paths=function(){var f,g,h,j;for(j=[],c=f=0,g=this.options.ykeys.length;g>=0?g>f:f>g;c=g>=0?++f:--f)e=\"boolean\"==typeof this.options.smooth?this.options.smooth:(h=this.options.ykeys[c],i.call(this.options.smooth,h)>=0),a=function(){var a,b,e,f;for(e=this.data,f=[],a=0,b=e.length;b>a;a++)d=e[a],void 0!==d._y[c]&&f.push({x:d._x,y:d._y[c]});return f}.call(this),a.length>1?j.push(b.Line.createPath(a,e,this.bottom)):j.push(null);return j}.call(this)},c.prototype.draw=function(){var a;return((a=this.options.axes)===!0||\"both\"===a||\"x\"===a)&&this.drawXAxis(),this.drawSeries(),this.options.hideHover===!1?this.displayHoverForRow(this.data.length-1):void 0},c.prototype.drawXAxis=function(){var a,c,d,e,f,g,h,i,j,k,l=this;for(h=this.bottom+this.options.padding/2,f=null,e=null,a=function(a,b){var c,d,g,i,j;return c=l.drawXAxisLabel(l.transX(b),h,a),j=c.getBBox(),c.transform(\"r\"+-l.options.xLabelAngle),d=c.getBBox(),c.transform(\"t0,\"+d.height/2+\"...\"),0!==l.options.xLabelAngle&&(i=-.5*j.width*Math.cos(l.options.xLabelAngle*Math.PI/180),c.transform(\"t\"+i+\",0...\")),d=c.getBBox(),(null==f||f>=d.x+d.width||null!=e&&e>=d.x)&&d.x>=0&&d.x+d.width<l.el.width()?(0!==l.options.xLabelAngle&&(g=1.25*l.options.gridTextSize/Math.sin(l.options.xLabelAngle*Math.PI/180),e=d.x-g),f=d.x-l.options.xLabelMargin):c.remove()},d=this.options.parseTime?1===this.data.length&&\"auto\"===this.options.xLabels?[[this.data[0].label,this.data[0].x]]:b.labelSeries(this.xmin,this.xmax,this.width,this.options.xLabels,this.options.xLabelFormat):function(){var a,b,c,d;for(c=this.data,d=[],a=0,b=c.length;b>a;a++)g=c[a],d.push([g.label,g.x]);return d}.call(this),d.reverse(),k=[],i=0,j=d.length;j>i;i++)c=d[i],k.push(a(c[0],c[1]));return k},c.prototype.drawSeries=function(){var a,b,c,d,e,f;for(this.seriesPoints=[],a=b=d=this.options.ykeys.length-1;0>=d?0>=b:b>=0;a=0>=d?++b:--b)this._drawLineFor(a);for(f=[],a=c=e=this.options.ykeys.length-1;0>=e?0>=c:c>=0;a=0>=e?++c:--c)f.push(this._drawPointFor(a));return f},c.prototype._drawPointFor=function(a){var b,c,d,e,f,g;for(this.seriesPoints[a]=[],f=this.data,g=[],d=0,e=f.length;e>d;d++)c=f[d],b=null,null!=c._y[a]&&(b=this.drawLinePoint(c._x,c._y[a],this.colorFor(c,a,\"point\"),a)),g.push(this.seriesPoints[a].push(b));return g},c.prototype._drawLineFor=function(a){var b;return b=this.paths[a],null!==b?this.drawLinePath(b,this.colorFor(null,a,\"line\"),a):void 0},c.createPath=function(a,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r;for(k=\"\",c&&(g=b.Line.gradients(a)),l={y:null},h=q=0,r=a.length;r>q;h=++q)e=a[h],null!=e.y&&(null!=l.y?c?(f=g[h],j=g[h-1],i=(e.x-l.x)/4,m=l.x+i,o=Math.min(d,l.y+i*j),n=e.x-i,p=Math.min(d,e.y-i*f),k+=\"C\"+m+\",\"+o+\",\"+n+\",\"+p+\",\"+e.x+\",\"+e.y):k+=\"L\"+e.x+\",\"+e.y:c&&null==g[h]||(k+=\"M\"+e.x+\",\"+e.y)),l=e;return k},c.gradients=function(a){var b,c,d,e,f,g,h,i;for(c=function(a,b){return(a.y-b.y)/(a.x-b.x)},i=[],d=g=0,h=a.length;h>g;d=++g)b=a[d],null!=b.y?(e=a[d+1]||{y:null},f=a[d-1]||{y:null},null!=f.y&&null!=e.y?i.push(c(f,e)):null!=f.y?i.push(c(f,b)):null!=e.y?i.push(c(b,e)):i.push(null)):i.push(null);return i},c.prototype.hilight=function(a){var b,c,d,e,f;if(null!==this.prevHilight&&this.prevHilight!==a)for(b=c=0,e=this.seriesPoints.length-1;e>=0?e>=c:c>=e;b=e>=0?++c:--c)this.seriesPoints[b][this.prevHilight]&&this.seriesPoints[b][this.prevHilight].animate(this.pointShrinkSeries(b));if(null!==a&&this.prevHilight!==a)for(b=d=0,f=this.seriesPoints.length-1;f>=0?f>=d:d>=f;b=f>=0?++d:--d)this.seriesPoints[b][a]&&this.seriesPoints[b][a].animate(this.pointGrowSeries(b));return this.prevHilight=a},c.prototype.colorFor=function(a,b,c){return\"function\"==typeof this.options.lineColors?this.options.lineColors.call(this,a,b,c):\"point\"===c?this.options.pointFillColors[b%this.options.pointFillColors.length]||this.options.lineColors[b%this.options.lineColors.length]:this.options.lineColors[b%this.options.lineColors.length]},c.prototype.drawXAxisLabel=function(a,b,c){return this.raphael.text(a,b,c).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},c.prototype.drawLinePath=function(a,b,c){return this.raphael.path(a).attr(\"stroke\",b).attr(\"stroke-width\",this.lineWidthForSeries(c))},c.prototype.drawLinePoint=function(a,b,c,d){return this.raphael.circle(a,b,this.pointSizeForSeries(d)).attr(\"fill\",c).attr(\"stroke-width\",this.pointStrokeWidthForSeries(d)).attr(\"stroke\",this.pointStrokeColorForSeries(d))},c.prototype.pointStrokeWidthForSeries=function(a){return this.options.pointStrokeWidths[a%this.options.pointStrokeWidths.length]},c.prototype.pointStrokeColorForSeries=function(a){return this.options.pointStrokeColors[a%this.options.pointStrokeColors.length]},c.prototype.lineWidthForSeries=function(a){return this.options.lineWidth instanceof Array?this.options.lineWidth[a%this.options.lineWidth.length]:this.options.lineWidth},c.prototype.pointSizeForSeries=function(a){return this.options.pointSize instanceof Array?this.options.pointSize[a%this.options.pointSize.length]:this.options.pointSize},c.prototype.pointGrowSeries=function(a){return Raphael.animation({r:this.pointSizeForSeries(a)+3},25,\"linear\")},c.prototype.pointShrinkSeries=function(a){return Raphael.animation({r:this.pointSizeForSeries(a)},25,\"linear\")},c}(b.Grid),b.labelSeries=function(c,d,e,f,g){var h,i,j,k,l,m,n,o,p,q,r;if(j=200*(d-c)/e,i=new Date(c),n=b.LABEL_SPECS[f],void 0===n)for(r=b.AUTO_LABEL_ORDER,p=0,q=r.length;q>p;p++)if(k=r[p],m=b.LABEL_SPECS[k],j>=m.span){n=m;break}for(void 0===n&&(n=b.LABEL_SPECS.second),g&&(n=a.extend({},n,{fmt:g})),h=n.start(i),l=[];(o=h.getTime())<=d;)o>=c&&l.push([n.fmt(h),o]),n.incr(h);return l},c=function(a){return{span:60*a*1e3,start:function(a){return new Date(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours())},fmt:function(a){return\"\"+b.pad2(a.getHours())+\":\"+b.pad2(a.getMinutes())},incr:function(b){return b.setUTCMinutes(b.getUTCMinutes()+a)}}},d=function(a){return{span:1e3*a,start:function(a){return new Date(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes())},fmt:function(a){return\"\"+b.pad2(a.getHours())+\":\"+b.pad2(a.getMinutes())+\":\"+b.pad2(a.getSeconds())},incr:function(b){return b.setUTCSeconds(b.getUTCSeconds()+a)}}},b.LABEL_SPECS={decade:{span:1728e8,start:function(a){return new Date(a.getFullYear()-a.getFullYear()%10,0,1)},fmt:function(a){return\"\"+a.getFullYear()},incr:function(a){return a.setFullYear(a.getFullYear()+10)}},year:{span:1728e7,start:function(a){return new Date(a.getFullYear(),0,1)},fmt:function(a){return\"\"+a.getFullYear()},incr:function(a){return a.setFullYear(a.getFullYear()+1)}},month:{span:24192e5,start:function(a){return new Date(a.getFullYear(),a.getMonth(),1)},fmt:function(a){return\"\"+a.getFullYear()+\"-\"+b.pad2(a.getMonth()+1)},incr:function(a){return a.setMonth(a.getMonth()+1)}},week:{span:6048e5,start:function(a){return new Date(a.getFullYear(),a.getMonth(),a.getDate())},fmt:function(a){return\"\"+a.getFullYear()+\"-\"+b.pad2(a.getMonth()+1)+\"-\"+b.pad2(a.getDate())},incr:function(a){return a.setDate(a.getDate()+7)}},day:{span:864e5,start:function(a){return new Date(a.getFullYear(),a.getMonth(),a.getDate())},fmt:function(a){return\"\"+a.getFullYear()+\"-\"+b.pad2(a.getMonth()+1)+\"-\"+b.pad2(a.getDate())},incr:function(a){return a.setDate(a.getDate()+1)}},hour:c(60),\"30min\":c(30),\"15min\":c(15),\"10min\":c(10),\"5min\":c(5),minute:c(1),\"30sec\":d(30),\"15sec\":d(15),\"10sec\":d(10),\"5sec\":d(5),second:d(1)},b.AUTO_LABEL_ORDER=[\"decade\",\"year\",\"month\",\"week\",\"day\",\"hour\",\"30min\",\"15min\",\"10min\",\"5min\",\"minute\",\"30sec\",\"15sec\",\"10sec\",\"5sec\",\"second\"],b.Area=function(c){function d(c){var f;return this instanceof b.Area?(f=a.extend({},e,c),this.cumulative=!f.behaveLikeLine,\"auto\"===f.fillOpacity&&(f.fillOpacity=f.behaveLikeLine?.8:1),d.__super__.constructor.call(this,f),void 0):new b.Area(c)}var e;return h(d,c),e={fillOpacity:\"auto\",behaveLikeLine:!1},d.prototype.calcPoints=function(){var a,b,c,d,e,f,g;for(f=this.data,g=[],d=0,e=f.length;e>d;d++)a=f[d],a._x=this.transX(a.x),b=0,a._y=function(){var d,e,f,g;for(f=a.y,g=[],d=0,e=f.length;e>d;d++)c=f[d],this.options.behaveLikeLine?g.push(this.transY(c)):(b+=c||0,g.push(this.transY(b)));return g}.call(this),g.push(a._ymax=Math.max.apply(Math,a._y));return g},d.prototype.drawSeries=function(){var a,b,c,d,e,f,g,h;for(this.seriesPoints=[],b=this.options.behaveLikeLine?function(){f=[];for(var a=0,b=this.options.ykeys.length-1;b>=0?b>=a:a>=b;b>=0?a++:a--)f.push(a);return f}.apply(this):function(){g=[];for(var a=e=this.options.ykeys.length-1;0>=e?0>=a:a>=0;0>=e?a++:a--)g.push(a);return g}.apply(this),h=[],c=0,d=b.length;d>c;c++)a=b[c],this._drawFillFor(a),this._drawLineFor(a),h.push(this._drawPointFor(a));return h},d.prototype._drawFillFor=function(a){var b;return b=this.paths[a],null!==b?(b+=\"L\"+this.transX(this.xmax)+\",\"+this.bottom+\"L\"+this.transX(this.xmin)+\",\"+this.bottom+\"Z\",this.drawFilledPath(b,this.fillForSeries(a))):void 0},d.prototype.fillForSeries=function(a){var b;return b=Raphael.rgb2hsl(this.colorFor(this.data[a],a,\"line\")),Raphael.hsl(b.h,this.options.behaveLikeLine?.9*b.s:.75*b.s,Math.min(.98,this.options.behaveLikeLine?1.2*b.l:1.25*b.l))},d.prototype.drawFilledPath=function(a,b){return this.raphael.path(a).attr(\"fill\",b).attr(\"fill-opacity\",this.options.fillOpacity).attr(\"stroke\",\"none\")},d}(b.Line),b.Bar=function(c){function d(c){return this.onHoverOut=f(this.onHoverOut,this),this.onHoverMove=f(this.onHoverMove,this),this.onGridClick=f(this.onGridClick,this),this instanceof b.Bar?(d.__super__.constructor.call(this,a.extend({},c,{parseTime:!1})),void 0):new b.Bar(c)}return h(d,c),d.prototype.init=function(){return this.cumulative=this.options.stacked,\"always\"!==this.options.hideHover?(this.hover=new b.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)):void 0},d.prototype.defaults={barSizeRatio:.75,barGap:3,barColors:[\"#0b62a4\",\"#7a92a3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],barOpacity:1,barRadius:[0,0,0,0],xLabelMargin:50},d.prototype.calc=function(){var a;return this.calcBars(),this.options.hideHover===!1?(a=this.hover).update.apply(a,this.hoverContentForRow(this.data.length-1)):void 0},d.prototype.calcBars=function(){var a,b,c,d,e,f,g;for(f=this.data,g=[],a=d=0,e=f.length;e>d;a=++d)b=f[a],b._x=this.left+this.width*(a+.5)/this.data.length,g.push(b._y=function(){var a,d,e,f;for(e=b.y,f=[],a=0,d=e.length;d>a;a++)c=e[a],null!=c?f.push(this.transY(c)):f.push(null);return f}.call(this));return g},d.prototype.draw=function(){var a;return((a=this.options.axes)===!0||\"both\"===a||\"x\"===a)&&this.drawXAxis(),this.drawSeries()},d.prototype.drawXAxis=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(j=this.bottom+(this.options.xAxisLabelTopPadding||this.options.padding/2),g=null,f=null,m=[],a=k=0,l=this.data.length;l>=0?l>k:k>l;a=l>=0?++k:--k)h=this.data[this.data.length-1-a],b=this.drawXAxisLabel(h._x,j,h.label),i=b.getBBox(),b.transform(\"r\"+-this.options.xLabelAngle),c=b.getBBox(),b.transform(\"t0,\"+c.height/2+\"...\"),0!==this.options.xLabelAngle&&(e=-.5*i.width*Math.cos(this.options.xLabelAngle*Math.PI/180),b.transform(\"t\"+e+\",0...\")),(null==g||g>=c.x+c.width||null!=f&&f>=c.x)&&c.x>=0&&c.x+c.width<this.el.width()?(0!==this.options.xLabelAngle&&(d=1.25*this.options.gridTextSize/Math.sin(this.options.xLabelAngle*Math.PI/180),f=c.x-d),m.push(g=c.x-this.options.xLabelMargin)):m.push(b.remove());return m},d.prototype.drawSeries=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o;return c=this.width/this.options.data.length,h=this.options.stacked?1:this.options.ykeys.length,a=(c*this.options.barSizeRatio-this.options.barGap*(h-1))/h,this.options.barSize&&(a=Math.min(a,this.options.barSize)),l=c-a*h-this.options.barGap*(h-1),g=l/2,o=this.ymin<=0&&this.ymax>=0?this.transY(0):null,this.bars=function(){var h,l,p,q;for(p=this.data,q=[],d=h=0,l=p.length;l>h;d=++h)i=p[d],e=0,q.push(function(){var h,l,p,q;for(p=i._y,q=[],j=h=0,l=p.length;l>h;j=++h)n=p[j],null!==n?(o?(m=Math.min(n,o),b=Math.max(n,o)):(m=n,b=this.bottom),f=this.left+d*c+g,this.options.stacked||(f+=j*(a+this.options.barGap)),k=b-m,this.options.verticalGridCondition&&this.options.verticalGridCondition(i.x)&&this.drawBar(this.left+d*c,this.top,c,Math.abs(this.top-this.bottom),this.options.verticalGridColor,this.options.verticalGridOpacity,this.options.barRadius),this.options.stacked&&(m-=e),this.drawBar(f,m,a,k,this.colorFor(i,j,\"bar\"),this.options.barOpacity,this.options.barRadius),q.push(e+=k)):q.push(null);return q}.call(this));return q}.call(this)},d.prototype.colorFor=function(a,b,c){var d,e;return\"function\"==typeof this.options.barColors?(d={x:a.x,y:a.y[b],label:a.label},e={index:b,key:this.options.ykeys[b],label:this.options.labels[b]},this.options.barColors.call(this,d,e,c)):this.options.barColors[b%this.options.barColors.length]},d.prototype.hitTest=function(a){return 0===this.data.length?null:(a=Math.max(Math.min(a,this.right),this.left),Math.min(this.data.length-1,Math.floor((a-this.left)/(this.width/this.data.length))))},d.prototype.onGridClick=function(a,b){var c;return c=this.hitTest(a),this.fire(\"click\",c,this.data[c].src,a,b)},d.prototype.onHoverMove=function(a){var b,c;return b=this.hitTest(a),(c=this.hover).update.apply(c,this.hoverContentForRow(b))},d.prototype.onHoverOut=function(){return this.options.hideHover!==!1?this.hover.hide():void 0},d.prototype.hoverContentForRow=function(a){var b,c,d,e,f,g,h,i;for(d=this.data[a],b=\"<div class='morris-hover-row-label'>\"+d.label+\"</div>\",i=d.y,c=g=0,h=i.length;h>g;c=++g)f=i[c],b+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(d,c,\"label\")+\"'>\\n  \"+this.options.labels[c]+\":\\n  \"+this.yLabelFormat(f)+\"\\n</div>\";return\"function\"==typeof this.options.hoverCallback&&(b=this.options.hoverCallback(a,this.options,b,d.src)),e=this.left+(a+.5)*this.width/this.data.length,[b,e]},d.prototype.drawXAxisLabel=function(a,b,c){var d;return d=this.raphael.text(a,b,c).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},d.prototype.drawBar=function(a,b,c,d,e,f,g){var h,i;return h=Math.max.apply(Math,g),i=0===h||h>d?this.raphael.rect(a,b,c,d):this.raphael.path(this.roundedRect(a,b,c,d,g)),i.attr(\"fill\",e).attr(\"fill-opacity\",f).attr(\"stroke\",\"none\")},d.prototype.roundedRect=function(a,b,c,d,e){return null==e&&(e=[0,0,0,0]),[\"M\",a,e[0]+b,\"Q\",a,b,a+e[0],b,\"L\",a+c-e[1],b,\"Q\",a+c,b,a+c,b+e[1],\"L\",a+c,b+d-e[2],\"Q\",a+c,b+d,a+c-e[2],b+d,\"L\",a+e[3],b+d,\"Q\",a,b+d,a,b+d-e[3],\"Z\"]},d}(b.Grid),b.Donut=function(c){function d(c){this.resizeHandler=f(this.resizeHandler,this),this.select=f(this.select,this),this.click=f(this.click,this);var d=this;if(!(this instanceof b.Donut))return new b.Donut(c);if(this.options=a.extend({},this.defaults,c),this.el=\"string\"==typeof c.element?a(document.getElementById(c.element)):a(c.element),null===this.el||0===this.el.length)throw new Error(\"Graph placeholder not found.\");void 0!==c.data&&0!==c.data.length&&(this.raphael=new Raphael(this.el[0]),this.options.resize&&a(window).bind(\"resize\",function(){return null!=d.timeoutId&&window.clearTimeout(d.timeoutId),d.timeoutId=window.setTimeout(d.resizeHandler,100)}),this.setData(c.data))}return h(d,c),d.prototype.defaults={colors:[\"#0B62A4\",\"#3980B5\",\"#679DC6\",\"#95BBD7\",\"#B0CCE1\",\"#095791\",\"#095085\",\"#083E67\",\"#052C48\",\"#042135\"],backgroundColor:\"#FFFFFF\",labelColor:\"#000000\",formatter:b.commas,resize:!1},d.prototype.redraw=function(){var a,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x;for(this.raphael.clear(),c=this.el.width()/2,d=this.el.height()/2,n=(Math.min(c,d)-10)/3,l=0,u=this.values,o=0,r=u.length;r>o;o++)m=u[o],l+=m;for(i=5/(2*n),a=1.9999*Math.PI-i*this.data.length,g=0,f=0,this.segments=[],v=this.values,e=p=0,s=v.length;s>p;e=++p)m=v[e],j=g+i+a*(m/l),k=new b.DonutSegment(c,d,2*n,n,g,j,this.data[e].color||this.options.colors[f%this.options.colors.length],this.options.backgroundColor,f,this.raphael),k.render(),this.segments.push(k),k.on(\"hover\",this.select),k.on(\"click\",this.click),g=j,f+=1;for(this.text1=this.drawEmptyDonutLabel(c,d-10,this.options.labelColor,15,800),this.text2=this.drawEmptyDonutLabel(c,d+10,this.options.labelColor,14),h=Math.max.apply(Math,this.values),f=0,w=this.values,x=[],q=0,t=w.length;t>q;q++){if(m=w[q],m===h){this.select(f);\nbreak}x.push(f+=1)}return x},d.prototype.setData=function(a){var b;return this.data=a,this.values=function(){var a,c,d,e;for(d=this.data,e=[],a=0,c=d.length;c>a;a++)b=d[a],e.push(parseFloat(b.value));return e}.call(this),this.redraw()},d.prototype.click=function(a){return this.fire(\"click\",a,this.data[a])},d.prototype.select=function(a){var b,c,d,e,f,g;for(g=this.segments,e=0,f=g.length;f>e;e++)c=g[e],c.deselect();return d=this.segments[a],d.select(),b=this.data[a],this.setLabels(b.label,this.options.formatter(b.value,b))},d.prototype.setLabels=function(a,b){var c,d,e,f,g,h,i,j;return c=2*(Math.min(this.el.width()/2,this.el.height()/2)-10)/3,f=1.8*c,e=c/2,d=c/3,this.text1.attr({text:a,transform:\"\"}),g=this.text1.getBBox(),h=Math.min(f/g.width,e/g.height),this.text1.attr({transform:\"S\"+h+\",\"+h+\",\"+(g.x+g.width/2)+\",\"+(g.y+g.height)}),this.text2.attr({text:b,transform:\"\"}),i=this.text2.getBBox(),j=Math.min(f/i.width,d/i.height),this.text2.attr({transform:\"S\"+j+\",\"+j+\",\"+(i.x+i.width/2)+\",\"+i.y})},d.prototype.drawEmptyDonutLabel=function(a,b,c,d,e){var f;return f=this.raphael.text(a,b,\"\").attr(\"font-size\",d).attr(\"fill\",c),null!=e&&f.attr(\"font-weight\",e),f},d.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},d}(b.EventEmitter),b.DonutSegment=function(a){function b(a,b,c,d,e,g,h,i,j,k){this.cx=a,this.cy=b,this.inner=c,this.outer=d,this.color=h,this.backgroundColor=i,this.index=j,this.raphael=k,this.deselect=f(this.deselect,this),this.select=f(this.select,this),this.sin_p0=Math.sin(e),this.cos_p0=Math.cos(e),this.sin_p1=Math.sin(g),this.cos_p1=Math.cos(g),this.is_long=g-e>Math.PI?1:0,this.path=this.calcSegment(this.inner+3,this.inner+this.outer-5),this.selectedPath=this.calcSegment(this.inner+3,this.inner+this.outer),this.hilight=this.calcArc(this.inner)}return h(b,a),b.prototype.calcArcPoints=function(a){return[this.cx+a*this.sin_p0,this.cy+a*this.cos_p0,this.cx+a*this.sin_p1,this.cy+a*this.cos_p1]},b.prototype.calcSegment=function(a,b){var c,d,e,f,g,h,i,j,k,l;return k=this.calcArcPoints(a),c=k[0],e=k[1],d=k[2],f=k[3],l=this.calcArcPoints(b),g=l[0],i=l[1],h=l[2],j=l[3],\"M\"+c+\",\"+e+(\"A\"+a+\",\"+a+\",0,\"+this.is_long+\",0,\"+d+\",\"+f)+(\"L\"+h+\",\"+j)+(\"A\"+b+\",\"+b+\",0,\"+this.is_long+\",1,\"+g+\",\"+i)+\"Z\"},b.prototype.calcArc=function(a){var b,c,d,e,f;return f=this.calcArcPoints(a),b=f[0],d=f[1],c=f[2],e=f[3],\"M\"+b+\",\"+d+(\"A\"+a+\",\"+a+\",0,\"+this.is_long+\",0,\"+c+\",\"+e)},b.prototype.render=function(){var a=this;return this.arc=this.drawDonutArc(this.hilight,this.color),this.seg=this.drawDonutSegment(this.path,this.color,this.backgroundColor,function(){return a.fire(\"hover\",a.index)},function(){return a.fire(\"click\",a.index)})},b.prototype.drawDonutArc=function(a,b){return this.raphael.path(a).attr({stroke:b,\"stroke-width\":2,opacity:0})},b.prototype.drawDonutSegment=function(a,b,c,d,e){return this.raphael.path(a).attr({fill:b,stroke:c,\"stroke-width\":3}).hover(d).click(e)},b.prototype.select=function(){return this.selected?void 0:(this.seg.animate({path:this.selectedPath},150,\"<>\"),this.arc.animate({opacity:1},150,\"<>\"),this.selected=!0)},b.prototype.deselect=function(){return this.selected?(this.seg.animate({path:this.path},150,\"<>\"),this.arc.animate({opacity:0},150,\"<>\"),this.selected=!1):void 0},b}(b.EventEmitter)}).call(this);\ndefine(\"morris\", [\"jquery\",\"raphael\"], (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.Morris;\n    };\n}(this)));\n\n",
    "/**\n * System graph module\n */\n\ndefine('app/ui/system_graph',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'morris'\n], function($, Init, Util, Morris) {\n    'use strict';\n\n    var config = {\n        // module info\n        moduleClass: 'pf-module',                                               // class for each module\n\n        // system graph module\n        systemGraphModuleClass: 'pf-system-graph-module',                       // class  for this module\n        systemGraphClass: 'pf-system-graph',                                    // class for each graph\n\n        // system graph labels\n        systemGraphLabels: {\n            jumps: {\n                headline: 'Jumps',\n                units: 'jumps',\n                ykeys: ['y'],\n                labels: ['jumps'],\n                lineColors: ['#375959'],\n                pointFillColors: ['#477372']\n            },\n            shipKills: {\n                headline: 'Ship/POD Kills',\n                units: 'kills',\n                ykeys: ['y', 'z'],\n                labels: ['Ship kills', 'POD kills'],\n                lineColors: ['#375959', '#477372'],\n                pointFillColors: ['#477372', '#568a89']\n            },\n            factionKills: {\n                headline: 'NPC Kills',\n                units: 'kills',\n                ykeys: ['y'],\n                labels: ['kills'],\n                lineColors: ['#375959'],\n                pointFillColors: ['#477372']\n            }\n        }\n    };\n\n    /**\n     * get info for a given graph key\n     * @param graphKey\n     * @param option\n     * @returns {string}\n     */\n    var getInfoForGraph = function(graphKey, option){\n        var info = '';\n\n        if(config.systemGraphLabels.hasOwnProperty(graphKey)){\n            info = config.systemGraphLabels[graphKey][option];\n        }\n\n        return info;\n    };\n\n    /**\n     * init Morris Graph\n     * @param graphElement\n     * @param graphKey\n     * @param graphData\n     */\n    var initGraph = function(graphElement, graphKey, graphData, eventLine){\n\n        if(graphData.length > 0){\n            var labelYFormat = function(y){\n                return Math.round(y);\n            };\n\n            var graphConfig = {\n                element: graphElement,\n                data: graphData,\n                xkey: 'x',\n                ykeys: getInfoForGraph(graphKey, 'ykeys'),\n                labels: getInfoForGraph(graphKey, 'labels'),\n                parseTime: false,\n                ymin: 0,\n                yLabelFormat: labelYFormat,\n                padding: 10,\n                hideHover: true,\n                pointSize: 3,\n                lineColors: getInfoForGraph(graphKey, 'lineColors'),\n                pointFillColors: getInfoForGraph(graphKey, 'pointFillColors'),\n                pointStrokeColors: ['#141413'],\n                lineWidth: 2,\n                grid: true,\n                gridStrokeWidth: 0.3,\n                gridTextSize: 9,\n                gridTextFamily: 'Oxygen Bold',\n                gridTextColor: '#63676a',\n                behaveLikeLine: false,\n                goals: [],\n                goalLineColors: ['#5cb85c'],\n                smooth: true,\n                fillOpacity: 0.2,\n                resize: true,\n                redraw: true,\n                eventStrokeWidth: 2,\n                eventLineColors: ['#5CB85C']\n            };\n\n            if(eventLine >= 0){\n                graphConfig.events = [eventLine];\n            }\n\n            Morris.Area(graphConfig);\n        }\n    };\n\n    /**\n     * draw graph module\n     * @param parentElement\n     * @param systemData\n     */\n    var drawModule = function(parentElement, systemData){\n\n        // graph data is available for k-space systems\n        if(systemData.type.id === 2){\n            var requestData = {\n                systemIds: [systemData.systemId]\n            };\n\n            // calculate time offset until system created\n            var serverData = Util.getServerTime();\n\n            var timestampNow = Math.floor(serverData.getTime() / 1000);\n            var timeSinceUpdate = timestampNow - systemData.updated;\n\n            var timeInHours = Math.floor(timeSinceUpdate / 3600);\n            var timeInMinutes = Math.floor((timeSinceUpdate % 3600) / 60);\n            var timeInMinutesPercent = ( timeInMinutes / 60 ).toFixed(2);\n            var eventLine = timeInHours + timeInMinutesPercent;\n\n            // graph is from right to left -> convert event line\n            eventLine = 23 - eventLine;\n\n            $.ajax({\n                type: 'POST',\n                url: Init.path.getSystemGraphData,\n                data: requestData,\n                dataType: 'json'\n            }).done(function(systemGraphsData){\n\n                if( Object.keys(systemGraphsData).length > 0 ){\n                    // create new (hidden) module container\n                    var moduleElement = $('<div>', {\n                        class: [config.moduleClass, config.systemGraphModuleClass].join(' '),\n                        css: {opacity: 0}\n                    });\n\n                    // insert at the correct position\n                    if($(parentElement).children().length === 1){\n                        $(parentElement).append(moduleElement);\n                    }else{\n                        $(parentElement).find('>:first-child').after(moduleElement);\n                    }\n\n                    // row element\n                    var rowElement = $('<div>', {\n                        class: 'row'\n                    });\n                    moduleElement.append(rowElement);\n\n                    $.each(systemGraphsData, function(systemId, graphsData){\n                        $.each(graphsData, function(graphKey, graphData){\n\n                            var colElement = $('<div>', {\n                                class: ['col-xs-12', 'col-sm-6', 'col-md-4'].join(' ')\n                            });\n\n                            var headlineElement = $('<h5>').text( getInfoForGraph(graphKey, 'headline') );\n\n                            colElement.append(headlineElement);\n\n                            var graphElement = $('<div>', {\n                                class: config.systemGraphClass\n                            });\n\n                            colElement.append(graphElement);\n\n                            rowElement.append(colElement);\n                            initGraph(graphElement, graphKey, graphData, eventLine);\n                        });\n                    });\n\n                    moduleElement.append($('<div>', {\n                        css: {'clear': 'both'}\n                    }));\n\n                    // show module\n                    moduleElement.velocity('transition.slideDownIn', {\n                        duration: Init.animationSpeed.mapModule,\n                        delay: Init.animationSpeed.mapModule\n                    });\n                }\n            }).fail(function( jqXHR, status, error) {\n                var reason = status + ' ' + error;\n                Util.showNotify({title: jqXHR.status + ': System graph data', text: reason, type: 'warning'});\n                $(document).setProgramStatus('problem');\n            });\n        }\n\n    };\n\n\n    /**\n     * main module load function\n     * @param systemData\n     */\n    $.fn.drawSystemGraphModule = function(systemData){\n\n        var parentElement = $(this);\n\n        // check if module already exists\n        var moduleElement = parentElement.find('.' + config.systemGraphModuleClass);\n\n        if(moduleElement.length > 0){\n            moduleElement.velocity('transition.slideDownOut', {\n                duration: Init.animationSpeed.mapModule,\n                complete: function(tempElement){\n                    $(tempElement).remove();\n                    drawModule(parentElement, systemData);\n                }\n            });\n        }else{\n            drawModule(parentElement, systemData);\n        }\n    };\n\n\n\n});\n\n",
    "/**\n *  System signature module\n */\n\ndefine('app/ui/system_signature',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'bootbox',\n    'app/map/map',\n    'app/map/util'\n], function($, Init, Util, Render, bootbox, Map, MapUtil) {\n    'use strict';\n\n    let config = {\n        // module info\n        moduleClass: 'pf-module',                                               // class for each module\n\n        // system signature module\n        systemSigModuleClass: 'pf-sig-table-module',                            // module wrapper\n\n        // tables\n        tableToolsClass: 'pf-table-tools',                                      // class for table toolbar\n        tableToolsActionClass: 'pf-table-tools-action',                         // class for table toolbar action\n\n        // dialogs\n        signatureReaderDialogId: 'pf-signature-reader-dialog',                  // id for signature reader dialog\n\n        // signature progress bar\n        signatureScannedProgressBarClass: 'pf-system-progress-scanned',         // class for signature progress bar\n\n        // toolbar\n        sigTableClearButtonClass: 'pf-sig-table-clear-button',                  // class for \"clear\" signatures button\n\n        // signature table\n        sigTableClass: 'pf-sig-table',                                          // Table class for all Signature Tables\n        sigTablePrimaryClass: 'pf-sig-table-primary',                           // class for primary sig table\n        sigTableSecondaryClass: 'pf-sig-table-secondary',                       // class for secondary sig table\n        sigTableRowIdPrefix: 'pf-sig-table-row-',                               // id prefix for a table row <tr>\n        sigTableEditText: 'pf-sig-table-edit-text',                             // class for editable fields (text)\n        sigTableEditSigNameInput: 'pf-sig-table-edit-name-input',               // class for editable fields (input)\n        sigTableEditSigGroupSelect: 'pf-sig-table-edit-group-select',           // class for editable fields (sig group)\n        sigTableEditSigTypeSelect: 'pf-sig-table-edit-type-select',             // class for editable fields (sig type)\n        sigTableEditSigConnectionSelect: 'pf-sig-table-edit-connection-select', // class for editable fields (sig connection)\n        sigTableEditSigDescriptionTextarea: 'pf-sig-table-edit-desc-text',      // class for editable fields (sig description)\n        sigTableCreatedCellClass: 'pf-sig-table-created',                       // class for \"created\" cells\n        sigTableUpdatedCellClass: 'pf-sig-table-updated',                       // class for \"updated\" cells\n\n        sigTableConnectionClass: 'pf-table-connection-cell',                    // class for \"connection\" cells\n        sigTableCounterClass: 'pf-table-counter-cell',                          // class for \"counter\" cells\n        sigTableActionCellClass: 'pf-table-action-cell',                        // class for \"action\" cells\n\n        // xEditable\n        moduleIcon: 'pf-module-icon-button',                                    // class for \"filter\" - icons\n        editableDescriptionInputClass: 'pf-editable-description',               // class for \"description\" textarea\n        editableFilterElementClass: 'pf-editable-filter',                       // class for \"filter\" selects (not active)\n        editableFilterSelectPopoverClass: 'pf-editable-filter-active'           // class for active \"filter\" selects (popover)\n    };\n\n    // lock Signature Table update temporary (until. some requests/animations) are finished\n    let disableTableUpdate = true;\n\n    // disable \"copy&paste\" from clipboard (until  request finished)\n    let disableCopyFromClipboard = false;\n\n    // cache for dataTable object6\n    let dataTableInstances = {};\n\n    // empty signatureData object -> for \"add row\" table\n    let emptySignatureData = {\n        id: 0,\n        name: '',\n        groupId: 0,\n        typeId: 0,\n        description: '',\n        created: {\n            created: null\n        },\n        updated: {\n            updated: null\n        }\n    };\n\n    let fullSignatureOptions = {\n        action: 'delete',\n        actionClass: ['fa-close', 'txt-color', 'txt-color-redDarker'].join(' ')\n    };\n\n    // empty signatureData row Options\n    let emptySignatureOptions = {\n        action: 'add',\n        actionClass: ['fa-plus'].join(' ')\n    };\n\n    let sigNameCache = {};                                                      // cache signature names\n\n    let validSignatureNames = [                                                 // allowed signature type/names\n        'Cosmic Anomaly',\n        'Cosmic Signature',\n        'Космическая аномалия',                                                 // == \"Cosmic Anomaly\"\n        'Источники сигналов'                                                    // == \"Cosmic Signature\"\n    ];\n\n    // some static signature data\n    let signatureGroupsLabels   = Util.getSignatureGroupInfo('label');\n    let signatureGroupsNames    = Util.getSignatureGroupInfo('name');\n\n    /**\n     * check whether a dataTable API instance exists in the global cache\n     * args: 1. mapId, 2. systemId, 3, tableType (primary/secondary) string\n     * @param args\n     * @returns {boolean}\n     */\n    let checkDataTableInstance = (...args) => {\n        let obj = dataTableInstances;\n        for(let arg of args){\n            if ( !obj || !obj.hasOwnProperty(arg) ){\n                return false;\n            }\n            obj = obj[arg];\n        }\n        return true;\n    };\n\n    /**\n     * stores a dataTableApi instance to global cache ( overwrites existing)\n     * @param mapId\n     * @param systemId\n     * @param tableType\n     * @param instance\n     */\n    let setDataTableInstance = (mapId, systemId, tableType, instance) => {\n        let tmpObj = {\n            [mapId]: {\n                [systemId]: {\n                    [tableType]: instance\n                }\n            }\n        };\n\n        $.extend(true, dataTableInstances, tmpObj);\n    };\n\n    /**\n     * get a dataTableApi instance from global cache\n     * @param mapId\n     * @param systemId\n     * @param tableType\n     * @returns {*}\n     */\n    let getDataTableInstance = (mapId, systemId, tableType) => {\n        let instance = null;\n        if( checkDataTableInstance(mapId, systemId, tableType) ){\n            instance = dataTableInstances[mapId][systemId][tableType];\n        }\n        return instance;\n    };\n\n    /**\n     * get dataTable instance from \"moduleElement\" (DOM node)\n     * @param moduleElement\n     * @param tableType\n     * @returns {*}\n     */\n    let getDataTableInstanceByModuleElement = (moduleElement, tableType) => {\n        return getDataTableInstance(moduleElement.data('mapId'), moduleElement.data('systemId'), tableType);\n    };\n\n    /**\n     * delete a dataTableApi instance from global cache\n     * -> see checkDataTableInstance() for parameter order\n     * @param args\n     */\n    let deleteDataTableInstance = (...args) => {\n        // check if instance exists\n        if( checkDataTableInstance.apply(null, args) ){\n\n            // callback for \"leaf\" delete callback\n            let deleteCallback = (dataTableApi) => {\n                dataTableApi.destroy();\n            };\n\n            // recursive delete from dataTableInstances Object cache\n            let deepDelete = (target, obj, callback) => {\n                if(target.length > 1){\n                    // remove first target param for next recursive call\n                    let currentTarget = target.shift();\n\n                    deepDelete(target, obj[currentTarget], callback);\n\n                    // delete \"parent\" key when current key became empty\n                    if( !Object.keys( obj[currentTarget] ).length ){\n                        delete obj[currentTarget];\n                    }\n                }else{\n                    // check for callback function\n                    if( typeof callback === 'function' ){\n                        callback(obj[target]);\n                    }\n\n                    delete obj[target];\n                }\n            };\n\n            deepDelete(args, dataTableInstances, deleteCallback);\n        }\n    };\n\n    /**\n     * collect all data of all editable fields in a signature table\n     * @param tableApi\n     * @returns {Array}\n     */\n    let getTableData = function(tableApi){\n        let tableData = [];\n\n        tableApi.rows().eq(0).each(function(idx){\n            let row = tableApi.row(idx);\n            // default row data\n            let defaultRowData = row.data();\n            let rowElement = row.nodes().to$();\n\n            if(defaultRowData.id > 0){\n                // get all editable fields per row\n                let editableFields = rowElement.find('.editable');\n\n                if(editableFields.length > 0){\n                    let values = $(editableFields).editable('getValue');\n\n                    if(values.name){\n                        // convert to lower for better compare options\n                        values.name = values.name.toLowerCase();\n\n                        // add pk for this row\n                        values.id = defaultRowData.id;\n\n                        // add updated for this row\n                        values.updated = defaultRowData.updated;\n\n                        // add row index\n                        values.index = idx;\n\n                        tableData.push( values );\n                    }\n                }\n            }\n        });\n\n        return tableData;\n    };\n\n    /**\n     * updates a single cell with new data (e.g. \"updated\" cell)\n     * @param tableApi\n     * @param rowElement\n     * @param cellIndex\n     * @param data\n     */\n    let updateSignatureCell = function(tableApi, rowElement, cellIndex, data){\n        let rowIndex = tableApi.row( rowElement ).index();\n        let updateCell = tableApi.cell( rowIndex, cellIndex );\n        let updateCellElement = updateCell.nodes().to$();\n\n        if(cellIndex === 7){\n            // clear existing counter interval\n            clearInterval( updateCellElement.data('interval') );\n        }\n\n        // set new value\n        updateCell.data( data ).draw();\n\n        if(cellIndex === 7){\n            updateCellElement.initTimestampCounter();\n        }\n    };\n\n    /**\n     * Updates a signature table, changes all signatures where name matches\n     * add all new signatures as a row\n     *\n     * @param signatureDataOrig\n     * @param deleteOutdatedSignatures -> set to \"true\" if signatures should be deleted that are not included in \"signatureData\"\n     */\n    $.fn.updateSignatureTable = function(signatureDataOrig, deleteOutdatedSignatures){\n        // check if table update is allowed\n        if(disableTableUpdate === true){\n            return;\n        }\n\n        // clone signature array because of further manipulation\n        let signatureData = $.extend([], signatureDataOrig);\n\n        // disable update until function is ready;\n        lockSignatureTable();\n\n        let moduleElement = $(this);\n\n        // get signature table API\n        let signatureTableApi = getDataTableInstanceByModuleElement(moduleElement, 'primary');\n\n        // get current system data\n        let currentSystemData = Util.getCurrentSystemData();\n\n        let tableData = getTableData(signatureTableApi);\n\n        let notificationCounter = {\n            added: 0,\n            changed: 0,\n            deleted: 0\n        };\n\n        for(let i = 0; i < signatureData.length; i++){\n            for(let j = 0; j < tableData.length; j++){\n                if(signatureData[i].id === tableData[j].id){\n\n                    // check if row was updated\n                    if(signatureData[i].updated.updated > tableData[j].updated.updated){\n                        // row element to remove\n                        let currentRowElement = signatureTableApi.row(tableData[j].index).nodes().to$();\n\n                        // hide open editable fields on the row before removing them\n                        currentRowElement.find('.editable').editable('destroy');\n\n                        // remove \"old\" row\n                        signatureTableApi.row(currentRowElement).remove().draw();\n\n                        // and add \"new\" row\n                        let changedRowElement = addSignatureRow(signatureTableApi, currentSystemData.systemData, signatureData[i], false);\n\n                        // highlight\n                        changedRowElement.pulseTableRow('changed');\n\n                        notificationCounter.changed++;\n                    }\n\n                    // remove signature data -> all left signatures will be added\n                    signatureData.splice(i, 1);\n                    i--;\n\n                    // remove signature data -> all left signatures will be deleted\n                    tableData.splice(j, 1);\n                    j--;\n\n                    break;\n                }\n            }\n        }\n\n        // delete signatures ------------------------------------------------------------------------------------------\n        if(deleteOutdatedSignatures === true){\n\n            // callback function after row deleted\n            let toggleTableRowCallback = function(tempRowElement){\n                // hide open editable fields on the row before removing them\n                tempRowElement.find('.editable').editable('destroy');\n\n                // delete signature row\n                signatureTableApi.row(tempRowElement).remove().draw();\n            };\n\n            for(let l = 0; l < tableData.length; l++){\n                let rowElement = signatureTableApi.row(tableData[l].index).nodes().to$();\n                rowElement.toggleTableRow(toggleTableRowCallback);\n                notificationCounter.deleted++;\n            }\n        }\n\n        // add new signatures -----------------------------------------------------------------------------------------\n        for(let k = 0; k < signatureData.length; k++){\n            // and add \"new\" row\n            let newRowElement = addSignatureRow(signatureTableApi, currentSystemData.systemData, signatureData[k], false);\n\n            // highlight\n            newRowElement.pulseTableRow('added');\n\n            notificationCounter.added++;\n        }\n\n\n        // show notification ------------------------------------------------------------------------------------------\n        if(\n            notificationCounter.added > 0 ||\n            notificationCounter.changed > 0 ||\n            notificationCounter.deleted > 0\n        ){\n            // update signature bar\n            moduleElement.updateScannedSignaturesBar({showNotice: true});\n\n            // show Notification\n            let notification = notificationCounter.added + ' added<br>';\n            notification += notificationCounter.changed + ' changed<br>';\n            notification += notificationCounter.deleted + ' deleted<br>';\n            Util.showNotify({title: 'Signatures updated', text: notification, type: 'success'});\n\n            // wait until add/remove animations are finished before enable table for auto update again\n            unlockSignatureTable(false);\n        }else{\n            // enable table for next update\n            unlockSignatureTable(true);\n        }\n    };\n\n    /**\n     * lock system signature table for\n     */\n    let lockSignatureTable = function(){\n        disableTableUpdate = true;\n    };\n\n    /**\n     * unlock system signature table from been locked\n     * -> make table \"update-able\" again\n     * @param instant\n     */\n    let unlockSignatureTable = function(instant){\n        if(disableTableUpdate === true){\n            if(instant === true){\n                disableTableUpdate = false;\n            }else{\n                // wait until add/remove animations are finished before enable table for auto update again\n                setTimeout(function(){ disableTableUpdate = false; }, 2000);\n            }\n\n        }\n    };\n\n    /**\n     * update Progressbar for all scanned signatures in a system\n     * @param options\n     */\n    $.fn.updateScannedSignaturesBar = function(options){\n        let moduleElement = $(this);\n        let signatureTableApi = getDataTableInstanceByModuleElement(moduleElement, 'primary');\n\n        // get progress bar\n        let progressBarWrapper = moduleElement.find('.' + config.signatureScannedProgressBarClass);\n        let progressBar = $(progressBarWrapper).find('.progress-bar');\n        let progressBarLabel = $(progressBarWrapper).find('.progress-label-right');\n\n        let tableData = getTableData(signatureTableApi);\n\n        let sigCount = 0;\n        let percent = 0;\n        let sigIncompleteCount = 0;\n        let progressBarType = 'progress-bar-danger';\n\n        if(tableData){\n            sigCount = tableData.length;\n\n            // check for  signatures without \"groupId\" -> these are un scanned signatures\n\n            for(let i = 0; i < tableData.length; i++){\n                let groupId = parseInt(tableData[i].groupId);\n                if(groupId === 0){\n                    sigIncompleteCount++;\n                }\n            }\n\n            if(sigCount > 0){\n                percent = 100 - Math.round( 100 / sigCount * sigIncompleteCount );\n            }\n\n            if(percent < 30){\n                progressBarType = 'progress-bar-danger' ;\n            }else if(percent < 100){\n                progressBarType = 'progress-bar-warning';\n            }else{\n                progressBarType = 'progress-bar-success';\n            }\n        }\n\n        setTimeout(\n            function() {\n                progressBarLabel.text(percent + '%');\n                progressBar.removeClass().addClass('progress-bar').addClass(progressBarType);\n                progressBar.attr('aria-valuenow', percent);\n                progressBar.css({width: percent + '%'});\n\n                let notification = (sigCount - sigIncompleteCount) + ' / ' + sigCount + ' (' + percent + '%) signatures scanned';\n\n                // show notifications\n                if(options.showNotice !== false){\n                    if(percent < 100){\n                        Util.showNotify({title: 'Unscanned signatures', text: notification, type: 'info'});\n                    }else{\n                        Util.showNotify({title: 'System is scanned', text: notification, type: 'success'});\n                    }\n                }\n\n            }, 100);\n    };\n\n    /**\n     * open \"signature reader\" dialog for signature table\n     * @param systemData\n     */\n    $.fn.showSignatureReaderDialog = function(systemData){\n\n        let moduleElement = $(this);\n\n        let data = {\n            id: config.signatureReaderDialogId\n        };\n\n        requirejs(['text!templates/dialog/signature_reader.html', 'mustache'], function(template, Mustache) {\n\n            let content = Mustache.render(template, data);\n\n            let signatureReaderDialog = bootbox.dialog({\n                title: 'Signature reader',\n                message: content,\n                buttons: {\n                    close: {\n                        label: 'cancel',\n                        className: 'btn-default',\n                        callback: function(){\n                            $(signatureReaderDialog).modal('hide');\n                        }\n                    },\n                    success: {\n                        label: '<i class=\"fa fa-clipboard fa-fw\"></i>&nbsp;update signatures',\n                        className: 'btn-success',\n                        callback: function () {\n                            // get form Values\n                            let form = $('#' + config.signatureReaderDialogId).find('form');\n                            let formData = $(form).getFormValues();\n\n                            let signatureOptions = {\n                                deleteOld: (formData.deleteOld) ? 1 : 0\n                            };\n                            moduleElement.updateSignatureTableByClipboard(systemData, formData.clipboard, signatureOptions);\n                        }\n                    }\n                }\n            });\n\n            // dialog shown event\n            signatureReaderDialog.on('shown.bs.modal', function(e) {\n                signatureReaderDialog.initTooltips();\n\n                // set focus on sig-input textarea\n                signatureReaderDialog.find('textarea').focus();\n            });\n\n\n        });\n    };\n\n    /**\n     * updates the signature table with all signatures pasted into the \"signature reader\" dialog\n     * -> Hint: copy&paste signature data (without any open dialog) will add signatures as well\n     * @param systemData\n     * @param clipboard data stream\n     * @param options\n     */\n    $.fn.updateSignatureTableByClipboard = function(systemData, clipboard, options){\n        let moduleElement = $(this);\n\n        let saveSignatureData = function(signatureData){\n            // lock update function until request is finished\n            lockSignatureTable();\n\n            // lock copy during request (prevent spamming (ctrl + c )\n            disableCopyFromClipboard = true;\n\n            let requestData = {\n                signatures: signatureData,\n                deleteOld: (options.deleteOld) ? 1 : 0,\n                systemId: parseInt(systemData.id)\n            };\n\n            $.ajax({\n                type: 'POST',\n                url: Init.path.saveSignatureData,\n                data: requestData,\n                dataType: 'json',\n                context: {\n                    moduleElement: moduleElement\n                }\n            }).done(function(responseData){\n                unlockSignatureTable(true);\n\n                // updates table with new/updated signature information\n                this.moduleElement.updateSignatureTable(responseData.signatures, false);\n            }).fail(function( jqXHR, status, error) {\n                let reason = status + ' ' + error;\n                Util.showNotify({title: jqXHR.status + ': Update signatures', text: reason, type: 'warning'});\n                $(document).setProgramStatus('problem');\n            }).always(function() {\n                unlockSignatureTable(true);\n                disableCopyFromClipboard = false;\n            });\n        };\n\n        // check if copy&paste is enabled\n        if( !disableCopyFromClipboard ){\n\n            // parse input stream\n            let signatureData = parseSignatureString(systemData, clipboard);\n\n            if(signatureData.length > 0){\n                // valid signature data parsed\n\n                // check if signatures will be added to a system where character is currently in\n                // if user is not in any system -> id === undefined -> no \"confirmation required\n                let currentLocationData = Util.getCurrentLocationData();\n                if(\n                    currentLocationData.id &&\n                    currentLocationData.id !== systemData.id\n                ){\n\n                    let systemNameStr = (systemData.name === systemData.alias) ? '\"' + systemData.name + '\"' : '\"' + systemData.alias + '\" (' + systemData.name + ')';\n                    systemNameStr = '<span class=\"txt-color txt-color-warning\">' + systemNameStr + '</span>';\n\n                    let msg = '';\n                    msg += 'Update signatures in ' + systemNameStr + ' ? This not your current location, \"' + currentLocationData.name + '\" !';\n                    bootbox.confirm(msg, function(result) {\n                        if(result){\n                            saveSignatureData(signatureData);\n                        }\n                    });\n                }else{\n                    // current system selected -> no \"confirmation\" required\n                    saveSignatureData(signatureData);\n                }\n            }\n        }\n    };\n\n    /**\n     * parses a copy&paste string from ingame scanning window and parses it\n     * @param systemData\n     * @param clipboard\n     * @returns {Array}\n     */\n    let parseSignatureString = function(systemData, clipboard){\n        let signatureData = [];\n\n        if(clipboard.length){\n            let signatureRows = clipboard.split(/\\r\\n|\\r|\\n/g);\n            let signatureGroupOptions = signatureGroupsNames;\n            let invalidSignatures = 0;\n\n            for(let i = 0; i < signatureRows.length; i++){\n                let rowData = signatureRows[i].split(/\\t/g);\n\n                if(rowData.length === 6){\n\n                    // check if sig Type = anomaly or combat site\n                    if(validSignatureNames.indexOf( rowData[1] ) !== -1){\n\n                        let sigGroup = $.trim(rowData[2]).toLowerCase();\n                        let sigDescription = $.trim(rowData[3]);\n                        let sigGroupId = 0;\n                        let typeId = 0;\n\n                        // get groupId by groupName\n                        for (let prop in signatureGroupOptions) {\n                            if(signatureGroupOptions.hasOwnProperty(prop)){\n                                if(signatureGroupOptions[prop] === sigGroup){\n                                    sigGroupId = parseInt( prop );\n                                    break;\n                                }\n                            }\n                        }\n\n                        // wormhole type cant be extracted from signature string -> skip function call\n                        if(sigGroupId !== 5){\n                            // try to get \"typeId\" by description string\n                            typeId = Util.getSignatureTypeIdByName( systemData, sigGroupId, sigDescription );\n\n                            // set signature name as \"description\" if signature matching failed\n                            sigDescription = (typeId === 0) ? sigDescription : '';\n                        }else{\n                            sigDescription = '';\n                        }\n\n                        // map array values to signature Object\n                        let signatureObj = {\n                            systemId: systemData.id,\n                            name: $.trim( rowData[0] ).toLowerCase(),\n                            groupId: sigGroupId,\n                            typeId: typeId,\n                            description: sigDescription\n                        };\n\n                        signatureData.push(signatureObj);\n                    }else{\n                        invalidSignatures++;\n                    }\n                }else{\n                    invalidSignatures++;\n                }\n            }\n\n            if(invalidSignatures > 0){\n                let notification = invalidSignatures + ' / ' + signatureRows.length + ' signatures invalid';\n                Util.showNotify({title: 'Invalid signature(s)', text: notification, type: 'warning'});\n            }\n        }\n\n        return signatureData;\n    };\n\n    /**\n     * format signature data array into dataTable structure\n     * @param systemData\n     * @param signatureData\n     * @param options\n     * @returns {Array}\n     */\n    let formatSignatureData = function(systemData, signatureData, options){\n\n        let formattedData = [];\n\n        // security check\n        if(\n            systemData &&\n            systemData.id &&\n            systemData.id > 0\n        ){\n            let systemTypeId = systemData.type.id;\n\n            // areaId is required as a key for signature names\n            // if areaId is 0, no signature data is available for this system\n            let areaId = Util.getAreaIdBySecurity(systemData.security);\n\n            for(let i = 0; i < signatureData.length; i++){\n                let data = signatureData[i];\n\n                let tempData = {};\n\n                // set id ---------------------------------------------------------------------------------------------\n                let sigId = 0;\n                if(data.id > 0){\n                    sigId = data.id;\n                }\n                tempData.id = sigId;\n\n                // set status -----------------------------------------------------------------------------------------\n                let statusClass = '';\n                if(data.updated.character !== undefined){\n                    statusClass = Util.getStatusInfoForCharacter(data.updated.character, 'class');\n                }\n                let status = '<i class=\"fa fa-fw fa-circle pf-user-status ' + statusClass + '\"></i>';\n\n                tempData.status = {\n                    status: status,\n                    status_sort: statusClass\n                };\n\n                // set name -------------------------------------------------------------------------------------------\n                let sigName = '<a href=\"#\" class=\"' + config.sigTableEditSigNameInput + '\" ';\n                if(data.id > 0){\n                    sigName += 'data-pk=\"' + data.id + '\" ';\n                }\n                sigName += '>' + data.name + '</a>';\n\n                tempData.name = {\n                    render: sigName,\n                    name: data.name\n                };\n\n                // set group id ---------------------------------------------------------------------------------------\n                let sigGroup = '<a href=\"#\" class=\"' + config.sigTableEditSigGroupSelect + '\" ';\n                if(data.id > 0){\n                    sigGroup += 'data-pk=\"' + data.id + '\" ';\n                }\n                sigGroup += 'data-systemTypeId=\"' + systemTypeId + '\" ';\n                sigGroup += 'data-areaId=\"' + areaId + '\" ';\n                sigGroup += 'data-value=\"' + data.groupId + '\" ';\n                sigGroup += '></a>';\n\n                tempData.group = {\n                    group: sigGroup,\n                    sort: signatureGroupsLabels[data.groupId],\n                    filter: signatureGroupsLabels[data.groupId]\n                };\n\n                // set type id ----------------------------------------------------------------------------------------\n                let sigType = '<a href=\"#\" class=\"' + config.sigTableEditSigTypeSelect + '\" ';\n                if(data.id > 0){\n                    sigType += 'data-pk=\"' + data.id + '\" ';\n                }\n\n                // set disabled if sig type is not selected\n                if(data.groupId < 1){\n                    sigType += 'data-disabled=\"1\" ';\n                }\n\n                sigType += 'data-systemTypeId=\"' + systemTypeId + '\" ';\n                sigType += 'data-areaId=\"' + areaId + '\" ';\n                sigType += 'data-groupId=\"' + data.groupId + '\" ';\n                sigType += 'data-value=\"' + data.typeId + '\" ';\n                sigType += '></a>';\n\n                tempData.type = sigType;\n\n                // set connection (to target system) ------------------------------------------------------------------\n                let sigConnection = '<a href=\"#\" class=\"' + config.sigTableEditSigConnectionSelect + '\" ';\n                if(data.id > 0){\n                    sigConnection += 'data-pk=\"' + data.id + '\" ';\n                }\n\n                // set disabled if group is not wromhole\n                if(data.groupId !== 5){\n                    sigConnection += 'data-disabled=\"1\" ';\n                }\n\n                if(data.connection){\n                    sigConnection += 'data-value=\"' + data.connection.id + '\" ';\n                }\n                sigConnection += '></a>';\n\n                tempData.connection = {\n                    render: sigConnection,\n                    connection: data.connection\n                };\n\n                // set description ------------------------------------------------------------------------------------\n                let sigDescription = '<a href=\"#\" class=\"' + config.sigTableEditSigDescriptionTextarea + '\" ';\n                if(data.id > 0){\n                    sigDescription += 'data-pk=\"' + data.id + '\" ';\n                }\n                sigDescription += '>' + data.description + '</a>';\n\n                tempData.description = sigDescription;\n\n                // set created ----------------------------------------------------------------------------------------\n                tempData.created = data.created;\n\n                // set updated ----------------------------------------------------------------------------------------\n                tempData.updated = data.updated;\n\n                // info icon ------------------------------------------------------------------------------------------\n                let infoButton = '';\n                if(data.id > 0){\n                    infoButton = '<i class=\"fa fa-fw fa-question-circle\"></i>';\n                }\n                tempData.info = infoButton;\n\n                // action icon ----------------------------------------------------------------------------------------\n\n                let actionButton = '<i class=\"fa ' + options.actionClass + '\"></i>';\n                tempData.action = {\n                    action: options.action,\n                    button: actionButton\n                };\n\n                formattedData.push(tempData);\n\n            }\n\n        }\n\n        return formattedData;\n    };\n\n    /**\n     * get a labeled button\n     * @param options\n     * @returns {*|jQuery}\n     */\n    let getLabledButton = function(options){\n\n        let buttonClasses = ['btn', 'btn-sm', 'btn-labeled'];\n\n        switch(options.type){\n            case 'default':\n                buttonClasses.push('btn-default');\n                break;\n            case 'primary':\n                buttonClasses.push('btn-primary');\n                break;\n            case 'danger':\n                buttonClasses.push('btn-danger');\n                break;\n        }\n\n        // add optional classes\n        if(options.classes){\n            buttonClasses = buttonClasses.concat(options.classes);\n        }\n\n\n        let buttonElement = $('<button>', {\n            class: buttonClasses.join(' '),\n            type: 'button',\n            html: '&nbsp;' + options.label + '&nbsp;&nbsp;'\n        }).on('click', function(e){\n            options.onClick(e);\n        }).prepend(\n            $('<span>', {\n                class: 'btn-label'\n            }).prepend(\n                $('<i>', {\n                    class: ['fa', options.icon, 'fa-fw'].join(' ')\n                })\n            )\n        );\n\n        // add optional badge\n        if(options.badge){\n            buttonElement.append(\n                $('<span>', {\n                    class: ['badge'].join(' '),\n                    text: options.badge.label\n                })\n            );\n        }\n\n        return buttonElement;\n    };\n\n    /**\n     * get all rows of a table\n     * @param tableApi\n     * @returns {*}\n     */\n    let getRows = function(tableApi){\n        let rows = tableApi.rows();\n        return rows;\n    };\n\n    /**\n     * get all selected rows of a table\n     * @param tableApi\n     * @returns {*}\n     */\n    let getSelectedRows = function(tableApi){\n        let selectedRows = tableApi.rows('.selected');\n        return selectedRows;\n    };\n\n    /**\n     * check the \"delete signature\" button. show/hide the button if a signature is selected\n     * @param moduleElement\n     */\n    let checkDeleteSignaturesButton = function(moduleElement){\n        moduleElement = $(moduleElement);\n        let signatureTableApi = getDataTableInstanceByModuleElement(moduleElement, 'primary');\n\n        let selectedRows = getSelectedRows(signatureTableApi);\n        let selectedRowCount = selectedRows.data().length;\n        let clearButton = moduleElement.find('.' + config.sigTableClearButtonClass);\n\n        if(selectedRowCount > 0){\n            let allRows = getRows(signatureTableApi);\n            let rowCount = allRows.data().length;\n\n            let badgeText = selectedRowCount;\n            if(selectedRowCount >= rowCount){\n                badgeText = 'all';\n            }\n            clearButton.find('.badge').text( badgeText );\n\n            // update clear signatures button text\n            clearButton.velocity('stop');\n\n            if( clearButton.is(':hidden') ){\n                // show button\n                clearButton.velocity('transition.bounceIn', {\n                    duration: 180\n                });\n            }else{\n                // highlight button\n                clearButton.velocity('callout.pulse', {\n                    duration: 240\n                });\n            }\n        }else{\n            // hide button\n            clearButton.velocity('transition.bounceOut', {\n                duration: 180\n            });\n        }\n    };\n\n    /**\n     * draw signature table toolbar (add signature button, scan progress bar\n     * @param mapId\n     * @param systemData\n     */\n    $.fn.drawSignatureTableToolbar = function(mapId, systemData){\n        let moduleElement = $(this);\n\n        // add toolbar buttons for table ------------------------------------------------------------------------------\n        let tableToolbar = $('<div>', {\n            class: config.tableToolsClass\n        }).append(\n            getLabledButton({\n                type: 'primary',\n                label: 'add',\n                icon: 'fa-plus',\n                onClick: function(e){\n                    // show \"add sig\" div\n                    let toolsElement = $(e.target).parents('.' + config.moduleClass).find('.' + config.tableToolsActionClass);\n\n                    // set toggle animation\n                    if(toolsElement.is(':visible')){\n                        toolsElement.velocity('stop').velocity('reverse');\n                    }else{\n                        toolsElement.velocity('stop').velocity({\n                            opacity: 1,\n                            height: '75px'\n                        },{\n                            duration: 150,\n                            display: 'block',\n                            visibility: 'visible'\n                        });\n                    }\n                }\n            })\n        ).append(\n            getLabledButton({\n                type: 'primary',\n                label: 'signature reader',\n                icon: 'fa-clipboard',\n                onClick: function(){\n                    moduleElement.showSignatureReaderDialog(systemData);\n                }\n            })\n        ).append(\n            getLabledButton({\n                type: 'default',\n                label: 'select all',\n                icon: 'fa-check-square',\n                onClick: function(){\n                    let signatureTableApi = getDataTableInstanceByModuleElement(moduleElement, 'primary');\n\n                    let allRows = getRows(signatureTableApi);\n                    let selectedRows = getSelectedRows(signatureTableApi);\n                    let allRowElements = allRows.nodes().to$();\n\n                    if(allRows.data().length === selectedRows.data().length){\n                        allRowElements.removeClass('selected');\n                    }else{\n                        allRowElements.addClass('selected');\n                    }\n\n                    // check delete button\n                    checkDeleteSignaturesButton(moduleElement);\n                }\n            })\n        ).append(\n            getLabledButton({\n                type: 'danger',\n                classes: [config.sigTableClearButtonClass, 'pull-right'],\n                label: 'delete',\n                icon: 'fa-close',\n                badge: {\n                    label: '0'\n                },\n                onClick: function(){\n                    // delete all rows\n                    let signatureTableApi = getDataTableInstanceByModuleElement(moduleElement, 'primary');\n                    let selectedRows = getSelectedRows(signatureTableApi);\n\n                    bootbox.confirm('Delete ' + selectedRows.data().length + ' signature?', function(result) {\n                        if(result){\n                            deleteSignatures(signatureTableApi, selectedRows);\n                        }\n                    });\n                }\n            })\n        );\n\n        moduleElement.append(tableToolbar);\n\n        // add toolbar action for table -------------------------------------------------------------------------------\n        let tableToolbarAction = $('<div>', {\n            class: config.tableToolsActionClass\n        });\n\n        // create \"empty table for new signature\n        let table = $('<table>', {\n            class: ['display', 'compact', 'nowrap', config.sigTableClass, config.sigTableSecondaryClass].join(' ')\n        });\n\n        tableToolbarAction.append(table);\n\n        tableToolbar.after(tableToolbarAction);\n\n        let signatureData = formatSignatureData(systemData, [emptySignatureData], emptySignatureOptions);\n        let signatureTable = table.dataTable( {\n            data: signatureData,\n            paging: false,\n            ordering: false,\n            info: false,\n            searching: false\n        } );\n        let signatureTableApi = signatureTable.api();\n\n        setDataTableInstance(mapId, systemData.id, 'secondary', signatureTableApi);\n\n        table.makeEditable(signatureTableApi, systemData);\n\n        // scanned signatures progress bar ----------------------------------------------------------------------------\n        let moduleConfig = {\n            name: 'form/progress',\n            position: tableToolbar,\n            link: 'before'\n        };\n\n        let moduleData = {\n            label: true,\n            wrapperClass: config.signatureScannedProgressBarClass,\n            class: ['progress-bar-success'].join(' '),\n            percent: 0,\n            headline: 'System scanned',\n            headlineRight: ' ' // will be updated by js\n        };\n\n        Render.showModule(moduleConfig, moduleData);\n    };\n\n    /**\n     * Update/set tooltip for an element\n     * @param element\n     * @param title\n     */\n    let updateTooltip = function(element, title){\n        $(element).attr('data-container', 'body').attr('title', title.toUpperCase()).tooltip('fixTitle')\n            .tooltip('setContent');\n    };\n\n    /**\n     * make a table or row editable\n     * @param tableApi\n     * @param systemData\n     */\n    $.fn.makeEditable = function(tableApi, systemData){\n        // table element OR row element\n        let tableElement = $(this);\n\n        // find editable fields\n        let sigNameFields = tableElement.find('.' + config.sigTableEditSigNameInput);\n        let sigGroupFields = tableElement.find('.' + config.sigTableEditSigGroupSelect);\n        let sigTypeFields = tableElement.find('.' + config.sigTableEditSigTypeSelect);\n        let sigDescriptionFields = tableElement.find('.' + config.sigTableEditSigDescriptionTextarea);\n        let sigConnectionFields = tableElement.find('.' + config.sigTableEditSigConnectionSelect);\n\n        // jump to \"next\" editable field on save\n        let openNextEditDialogOnSave = function(fields){\n            fields.on('save', function(e, a){\n\n                let currentField = $(this);\n\n                setTimeout(function() {\n                    let nextField = getNextEditableField(currentField);\n                    nextField.editable('show');\n\n                    // update scanning progressbar if sig \"type\" has changed AND\n                    // the current field is in the \"primary\" table (not the \"add\" new sig row)\n                    if(\n                        $(e.target).hasClass(config.sigTableEditSigGroupSelect) &&\n                        $(e.target).parents('.' + config.sigTableClass).hasClass(config.sigTablePrimaryClass)\n                    ){\n                        currentField.parents('.' + config.moduleClass).updateScannedSignaturesBar({showNotice: true});\n                    }\n                }, 200);\n            });\n        };\n\n        // helper function - get the next editable field in next table column\n        let getNextEditableField = function(field, selector){\n            let nextEditableField = null;\n            if(selector){\n                // search specific sibling\n                nextEditableField = $(field).closest('td').nextAll(selector).find('.editable');\n            }else{\n                // get next sibling\n                nextEditableField = $(field).closest('td').next().find('.editable');\n            }\n\n            return $(nextEditableField);\n        };\n\n        /**\n         * add map/system specific data for each editable field in the sig-table\n         * @param params\n         * @returns {*}\n         */\n        let modifyFieldParamsOnSend = function(params){\n            params.systemId = systemData.id;\n\n            return params;\n        };\n\n        // set global xEditable options for all table fields\n        $.extend($.fn.editable.defaults, {\n            url: Init.path.saveSignatureData,\n            dataType: 'json',\n            mode: 'popup',\n            container: 'body',\n            error: function(jqXHR, newValue){\n                let reason = '';\n                let status = '';\n                if(jqXHR.name){\n                    // save error new sig (mass save)\n                    reason = jqXHR.name;\n                    status = 'Error';\n                }else{\n                    reason = jqXHR.responseJSON.text;\n                    status = jqXHR.status;\n                }\n\n                Util.showNotify({title: status + ': save signature', text: reason, type: 'error'});\n                $(document).setProgramStatus('problem');\n                return reason;\n            }\n        });\n\n\n        // Input sig name ---------------------------------------------------------------------------------------------\n        sigNameFields.editable({\n            type: 'text',\n            title: 'signature id',\n            name: 'name',\n            emptytext: '? ? ?',\n            display: function(value) {\n                // change display value to first 3 letters\n                $(this).text( $.trim( value.substr(0, 3) ).toLowerCase() );\n            },\n            validate: function(value) {\n                if($.trim(value).length < 3) {\n                    return 'Id is less than min of \"3\"';\n                }else if($.trim(value).length > 10){\n                    return 'Id is more than max of \"10\"';\n                }\n            },\n            params: modifyFieldParamsOnSend,\n            success: function(response, newValue){\n                if(response){\n                    let signatureTypeField = $(this);\n                    let columnElement = signatureTypeField.parents('td');\n                    let rowElement = signatureTypeField.parents('tr');\n                    let newRowData = response.signatures[0];\n\n                    // update column tooltip\n                    updateTooltip(columnElement, newValue);\n\n                    // update \"updated\" cell\n                    updateSignatureCell(tableApi, rowElement, 7, newRowData.updated);\n                }\n            }\n        });\n\n\n        // Select sig group (master) ----------------------------------------------------------------------------------\n        sigGroupFields.editable({\n            type: 'select',\n            title: 'group',\n            name: 'groupId',\n            emptytext: 'unknown',\n            onblur: 'submit',\n            showbuttons: false,\n            params: modifyFieldParamsOnSend,\n            source: function(){\n\n                let signatureGroupField = $(this);\n                let systemTypeId = parseInt( signatureGroupField.attr('data-systemTypeId') );\n\n                // get all available Signature Types\n                let availableTypes = signatureGroupsLabels;\n\n                // add empty option\n                availableTypes[0] = '';\n\n                return availableTypes;\n            },\n            success: function(response, newValue){\n                let signatureTypeField = $(this);\n                let rowElement = signatureTypeField.parents('tr');\n                newValue = parseInt(newValue);\n\n                if(response){\n                    let newRowData = response.signatures[0];\n\n                    // update \"updated\" cell\n                    updateSignatureCell(tableApi, rowElement, 7, newRowData.updated);\n                }\n\n                // find related \"type\" select (same row) and change options\n                let typeSelect = getNextEditableField(signatureTypeField);\n\n                let systemTypeId = parseInt( signatureTypeField.attr('data-systemTypeId') );\n                let areaId = parseInt( signatureTypeField.attr('data-areaid') );\n\n                let newSelectOptions = getAllSignatureNames(systemData, systemTypeId, areaId, newValue);\n                typeSelect.editable('option', 'source', newSelectOptions);\n                typeSelect.editable('setValue', null);\n\n                if(\n                    newValue > 0 &&\n                    newSelectOptions.length > 0\n                ){\n                    typeSelect.editable('enable');\n                }else{\n                    typeSelect.editable('disable');\n                }\n\n                // find \"connection\" select (same row) and change \"enabled\" flag\n                let connectionSelect = getNextEditableField(signatureTypeField, '.' + config.sigTableConnectionClass);\n                connectionSelect.editable('setValue', null);\n\n                if(newValue === 5){\n                    // wormhole\n                    connectionSelect.editable('enable');\n                }else{\n                    checkConnectionConflicts();\n                    connectionSelect.editable('disable');\n                }\n            }\n        });\n\n\n        // Select sig type (slave: depends on sig type) ---------------------------------------------------------------\n        sigTypeFields.on('init', function(e, editable) {\n            // check if there are initial options available\n            let options = editable.input.options.source.bind(e.target)();\n            if(options.length <= 0){\n                editable.disable();\n            }\n        });\n\n        sigTypeFields.editable({\n            type: 'select',\n            title: 'type',\n            name: 'typeId',\n            emptytext: 'unknown',\n            onblur: 'submit',\n            showbuttons: false,\n            params: modifyFieldParamsOnSend,\n            source: function(){\n                let signatureTypeField = $(this);\n\n                let systemTypeId = parseInt( signatureTypeField.attr('data-systemTypeId') );\n                let areaId = parseInt( signatureTypeField.attr('data-areaid') );\n                let groupId = parseInt( signatureTypeField.attr('data-groupId') );\n                let availableSigs = getAllSignatureNames(systemData, systemTypeId, areaId, groupId);\n\n                return availableSigs;\n            },\n            success: function(response, newValue){\n                if(response){\n                    let signatureTypeField = $(this);\n                    let rowElement = signatureTypeField.parents('tr');\n                    let newRowData = response.signatures[0];\n\n                    // update \"updated\" cell\n                    updateSignatureCell(tableApi, rowElement, 7, newRowData.updated);\n                }\n            }\n        });\n\n        // Textarea sig description -----------------------------------------------------------------------------------\n        sigDescriptionFields.editable({\n            type: 'textarea',\n            title: 'description',\n            name: 'description',\n            emptytext: '<i class=\"fa fa-fw fa-lg fa-pencil\"></i>',\n            onblur: 'submit',\n            mode: 'inline',\n            showbuttons: false,\n            inputclass: config.editableDescriptionInputClass,\n            params: modifyFieldParamsOnSend,\n            success: function(response, newValue){\n                if(response){\n                    let signatureTypeField = $(this);\n                    let rowElement = signatureTypeField.parents('tr');\n                    let newRowData = response.signatures[0];\n\n                    // update \"updated\" cell\n                    updateSignatureCell(tableApi, rowElement, 7, newRowData.updated);\n                }\n            }\n        });\n\n        // Select connection (target system) --------------------------------------------------------------------------\n        let initCount = 0;\n        sigConnectionFields.on('init', function(e, editable) {\n            if(++initCount >= sigConnectionFields.length){\n                checkConnectionConflicts();\n            }\n        });\n\n        sigConnectionFields.editable({\n            type: 'select',\n            title: 'system',\n            name: 'connectionId',\n            emptytext: 'unknown',\n            onblur: 'submit',\n            showbuttons: false,\n            params: modifyFieldParamsOnSend,\n            display: function(value, sourceData) {\n                let editableElement = $(this);\n                let newValue = '';\n\n                if(value !== null){\n                    let selected = $.fn.editableutils.itemsByValue(value, sourceData);\n                    if(\n                        selected.length &&\n                        selected[0].text !== ''\n                    ){\n                        newValue += '<i class=\"fa fa-exclamation-triangle txt-color txt-color-danger hide\"></i>';\n                        newValue += ' ' + selected[0].text;\n                    }else{\n                        newValue = '<span class=\"editable-empty\">unknown</span>';\n                    }\n                }\n\n                editableElement.html(newValue);\n            },\n            source: function(a,b){\n                let activeMap = Util.getMapModule().getActiveMap();\n                let mapId = activeMap.data('id');\n\n                let availableConnections = getSignatureConnectionOptions(mapId, systemData);\n\n                return availableConnections;\n            },\n            success: function(response, newValue){\n                if(response){\n                    let signatureConnectionField = $(this);\n                    let rowElement = signatureConnectionField.parents('tr');\n                    let newRowData = response.signatures[0];\n\n                    // update \"updated\" cell\n                    updateSignatureCell(tableApi, rowElement, 7, newRowData.updated);\n                }\n            }\n        });\n\n        // open even\n        sigDescriptionFields.on('shown', function(e, editable) {\n            // enlarge the tools-action container because the tables gets bigger\n            tableElement.parents('.' + config.tableToolsActionClass).css( 'height', '+=35px' );\n        });\n\n        // close event\n        sigDescriptionFields.on('hidden', function(e, editable) {\n            // enlarge the tools-action container because the tables gets bigger\n            tableElement.parents('.' + config.tableToolsActionClass).css( 'height', '-=35px' );\n        });\n\n        // save events\n        sigConnectionFields.on('save', function(e, editable){\n            checkConnectionConflicts();\n        });\n\n        // open next field dialog -------------------------------------------------------------------------------------\n        openNextEditDialogOnSave(sigNameFields);\n        openNextEditDialogOnSave(sigGroupFields);\n    };\n\n    /**\n     * get all connection select options\n     * @param mapId\n     * @param systemData\n     * @returns {Array}\n     */\n    let getSignatureConnectionOptions = (mapId, systemData) => {\n        let map = Map.getMapInstance( mapId );\n        let systemId = MapUtil.getSystemId(mapId, systemData.id);\n        let systemConnections = MapUtil.searchConnectionsBySystems(map, [systemId]);\n        let connectionOptions = [];\n\n        for(let i = 0; i < systemConnections.length; i++){\n            let connectionData = Map.getDataByConnection(systemConnections[i]);\n\n            // connectionId is required (must be stored)\n            if(connectionData.id){\n                // check whether \"source\" or \"target\" system is relevant for this connection\n                // -> hint \"source\" === 'target' --> loop\n                if(systemData.id !== connectionData.target){\n                    // take target...\n                    connectionOptions.push({\n                        value: connectionData.id,\n                        text: connectionData.targetAlias\n                    });\n                }else if(systemData.id !== connectionData.source){\n                    // take source...\n                    connectionOptions.push({\n                        value: connectionData.id,\n                        text: connectionData.sourceAlias\n                    });\n                }\n            }\n        }\n\n        // add empty entry\n        connectionOptions.unshift({ value: null, text: ''});\n\n        return connectionOptions;\n    };\n\n    /**\n     * check connectionIds for conflicts (multiple signatures -> same connection)\n     * -> show \"conflict\" icon next to select\n     */\n    let checkConnectionConflicts = () => {\n        setTimeout(function() {\n            let connectionSelects = $('.' + config.sigTableConnectionClass + ' .editable');\n            let connectionIds = [];\n            let duplicateConnectionIds = [];\n            let groupedSelects = [];\n\n            connectionSelects.each(function(){\n                let select = $(this);\n                let value = parseInt(select.editable('getValue', true) )|| 0;\n\n                if(\n                    connectionIds.indexOf(value) > -1 &&\n                    duplicateConnectionIds.indexOf(value) === -1\n                ){\n                    // duplicate found\n                    duplicateConnectionIds.push(value);\n                }\n\n                if(groupedSelects[value] !== undefined){\n                    groupedSelects[value].push(select[0]);\n                }else{\n                    groupedSelects[value] = [select[0]];\n                }\n\n                connectionIds.push(value);\n            });\n\n            // update \"conflict\" icon next to select label for connectionIds\n            connectionSelects.each(function(){\n                let select = $(this);\n                let value = parseInt(select.editable('getValue', true) )|| 0;\n                let conflictIcon = select.find('.fa-exclamation-triangle');\n                if(\n                    duplicateConnectionIds.indexOf(value) > -1 &&\n                    groupedSelects[value].indexOf(select[0]) > -1\n                ){\n                    conflictIcon.removeClass('hide');\n                }else{\n                    conflictIcon.addClass('hide');\n                }\n            });\n        }, 200);\n    };\n\n    /**\n     * get all signature types that can exist for a given system\n     * -> result is partially cached\n     * @param systemData\n     * @param systemTypeId\n     * @param areaId\n     * @param groupId\n     * @returns {Array}\n     */\n    let getAllSignatureNames = function(systemData, systemTypeId, areaId, groupId){\n        let newSelectOptions = [];\n        let cacheKey = [systemTypeId, areaId, groupId].join('_');\n        let newSelectOptionsCount = 0;\n\n        // check for cached signature names\n        if(sigNameCache.hasOwnProperty( cacheKey )){\n            // cached signatures do not include static WHs!\n            // -> \".slice(0)\" creates copy\n            newSelectOptions =  sigNameCache[cacheKey].slice(0);\n            newSelectOptionsCount = sumSignaturesRecursive('children', newSelectOptions);\n        }else{\n            // get new Options ----------\n            // get all possible \"static\" signature names by the selected groupId\n            let tempSelectOptions = Util.getAllSignatureNames(systemTypeId, areaId, groupId);\n\n            // format options into array with objects advantages: keep order, add more options (whs), use optgroup\n            if(tempSelectOptions){\n                let fixSelectOptions = [];\n                for (let key in tempSelectOptions) {\n                    if (\n                        key > 0 &&\n                        tempSelectOptions.hasOwnProperty(key)\n                    ) {\n                        newSelectOptionsCount++;\n                        fixSelectOptions.push( {value: parseInt(key), text: tempSelectOptions[key] } );\n                    }\n                }\n\n                if(newSelectOptionsCount > 0){\n                    if(groupId === 5){\n                        // \"wormhole\" selected => multiple <optgroup> available\n                        newSelectOptions.push({ text: 'Wandering WHs', children: fixSelectOptions});\n                    }else{\n                        newSelectOptions = fixSelectOptions;\n                    }\n                }\n            }\n\n            // wormhole (cached signatures)\n            if( groupId === 5 ){\n\n                // add possible frigate holes\n                let frigateHoles = getFrigateHolesBySystem(areaId);\n                let frigateWHData = [];\n                for(let frigKey in frigateHoles){\n                    if (\n                        frigKey > 0 &&\n                        frigateHoles.hasOwnProperty(frigKey)\n                    ) {\n                        newSelectOptionsCount++;\n                        frigateWHData.push( {value: newSelectOptionsCount, text: frigateHoles[frigKey]} );\n                    }\n                }\n\n                if(frigateWHData.length > 0){\n                    newSelectOptions.push({ text: 'Frigate WHs', children: frigateWHData});\n                }\n\n                // add possible incoming holes\n                let incomingWHData = [];\n                for(let incomingKey in Init.incomingWormholes){\n                    if (\n                        incomingKey > 0 &&\n                        Init.incomingWormholes.hasOwnProperty(incomingKey)\n                    ) {\n                        newSelectOptionsCount++;\n                        incomingWHData.push( {value: newSelectOptionsCount, text: Init.incomingWormholes[incomingKey]} );\n                    }\n                }\n\n                if(incomingWHData.length > 0){\n                    newSelectOptions.push({ text: 'Incoming WHs', children: incomingWHData});\n                }\n            }else{\n                // groups without \"children\" (optgroup) should be sorted by \"value\"\n                // this is completely optional and not necessary!\n                newSelectOptions = newSelectOptions.sortBy('text');\n            }\n\n            // update cache (clone array) -> further manipulation to this array, should not be cached\n            sigNameCache[cacheKey] = newSelectOptions.slice(0);\n        }\n\n        // static wormholes (DO NOT CACHE) (not all C2 WHs have the same statics,...\n        if( groupId === 5 ){\n            // add static WH(s) for this system\n            if(systemData.statics){\n                let staticWHData = [];\n                for(let i = 0; i < systemData.statics.length; i++){\n                    let staticWHName = systemData.statics[i].name + ' - ' + systemData.statics[i].security;\n\n                    newSelectOptionsCount++;\n                    staticWHData.push( {value: newSelectOptionsCount, text: staticWHName} );\n                }\n\n                if(staticWHData.length > 0){\n                    newSelectOptions.unshift({ text: 'Static WHs', children: staticWHData});\n                }\n            }\n        }\n\n        // if selectOptions available -> add \"empty\" option as well\n        if(newSelectOptionsCount > 0){\n            newSelectOptions.unshift({ value: '0', text: ''});\n        }\n\n        return newSelectOptions;\n    };\n\n    /**\n     * get all signature types that can exist for a system (jQuery obj)\n     * @param systemElement\n     * @param groupId\n     * @returns {Array}\n     */\n    let getAllSignatureNamesBySystem = (systemElement, groupId) => {\n        let systemTypeId = systemElement.data('typeId');\n        let areaId = Util.getAreaIdBySecurity(systemElement.data('security'));\n        let systemData = {statics: systemElement.data('statics')};\n        return getAllSignatureNames(systemData, systemTypeId, areaId, groupId);\n    };\n\n    /**\n     * recursive sum array.length for a given object key\n     * -> e.g.\n     * {\n     *     first: {\n     *         count = [4, 2, 1]\n     *         test = { ... }\n     *     },\n     *     second: {\n     *         count = [12, 13]\n     *         test = { ... }\n     *     }\n     * }\n     * -> sumSignaturesRecursive('count', obj) => 5;\n     * @param key\n     * @param obj\n     * @returns {number}\n     */\n    let sumSignaturesRecursive = function(key, obj){\n        let sum = 0;\n\n        for (let prop in obj) {\n            if (obj.hasOwnProperty(prop) && key === prop) {\n                sum += obj[prop].length;\n            }\n            else if (Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n                sum += sumSignaturesRecursive(key, obj[prop]);\n            }\n        }\n\n        return sum;\n    };\n\n    /**\n     * get possible frig holes that could spawn in a system\n     * filtered by \"systemTypeId\"\n     * @param systemTypeId\n     * @returns {{}}\n     */\n    let getFrigateHolesBySystem = function(systemTypeId){\n        let signatureNames = {};\n\n        if(Init.frigateWormholes[systemTypeId]){\n            signatureNames =  Init.frigateWormholes[systemTypeId];\n        }\n\n        return signatureNames;\n    };\n\n    /**\n     * deletes signature rows from signature table\n     * @param tableApi\n     * @param rows\n     */\n    let deleteSignatures = function(tableApi, rows){\n        let deletedSignatures = 0;\n\n        let moduleElement = $('.' + config.systemSigModuleClass);\n        let data = rows.data();\n        let rowElements = rows.nodes().to$();\n        let signatureCount = data.length;\n\n        let signatureIds = [];\n        for(let i = 0; i < data.length; i++){\n            signatureIds.push(data[i].id);\n        }\n\n        let requestData = {\n            signatureIds: signatureIds\n        };\n\n        // animation callback function\n        let removeCallback = function(rowElement){\n            // delete signature row\n            tableApi.row(rowElement).remove().draw();\n\n            deletedSignatures++;\n\n            if(deletedSignatures === signatureCount){\n                // all animations finished\n\n                // update signature bar\n                moduleElement.updateScannedSignaturesBar({showNotice: false});\n\n                // update connection conflicts\n                checkConnectionConflicts();\n\n                Util.showNotify({title: 'Signature deleted', text: signatureCount + ' signatures deleted', type: 'success'});\n            }\n        };\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.deleteSignatureData,\n            data: requestData,\n            dataType: 'json'\n        }).done(function(data){\n\n            for(let j = 0; j < rowElements.length; j++){\n                // removeRow\n                $(rowElements[j]).toggleTableRow(removeCallback);\n            }\n\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            Util.showNotify({title: jqXHR.status + ': Delete signature', text: reason, type: 'warning'});\n            $(document).setProgramStatus('problem');\n        });\n    };\n\n    /**\n     * adds a new row to signature Table\n     * @param signatureTableApi\n     * @param systemData\n     * @param signatureData\n     * @param animate\n     * @returns {*}\n     */\n    let addSignatureRow = function(signatureTableApi, systemData, signatureData, animate){\n        let newSignatureData = formatSignatureData(systemData, [signatureData], fullSignatureOptions);\n\n        let newRowNode = signatureTableApi.row.add(newSignatureData.shift()).draw().nodes();\n        let newRowElement = newRowNode.to$();\n\n        if(animate === true){\n            newRowElement.hide();\n\n            newRowElement.toggleTableRow(function(newRowElement){\n                // make new row editable\n\n                newRowElement.makeEditable(signatureTableApi, systemData);\n\n                // update scan progress bar\n                newRowElement.parents('.' + config.moduleClass).updateScannedSignaturesBar({showNotice: true});\n            });\n        }else{\n            newRowElement.makeEditable(signatureTableApi, systemData);\n        }\n\n        return newRowElement;\n    };\n\n    /**\n     * show/hides a table <tr> tag\n     * @param callback\n     */\n    $.fn.toggleTableRow = function(callback){\n        let rowElement = $(this);\n        let cellElements = rowElement.children('td');\n        let duration = 100;\n\n        // wrap each <td> into a container (for better animation performance)\n        // slideUp new wrapper divs\n        if(rowElement.is(':visible')){\n            // hide row\n\n            // stop sig counter by adding a stopClass to each <td>, remove padding\n            cellElements.addClass('stopCounter')\n                .velocity({\n                    paddingTop: 0,\n                    paddingBottom: 0\n                },{\n                    duration: duration\n                }).wrapInner('<div>')\n                .children()\n                .css({\n                    'willChange': 'height'\n                }).velocity('slideUp', {\n                duration: duration,\n                complete: function(animationElements){\n                    // remove wrapper\n                    $(animationElements).children().unwrap();\n\n                    if(callback !== undefined){\n                        callback(rowElement);\n                    }\n                }\n            });\n        }else{\n            // show row\n\n            // remove padding on \"hidden\" cells for smother animation\n            cellElements.css({\n                'padding-top': 0,\n                'padding-bottom': 0,\n                'willChange': 'padding-top, padding-top, height'\n            });\n\n            // add hidden wrapper for ea\n            cellElements.wrapInner($('<div>').hide());\n\n            // show row for padding animation\n            rowElement.show();\n\n            cellElements.velocity({\n                paddingTop: '4px',\n                paddingBottom: '4px'\n            },{\n                duration: duration,\n                queue: false,\n                complete: function(){\n                    // animate <td> wrapper\n                    cellElements.children()\n                        .css({\n                            'willChange': 'height'\n                        }).velocity('slideDown', {\n                        duration: duration,\n                        complete: function(animationElements){\n                            // remove wrapper\n                            for(let i = 0; i < animationElements.length; i++){\n                                let currentWrapper = $(animationElements[i]);\n                                if(currentWrapper.children().length > 0){\n                                    currentWrapper.children().unwrap();\n                                }else{\n                                    currentWrapper.parent().html( currentWrapper.html() );\n                                }\n                            }\n\n                            if(callback !== undefined){\n                                callback(rowElement);\n                            }\n                        }\n                    });\n                }\n            });\n        }\n    };\n\n    /**\n     * draw a signature table with data\n     * @param mapId\n     * @param signatureData\n     * @param systemData\n     */\n    $.fn.drawSignatureTable = function(mapId, signatureData, systemData){\n        let moduleElement = $(this);\n\n        // setup filter select in footer\n        // column indexes that need a filter select\n        let filterColumnIndexes = [2];\n\n        // create new signature table ---------------------------------------------------------------------------------\n        let table = $('<table>', {\n            class: ['display', 'compact', 'nowrap', config.sigTableClass, config.sigTablePrimaryClass].join(' ')\n        });\n\n        // create table footer ----------------------------------------------------------------------------------------\n        // get column count from default dataTable config\n        let columnCount = $.fn.dataTable.defaults.columnDefs.length;\n        let footerHtml = '<tfoot><tr>';\n        for(let i = 0; i < columnCount; i++){\n            footerHtml += '<td></td>';\n        }\n        footerHtml += '</tr></tfoot>';\n        table.append(footerHtml);\n\n        moduleElement.append(table);\n\n        let dataTableOptions = {\n            data: signatureData,\n            drawCallback: function(settings){\n                this.api().columns(filterColumnIndexes).every(function(){\n                    let column = this;\n                    let footerColumnElement = $(column.footer());\n                    let filterSelect = footerColumnElement.find('.editable');\n\n                    // update select values\n                    filterSelect.editable('option', 'source', getColumnTableDataForFilter(column));\n                });\n            },\n            initComplete: function (settings, json){\n\n                this.api().columns(filterColumnIndexes).every(function(){\n                    let column = this;\n                    let headerLabel = $(column.header()).text();\n                    let selectField = $('<a class=\"pf-editable ' +\n                        config.moduleIcon + ' ' +\n                        config.editableFilterElementClass +\n                        '\" href=\"#\" data-type=\"select\" data-name=\"' + headerLabel + '\"></a>');\n\n                    // add field to footer\n                    selectField.appendTo( $(column.footer()).empty() );\n\n                    selectField.editable({\n                        emptytext: '<i class=\"fa fa-filter fa-fw\"></i>',\n                        onblur: 'submit',\n                        title: 'filter',\n                        showbuttons: false,\n                        source: getColumnTableDataForFilter(column),\n                        inputclass: config.editableFilterSelectPopoverClass\n                    });\n\n                    selectField.on('save', { column: column }, function(e, params) {\n                        let val = $.fn.dataTable.util.escapeRegex( params.newValue );\n                        e.data.column.search( val !== '0' ? '^' + val + '$' : '', true, false ).draw();\n                    });\n                });\n            }\n        };\n\n        // create signature table and store the jquery object global for this module\n        let signatureTable = table.dataTable(dataTableOptions);\n        let signatureTableApi = signatureTable.api();\n        setDataTableInstance(mapId, systemData.id, 'primary', signatureTableApi);\n\n        // make Table editable\n        signatureTable.makeEditable(signatureTableApi, systemData);\n\n        moduleElement.updateScannedSignaturesBar({showNotice: true});\n    };\n\n    /**\n     * get unique column data from column object for select filter options\n     * @param column\n     * @returns {{}}\n     */\n    let getColumnTableDataForFilter = function(column){\n        // get all available options from column\n        let source = {};\n        column.data().unique().sort(function(a,b){\n            // sort alphabetically\n            let valA = a.filter.toLowerCase();\n            let valB = b.filter.toLowerCase();\n\n            if(valA < valB) return -1;\n            if(valA > valB) return 1;\n            return 0;\n        }).each(function(callData){\n            if(callData.filter){\n                source[callData.filter] = callData.filter;\n            }\n        });\n\n        // add empty option\n        source[0] = '';\n\n        return source;\n    };\n\n    /**\n     * setup dataTable options for all signatureTables\n     * @param systemData\n     */\n    let initSignatureDataTable = function(systemData){\n\n        $.extend( true, $.fn.dataTable.defaults, {\n            pageLength: -1,\n            lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, 'All']],\n            order: [1, 'asc'],\n            autoWidth: false,\n            responsive: {\n                details: false\n            },\n            language: {\n                emptyTable:  'No signatures added',\n                zeroRecords: 'No signatures found',\n                lengthMenu:  'Show _MENU_ signatures',\n                info:        'Showing _START_ to _END_ of _TOTAL_ signatures'\n            },\n            columnDefs: [\n                {\n                    targets: 0,\n                    orderable: true,\n                    searchable: false,\n                    title: '',\n                    width: '10px',\n                    class: ['text-center', 'min-tablet-l'].join(' '),\n                    data: 'status',\n                    type: 'html',\n                    render: {\n                        _: 'status',\n                        sort: 'status_sort'\n                    }\n                },{\n                    targets: 1,\n                    orderable: true,\n                    searchable: true,\n                    title: 'id',\n                    type: 'html',\n                    width: '30px',\n                    data: 'name',\n                    render: {\n                        _: 'render'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        // update column tooltip\n                        updateTooltip(cell, cellData.name);\n                    }\n                },{\n                    targets: 2,\n                    orderable: true,\n                    searchable: true,\n                    title: 'group',\n                    type: 'html',\n                    width: '50px',\n                    data: 'group',\n                    render: {\n                        _: 'group',\n                        sort: 'sort',\n                        filter: 'filter'\n                    }\n                },{\n                    targets: 3,\n                    orderable: false,\n                    searchable: false,\n                    title: 'type',\n                    type: 'html',\n                    width: '180px',\n                    data: 'type'\n                },{\n                    targets: 4,\n                    orderable: false,\n                    searchable: false,\n                    title: 'description',\n                    type: 'html',\n                    data: 'description'\n                },{\n                    targets: 5,\n                    orderable: false,\n                    searchable: false,\n                    className: [config.sigTableConnectionClass].join(' '),\n                    title: 'leads to',\n                    type: 'html',\n                    width: '70px',\n                    data: 'connection',\n                    render: {\n                        _: 'render'\n                    }\n                },{\n                    targets: 6,\n                    title: 'created',\n                    width: '90px',\n                    searchable: false,\n                    className: ['text-right', config.sigTableCounterClass, config.sigTableCreatedCellClass, 'min-tablet-l'].join(' '),\n                    data: 'created',\n                    render: {\n                        _: 'created',\n                        sort: 'created'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        $(cell).initTimestampCounter();\n                    }\n                },{\n                    targets: 7,\n                    title: 'updated',\n                    width: '90px',\n                    searchable: false,\n                    className: ['text-right', config.sigTableCounterClass, config.sigTableUpdatedCellClass, 'min-tablet-l'].join(' '),\n                    data: 'updated',\n                    render: {\n                        _: 'updated',\n                        sort: 'updated'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        $(cell).initTimestampCounter();\n\n                        // highlight cell\n                        let diff = Math.floor((new Date()).getTime()) - cellData.updated * 1000;\n\n                        // age > 1 day\n                        if( diff > 86400000){\n                            $(cell).addClass('txt-color txt-color-warning');\n                        }\n                    }\n                },{\n                    targets: 8,\n                    title: '',\n                    orderable: false,\n                    searchable: false,\n                    width: '10px',\n                    class: 'pf-help text-center',\n                    data: 'info',\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n\n                        if(rowData.id > 0){\n\n                            // add row tooltip\n                            let tooltipData = {\n                                created: rowData.created,\n                                updated: rowData.updated\n                            };\n\n                            $(cell).addCharacterInfoTooltip( tooltipData );\n                        }\n                    }\n                },{\n                    targets: 9,\n                    title: '',\n                    orderable: false,\n                    searchable: false,\n                    width: '10px',\n                    class: ['text-center', config.sigTableActionCellClass].join(' '),\n                    data: 'action',\n                    render: {\n                        _: 'button',\n                        sort: 'action'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        let tempTableElement = this;\n                        let rowElement = $(cell).parents('tr');\n\n                        switch(cellData.action){\n                            case 'add':\n                                // add new signature ------------------------------------------------------------------\n                                $(cell).on('click', function(e) {\n                                    // submit all fields within a table row\n                                    let formFields = rowElement.find('.editable');\n\n                                    // get the current \"primary table\" for insert row on ajax callback\n                                    // -> important: in case of long response, target table might have changed...\n                                    let moduleElement =  $(e.target).parents('.' + config.moduleClass);\n                                    let primaryTable = moduleElement.find('.' + config.sigTablePrimaryClass);\n                                    let secondaryTable = moduleElement.find('.' + config.sigTableSecondaryClass);\n\n                                    // the \"hide\" makes sure to take care about open editable fields (e.g. description)\n                                    // otherwise, changes would not be submitted in this field (not necessary)\n                                    formFields.editable('hide');\n\n                                    // submit all xEditable fields\n                                    formFields.editable('submit', {\n                                        url: Init.path.saveSignatureData,\n                                        ajaxOptions: {\n                                            dataType: 'json', //assuming json response\n                                            beforeSend: function( xhr, settings ){\n                                                lockSignatureTable();\n                                            },\n                                            context: {\n                                                primaryTable: primaryTable,\n                                                secondaryTable: secondaryTable\n                                            }\n                                        },\n                                        data: {\n                                            systemId: systemData.id, // additional data to submit\n                                            pk: 0 // new data no primary key\n                                        },\n                                        error: $.fn.editable.defaults.error, // user default xEditable error function\n                                        success: function (data, editableConfig) {\n                                            let context = editableConfig.ajaxOptions.context;\n                                            let primaryTableApi = context.primaryTable.DataTable();\n                                            let secondaryTableApi = context.secondaryTable.DataTable();\n\n                                            unlockSignatureTable(false);\n\n                                            let newRowElement = addSignatureRow(primaryTableApi, systemData, data.signatures[0], true);\n\n                                            // highlight\n                                            newRowElement.pulseTableRow('added');\n\n                                            // prepare \"add signature\" table for new entry -> reset -------------------\n                                            let signatureData = formatSignatureData(systemData, [emptySignatureData], emptySignatureOptions);\n                                            let newAddRowElement = secondaryTableApi.clear().row.add(signatureData.shift()).draw().nodes();\n\n                                            newAddRowElement.to$().makeEditable(secondaryTableApi, systemData);\n\n                                            Util.showNotify({\n                                                title: 'Signature added',\n                                                text: 'Name: ' + data.name,\n                                                type: 'success'\n                                            });\n                                        }\n                                    });\n                                });\n                                break;\n                            case 'delete':\n                                // delete signature -------------------------------------------------------------------\n                                let confirmationSettings = {\n                                    container: 'body',\n                                    placement: 'left',\n                                    btnCancelClass: 'btn btn-sm btn-default',\n                                    btnCancelLabel: 'cancel',\n                                    btnCancelIcon: 'fa fa-fw fa-ban',\n                                    title: 'delete signature',\n                                    btnOkClass: 'btn btn-sm btn-danger',\n                                    btnOkLabel: 'delete',\n                                    btnOkIcon: 'fa fa-fw fa-close',\n                                    onConfirm: function(e, target){\n                                        // top scroll to top\n                                        e.preventDefault();\n\n                                        let tableApi = tempTableElement.DataTable();\n\n                                        let deleteRowElement = $(target).parents('tr');\n                                        let row = tableApi.rows(deleteRowElement);\n                                        deleteSignatures(tableApi, row);\n                                    }\n                                };\n\n                                // init confirmation dialog\n                                $(cell).confirmation(confirmationSettings);\n\n                                break;\n                        }\n\n                    }\n                }\n            ]\n        });\n    };\n\n    /**\n     * set module observer and look for relevant signature data to update\n     * @param moduleElement\n     * @param systemData\n     */\n    let setModuleObserver = function(moduleElement, systemData){\n        let tablePrimaryElement = moduleElement.find('.' + config.sigTablePrimaryClass);\n        let signatureTableApi = getDataTableInstanceByModuleElement(moduleElement, 'primary');\n\n        $(document).off('pf:updateSystemSignatureModule').on('pf:updateSystemSignatureModule', function(e, data){\n            if(data.signatures){\n                moduleElement.updateSignatureTable(data.signatures, true);\n            }\n        });\n\n        // set multi row select ---------------------------------------------------------------------------------------\n        tablePrimaryElement.on('click', 'tr', {moduleElement: moduleElement}, function(e){\n            if(e.ctrlKey) {\n                $(this).toggleClass('selected');\n\n                // check delete button\n                checkDeleteSignaturesButton(e.data.moduleElement);\n            }\n        });\n\n        // draw event for signature table -----------------------------------------------------------------------------\n        signatureTableApi.on('draw.dt', {moduleElement: moduleElement}, function(e, settings){\n            // check delete button\n            checkDeleteSignaturesButton(e.data.moduleElement);\n        });\n\n        // event listener for global \"paste\" signatures into the page -------------------------------------------------\n        moduleElement.on('pf:updateSystemSignatureModuleByClipboard', function(e, clipboard){\n            $(this).updateSignatureTableByClipboard(systemData, clipboard, {});\n        });\n    };\n\n    /**\n     * get module element\n     * @param parentElement\n     * @param mapId\n     * @param systemData\n     * @returns {*|jQuery|HTMLElement}\n     */\n    let getModule = function(parentElement, mapId, systemData){\n\n        // create new module container\n        let moduleElement = $('<div>', {\n            class: [config.moduleClass, config.systemSigModuleClass].join(' '),\n            css: {opacity: 0}\n        });\n\n        moduleElement.data('mapId', mapId);\n        moduleElement.data('systemId', systemData.id);\n\n        // headline\n        let headline = $('<h5>', {\n            text: 'Signatures'\n        });\n\n        moduleElement.append(headline);\n\n        $(parentElement).append(moduleElement);\n\n        // init dataTables\n        initSignatureDataTable(systemData);\n\n        // draw \"new signature\" add table -----------------------------------------------------------------------------\n\n        moduleElement.drawSignatureTableToolbar(mapId, systemData);\n\n        // request signature data for system --------------------------------------------------------------------------\n\n        let requestData = {\n            systemIds: [systemData.id]\n        };\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.getSignatures,\n            data: requestData,\n            dataType: 'json',\n            context: {\n                mapId: mapId,\n                systemData: systemData\n            }\n        }).done(function(signatureData){\n            let signatureTableData = formatSignatureData(this.systemData, signatureData, fullSignatureOptions);\n\n            // draw signature table\n            moduleElement.drawSignatureTable(this.mapId, signatureTableData, this.systemData);\n\n            // set module observer\n            setModuleObserver(moduleElement, this.systemData);\n        }).fail(function( jqXHR, status, error) {\n            let reason = status + ' ' + error;\n            Util.showNotify({title: jqXHR.status + ': Get signatures', text: reason, type: 'warning'});\n            $(document).setProgramStatus('problem');\n        });\n\n        return moduleElement;\n    };\n\n    /**\n     * main module load function\n     * @param mapId\n     * @param systemData\n     */\n    $.fn.drawSignatureTableModule = function(mapId, systemData){\n        let parentElement = $(this);\n\n        // show module\n        let showModule = function(moduleElement){\n            if(moduleElement){\n                moduleElement.velocity('transition.slideDownIn', {\n                    duration: Init.animationSpeed.mapModule,\n                    delay: Init.animationSpeed.mapModule,\n                    complete: function(){\n                        unlockSignatureTable(true);\n                    }\n                });\n            }\n        };\n\n        // some custom array functions\n        let initArrayFunctions = function(){\n            /**\n             * sort array of objects by property name\n             * @param p\n             * @returns {Array.<T>}\n             */\n            Array.prototype.sortBy = function(p) {\n                return this.slice(0).sort(function(a,b) {\n                    return (a[p] > b[p]) ? 1 : (a[p] < b[p]) ? -1 : 0;\n                });\n            };\n        };\n\n        // check if module already exists\n        let moduleElement = parentElement.find('.' + config.systemSigModuleClass);\n\n        if(moduleElement.length > 0){\n            // disable update\n            lockSignatureTable();\n\n            moduleElement.velocity('transition.slideDownOut', {\n                duration: Init.animationSpeed.mapModule,\n                complete: function(tempElement){\n                    tempElement = $(tempElement);\n                    // Destroying the data tables throws\n                    // save remove of all dataTables\n                    let mapId = tempElement.data('mapId');\n                    let systemId = tempElement.data('systemId');\n                    deleteDataTableInstance(mapId, systemId, 'primary');\n                    deleteDataTableInstance(mapId, systemId, 'secondary');\n\n                    tempElement.remove();\n\n                    moduleElement = getModule(parentElement, mapId,  systemData);\n                    // make modules appear \"nice\"\n                    moduleElement.delay(150);\n                    showModule(moduleElement);\n                }\n            });\n        }else{\n            // init array prototype functions\n            initArrayFunctions();\n\n            moduleElement = getModule(parentElement, mapId, systemData);\n            showModule(moduleElement);\n        }\n    };\n\n    return {\n        getAllSignatureNamesBySystem: getAllSignatureNamesBySystem\n    };\n\n});\n",
    "/**\n * system route module\n */\n\ndefine('app/ui/system_route',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'bootbox',\n    'app/map/util'\n], function($, Init, Util, bootbox, MapUtil) {\n    'use strict';\n\n    let config = {\n        // module info\n        moduleClass: 'pf-module',                                               // class for each module\n\n        routeCacheTTL: 10,                                                      // route cache timer (client) in seconds\n\n        // system route module\n        systemRouteModuleClass: 'pf-system-route-module',                       // class  for this module\n\n        // headline toolbar\n        systemModuleHeadlineIcon: 'pf-module-icon-button',                      // class for toolbar icons in the head\n        systemModuleHeadlineIconSearch: 'pf-module-icon-button-search',         // class for \"search\" icon\n        systemModuleHeadlineIconSettings: 'pf-module-icon-button-settings',     // class for \"settings\" icon\n        systemModuleHeadlineIconRefresh: 'pf-module-icon-button-refresh',       // class for \"refresh\" icon\n\n        systemSecurityClassPrefix: 'pf-system-security-',                       // prefix class for system security level (color)\n\n        // dialog\n        routeSettingsDialogId: 'pf-route-settings-dialog',                      // id for route \"settings\" dialog\n        routeDialogId: 'pf-route-dialog',                                       // id for route \"search\" dialog\n        systemDialogSelectClass: 'pf-system-dialog-select',                     // class for system select Element\n        systemInfoRoutesTableClass: 'pf-system-route-table',                    // class for route tables\n        mapSelectId: 'pf-route-dialog-map-select',                              // id for \"map\" select\n\n        dataTableActionCellClass: 'pf-table-action-cell'                       // class for \"action\" cells\n    };\n\n    // cache for system routes\n    let cache = {\n        systemRoutes: {}                                                        // jump information between solar systems\n    };\n\n    /**\n     * callback function, adds new row to a dataTable with jump information for a route\n     * @param context\n     * @param routesData\n     */\n    let callbackAddRouteRow = function(context, routesData){\n\n        if(routesData.length > 0){\n            for(let i = 0; i < routesData.length; i++){\n                let routeData = routesData[i];\n\n                // format routeData\n                let rowData = formatRouteData(routeData);\n\n                if(rowData.route){\n                    let cacheKey = routeData.systemFromData.name.toLowerCase() +\n                        '_' + routeData.systemToData.name.toLowerCase();\n\n                    // update route cache\n                    cache.systemRoutes[cacheKey] = {\n                        data: rowData,\n                        updated: Util.getServerTime().getTime() / 1000\n                    };\n\n                    let rowElement = addRow(context, rowData);\n\n                    rowElement.initTooltips({\n                        container: 'body'\n                    });\n                }\n            }\n\n            // redraw dataTable\n            context.dataTable.draw();\n        }\n    };\n\n    /**\n     * add a new dataTable row to the routes table\n     * @param context\n     * @param rowData\n     * @returns {*}\n     */\n    let addRow = function(context, rowData){\n        let dataTable = context.dataTable;\n        let rowElement = null;\n        let row = null;\n        let animationStatus = 'changed';\n\n        // search for an existing row (e.g. on mass \"table refresh\" [all routes])\n        // get rowIndex where column 1 (equals to \"systemToData.name\") matches rowData.systemToData.name\n        let indexes = dataTable.rows().eq(0).filter( function (rowIdx) {\n            return (dataTable.cell(rowIdx, 1 ).data().name === rowData.systemToData.name);\n        });\n\n        if(indexes.length > 0){\n            // update row with FIRST index\n            // -> systemFrom should be unique!\n            row = dataTable.row( parseInt(indexes[0]) );\n            // update row data\n            row.data(rowData);\n        }else{\n            // no existing route found -> add new row\n            row = dataTable.row.add( rowData );\n\n            animationStatus = 'added';\n        }\n\n        if(row.length > 0){\n            rowElement = row.nodes().to$();\n\n            if(animationStatus !== null){\n                rowElement.data('animationStatus', animationStatus);\n            }\n        }\n\n        return rowElement;\n    };\n\n\n    /**\n     * requests route data from eveCentral API and execute callback\n     * @param requestData\n     * @param context\n     * @param callback\n     */\n    let getRouteData = function(requestData, context, callback){\n\n        context.moduleElement.showLoadingAnimation();\n\n        $.ajax({\n            url: Init.path.searchRoute,\n            type: 'POST',\n            dataType: 'json',\n            data: requestData,\n            context: context\n        }).done(function(routesData){\n            this.moduleElement.hideLoadingAnimation();\n\n            // execute callback\n            callback(this, routesData.routesData);\n        });\n\n    };\n\n    /**\n     * update complete routes table (refresh all)\n     * @param moduleElement\n     * @param dataTable\n     */\n    let updateRoutesTable = function(moduleElement, dataTable){\n        let context = {\n            moduleElement: moduleElement,\n            dataTable: dataTable\n        };\n        let routeData = [];\n\n        dataTable.rows().every( function() {\n            routeData.push( getRouteRequestDataFromRowData( this.data() ));\n        });\n\n        getRouteData({routeData: routeData}, context, callbackAddRouteRow);\n    };\n\n    /**\n     * format rowData for route search/update request\n     * @param {Object} rowData\n     * @returns {Object}\n     */\n    let getRouteRequestDataFromRowData = function(rowData){\n        return {\n            mapIds: (rowData.hasOwnProperty('mapIds')) ? rowData.mapIds : [],\n            systemFromData: (rowData.hasOwnProperty('systemFromData')) ? rowData.systemFromData : {},\n            systemToData: (rowData.hasOwnProperty('systemToData')) ? rowData.systemToData : {},\n            skipSearch: (rowData.hasOwnProperty('skipSearch')) ? rowData.skipSearch | 0 : 0,\n            stargates: (rowData.hasOwnProperty('stargates')) ? rowData.stargates | 0 : 1,\n            jumpbridges: (rowData.hasOwnProperty('jumpbridges')) ? rowData.jumpbridges | 0 : 1,\n            wormholes: (rowData.hasOwnProperty('wormholes')) ? rowData.wormholes | 0 : 1,\n            wormholesReduced: (rowData.hasOwnProperty('wormholesReduced')) ? rowData.wormholesReduced | 0 : 1,\n            wormholesCritical: (rowData.hasOwnProperty('wormholesCritical')) ? rowData.wormholesCritical | 0 : 1,\n            wormholesFrigate: (rowData.hasOwnProperty('wormholesFrigate')) ? rowData.wormholesFrigate | 0 : 1,\n            wormholesEOL: (rowData.hasOwnProperty('wormholesEOL')) ? rowData.wormholesEOL | 0 : 1,\n            safer: (rowData.hasOwnProperty('safer')) ? rowData.safer.value | 0 : 0\n        };\n    };\n\n    /**\n     * show route dialog. User can search for systems and jump-info for each system is added to a data table\n     * @param dialogData\n     */\n    let showFindRouteDialog = function(dialogData){\n\n        let mapSelectOptions = [];\n        let currentMapData = Util.getCurrentMapData();\n        if(currentMapData !== false){\n            for(let i = 0; i < currentMapData.length; i++){\n                mapSelectOptions.push({\n                    id: currentMapData[i].config.id,\n                    name: currentMapData[i].config.name,\n                    selected: (dialogData.mapId === currentMapData[i].config.id)\n                });\n            }\n        }\n        let data = {\n            id: config.routeDialogId,\n            selectClass: config.systemDialogSelectClass,\n            mapSelectId: config.mapSelectId,\n            systemFromData: dialogData.systemFromData,\n            mapSelectOptions: mapSelectOptions\n        };\n\n        requirejs(['text!templates/dialog/route.html', 'mustache'], function(template, Mustache) {\n\n            let content = Mustache.render(template, data);\n\n            let findRouteDialog = bootbox.dialog({\n                title: 'Route finder',\n                message: content,\n                show: false,\n                buttons: {\n                    close: {\n                        label: 'cancel',\n                        className: 'btn-default'\n                    },\n                    success: {\n                        label: '<i class=\"fa fa-fw fa-search\"></i>&nbsp;search route',\n                        className: 'btn-primary',\n                        callback: function () {\n                            // add new route to route table\n\n                            // get form Values\n                            let form = $('#' + config.routeDialogId).find('form');\n\n                            let routeDialogData = $(form).getFormValues();\n\n                            // validate form\n                            form.validator('validate');\n\n                            // check whether the form is valid\n                            let formValid = form.isValidForm();\n\n                            if(formValid === false){\n                                // don't close dialog\n                                return false;\n                            }\n\n                            // get all system data from select2\n                            let systemSelectData = form.find('.' + config.systemDialogSelectClass).select2('data');\n\n                            if(\n                                systemSelectData &&\n                                systemSelectData.length === 1\n                            ){\n                                let context = {\n                                    moduleElement: dialogData.moduleElement,\n                                    dataTable: dialogData.dataTable\n                                };\n\n                                let requestData = {\n                                    routeData: [{\n                                        mapIds: routeDialogData.mapIds,\n                                        systemFromData: dialogData.systemFromData,\n                                        systemToData: {\n                                            systemId:  systemSelectData[0].systemId,\n                                            name: systemSelectData[0].text\n                                        },\n                                        stargates: routeDialogData.hasOwnProperty('stargates') ? parseInt( routeDialogData.stargates ) : 0,\n                                        jumpbridges: routeDialogData.hasOwnProperty('jumpbridges') ? parseInt( routeDialogData.jumpbridges ) : 0,\n                                        wormholes: routeDialogData.hasOwnProperty('wormholes') ? parseInt( routeDialogData.wormholes ) : 0,\n                                        wormholesReduced: routeDialogData.hasOwnProperty('wormholesReduced') ? parseInt( routeDialogData.wormholesReduced ) : 0,\n                                        wormholesCritical: routeDialogData.hasOwnProperty('wormholesCritical') ? parseInt( routeDialogData.wormholesCritical ) : 0,\n                                        wormholesFrigate: routeDialogData.hasOwnProperty('wormholesFrigate') ? parseInt( routeDialogData.wormholesFrigate ) : 0,\n                                        wormholesEOL: routeDialogData.hasOwnProperty('wormholesEOL') ? parseInt( routeDialogData.wormholesEOL ) : 0\n                                    }]\n                                };\n\n                                getRouteData(requestData, context, callbackAddRouteRow);\n                            }\n                        }\n                    }\n                }\n            });\n\n            findRouteDialog.on('show.bs.modal', function(e) {\n                findRouteDialog.initTooltips();\n\n                // init some dialog/form observer\n                setDialogObserver( $(this) );\n\n                // init map select ----------------------------------------------------------------\n                let mapSelect = $(this).find('#' + config.mapSelectId);\n                mapSelect.initMapSelect();\n            });\n\n\n            findRouteDialog.on('shown.bs.modal', function(e) {\n\n                // init system select live  search ------------------------------------------------\n                // -> add some delay until modal transition has finished\n                let systemTargetSelect = $(this).find('.' + config.systemDialogSelectClass);\n                systemTargetSelect.delay(240).initSystemSelect({key: 'name'});\n            });\n\n            // show dialog\n            findRouteDialog.modal('show');\n        });\n    };\n\n    /**\n     * draw route table\n     * @param  mapId\n     * @param moduleElement\n     * @param systemFromData\n     * @param routesTable\n     * @param systemsTo\n     */\n    let drawRouteTable = function(mapId, moduleElement, systemFromData, routesTable, systemsTo){\n        let requestRouteData = [];\n        let currentTimestamp = Util.getServerTime().getTime();\n\n        // Skip some routes from search\n        // -> this should help to throttle requests (heavy CPU load for route calculation)\n        let defaultRoutesCount = Init.routeSearch.defaultCount;\n\n        for(let i = 0; i < systemsTo.length; i++){\n            let systemToData = systemsTo[i];\n\n            if(systemFromData.name !== systemToData.name){\n                let cacheKey = 'route_' + mapId + '_' + systemFromData.name.toUpperCase() + '_' + systemToData.name.toUpperCase();\n\n                if(\n                    cache.systemRoutes.hasOwnProperty(cacheKey) &&\n                    Math.round(\n                        ( currentTimestamp - (new Date( cache.systemRoutes[cacheKey].updated * 1000).getTime())) / 1000\n                    ) <= config.routeCacheTTL\n                ){\n                    // route data is cached (client side)\n                    let context = {\n                        dataTable: routesTable\n                    };\n\n                    addRow(context, cache.systemRoutes[cacheKey].data);\n                }else{\n                    // get route data\n                    let searchData = {\n                        mapIds: [mapId],\n                        systemFromData: systemFromData,\n                        systemToData: systemToData,\n                        skipSearch: requestRouteData.length >= defaultRoutesCount\n                    };\n\n                    requestRouteData.push( getRouteRequestDataFromRowData( searchData ));\n                }\n            }\n        }\n\n        // check if routes data is not cached and is requested\n        if(requestRouteData.length > 0){\n            let contextData = {\n                moduleElement: moduleElement,\n                dataTable: routesTable\n            };\n\n            let requestData = {\n                routeData: requestRouteData\n            };\n\n            getRouteData(requestData, contextData, callbackAddRouteRow);\n        }\n    };\n\n    /**\n     * show route settings dialog\n     * @param dialogData\n     * @param moduleElement\n     * @param systemFromData\n     * @param routesTable\n     */\n    let showSettingsDialog = function(dialogData, moduleElement, systemFromData, routesTable){\n\n        let promiseStore = MapUtil.getLocaleData('map', dialogData.mapId);\n        promiseStore.then(function(dataStore) {\n            // selected systems (if already stored)\n            let systemSelectOptions = [];\n            if(\n                dataStore &&\n                dataStore.routes\n            ){\n                systemSelectOptions = dataStore.routes;\n            }\n\n            // max count of \"default\" target systems\n            let maxSelectionLength = Init.routeSearch.maxDefaultCount;\n\n            let data = {\n                id: config.routeSettingsDialogId,\n                selectClass: config.systemDialogSelectClass,\n                systemSelectOptions: systemSelectOptions,\n                maxSelectionLength: maxSelectionLength\n            };\n\n            requirejs(['text!templates/dialog/route_settings.html', 'mustache'], function(template, Mustache) {\n                let content = Mustache.render(template, data);\n\n                let settingsDialog = bootbox.dialog({\n                    title: 'Route settings',\n                    message: content,\n                    show: false,\n                    buttons: {\n                        close: {\n                            label: 'cancel',\n                            className: 'btn-default'\n                        },\n                        success: {\n                            label: '<i class=\"fa fa-fw fa-check\"></i>&nbsp;save',\n                            className: 'btn-success',\n                            callback: function () {\n                                let form = this.find('form');\n                                // get all system data from select2\n                                let systemSelectData = form.find('.' + config.systemDialogSelectClass).select2('data');\n                                let systemsTo = [];\n\n                                if( systemSelectData.length > 0 ){\n                                    systemsTo = formSystemSelectData(systemSelectData);\n                                    MapUtil.storeLocalData('map', dialogData.mapId, 'routes', systemsTo);\n                                }else{\n                                    MapUtil.deleteLocalData('map', dialogData.mapId, 'routes');\n                                }\n\n                                Util.showNotify({title: 'Route settings stored', type: 'success'});\n\n                                // (re) draw table\n                                drawRouteTable(dialogData.mapId, moduleElement, systemFromData, routesTable, systemsTo);\n                            }\n                        }\n                    }\n                });\n\n                settingsDialog.on('shown.bs.modal', function(e) {\n\n                    // init default system select -----------------------------------------------------\n                    // -> add some delay until modal transition has finished\n                    let systemTargetSelect = $(this).find('.' + config.systemDialogSelectClass);\n                    systemTargetSelect.delay(240).initSystemSelect({key: 'name', maxSelectionLength: maxSelectionLength});\n                });\n\n                // show dialog\n                settingsDialog.modal('show');\n            });\n        });\n    };\n\n    /**\n     * format select2 system data\n     * @param {Array} data\n     * @returns {Array}\n     */\n    let formSystemSelectData = function(data){\n        let formattedData = [];\n        for(let i = 0; i < data.length; i++){\n            let tmpData = data[i];\n\n            formattedData.push({\n                name: tmpData.id,\n                systemId: parseInt( tmpData.hasOwnProperty('systemId') ? tmpData.systemId : tmpData.element.getAttribute('data-systemid') )\n            });\n        }\n\n        return formattedData;\n    };\n\n    /**\n     * set event observer for route finder dialog\n     * @param routeDialog\n     */\n    let setDialogObserver = function(routeDialog){\n        let wormholeCheckbox = routeDialog.find('input[type=\"checkbox\"][name=\"wormholes\"]');\n        let wormholeReducedCheckbox = routeDialog.find('input[type=\"checkbox\"][name=\"wormholesReduced\"]');\n        let wormholeCriticalCheckbox = routeDialog.find('input[type=\"checkbox\"][name=\"wormholesCritical\"]');\n        let wormholeFrigateCheckbox = routeDialog.find('input[type=\"checkbox\"][name=\"wormholesFrigate\"]');\n        let wormholeEolCheckbox = routeDialog.find('input[type=\"checkbox\"][name=\"wormholesEOL\"]');\n\n        // store current \"checked\" state for each box ---------------------------------------------\n        let storeCheckboxStatus = function(){\n            wormholeReducedCheckbox.data('selectState', wormholeReducedCheckbox.prop('checked'));\n            wormholeCriticalCheckbox.data('selectState', wormholeCriticalCheckbox.prop('checked'));\n            wormholeFrigateCheckbox.data('selectState', wormholeFrigateCheckbox.prop('checked'));\n            wormholeEolCheckbox.data('selectState', wormholeEolCheckbox.prop('checked'));\n        };\n\n        // on wormhole checkbox change ------------------------------------------------------------\n        let onWormholeCheckboxChange = function(){\n\n            if( $(this).is(':checked') ){\n                wormholeReducedCheckbox.prop('disabled', false);\n                wormholeCriticalCheckbox.prop('disabled', false);\n                wormholeFrigateCheckbox.prop('disabled', false);\n                wormholeEolCheckbox.prop('disabled', false);\n\n                wormholeReducedCheckbox.prop('checked', wormholeReducedCheckbox.data('selectState'));\n                wormholeCriticalCheckbox.prop('checked', wormholeCriticalCheckbox.data('selectState'));\n                wormholeFrigateCheckbox.prop('checked', wormholeFrigateCheckbox.data('selectState'));\n                wormholeEolCheckbox.prop('checked', wormholeEolCheckbox.data('selectState'));\n            }else{\n                storeCheckboxStatus();\n\n                wormholeReducedCheckbox.prop('checked', false);\n                wormholeReducedCheckbox.prop('disabled', true);\n                wormholeCriticalCheckbox.prop('checked', false);\n                wormholeCriticalCheckbox.prop('disabled', true);\n                wormholeFrigateCheckbox.prop('checked', false);\n                wormholeFrigateCheckbox.prop('disabled', true);\n                wormholeEolCheckbox.prop('checked', false);\n                wormholeEolCheckbox.prop('disabled', true);\n            }\n        }.bind(wormholeCheckbox);\n\n        wormholeCheckbox.on('change', onWormholeCheckboxChange);\n\n        // initial checkbox check\n        storeCheckboxStatus();\n        onWormholeCheckboxChange();\n    };\n\n    /**\n     * format route data from API request into dataTable row format\n     * @param routeData\n     * @returns {{}}\n     */\n    let formatRouteData = function(routeData){\n\n        /**\n         * get status icon for route\n         * @param status\n         * @returns {string}\n         */\n        let getStatusIcon= function(status){\n            let color = 'txt-color-danger';\n            let title = 'route not found';\n            switch(status){\n                case 1:\n                    color = 'txt-color-success';\n                    title = 'route exists';\n                    break;\n                case 2:\n                    color = 'txt-color-warning';\n                    title = 'not search performed';\n                    break;\n            }\n\n            return '<i class=\"fa fa-fw fa-circle txt-color ' + color + '\" title=\"' + title + '\"></i>';\n        };\n\n        // route status:\n        // 0: not found\n        // 1: round (OK)\n        // 2: not searched\n        let routeStatus = routeData.skipSearch ? 2 : 0;\n\n        // button class for \"safer\" routes\n        let saferButtonClass = routeData.safer ? 'txt-color-success' : '';\n\n        let saferButton = '<i class=\"fa ' + ['fa-shield', 'txt-color', saferButtonClass].join(' ') + '\"></i>';\n        let reloadButton = '<i class=\"fa ' + ['fa-refresh'].join(' ') + '\"></i>';\n        let searchButton = '<i class=\"fa ' + ['fa-search-plus '].join(' ') + '\"></i>';\n        let deleteButton = '<i class=\"fa ' + ['fa-close', 'txt-color', 'txt-color-redDarker'].join(' ') + '\"></i>';\n\n        // default row data (e.g. no route found)\n        let tableRowData = {\n            systemFromData:  routeData.systemFromData,\n            systemToData:  routeData.systemToData,\n            jumps: {\n                value: 9999, // for sorting\n                formatted: ''\n            },\n            avgTrueSec: {\n                value: '',\n                formatted: ''\n            },\n            route: routeStatus === 2 ? 'search now' : 'not found',\n            stargates: routeData.stargates,\n            jumpbridges: routeData.jumpbridges,\n            wormholes: routeData.wormholes,\n            wormholesReduced: routeData.wormholesReduced,\n            wormholesCritical: routeData.wormholesCritical,\n            wormholesFrigate: routeData.wormholesFrigate,\n            wormholesEOL: routeData.wormholesEOL,\n            safer: {\n                value: routeData.safer,\n                button: saferButton\n            },\n            reload: {\n                button: routeData.skipSearch ? searchButton : reloadButton\n            },\n            clear: {\n                button: deleteButton\n            },\n            maps: routeData.maps,\n            mapIds: routeData.mapIds //map data (mapIds is \"redundant\")\n        };\n\n        if(\n            routeData.routePossible === true &&\n            routeData.route.length > 0\n        ){\n            // route data available\n            routeStatus = 1;\n\n            // add route Data\n            let jumpData = [];\n            let avgSecTemp = 0;\n\n            // loop all systems on this route\n            for(let i = 0; i < routeData.route.length; i++){\n                let routeNodeData = routeData.route[i];\n                // format system name\n                let systemName = routeNodeData.system;\n\n                let systemSec = Number(routeNodeData.security).toFixed(1).toString();\n                let tempSystemSec = systemSec;\n\n                if(tempSystemSec <= 0){\n                    tempSystemSec = '0-0';\n                }\n\n                let systemSecClass = config.systemSecurityClassPrefix + tempSystemSec.replace('.', '-');\n\n                // check for wormhole\n                let icon = 'fa-square';\n                if( /^J\\d+$/.test(systemName) ){\n                    icon = 'fa-dot-circle-o';\n                }\n\n                let system = '<i class=\"fa ' + icon + ' ' + systemSecClass + '\" ';\n                system += 'data-toggle=\"tooltip\" data-placement=\"bottom\" data-container=\"body\" ';\n                system += 'title=\"' + systemName + ' [' + systemSec + '] \"></i>';\n                jumpData.push( system );\n\n                // \"source\" system is not relevant for average security\n                if(i > 0){\n                    avgSecTemp += Number(routeNodeData.security);\n                }\n            }\n\n            let avgSec = ( avgSecTemp /  (routeData.route.length - 1)).toFixed(2);\n            let avgSecForClass = Number(avgSec).toFixed(1);\n\n            if(avgSecForClass <= 0){\n                avgSecForClass = '0.0';\n            }\n\n            let avgSecClass = config.systemSecurityClassPrefix + avgSecForClass.toString().replace('.', '-');\n\n            tableRowData.jumps = {\n                value: routeData.routeJumps,\n                formatted: routeData.routeJumps\n            };\n\n            tableRowData.avgTrueSec = {\n                value: avgSec,\n                formatted: '<span class=\"' + avgSecClass + '\">' + avgSec + '</span>'\n            };\n            tableRowData.route = jumpData.join(' ');\n        }\n\n        // route status data ----------------------------------------------------------------------\n        tableRowData.status = {\n            value: routeStatus,\n            formatted: getStatusIcon(routeStatus)\n        };\n\n        return tableRowData;\n    };\n\n    /**\n     * get the route finder moduleElement\n     * @returns {*}\n     */\n    let getModule = function(){\n\n        // create new module container\n        let moduleElement = $('<div>', {\n            class: [config.moduleClass, config.systemRouteModuleClass].join(' ')\n        });\n\n        // headline toolbar icons\n        let headlineToolbar  = $('<h5>', {\n            class: 'pull-right'\n        }).append(\n            $('<i>', {\n                class: ['fa', 'fa-fw', 'fa-search', config.systemModuleHeadlineIcon, config.systemModuleHeadlineIconSearch].join(' '),\n                title: 'find&nbsp;route'\n            }).attr('data-html', 'true').attr('data-toggle', 'tooltip'),\n            $('<i>', {\n                class: ['fa', 'fa-fw', 'fa-sliders', config.systemModuleHeadlineIcon, config.systemModuleHeadlineIconSettings].join(' '),\n                title: 'settings'\n            }).attr('data-html', 'true').attr('data-toggle', 'tooltip'),\n            $('<i>', {\n                class: ['fa', 'fa-fw', 'fa-refresh', config.systemModuleHeadlineIcon, config.systemModuleHeadlineIconRefresh].join(' '),\n                title: 'refresh&nbsp;all'\n            }).attr('data-html', 'true').attr('data-toggle', 'tooltip')\n        );\n\n        moduleElement.append(headlineToolbar);\n\n        // headline\n        let headline = $('<h5>', {\n            class: 'pull-left',\n            text: 'Routes'\n        });\n\n        moduleElement.append(headline);\n\n        // crate new route table\n        let table = $('<table>', {\n            class: ['compact', 'stripe', 'order-column', 'row-border', config.systemInfoRoutesTableClass].join(' ')\n        });\n\n        moduleElement.append( $(table) );\n\n        // init empty table\n        let routesTable = table.DataTable( {\n            paging: false,\n            ordering: true,\n            order: [[ 2, 'asc' ], [ 0, 'asc' ]],\n            info: false,\n            searching: false,\n            hover: false,\n            autoWidth: false,\n            rowId: 'systemTo',\n            language: {\n                emptyTable:  'No routes added'\n            },\n            columnDefs: [\n                {\n                    targets: 0,\n                    orderable: true,\n                    title: '',\n                    width: '10px',\n                    class: ['text-center'].join(' '),\n                    data: 'status',\n                    render: {\n                        _: 'formatted',\n                        sort: 'value'\n                    }\n                },{\n                    targets: 1,\n                    orderable: true,\n                    title: 'system&nbsp;&nbsp;&nbsp;',\n                    class: Util.config.popoverTriggerClass,\n                    data: 'systemToData',\n                    render: {\n                        _: 'name',\n                        sort: 'name'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex) {\n                        // init context menu\n                        $(cell).initSystemPopover({\n                            systemToData: rowData.systemToData\n                        });\n                    }\n                },{\n                    targets: 2,\n                    orderable: true,\n                    title: '<span title=\"jumps\" data-toggle=\"tooltip\"><i class=\"fa fa-arrows-h\"></i>&nbsp;&nbsp;</span>',\n                    width: '18px',\n                    class: 'text-right',\n                    data: 'jumps',\n                    render: {\n                        _: 'formatted',\n                        sort: 'value'\n                    }\n                },{\n                    targets: 3,\n                    orderable: true,\n                    title: '<span title=\"average security\" data-toggle=\"tooltip\">&#216;&nbsp;&nbsp;</span>',\n                    width: '15px',\n                    class: 'text-right',\n                    data: 'avgTrueSec',\n                    render: {\n                        _: 'formatted',\n                        sort: 'value'\n                    }\n                },{\n                    targets: 4,\n                    orderable: false,\n                    title: 'route',\n                    data: 'route'\n                },{\n                    targets: 5,\n                    title: '<i title=\"search safer route (HS)\" data-toggle=\"tooltip\" class=\"fa fa-shield text-right\"></i>',\n                    orderable: false,\n                    searchable: false,\n                    width: '10px',\n                    class: ['text-center', config.dataTableActionCellClass].join(' '),\n                    data: 'safer',\n                    render: {\n                        _: 'button'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        let tempTableApi = this.api();\n\n                        $(cell).on('click', function(e) {\n                            // get current row data (important!)\n                            // -> \"rowData\" param is not current state, values are \"on createCell()\" state\n                            rowData = tempTableApi.row( $(cell).parents('tr')).data();\n                            let routeData = getRouteRequestDataFromRowData( rowData );\n\n                            // overwrite some params\n                            routeData.skipSearch = 0;\n                            routeData.safer = 1 - routeData.safer; // toggle\n\n                            let context = {\n                                moduleElement: moduleElement,\n                                dataTable: tempTableApi\n                            };\n\n                            let requestData = {\n                                routeData: [routeData]\n                            };\n\n                            getRouteData(requestData, context, callbackAddRouteRow);\n                        });\n                    }\n                },{\n                    targets: 6,\n                    title: '',\n                    orderable: false,\n                    searchable: false,\n                    width: '10px',\n                    class: ['text-center', config.dataTableActionCellClass].join(' '),\n                    data: 'reload',\n                    render: {\n                        _: 'button'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        let tempTableApi = this.api();\n\n                        $(cell).on('click', function(e) {\n                            // get current row data (important!)\n                            // -> \"rowData\" param is not current state, values are \"on createCell()\" state\n                            rowData = tempTableApi.row( $(cell).parents('tr')).data();\n                            let routeData = getRouteRequestDataFromRowData( rowData );\n\n                            // overwrite some params\n                            routeData.skipSearch = 0;\n\n                            let context = {\n                                moduleElement: moduleElement,\n                                dataTable: tempTableApi\n                            };\n\n                            let requestData = {\n                                routeData: [routeData]\n                            };\n\n                            getRouteData(requestData, context, callbackAddRouteRow);\n                        });\n                    }\n                },{\n                    targets: 7,\n                    title: '',\n                    orderable: false,\n                    searchable: false,\n                    width: '10px',\n                    class: ['text-center', config.dataTableActionCellClass].join(' '),\n                    data: 'clear',\n                    render: {\n                        _: 'button'\n                    },\n                    createdCell: function(cell, cellData, rowData, rowIndex, colIndex){\n                        let tempTableElement = this;\n\n                        let confirmationSettings = {\n                            container: 'body',\n                            placement: 'left',\n                            btnCancelClass: 'btn btn-sm btn-default',\n                            btnCancelLabel: 'cancel',\n                            btnCancelIcon: 'fa fa-fw fa-ban',\n                            title: 'delete route',\n                            btnOkClass: 'btn btn-sm btn-danger',\n                            btnOkLabel: 'delete',\n                            btnOkIcon: 'fa fa-fw fa-close',\n                            onConfirm : function(e, target){\n                                let deleteRowElement = $(cell).parents('tr');\n                                tempTableElement.api().rows(deleteRowElement).remove().draw();\n                            }\n                        };\n\n                        // init confirmation dialog\n                        $(cell).confirmation(confirmationSettings);\n                    }\n                }\n            ],\n            drawCallback: function(settings){\n\n                let animationRows = this.api().rows().nodes().to$().filter(function() {\n                    return (\n                        $(this).data('animationStatus') ||\n                        $(this).data('animationTimer')\n                    );\n                });\n\n                for(let i = 0; i < animationRows.length; i++){\n                    $(animationRows[i]).pulseTableRow($(animationRows[i]).data('animationStatus'));\n                    $(animationRows[i]).removeData('animationStatus');\n                }\n\n            },\n            data: [] // will be added dynamic\n        });\n\n        // init tooltips for this module\n        let tooltipElements = moduleElement.find('[data-toggle=\"tooltip\"]');\n        tooltipElements.tooltip({\n            container: 'body'\n        });\n\n        return moduleElement;\n    };\n\n\n    /**\n     * init system popover (e.g. for setWaypoints)\n     * @param options\n     */\n    $.fn.initSystemPopover = function(options){\n        let elements = $(this);\n        let eventNamespace = 'hideSystemPopup';\n        let systemToData = options.systemToData;\n\n        requirejs(['text!templates/tooltip/system_popover.html', 'mustache'], function (template, Mustache) {\n            let data = {\n                systemToData: systemToData\n            };\n\n            let content = Mustache.render(template, data);\n\n            elements.each(function() {\n                let element = $(this);\n                // destroy \"popover\" and remove \"click\" event for animation\n                element.popover('destroy').off();\n\n                // init popover and add specific class to it (for styling)\n                element.popover({\n                    html: true,\n                    title: systemToData.name,\n                    trigger: 'manual',\n                    placement: 'top',\n                    container: 'body',\n                    content: content\n                }).data('bs.popover').tip().addClass('pf-popover');\n            });\n\n            // set popup \"close\" observer\n            elements.initPopoverClose(eventNamespace);\n\n            // set \"open\" trigger on \"right click\"\n            // -> this is not supported by the \"trigger\" param in .popover();\n            // -> therefore we need to set it up manually\n            elements.on('contextmenu', function(e){\n                e.preventDefault();\n               $(this).popover('show');\n            });\n\n            // set link observer \"on shown\" event\n            elements.on('shown.bs.popover', function () {\n                let popoverRoot = $(this);\n\n                popoverRoot.data('bs.popover').tip().find('a').on('click', function(){\n                    // hint: \"data\" attributes should be in lower case!\n                    let systemData = {\n                        name: $(this).data('name'),\n                        systemId: $(this).data('systemid')\n                    };\n                    Util.setDestination(systemData, 'set_destination');\n\n                    // close popover\n                    popoverRoot.popover('hide');\n                });\n            });\n        });\n    };\n\n    /**\n     * init route module\n     * -> request route path fore \"default\" trade hub systems\n     * @param moduleElement\n     * @param mapId\n     * @param systemData\n     */\n    let initModule = function(moduleElement, mapId, systemData){\n\n        let systemFromData = {\n            name: systemData.name,\n            systemId: systemData.systemId\n        };\n\n        let routesTableElement =  moduleElement.find('.' + config.systemInfoRoutesTableClass);\n\n        let routesTable = routesTableElement.DataTable();\n\n        // init refresh routes --------------------------------------------------------------------\n        moduleElement.find('.' + config.systemModuleHeadlineIconRefresh).on('click', function(e){\n            updateRoutesTable(moduleElement, routesTable);\n        });\n\n        // init search routes dialog --------------------------------------------------------------\n        moduleElement.find('.' + config.systemModuleHeadlineIconSearch).on('click', function(e){\n            let maxRouteSearchLimit = this.Init.routeSearch.limit;\n\n            if(routesTable.rows().count() >= maxRouteSearchLimit){\n                // max routes limit reached -> show warning\n                Util.showNotify({title: 'Route limit reached', text: 'Serch is limited by ' + maxRouteSearchLimit, type: 'warning'});\n            }else{\n                let dialogData = {\n                    moduleElement: moduleElement,\n                    mapId: mapId,\n                    systemFromData: systemFromData,\n                    dataTable: routesTable\n                };\n\n                showFindRouteDialog(dialogData);\n            }\n        }.bind({\n            Init: Init\n        }));\n\n        // init settings dialog -------------------------------------------------------------------\n        moduleElement.find('.' + config.systemModuleHeadlineIconSettings).on('click', function(e){\n            let dialogData = {\n                mapId: mapId\n            };\n\n            showSettingsDialog(dialogData, moduleElement, systemFromData, routesTable);\n        });\n\n        // fill routesTable with data -------------------------------------------------------------\n        let promiseStore = MapUtil.getLocaleData('map', mapId);\n        promiseStore.then(function(dataStore) {\n            // selected systems (if already stored)\n            let systemsTo = [{\n                name: 'Jita',\n                systemId: 30000142\n            }];\n\n            if(\n                dataStore &&\n                dataStore.routes\n            ){\n                systemsTo = dataStore.routes;\n            }\n\n            drawRouteTable(mapId, moduleElement, systemFromData, routesTable, systemsTo);\n        });\n\n    };\n\n    /**\n     * updates an dom element with the system route module\n     * @param mapId\n     * @param systemData\n     */\n    $.fn.drawSystemRouteModule = function(mapId, systemData){\n\n        let parentElement = $(this);\n\n        // show route module\n        let showModule = function(moduleElement){\n            if(moduleElement){\n                moduleElement.css({ opacity: 0 });\n                parentElement.append(moduleElement);\n\n                moduleElement.velocity('transition.slideDownIn', {\n                    duration: Init.animationSpeed.mapModule,\n                    delay: Init.animationSpeed.mapModule,\n                    complete: function(){\n                        initModule(moduleElement, mapId, systemData);\n                    }\n                });\n            }\n        };\n\n        // check if module already exists\n        let moduleElement = parentElement.find('.' + config.systemRouteModuleClass);\n\n        if(moduleElement.length > 0){\n            moduleElement.velocity('transition.slideDownOut', {\n                duration: Init.animationSpeed.mapModule,\n                complete: function(tempElement){\n                    $(tempElement).remove();\n\n                    moduleElement = getModule();\n                    showModule(moduleElement);\n                }\n            });\n        }else{\n            moduleElement = getModule();\n            showModule(moduleElement);\n        }\n\n    };\n\n});\n",
    "define('app/ui/system_killboard',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'morris'\n], function($, Init, Util, Morris) {\n    'use strict';\n\n    let config = {\n        // module info\n        moduleClass: 'pf-module',                                               // class for each module\n\n        // headline toolbar\n        systemModuleHeadlineIcon: 'pf-module-icon-button',                      // class for toolbar icons in the head\n\n        // system killboard module\n        systemKillboardModuleClass: 'pf-system-killboard-module',               // module wrapper\n        systemKillboardGraphKillsClass: 'pf-system-killboard-graph-kills',      // class for system kill graph\n\n        // system killboard list\n        systemKillboardListClass: 'pf-system-killboard-list',                   // class for a list with kill entries\n        systemKillboardListEntryClass: 'pf-system-killboard-list-entry',        // class for a list entry\n        systemKillboardListImgShip: 'pf-system-killboard-img-ship',             // class for all ship images\n        systemKillboardListImgAlly: 'pf-system-killboard-img-ally',             // class for all alliance logos\n        systemKillboardListImgCorp: 'pf-system-killboard-img-corp'              // class for all corp logos\n    };\n\n    let cache = {\n        systemKillsGraphData: {} // data for system kills info graph\n    };\n\n    /**\n     * get label element with given content\n     * @param text\n     * @returns {*|XMLList}\n     */\n    let getLabel = function(text, options){\n        let label = $('<span>', {\n            class: ['label', options.type, options.align].join(' ')\n        }).text( text );\n\n        return label;\n    };\n\n\n    let showKillmails = function(moduleElement, killboardData){\n\n        // show number of killMails\n        let killMailCounterMax = 20;\n        let killMailCounter = 0;\n\n        // change order (show right to left)\n        killboardData.tableData.reverse();\n\n        for(let i = 0; i < killboardData.tableData.length; i++){\n\n            // check if killMails exist in this hour\n            if(killboardData.tableData[i].killmails){\n\n                if(killMailCounter >= killMailCounterMax){\n                    break;\n                }\n\n                moduleElement.append( $('<h5>').text(i + 'h ago'));\n\n                let killMailData = killboardData.tableData[i].killmails;\n\n                let listeElement = $('<ul>', {\n                    class: ['media-list', config.systemKillboardListClass].join(' ')\n                });\n\n                for(let j = 0; j < killMailData.length; j++){\n                    killMailCounter++;\n                    if(killMailCounter >= killMailCounterMax){\n                        break;\n                    }\n\n                    let killData = killMailData[j];\n\n                    let linkUrl = '//zkillboard.com/kill/' + killData.killID + '/';\n                    let victimImageUrl = Init.url.ccpImageServer + 'Type/' + killData.victim.shipTypeID + '_64.png';\n                    let killDate = getDateObjectByTimeString(killData.killTime);\n                    let killDateString = Util.convertDateToString(killDate);\n                    let killLossValue = Util.formatPrice( killData.zkb.totalValue );\n\n                    // check for ally\n                    let victimAllyLogoUrl = '';\n                    let displayAlly = 'none';\n                    if(killData.victim.allianceID > 0){\n                        victimAllyLogoUrl = Init.url.ccpImageServer + 'Alliance/' + killData.victim.allianceID + '_32.png';\n                        displayAlly = 'block';\n                    }\n\n                    // check for corp\n                    let victimCorpLogoUrl = '';\n                    let displayCorp = 'none';\n                    if(killData.victim.corporationID > 0){\n                        victimCorpLogoUrl = Init.url.ccpImageServer + 'Corporation/' + killData.victim.corporationID + '_32.png';\n                        displayCorp = 'inline';\n                    }\n\n                    let liElement = $('<li>', {\n                        class: ['media', config.systemKillboardListEntryClass].join(' ')\n                    }).append(\n                            $('<a>', {\n                                href: linkUrl,\n                                target: '_blank'\n                            }).append(\n                                    $('<img>', {\n                                        src: victimImageUrl,\n                                        class: ['media-object', 'pull-left', config.systemKillboardListImgShip].join(' ')\n                                    })\n                                ).append(\n                                    $('<img>', {\n                                        src: victimAllyLogoUrl,\n                                        title: killData.victim.allianceName,\n                                        class: ['pull-right', config.systemKillboardListImgAlly].join(' '),\n                                        css: {display: displayAlly}\n                                    }).attr('data-placement', 'left')\n                                ).append(\n                                    $('<div>', {\n                                        class: 'media-body'\n                                    }).append(\n                                            $('<h5>', {\n                                                class: 'media-heading',\n                                                text: killData.victim.characterName\n                                            }).prepend(\n                                                    $('<small>', {\n                                                        text: killDateString + ' - '\n                                                    })\n                                                ).prepend(\n                                                    $('<img>', {\n                                                        src: victimCorpLogoUrl,\n                                                        title: killData.victim.corporationName,\n                                                        class: [config.systemKillboardListImgCorp].join(' '),\n                                                        css: {display: displayCorp}\n                                                    })\n                                                )\n                                        ).append(\n                                            $('<h3>', {\n                                                class: ['media-heading'].join(' ')\n                                            }).append(\n                                                    $('<small>', {\n                                                        class: ['txt-color', 'txt-color-green', 'pull-right'].join(' '),\n                                                        text: killLossValue\n                                                    })\n                                                )\n                                        )\n                                )\n                        );\n\n                    listeElement.append(liElement);\n\n                }\n\n                moduleElement.append(listeElement);\n\n            }\n        }\n\n\n        // animate kill li-elements\n        $('.' + config.systemKillboardListEntryClass).velocity('transition.expandIn', {\n            stagger: 50,\n            complete: function(){\n                // init tooltips\n                moduleElement.find('[title]').tooltip({\n                    container: 'body'\n                });\n\n            }\n        });\n\n    };\n\n    /**\n     * updates the system info graph\n     * @param systemData\n     */\n    $.fn.updateSystemInfoGraphs = function(systemData){\n\n        let moduleElement = $(this);\n\n\n        // headline toolbar icons\n        let headlineToolbar  = $('<h5>', {\n            class: 'pull-right'\n        }).append(\n                $('<i>', {\n                    class: ['fa', 'fa-fw', 'fa-external-link ', config.systemModuleHeadlineIcon].join(' '),\n                    title: 'zkillboard.com'\n                }).on('click', function(e){\n                    window.open(\n                        '//zkillboard.com/system/' + systemData.systemId,\n                        '_blank'\n                    );\n                }).attr('data-toggle', 'tooltip')\n            );\n\n        moduleElement.append(headlineToolbar);\n\n        // headline\n        let headline = $('<h5>', {\n            text: 'Killboard'\n        });\n\n        moduleElement.append(headline);\n\n        let killboardGraphElement = $('<div>', {\n            class: config.systemKillboardGraphKillsClass\n        });\n\n        moduleElement.append(killboardGraphElement);\n\n        let showHours = 24;\n        let maxKillmailCount = 200; // limited by API\n\n        let labelOptions = {\n            align: 'center-block'\n        };\n        let label = '';\n\n        // private function draws a \"system kills\" graph\n        let drawGraph = function(data){\n\n            let tableData = data.tableData;\n\n            // change order (show right to left)\n            tableData.reverse();\n\n\n\n             if(data.count === 0){\n                 labelOptions.type = 'label-success';\n                 label = getLabel( 'No kills found within the last 24h', labelOptions );\n                 killboardGraphElement.append( label );\n\n                 minifyKillboardGraphElement(killboardGraphElement);\n                 return;\n             }\n\n            let labelYFormat = function(y){\n                return Math.round(y);\n            };\n\n            // draw chart\n            Morris.Bar({\n                element: killboardGraphElement,\n                resize: true,\n                grid: true,\n                gridStrokeWidth: 0.3,\n                gridTextSize: 9,\n                gridTextColor: '#63676a',\n                gridTextFamily: 'Oxygen Bold',\n                hideHover: true,\n                data: tableData,\n                xkey: 'label',\n                ykeys: ['kills'],\n                labels: ['Kills'],\n                yLabelFormat: labelYFormat,\n                xLabelMargin: 10,\n                padding: 10,\n                parseTime: false,\n                barOpacity: 0.8,\n                barRadius: [2, 2, 0, 0],\n                barSizeRatio: 0.5,\n                barGap: 3,\n                barColors: function (row, series, type) {\n                    if (type === 'bar') {\n                        // highlight last row -> recent kills found\n                        if(this.xmax === row.x){\n                            return '#c2760c';\n                        }\n                    }\n\n                    return '#375959';\n                }\n            });\n\n            // show hint for recent kills\n            if(tableData[tableData.length - 1].kills > 0){\n                labelOptions.type = 'label-warning';\n                label = getLabel( tableData[tableData.length - 1].kills + ' kills within the last hour', labelOptions );\n                killboardGraphElement.prepend( label );\n            }\n        };\n\n        // get recent KB stats (last 24h))\n        let localDate = new Date();\n\n        // cache result for 5min\n        let cacheKey = systemData.systemId + '_' + localDate.getHours() + '_' + ( Math.ceil( localDate.getMinutes() / 5 ) * 5);\n\n        if(cache.systemKillsGraphData.hasOwnProperty(cacheKey) ){\n            // cached results\n\n            drawGraph( cache.systemKillsGraphData[cacheKey] );\n\n            // show killmail information\n            showKillmails(moduleElement, cache.systemKillsGraphData[cacheKey]);\n        }else{\n\n            // chart data\n            let chartData = [];\n\n            for(let i = 0; i < showHours; i++){\n                let tempData = {\n                    label: i + 'h',\n                    kills: 0\n                };\n\n                chartData.push(tempData);\n            }\n\n            // get kills within the last 24h\n            let timeFrameInSeconds = 60 * 60 * 24;\n\n            // get current server time\n            let serverDate= Util.getServerTime();\n\n            // if system is w-space system -> add link modifier\n            let wSpaceLinkModifier = '';\n            if(systemData.type.id === 1){\n                wSpaceLinkModifier = 'w-space/';\n            }\n\n            let url = Init.url.zKillboard;\n            url += 'no-items/' + wSpaceLinkModifier + 'no-attackers/solarSystemID/' + systemData.systemId + '/pastSeconds/' + timeFrameInSeconds + '/';\n\n            killboardGraphElement.showLoadingAnimation();\n\n            $.ajax({\n                url: url,\n                type: 'GET',\n                dataType: 'json'\n            }).done(function(kbData) {\n\n                // the API wont return more than 200KMs ! - remember last bar block with complete KM information\n                let lastCompleteDiffHourData = 0;\n\n\n                // loop kills and count kills by hour\n                for (let i = 0; i < kbData.length; i++) {\n                    let killmailData = kbData[i];\n\n                    let killDate = getDateObjectByTimeString(killmailData.killTime);\n\n                    // get time diff\n                    let timeDiffMin = Math.round(( serverDate - killDate ) / 1000 / 60);\n                    let timeDiffHour = Math.round(timeDiffMin / 60);\n\n                    // update chart data\n                    if (chartData[timeDiffHour]) {\n                        chartData[timeDiffHour].kills++;\n\n                        // add kill mail data\n                        if (chartData[timeDiffHour].killmails === undefined) {\n                            chartData[timeDiffHour].killmails = [];\n                        }\n                        chartData[timeDiffHour].killmails.push(killmailData);\n\n                        if (timeDiffHour > lastCompleteDiffHourData) {\n                            lastCompleteDiffHourData = timeDiffHour;\n                        }\n                    }\n\n                }\n\n                // remove empty chart Data\n                if (kbData.length >= maxKillmailCount) {\n                    chartData = chartData.splice(0, lastCompleteDiffHourData + 1);\n                }\n\n                // fill cache\n                cache.systemKillsGraphData[cacheKey] = {};\n                cache.systemKillsGraphData[cacheKey].tableData = chartData;\n                cache.systemKillsGraphData[cacheKey].count = kbData.length;\n\n                // draw table\n                drawGraph(cache.systemKillsGraphData[cacheKey]);\n\n                // show killmail information\n                showKillmails(moduleElement, cache.systemKillsGraphData[cacheKey]);\n\n                killboardGraphElement.hideLoadingAnimation();\n            }).fail(function(e){\n\n                labelOptions.type = 'label-danger';\n                label = getLabel(  'zKillboard is not responding', labelOptions );\n                killboardGraphElement.prepend( label );\n\n                killboardGraphElement.hideLoadingAnimation();\n\n                minifyKillboardGraphElement(killboardGraphElement);\n\n                Util.showNotify({title: e.status + ': Get system kills', text: 'Loading failed', type: 'error'});\n            });\n        }\n\n\n\n        // init tooltips\n        let tooltipElements = moduleElement.find('[data-toggle=\"tooltip\"]');\n        tooltipElements.tooltip({\n            container: 'body'\n        });\n\n    };\n\n    /**\n     * minify the killboard graph element e.g. if no kills where found, or on error\n     * @param killboardGraphElement\n     */\n    let minifyKillboardGraphElement = function(killboardGraphElement){\n        killboardGraphElement.velocity({\n            height: '20px',\n            marginBottom: '0px'\n        },{\n            duration: Init.animationSpeed.mapModule\n        });\n    };\n\n    /**\n     * transform timestring\n     * @param timeString\n     * @returns {Date}\n     */\n    let getDateObjectByTimeString = function(timeString){\n        let match = timeString.match(/^(\\d+)-(\\d+)-(\\d+) (\\d+)\\:(\\d+)\\:(\\d+)$/);\n        let date = new Date(match[1], match[2] - 1, match[3], match[4], match[5], match[6]);\n\n        return date;\n    };\n\n    /**\n     * get module element\n     * @param systemData\n     * @returns {*|HTMLElement}\n     */\n    let getModule = function(parentElement, systemData){\n\n        // create new module container\n        let moduleElement = $('<div>', {\n            class: [config.moduleClass, config.systemKillboardModuleClass].join(' '),\n            css: {opacity: 0}\n        });\n\n        parentElement.append(moduleElement);\n\n        // update graph\n        moduleElement.updateSystemInfoGraphs(systemData);\n\n        return moduleElement;\n    };\n\n\n    /**\n     * main module load function\n     * @param systemData\n     */\n    $.fn.drawSystemKillboardModule = function(systemData){\n\n        let parentElement = $(this);\n\n        // show route module\n        let showModule = function(moduleElement){\n            if(moduleElement){\n                moduleElement.velocity('transition.slideDownIn', {\n                    duration: Init.animationSpeed.mapModule,\n                    delay: Init.animationSpeed.mapModule\n                });\n            }\n        };\n\n        // check if module already exists\n        let moduleElement = parentElement.find('.' + config.systemKillboardModuleClass);\n\n        if(moduleElement.length > 0){\n            moduleElement.velocity('transition.slideDownOut', {\n                duration: Init.animationSpeed.mapModule,\n                complete: function(tempElement){\n                    $(tempElement).remove();\n\n                    moduleElement = getModule(parentElement, systemData);\n                    showModule(moduleElement);\n                }\n            });\n        }else{\n            moduleElement = getModule(parentElement, systemData);\n            showModule(moduleElement);\n        }\n\n    };\n});\n",
    "/*!\n DataTables 1.10.12\n ©2008-2015 SpryMedia Ltd - datatables.net/license\n*/\n(function(h){\"function\"===typeof define&&define.amd?define('datatables.net',[\"jquery\"],function(D){return h(D,window,document)}):\"object\"===typeof exports?module.exports=function(D,I){D||(D=window);I||(I=\"undefined\"!==typeof window?require(\"jquery\"):require(\"jquery\")(D));return h(I,D,D.document)}:h(jQuery,window,document)})(function(h,D,I,k){function X(a){var b,c,d={};h.each(a,function(e){if((b=e.match(/^([^A-Z]+?)([A-Z])/))&&-1!==\"a aa ai ao as b fn i m o s \".indexOf(b[1]+\" \"))c=e.replace(b[0],b[2].toLowerCase()),\nd[c]=e,\"o\"===b[1]&&X(a[e])});a._hungarianMap=d}function K(a,b,c){a._hungarianMap||X(a);var d;h.each(b,function(e){d=a._hungarianMap[e];if(d!==k&&(c||b[d]===k))\"o\"===d.charAt(0)?(b[d]||(b[d]={}),h.extend(!0,b[d],b[e]),K(a[d],b[d],c)):b[d]=b[e]})}function Da(a){var b=m.defaults.oLanguage,c=a.sZeroRecords;!a.sEmptyTable&&(c&&\"No data available in table\"===b.sEmptyTable)&&E(a,a,\"sZeroRecords\",\"sEmptyTable\");!a.sLoadingRecords&&(c&&\"Loading...\"===b.sLoadingRecords)&&E(a,a,\"sZeroRecords\",\"sLoadingRecords\");\na.sInfoThousands&&(a.sThousands=a.sInfoThousands);(a=a.sDecimal)&&db(a)}function eb(a){A(a,\"ordering\",\"bSort\");A(a,\"orderMulti\",\"bSortMulti\");A(a,\"orderClasses\",\"bSortClasses\");A(a,\"orderCellsTop\",\"bSortCellsTop\");A(a,\"order\",\"aaSorting\");A(a,\"orderFixed\",\"aaSortingFixed\");A(a,\"paging\",\"bPaginate\");A(a,\"pagingType\",\"sPaginationType\");A(a,\"pageLength\",\"iDisplayLength\");A(a,\"searching\",\"bFilter\");\"boolean\"===typeof a.sScrollX&&(a.sScrollX=a.sScrollX?\"100%\":\"\");\"boolean\"===typeof a.scrollX&&(a.scrollX=\na.scrollX?\"100%\":\"\");if(a=a.aoSearchCols)for(var b=0,c=a.length;b<c;b++)a[b]&&K(m.models.oSearch,a[b])}function fb(a){A(a,\"orderable\",\"bSortable\");A(a,\"orderData\",\"aDataSort\");A(a,\"orderSequence\",\"asSorting\");A(a,\"orderDataType\",\"sortDataType\");var b=a.aDataSort;b&&!h.isArray(b)&&(a.aDataSort=[b])}function gb(a){if(!m.__browser){var b={};m.__browser=b;var c=h(\"<div/>\").css({position:\"fixed\",top:0,left:0,height:1,width:1,overflow:\"hidden\"}).append(h(\"<div/>\").css({position:\"absolute\",top:1,left:1,\nwidth:100,overflow:\"scroll\"}).append(h(\"<div/>\").css({width:\"100%\",height:10}))).appendTo(\"body\"),d=c.children(),e=d.children();b.barWidth=d[0].offsetWidth-d[0].clientWidth;b.bScrollOversize=100===e[0].offsetWidth&&100!==d[0].clientWidth;b.bScrollbarLeft=1!==Math.round(e.offset().left);b.bBounding=c[0].getBoundingClientRect().width?!0:!1;c.remove()}h.extend(a.oBrowser,m.__browser);a.oScroll.iBarWidth=m.__browser.barWidth}function hb(a,b,c,d,e,f){var g,j=!1;c!==k&&(g=c,j=!0);for(;d!==e;)a.hasOwnProperty(d)&&\n(g=j?b(g,a[d],d,a):a[d],j=!0,d+=f);return g}function Ea(a,b){var c=m.defaults.column,d=a.aoColumns.length,c=h.extend({},m.models.oColumn,c,{nTh:b?b:I.createElement(\"th\"),sTitle:c.sTitle?c.sTitle:b?b.innerHTML:\"\",aDataSort:c.aDataSort?c.aDataSort:[d],mData:c.mData?c.mData:d,idx:d});a.aoColumns.push(c);c=a.aoPreSearchCols;c[d]=h.extend({},m.models.oSearch,c[d]);ja(a,d,h(b).data())}function ja(a,b,c){var b=a.aoColumns[b],d=a.oClasses,e=h(b.nTh);if(!b.sWidthOrig){b.sWidthOrig=e.attr(\"width\")||null;var f=\n(e.attr(\"style\")||\"\").match(/width:\\s*(\\d+[pxem%]+)/);f&&(b.sWidthOrig=f[1])}c!==k&&null!==c&&(fb(c),K(m.defaults.column,c),c.mDataProp!==k&&!c.mData&&(c.mData=c.mDataProp),c.sType&&(b._sManualType=c.sType),c.className&&!c.sClass&&(c.sClass=c.className),h.extend(b,c),E(b,c,\"sWidth\",\"sWidthOrig\"),c.iDataSort!==k&&(b.aDataSort=[c.iDataSort]),E(b,c,\"aDataSort\"));var g=b.mData,j=Q(g),i=b.mRender?Q(b.mRender):null,c=function(a){return\"string\"===typeof a&&-1!==a.indexOf(\"@\")};b._bAttrSrc=h.isPlainObject(g)&&\n(c(g.sort)||c(g.type)||c(g.filter));b._setter=null;b.fnGetData=function(a,b,c){var d=j(a,b,k,c);return i&&b?i(d,b,a,c):d};b.fnSetData=function(a,b,c){return R(g)(a,b,c)};\"number\"!==typeof g&&(a._rowReadObject=!0);a.oFeatures.bSort||(b.bSortable=!1,e.addClass(d.sSortableNone));a=-1!==h.inArray(\"asc\",b.asSorting);c=-1!==h.inArray(\"desc\",b.asSorting);!b.bSortable||!a&&!c?(b.sSortingClass=d.sSortableNone,b.sSortingClassJUI=\"\"):a&&!c?(b.sSortingClass=d.sSortableAsc,b.sSortingClassJUI=d.sSortJUIAscAllowed):\n!a&&c?(b.sSortingClass=d.sSortableDesc,b.sSortingClassJUI=d.sSortJUIDescAllowed):(b.sSortingClass=d.sSortable,b.sSortingClassJUI=d.sSortJUI)}function Y(a){if(!1!==a.oFeatures.bAutoWidth){var b=a.aoColumns;Fa(a);for(var c=0,d=b.length;c<d;c++)b[c].nTh.style.width=b[c].sWidth}b=a.oScroll;(\"\"!==b.sY||\"\"!==b.sX)&&ka(a);u(a,null,\"column-sizing\",[a])}function Z(a,b){var c=la(a,\"bVisible\");return\"number\"===typeof c[b]?c[b]:null}function $(a,b){var c=la(a,\"bVisible\"),c=h.inArray(b,c);return-1!==c?c:null}\nfunction aa(a){var b=0;h.each(a.aoColumns,function(a,d){d.bVisible&&\"none\"!==h(d.nTh).css(\"display\")&&b++});return b}function la(a,b){var c=[];h.map(a.aoColumns,function(a,e){a[b]&&c.push(e)});return c}function Ga(a){var b=a.aoColumns,c=a.aoData,d=m.ext.type.detect,e,f,g,j,i,h,l,q,t;e=0;for(f=b.length;e<f;e++)if(l=b[e],t=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){g=0;for(j=d.length;g<j;g++){i=0;for(h=c.length;i<h;i++){t[i]===k&&(t[i]=B(a,i,e,\"type\"));q=d[g](t[i],a);if(!q&&\ng!==d.length-1)break;if(\"html\"===q)break}if(q){l.sType=q;break}}l.sType||(l.sType=\"string\")}}function ib(a,b,c,d){var e,f,g,j,i,n,l=a.aoColumns;if(b)for(e=b.length-1;0<=e;e--){n=b[e];var q=n.targets!==k?n.targets:n.aTargets;h.isArray(q)||(q=[q]);f=0;for(g=q.length;f<g;f++)if(\"number\"===typeof q[f]&&0<=q[f]){for(;l.length<=q[f];)Ea(a);d(q[f],n)}else if(\"number\"===typeof q[f]&&0>q[f])d(l.length+q[f],n);else if(\"string\"===typeof q[f]){j=0;for(i=l.length;j<i;j++)(\"_all\"==q[f]||h(l[j].nTh).hasClass(q[f]))&&\nd(j,n)}}if(c){e=0;for(a=c.length;e<a;e++)d(e,c[e])}}function N(a,b,c,d){var e=a.aoData.length,f=h.extend(!0,{},m.models.oRow,{src:c?\"dom\":\"data\",idx:e});f._aData=b;a.aoData.push(f);for(var g=a.aoColumns,j=0,i=g.length;j<i;j++)g[j].sType=null;a.aiDisplayMaster.push(e);b=a.rowIdFn(b);b!==k&&(a.aIds[b]=f);(c||!a.oFeatures.bDeferRender)&&Ha(a,e,c,d);return e}function ma(a,b){var c;b instanceof h||(b=h(b));return b.map(function(b,e){c=Ia(a,e);return N(a,c.data,e,c.cells)})}function B(a,b,c,d){var e=a.iDraw,\nf=a.aoColumns[c],g=a.aoData[b]._aData,j=f.sDefaultContent,i=f.fnGetData(g,d,{settings:a,row:b,col:c});if(i===k)return a.iDrawError!=e&&null===j&&(L(a,0,\"Requested unknown parameter \"+(\"function\"==typeof f.mData?\"{function}\":\"'\"+f.mData+\"'\")+\" for row \"+b+\", column \"+c,4),a.iDrawError=e),j;if((i===g||null===i)&&null!==j&&d!==k)i=j;else if(\"function\"===typeof i)return i.call(g);return null===i&&\"display\"==d?\"\":i}function jb(a,b,c,d){a.aoColumns[c].fnSetData(a.aoData[b]._aData,d,{settings:a,row:b,col:c})}\nfunction Ja(a){return h.map(a.match(/(\\\\.|[^\\.])+/g)||[\"\"],function(a){return a.replace(/\\\\./g,\".\")})}function Q(a){if(h.isPlainObject(a)){var b={};h.each(a,function(a,c){c&&(b[a]=Q(c))});return function(a,c,f,g){var j=b[c]||b._;return j!==k?j(a,c,f,g):a}}if(null===a)return function(a){return a};if(\"function\"===typeof a)return function(b,c,f,g){return a(b,c,f,g)};if(\"string\"===typeof a&&(-1!==a.indexOf(\".\")||-1!==a.indexOf(\"[\")||-1!==a.indexOf(\"(\"))){var c=function(a,b,f){var g,j;if(\"\"!==f){j=Ja(f);\nfor(var i=0,n=j.length;i<n;i++){f=j[i].match(ba);g=j[i].match(U);if(f){j[i]=j[i].replace(ba,\"\");\"\"!==j[i]&&(a=a[j[i]]);g=[];j.splice(0,i+1);j=j.join(\".\");if(h.isArray(a)){i=0;for(n=a.length;i<n;i++)g.push(c(a[i],b,j))}a=f[0].substring(1,f[0].length-1);a=\"\"===a?g:g.join(a);break}else if(g){j[i]=j[i].replace(U,\"\");a=a[j[i]]();continue}if(null===a||a[j[i]]===k)return k;a=a[j[i]]}}return a};return function(b,e){return c(b,e,a)}}return function(b){return b[a]}}function R(a){if(h.isPlainObject(a))return R(a._);\nif(null===a)return function(){};if(\"function\"===typeof a)return function(b,d,e){a(b,\"set\",d,e)};if(\"string\"===typeof a&&(-1!==a.indexOf(\".\")||-1!==a.indexOf(\"[\")||-1!==a.indexOf(\"(\"))){var b=function(a,d,e){var e=Ja(e),f;f=e[e.length-1];for(var g,j,i=0,n=e.length-1;i<n;i++){g=e[i].match(ba);j=e[i].match(U);if(g){e[i]=e[i].replace(ba,\"\");a[e[i]]=[];f=e.slice();f.splice(0,i+1);g=f.join(\".\");if(h.isArray(d)){j=0;for(n=d.length;j<n;j++)f={},b(f,d[j],g),a[e[i]].push(f)}else a[e[i]]=d;return}j&&(e[i]=e[i].replace(U,\n\"\"),a=a[e[i]](d));if(null===a[e[i]]||a[e[i]]===k)a[e[i]]={};a=a[e[i]]}if(f.match(U))a[f.replace(U,\"\")](d);else a[f.replace(ba,\"\")]=d};return function(c,d){return b(c,d,a)}}return function(b,d){b[a]=d}}function Ka(a){return G(a.aoData,\"_aData\")}function na(a){a.aoData.length=0;a.aiDisplayMaster.length=0;a.aiDisplay.length=0;a.aIds={}}function oa(a,b,c){for(var d=-1,e=0,f=a.length;e<f;e++)a[e]==b?d=e:a[e]>b&&a[e]--; -1!=d&&c===k&&a.splice(d,1)}function ca(a,b,c,d){var e=a.aoData[b],f,g=function(c,d){for(;c.childNodes.length;)c.removeChild(c.firstChild);\nc.innerHTML=B(a,b,d,\"display\")};if(\"dom\"===c||(!c||\"auto\"===c)&&\"dom\"===e.src)e._aData=Ia(a,e,d,d===k?k:e._aData).data;else{var j=e.anCells;if(j)if(d!==k)g(j[d],d);else{c=0;for(f=j.length;c<f;c++)g(j[c],c)}}e._aSortData=null;e._aFilterData=null;g=a.aoColumns;if(d!==k)g[d].sType=null;else{c=0;for(f=g.length;c<f;c++)g[c].sType=null;La(a,e)}}function Ia(a,b,c,d){var e=[],f=b.firstChild,g,j,i=0,n,l=a.aoColumns,q=a._rowReadObject,d=d!==k?d:q?{}:[],t=function(a,b){if(\"string\"===typeof a){var c=a.indexOf(\"@\");\n-1!==c&&(c=a.substring(c+1),R(a)(d,b.getAttribute(c)))}},S=function(a){if(c===k||c===i)j=l[i],n=h.trim(a.innerHTML),j&&j._bAttrSrc?(R(j.mData._)(d,n),t(j.mData.sort,a),t(j.mData.type,a),t(j.mData.filter,a)):q?(j._setter||(j._setter=R(j.mData)),j._setter(d,n)):d[i]=n;i++};if(f)for(;f;){g=f.nodeName.toUpperCase();if(\"TD\"==g||\"TH\"==g)S(f),e.push(f);f=f.nextSibling}else{e=b.anCells;f=0;for(g=e.length;f<g;f++)S(e[f])}if(b=b.firstChild?b:b.nTr)(b=b.getAttribute(\"id\"))&&R(a.rowId)(d,b);return{data:d,cells:e}}\nfunction Ha(a,b,c,d){var e=a.aoData[b],f=e._aData,g=[],j,i,n,l,q;if(null===e.nTr){j=c||I.createElement(\"tr\");e.nTr=j;e.anCells=g;j._DT_RowIndex=b;La(a,e);l=0;for(q=a.aoColumns.length;l<q;l++){n=a.aoColumns[l];i=c?d[l]:I.createElement(n.sCellType);i._DT_CellIndex={row:b,column:l};g.push(i);if((!c||n.mRender||n.mData!==l)&&(!h.isPlainObject(n.mData)||n.mData._!==l+\".display\"))i.innerHTML=B(a,b,l,\"display\");n.sClass&&(i.className+=\" \"+n.sClass);n.bVisible&&!c?j.appendChild(i):!n.bVisible&&c&&i.parentNode.removeChild(i);\nn.fnCreatedCell&&n.fnCreatedCell.call(a.oInstance,i,B(a,b,l),f,b,l)}u(a,\"aoRowCreatedCallback\",null,[j,f,b])}e.nTr.setAttribute(\"role\",\"row\")}function La(a,b){var c=b.nTr,d=b._aData;if(c){var e=a.rowIdFn(d);e&&(c.id=e);d.DT_RowClass&&(e=d.DT_RowClass.split(\" \"),b.__rowc=b.__rowc?pa(b.__rowc.concat(e)):e,h(c).removeClass(b.__rowc.join(\" \")).addClass(d.DT_RowClass));d.DT_RowAttr&&h(c).attr(d.DT_RowAttr);d.DT_RowData&&h(c).data(d.DT_RowData)}}function kb(a){var b,c,d,e,f,g=a.nTHead,j=a.nTFoot,i=0===\nh(\"th, td\",g).length,n=a.oClasses,l=a.aoColumns;i&&(e=h(\"<tr/>\").appendTo(g));b=0;for(c=l.length;b<c;b++)f=l[b],d=h(f.nTh).addClass(f.sClass),i&&d.appendTo(e),a.oFeatures.bSort&&(d.addClass(f.sSortingClass),!1!==f.bSortable&&(d.attr(\"tabindex\",a.iTabIndex).attr(\"aria-controls\",a.sTableId),Ma(a,f.nTh,b))),f.sTitle!=d[0].innerHTML&&d.html(f.sTitle),Na(a,\"header\")(a,d,f,n);i&&da(a.aoHeader,g);h(g).find(\">tr\").attr(\"role\",\"row\");h(g).find(\">tr>th, >tr>td\").addClass(n.sHeaderTH);h(j).find(\">tr>th, >tr>td\").addClass(n.sFooterTH);\nif(null!==j){a=a.aoFooter[0];b=0;for(c=a.length;b<c;b++)f=l[b],f.nTf=a[b].cell,f.sClass&&h(f.nTf).addClass(f.sClass)}}function ea(a,b,c){var d,e,f,g=[],j=[],i=a.aoColumns.length,n;if(b){c===k&&(c=!1);d=0;for(e=b.length;d<e;d++){g[d]=b[d].slice();g[d].nTr=b[d].nTr;for(f=i-1;0<=f;f--)!a.aoColumns[f].bVisible&&!c&&g[d].splice(f,1);j.push([])}d=0;for(e=g.length;d<e;d++){if(a=g[d].nTr)for(;f=a.firstChild;)a.removeChild(f);f=0;for(b=g[d].length;f<b;f++)if(n=i=1,j[d][f]===k){a.appendChild(g[d][f].cell);\nfor(j[d][f]=1;g[d+i]!==k&&g[d][f].cell==g[d+i][f].cell;)j[d+i][f]=1,i++;for(;g[d][f+n]!==k&&g[d][f].cell==g[d][f+n].cell;){for(c=0;c<i;c++)j[d+c][f+n]=1;n++}h(g[d][f].cell).attr(\"rowspan\",i).attr(\"colspan\",n)}}}}function O(a){var b=u(a,\"aoPreDrawCallback\",\"preDraw\",[a]);if(-1!==h.inArray(!1,b))C(a,!1);else{var b=[],c=0,d=a.asStripeClasses,e=d.length,f=a.oLanguage,g=a.iInitDisplayStart,j=\"ssp\"==y(a),i=a.aiDisplay;a.bDrawing=!0;g!==k&&-1!==g&&(a._iDisplayStart=j?g:g>=a.fnRecordsDisplay()?0:g,a.iInitDisplayStart=\n-1);var g=a._iDisplayStart,n=a.fnDisplayEnd();if(a.bDeferLoading)a.bDeferLoading=!1,a.iDraw++,C(a,!1);else if(j){if(!a.bDestroying&&!lb(a))return}else a.iDraw++;if(0!==i.length){f=j?a.aoData.length:n;for(j=j?0:g;j<f;j++){var l=i[j],q=a.aoData[l];null===q.nTr&&Ha(a,l);l=q.nTr;if(0!==e){var t=d[c%e];q._sRowStripe!=t&&(h(l).removeClass(q._sRowStripe).addClass(t),q._sRowStripe=t)}u(a,\"aoRowCallback\",null,[l,q._aData,c,j]);b.push(l);c++}}else c=f.sZeroRecords,1==a.iDraw&&\"ajax\"==y(a)?c=f.sLoadingRecords:\nf.sEmptyTable&&0===a.fnRecordsTotal()&&(c=f.sEmptyTable),b[0]=h(\"<tr/>\",{\"class\":e?d[0]:\"\"}).append(h(\"<td />\",{valign:\"top\",colSpan:aa(a),\"class\":a.oClasses.sRowEmpty}).html(c))[0];u(a,\"aoHeaderCallback\",\"header\",[h(a.nTHead).children(\"tr\")[0],Ka(a),g,n,i]);u(a,\"aoFooterCallback\",\"footer\",[h(a.nTFoot).children(\"tr\")[0],Ka(a),g,n,i]);d=h(a.nTBody);d.children().detach();d.append(h(b));u(a,\"aoDrawCallback\",\"draw\",[a]);a.bSorted=!1;a.bFiltered=!1;a.bDrawing=!1}}function T(a,b){var c=a.oFeatures,d=c.bFilter;\nc.bSort&&mb(a);d?fa(a,a.oPreviousSearch):a.aiDisplay=a.aiDisplayMaster.slice();!0!==b&&(a._iDisplayStart=0);a._drawHold=b;O(a);a._drawHold=!1}function nb(a){var b=a.oClasses,c=h(a.nTable),c=h(\"<div/>\").insertBefore(c),d=a.oFeatures,e=h(\"<div/>\",{id:a.sTableId+\"_wrapper\",\"class\":b.sWrapper+(a.nTFoot?\"\":\" \"+b.sNoFooter)});a.nHolding=c[0];a.nTableWrapper=e[0];a.nTableReinsertBefore=a.nTable.nextSibling;for(var f=a.sDom.split(\"\"),g,j,i,n,l,q,t=0;t<f.length;t++){g=null;j=f[t];if(\"<\"==j){i=h(\"<div/>\")[0];\nn=f[t+1];if(\"'\"==n||'\"'==n){l=\"\";for(q=2;f[t+q]!=n;)l+=f[t+q],q++;\"H\"==l?l=b.sJUIHeader:\"F\"==l&&(l=b.sJUIFooter);-1!=l.indexOf(\".\")?(n=l.split(\".\"),i.id=n[0].substr(1,n[0].length-1),i.className=n[1]):\"#\"==l.charAt(0)?i.id=l.substr(1,l.length-1):i.className=l;t+=q}e.append(i);e=h(i)}else if(\">\"==j)e=e.parent();else if(\"l\"==j&&d.bPaginate&&d.bLengthChange)g=ob(a);else if(\"f\"==j&&d.bFilter)g=pb(a);else if(\"r\"==j&&d.bProcessing)g=qb(a);else if(\"t\"==j)g=rb(a);else if(\"i\"==j&&d.bInfo)g=sb(a);else if(\"p\"==\nj&&d.bPaginate)g=tb(a);else if(0!==m.ext.feature.length){i=m.ext.feature;q=0;for(n=i.length;q<n;q++)if(j==i[q].cFeature){g=i[q].fnInit(a);break}}g&&(i=a.aanFeatures,i[j]||(i[j]=[]),i[j].push(g),e.append(g))}c.replaceWith(e);a.nHolding=null}function da(a,b){var c=h(b).children(\"tr\"),d,e,f,g,j,i,n,l,q,t;a.splice(0,a.length);f=0;for(i=c.length;f<i;f++)a.push([]);f=0;for(i=c.length;f<i;f++){d=c[f];for(e=d.firstChild;e;){if(\"TD\"==e.nodeName.toUpperCase()||\"TH\"==e.nodeName.toUpperCase()){l=1*e.getAttribute(\"colspan\");\nq=1*e.getAttribute(\"rowspan\");l=!l||0===l||1===l?1:l;q=!q||0===q||1===q?1:q;g=0;for(j=a[f];j[g];)g++;n=g;t=1===l?!0:!1;for(j=0;j<l;j++)for(g=0;g<q;g++)a[f+g][n+j]={cell:e,unique:t},a[f+g].nTr=d}e=e.nextSibling}}}function qa(a,b,c){var d=[];c||(c=a.aoHeader,b&&(c=[],da(c,b)));for(var b=0,e=c.length;b<e;b++)for(var f=0,g=c[b].length;f<g;f++)if(c[b][f].unique&&(!d[f]||!a.bSortCellsTop))d[f]=c[b][f].cell;return d}function ra(a,b,c){u(a,\"aoServerParams\",\"serverParams\",[b]);if(b&&h.isArray(b)){var d={},\ne=/(.*?)\\[\\]$/;h.each(b,function(a,b){var c=b.name.match(e);c?(c=c[0],d[c]||(d[c]=[]),d[c].push(b.value)):d[b.name]=b.value});b=d}var f,g=a.ajax,j=a.oInstance,i=function(b){u(a,null,\"xhr\",[a,b,a.jqXHR]);c(b)};if(h.isPlainObject(g)&&g.data){f=g.data;var n=h.isFunction(f)?f(b,a):f,b=h.isFunction(f)&&n?n:h.extend(!0,b,n);delete g.data}n={data:b,success:function(b){var c=b.error||b.sError;c&&L(a,0,c);a.json=b;i(b)},dataType:\"json\",cache:!1,type:a.sServerMethod,error:function(b,c){var d=u(a,null,\"xhr\",\n[a,null,a.jqXHR]);-1===h.inArray(!0,d)&&(\"parsererror\"==c?L(a,0,\"Invalid JSON response\",1):4===b.readyState&&L(a,0,\"Ajax error\",7));C(a,!1)}};a.oAjaxData=b;u(a,null,\"preXhr\",[a,b]);a.fnServerData?a.fnServerData.call(j,a.sAjaxSource,h.map(b,function(a,b){return{name:b,value:a}}),i,a):a.sAjaxSource||\"string\"===typeof g?a.jqXHR=h.ajax(h.extend(n,{url:g||a.sAjaxSource})):h.isFunction(g)?a.jqXHR=g.call(j,b,i,a):(a.jqXHR=h.ajax(h.extend(n,g)),g.data=f)}function lb(a){return a.bAjaxDataGet?(a.iDraw++,C(a,\n!0),ra(a,ub(a),function(b){vb(a,b)}),!1):!0}function ub(a){var b=a.aoColumns,c=b.length,d=a.oFeatures,e=a.oPreviousSearch,f=a.aoPreSearchCols,g,j=[],i,n,l,q=V(a);g=a._iDisplayStart;i=!1!==d.bPaginate?a._iDisplayLength:-1;var k=function(a,b){j.push({name:a,value:b})};k(\"sEcho\",a.iDraw);k(\"iColumns\",c);k(\"sColumns\",G(b,\"sName\").join(\",\"));k(\"iDisplayStart\",g);k(\"iDisplayLength\",i);var S={draw:a.iDraw,columns:[],order:[],start:g,length:i,search:{value:e.sSearch,regex:e.bRegex}};for(g=0;g<c;g++)n=b[g],\nl=f[g],i=\"function\"==typeof n.mData?\"function\":n.mData,S.columns.push({data:i,name:n.sName,searchable:n.bSearchable,orderable:n.bSortable,search:{value:l.sSearch,regex:l.bRegex}}),k(\"mDataProp_\"+g,i),d.bFilter&&(k(\"sSearch_\"+g,l.sSearch),k(\"bRegex_\"+g,l.bRegex),k(\"bSearchable_\"+g,n.bSearchable)),d.bSort&&k(\"bSortable_\"+g,n.bSortable);d.bFilter&&(k(\"sSearch\",e.sSearch),k(\"bRegex\",e.bRegex));d.bSort&&(h.each(q,function(a,b){S.order.push({column:b.col,dir:b.dir});k(\"iSortCol_\"+a,b.col);k(\"sSortDir_\"+\na,b.dir)}),k(\"iSortingCols\",q.length));b=m.ext.legacy.ajax;return null===b?a.sAjaxSource?j:S:b?j:S}function vb(a,b){var c=sa(a,b),d=b.sEcho!==k?b.sEcho:b.draw,e=b.iTotalRecords!==k?b.iTotalRecords:b.recordsTotal,f=b.iTotalDisplayRecords!==k?b.iTotalDisplayRecords:b.recordsFiltered;if(d){if(1*d<a.iDraw)return;a.iDraw=1*d}na(a);a._iRecordsTotal=parseInt(e,10);a._iRecordsDisplay=parseInt(f,10);d=0;for(e=c.length;d<e;d++)N(a,c[d]);a.aiDisplay=a.aiDisplayMaster.slice();a.bAjaxDataGet=!1;O(a);a._bInitComplete||\nta(a,b);a.bAjaxDataGet=!0;C(a,!1)}function sa(a,b){var c=h.isPlainObject(a.ajax)&&a.ajax.dataSrc!==k?a.ajax.dataSrc:a.sAjaxDataProp;return\"data\"===c?b.aaData||b[c]:\"\"!==c?Q(c)(b):b}function pb(a){var b=a.oClasses,c=a.sTableId,d=a.oLanguage,e=a.oPreviousSearch,f=a.aanFeatures,g='<input type=\"search\" class=\"'+b.sFilterInput+'\"/>',j=d.sSearch,j=j.match(/_INPUT_/)?j.replace(\"_INPUT_\",g):j+g,b=h(\"<div/>\",{id:!f.f?c+\"_filter\":null,\"class\":b.sFilter}).append(h(\"<label/>\").append(j)),f=function(){var b=!this.value?\n\"\":this.value;b!=e.sSearch&&(fa(a,{sSearch:b,bRegex:e.bRegex,bSmart:e.bSmart,bCaseInsensitive:e.bCaseInsensitive}),a._iDisplayStart=0,O(a))},g=null!==a.searchDelay?a.searchDelay:\"ssp\"===y(a)?400:0,i=h(\"input\",b).val(e.sSearch).attr(\"placeholder\",d.sSearchPlaceholder).bind(\"keyup.DT search.DT input.DT paste.DT cut.DT\",g?Oa(f,g):f).bind(\"keypress.DT\",function(a){if(13==a.keyCode)return!1}).attr(\"aria-controls\",c);h(a.nTable).on(\"search.dt.DT\",function(b,c){if(a===c)try{i[0]!==I.activeElement&&i.val(e.sSearch)}catch(d){}});\nreturn b[0]}function fa(a,b,c){var d=a.oPreviousSearch,e=a.aoPreSearchCols,f=function(a){d.sSearch=a.sSearch;d.bRegex=a.bRegex;d.bSmart=a.bSmart;d.bCaseInsensitive=a.bCaseInsensitive};Ga(a);if(\"ssp\"!=y(a)){wb(a,b.sSearch,c,b.bEscapeRegex!==k?!b.bEscapeRegex:b.bRegex,b.bSmart,b.bCaseInsensitive);f(b);for(b=0;b<e.length;b++)xb(a,e[b].sSearch,b,e[b].bEscapeRegex!==k?!e[b].bEscapeRegex:e[b].bRegex,e[b].bSmart,e[b].bCaseInsensitive);yb(a)}else f(b);a.bFiltered=!0;u(a,null,\"search\",[a])}function yb(a){for(var b=\nm.ext.search,c=a.aiDisplay,d,e,f=0,g=b.length;f<g;f++){for(var j=[],i=0,n=c.length;i<n;i++)e=c[i],d=a.aoData[e],b[f](a,d._aFilterData,e,d._aData,i)&&j.push(e);c.length=0;h.merge(c,j)}}function xb(a,b,c,d,e,f){if(\"\"!==b)for(var g=a.aiDisplay,d=Pa(b,d,e,f),e=g.length-1;0<=e;e--)b=a.aoData[g[e]]._aFilterData[c],d.test(b)||g.splice(e,1)}function wb(a,b,c,d,e,f){var d=Pa(b,d,e,f),e=a.oPreviousSearch.sSearch,f=a.aiDisplayMaster,g;0!==m.ext.search.length&&(c=!0);g=zb(a);if(0>=b.length)a.aiDisplay=f.slice();\nelse{if(g||c||e.length>b.length||0!==b.indexOf(e)||a.bSorted)a.aiDisplay=f.slice();b=a.aiDisplay;for(c=b.length-1;0<=c;c--)d.test(a.aoData[b[c]]._sFilterRow)||b.splice(c,1)}}function Pa(a,b,c,d){a=b?a:Qa(a);c&&(a=\"^(?=.*?\"+h.map(a.match(/\"[^\"]+\"|[^ ]+/g)||[\"\"],function(a){if('\"'===a.charAt(0))var b=a.match(/^\"(.*)\"$/),a=b?b[1]:a;return a.replace('\"',\"\")}).join(\")(?=.*?\")+\").*$\");return RegExp(a,d?\"i\":\"\")}function zb(a){var b=a.aoColumns,c,d,e,f,g,j,i,h,l=m.ext.type.search;c=!1;d=0;for(f=a.aoData.length;d<\nf;d++)if(h=a.aoData[d],!h._aFilterData){j=[];e=0;for(g=b.length;e<g;e++)c=b[e],c.bSearchable?(i=B(a,d,e,\"filter\"),l[c.sType]&&(i=l[c.sType](i)),null===i&&(i=\"\"),\"string\"!==typeof i&&i.toString&&(i=i.toString())):i=\"\",i.indexOf&&-1!==i.indexOf(\"&\")&&(ua.innerHTML=i,i=Zb?ua.textContent:ua.innerText),i.replace&&(i=i.replace(/[\\r\\n]/g,\"\")),j.push(i);h._aFilterData=j;h._sFilterRow=j.join(\"  \");c=!0}return c}function Ab(a){return{search:a.sSearch,smart:a.bSmart,regex:a.bRegex,caseInsensitive:a.bCaseInsensitive}}\nfunction Bb(a){return{sSearch:a.search,bSmart:a.smart,bRegex:a.regex,bCaseInsensitive:a.caseInsensitive}}function sb(a){var b=a.sTableId,c=a.aanFeatures.i,d=h(\"<div/>\",{\"class\":a.oClasses.sInfo,id:!c?b+\"_info\":null});c||(a.aoDrawCallback.push({fn:Cb,sName:\"information\"}),d.attr(\"role\",\"status\").attr(\"aria-live\",\"polite\"),h(a.nTable).attr(\"aria-describedby\",b+\"_info\"));return d[0]}function Cb(a){var b=a.aanFeatures.i;if(0!==b.length){var c=a.oLanguage,d=a._iDisplayStart+1,e=a.fnDisplayEnd(),f=a.fnRecordsTotal(),\ng=a.fnRecordsDisplay(),j=g?c.sInfo:c.sInfoEmpty;g!==f&&(j+=\" \"+c.sInfoFiltered);j+=c.sInfoPostFix;j=Db(a,j);c=c.fnInfoCallback;null!==c&&(j=c.call(a.oInstance,a,d,e,f,g,j));h(b).html(j)}}function Db(a,b){var c=a.fnFormatNumber,d=a._iDisplayStart+1,e=a._iDisplayLength,f=a.fnRecordsDisplay(),g=-1===e;return b.replace(/_START_/g,c.call(a,d)).replace(/_END_/g,c.call(a,a.fnDisplayEnd())).replace(/_MAX_/g,c.call(a,a.fnRecordsTotal())).replace(/_TOTAL_/g,c.call(a,f)).replace(/_PAGE_/g,c.call(a,g?1:Math.ceil(d/\ne))).replace(/_PAGES_/g,c.call(a,g?1:Math.ceil(f/e)))}function ga(a){var b,c,d=a.iInitDisplayStart,e=a.aoColumns,f;c=a.oFeatures;var g=a.bDeferLoading;if(a.bInitialised){nb(a);kb(a);ea(a,a.aoHeader);ea(a,a.aoFooter);C(a,!0);c.bAutoWidth&&Fa(a);b=0;for(c=e.length;b<c;b++)f=e[b],f.sWidth&&(f.nTh.style.width=x(f.sWidth));u(a,null,\"preInit\",[a]);T(a);e=y(a);if(\"ssp\"!=e||g)\"ajax\"==e?ra(a,[],function(c){var f=sa(a,c);for(b=0;b<f.length;b++)N(a,f[b]);a.iInitDisplayStart=d;T(a);C(a,!1);ta(a,c)},a):(C(a,!1),\nta(a))}else setTimeout(function(){ga(a)},200)}function ta(a,b){a._bInitComplete=!0;(b||a.oInit.aaData)&&Y(a);u(a,null,\"plugin-init\",[a,b]);u(a,\"aoInitComplete\",\"init\",[a,b])}function Ra(a,b){var c=parseInt(b,10);a._iDisplayLength=c;Sa(a);u(a,null,\"length\",[a,c])}function ob(a){for(var b=a.oClasses,c=a.sTableId,d=a.aLengthMenu,e=h.isArray(d[0]),f=e?d[0]:d,d=e?d[1]:d,e=h(\"<select/>\",{name:c+\"_length\",\"aria-controls\":c,\"class\":b.sLengthSelect}),g=0,j=f.length;g<j;g++)e[0][g]=new Option(d[g],f[g]);var i=\nh(\"<div><label/></div>\").addClass(b.sLength);a.aanFeatures.l||(i[0].id=c+\"_length\");i.children().append(a.oLanguage.sLengthMenu.replace(\"_MENU_\",e[0].outerHTML));h(\"select\",i).val(a._iDisplayLength).bind(\"change.DT\",function(){Ra(a,h(this).val());O(a)});h(a.nTable).bind(\"length.dt.DT\",function(b,c,d){a===c&&h(\"select\",i).val(d)});return i[0]}function tb(a){var b=a.sPaginationType,c=m.ext.pager[b],d=\"function\"===typeof c,e=function(a){O(a)},b=h(\"<div/>\").addClass(a.oClasses.sPaging+b)[0],f=a.aanFeatures;\nd||c.fnInit(a,b,e);f.p||(b.id=a.sTableId+\"_paginate\",a.aoDrawCallback.push({fn:function(a){if(d){var b=a._iDisplayStart,i=a._iDisplayLength,h=a.fnRecordsDisplay(),l=-1===i,b=l?0:Math.ceil(b/i),i=l?1:Math.ceil(h/i),h=c(b,i),k,l=0;for(k=f.p.length;l<k;l++)Na(a,\"pageButton\")(a,f.p[l],l,h,b,i)}else c.fnUpdate(a,e)},sName:\"pagination\"}));return b}function Ta(a,b,c){var d=a._iDisplayStart,e=a._iDisplayLength,f=a.fnRecordsDisplay();0===f||-1===e?d=0:\"number\"===typeof b?(d=b*e,d>f&&(d=0)):\"first\"==b?d=0:\n\"previous\"==b?(d=0<=e?d-e:0,0>d&&(d=0)):\"next\"==b?d+e<f&&(d+=e):\"last\"==b?d=Math.floor((f-1)/e)*e:L(a,0,\"Unknown paging action: \"+b,5);b=a._iDisplayStart!==d;a._iDisplayStart=d;b&&(u(a,null,\"page\",[a]),c&&O(a));return b}function qb(a){return h(\"<div/>\",{id:!a.aanFeatures.r?a.sTableId+\"_processing\":null,\"class\":a.oClasses.sProcessing}).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]}function C(a,b){a.oFeatures.bProcessing&&h(a.aanFeatures.r).css(\"display\",b?\"block\":\"none\");u(a,null,\"processing\",\n[a,b])}function rb(a){var b=h(a.nTable);b.attr(\"role\",\"grid\");var c=a.oScroll;if(\"\"===c.sX&&\"\"===c.sY)return a.nTable;var d=c.sX,e=c.sY,f=a.oClasses,g=b.children(\"caption\"),j=g.length?g[0]._captionSide:null,i=h(b[0].cloneNode(!1)),n=h(b[0].cloneNode(!1)),l=b.children(\"tfoot\");l.length||(l=null);i=h(\"<div/>\",{\"class\":f.sScrollWrapper}).append(h(\"<div/>\",{\"class\":f.sScrollHead}).css({overflow:\"hidden\",position:\"relative\",border:0,width:d?!d?null:x(d):\"100%\"}).append(h(\"<div/>\",{\"class\":f.sScrollHeadInner}).css({\"box-sizing\":\"content-box\",\nwidth:c.sXInner||\"100%\"}).append(i.removeAttr(\"id\").css(\"margin-left\",0).append(\"top\"===j?g:null).append(b.children(\"thead\"))))).append(h(\"<div/>\",{\"class\":f.sScrollBody}).css({position:\"relative\",overflow:\"auto\",width:!d?null:x(d)}).append(b));l&&i.append(h(\"<div/>\",{\"class\":f.sScrollFoot}).css({overflow:\"hidden\",border:0,width:d?!d?null:x(d):\"100%\"}).append(h(\"<div/>\",{\"class\":f.sScrollFootInner}).append(n.removeAttr(\"id\").css(\"margin-left\",0).append(\"bottom\"===j?g:null).append(b.children(\"tfoot\")))));\nvar b=i.children(),k=b[0],f=b[1],t=l?b[2]:null;if(d)h(f).on(\"scroll.DT\",function(){var a=this.scrollLeft;k.scrollLeft=a;l&&(t.scrollLeft=a)});h(f).css(e&&c.bCollapse?\"max-height\":\"height\",e);a.nScrollHead=k;a.nScrollBody=f;a.nScrollFoot=t;a.aoDrawCallback.push({fn:ka,sName:\"scrolling\"});return i[0]}function ka(a){var b=a.oScroll,c=b.sX,d=b.sXInner,e=b.sY,b=b.iBarWidth,f=h(a.nScrollHead),g=f[0].style,j=f.children(\"div\"),i=j[0].style,n=j.children(\"table\"),j=a.nScrollBody,l=h(j),q=j.style,t=h(a.nScrollFoot).children(\"div\"),\nm=t.children(\"table\"),o=h(a.nTHead),F=h(a.nTable),p=F[0],r=p.style,u=a.nTFoot?h(a.nTFoot):null,Eb=a.oBrowser,Ua=Eb.bScrollOversize,s=G(a.aoColumns,\"nTh\"),P,v,w,y,z=[],A=[],B=[],C=[],D,E=function(a){a=a.style;a.paddingTop=\"0\";a.paddingBottom=\"0\";a.borderTopWidth=\"0\";a.borderBottomWidth=\"0\";a.height=0};v=j.scrollHeight>j.clientHeight;if(a.scrollBarVis!==v&&a.scrollBarVis!==k)a.scrollBarVis=v,Y(a);else{a.scrollBarVis=v;F.children(\"thead, tfoot\").remove();u&&(w=u.clone().prependTo(F),P=u.find(\"tr\"),w=\nw.find(\"tr\"));y=o.clone().prependTo(F);o=o.find(\"tr\");v=y.find(\"tr\");y.find(\"th, td\").removeAttr(\"tabindex\");c||(q.width=\"100%\",f[0].style.width=\"100%\");h.each(qa(a,y),function(b,c){D=Z(a,b);c.style.width=a.aoColumns[D].sWidth});u&&J(function(a){a.style.width=\"\"},w);f=F.outerWidth();if(\"\"===c){r.width=\"100%\";if(Ua&&(F.find(\"tbody\").height()>j.offsetHeight||\"scroll\"==l.css(\"overflow-y\")))r.width=x(F.outerWidth()-b);f=F.outerWidth()}else\"\"!==d&&(r.width=x(d),f=F.outerWidth());J(E,v);J(function(a){B.push(a.innerHTML);\nz.push(x(h(a).css(\"width\")))},v);J(function(a,b){if(h.inArray(a,s)!==-1)a.style.width=z[b]},o);h(v).height(0);u&&(J(E,w),J(function(a){C.push(a.innerHTML);A.push(x(h(a).css(\"width\")))},w),J(function(a,b){a.style.width=A[b]},P),h(w).height(0));J(function(a,b){a.innerHTML='<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+B[b]+\"</div>\";a.style.width=z[b]},v);u&&J(function(a,b){a.innerHTML='<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+C[b]+\"</div>\";a.style.width=\nA[b]},w);if(F.outerWidth()<f){P=j.scrollHeight>j.offsetHeight||\"scroll\"==l.css(\"overflow-y\")?f+b:f;if(Ua&&(j.scrollHeight>j.offsetHeight||\"scroll\"==l.css(\"overflow-y\")))r.width=x(P-b);(\"\"===c||\"\"!==d)&&L(a,1,\"Possible column misalignment\",6)}else P=\"100%\";q.width=x(P);g.width=x(P);u&&(a.nScrollFoot.style.width=x(P));!e&&Ua&&(q.height=x(p.offsetHeight+b));c=F.outerWidth();n[0].style.width=x(c);i.width=x(c);d=F.height()>j.clientHeight||\"scroll\"==l.css(\"overflow-y\");e=\"padding\"+(Eb.bScrollbarLeft?\"Left\":\n\"Right\");i[e]=d?b+\"px\":\"0px\";u&&(m[0].style.width=x(c),t[0].style.width=x(c),t[0].style[e]=d?b+\"px\":\"0px\");F.children(\"colgroup\").insertBefore(F.children(\"thead\"));l.scroll();if((a.bSorted||a.bFiltered)&&!a._drawHold)j.scrollTop=0}}function J(a,b,c){for(var d=0,e=0,f=b.length,g,j;e<f;){g=b[e].firstChild;for(j=c?c[e].firstChild:null;g;)1===g.nodeType&&(c?a(g,j,d):a(g,d),d++),g=g.nextSibling,j=c?j.nextSibling:null;e++}}function Fa(a){var b=a.nTable,c=a.aoColumns,d=a.oScroll,e=d.sY,f=d.sX,g=d.sXInner,\nj=c.length,i=la(a,\"bVisible\"),n=h(\"th\",a.nTHead),l=b.getAttribute(\"width\"),k=b.parentNode,t=!1,m,o,p=a.oBrowser,d=p.bScrollOversize;(m=b.style.width)&&-1!==m.indexOf(\"%\")&&(l=m);for(m=0;m<i.length;m++)o=c[i[m]],null!==o.sWidth&&(o.sWidth=Fb(o.sWidthOrig,k),t=!0);if(d||!t&&!f&&!e&&j==aa(a)&&j==n.length)for(m=0;m<j;m++)i=Z(a,m),null!==i&&(c[i].sWidth=x(n.eq(m).width()));else{j=h(b).clone().css(\"visibility\",\"hidden\").removeAttr(\"id\");j.find(\"tbody tr\").remove();var r=h(\"<tr/>\").appendTo(j.find(\"tbody\"));\nj.find(\"thead, tfoot\").remove();j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());j.find(\"tfoot th, tfoot td\").css(\"width\",\"\");n=qa(a,j.find(\"thead\")[0]);for(m=0;m<i.length;m++)o=c[i[m]],n[m].style.width=null!==o.sWidthOrig&&\"\"!==o.sWidthOrig?x(o.sWidthOrig):\"\",o.sWidthOrig&&f&&h(n[m]).append(h(\"<div/>\").css({width:o.sWidthOrig,margin:0,padding:0,border:0,height:1}));if(a.aoData.length)for(m=0;m<i.length;m++)t=i[m],o=c[t],h(Gb(a,t)).clone(!1).append(o.sContentPadding).appendTo(r);h(\"[name]\",\nj).removeAttr(\"name\");o=h(\"<div/>\").css(f||e?{position:\"absolute\",top:0,left:0,height:1,right:0,overflow:\"hidden\"}:{}).append(j).appendTo(k);f&&g?j.width(g):f?(j.css(\"width\",\"auto\"),j.removeAttr(\"width\"),j.width()<k.clientWidth&&l&&j.width(k.clientWidth)):e?j.width(k.clientWidth):l&&j.width(l);for(m=e=0;m<i.length;m++)k=h(n[m]),g=k.outerWidth()-k.width(),k=p.bBounding?Math.ceil(n[m].getBoundingClientRect().width):k.outerWidth(),e+=k,c[i[m]].sWidth=x(k-g);b.style.width=x(e);o.remove()}l&&(b.style.width=\nx(l));if((l||f)&&!a._reszEvt)b=function(){h(D).bind(\"resize.DT-\"+a.sInstance,Oa(function(){Y(a)}))},d?setTimeout(b,1E3):b(),a._reszEvt=!0}function Fb(a,b){if(!a)return 0;var c=h(\"<div/>\").css(\"width\",x(a)).appendTo(b||I.body),d=c[0].offsetWidth;c.remove();return d}function Gb(a,b){var c=Hb(a,b);if(0>c)return null;var d=a.aoData[c];return!d.nTr?h(\"<td/>\").html(B(a,c,b,\"display\"))[0]:d.anCells[b]}function Hb(a,b){for(var c,d=-1,e=-1,f=0,g=a.aoData.length;f<g;f++)c=B(a,f,b,\"display\")+\"\",c=c.replace($b,\n\"\"),c=c.replace(/&nbsp;/g,\" \"),c.length>d&&(d=c.length,e=f);return e}function x(a){return null===a?\"0px\":\"number\"==typeof a?0>a?\"0px\":a+\"px\":a.match(/\\d$/)?a+\"px\":a}function V(a){var b,c,d=[],e=a.aoColumns,f,g,j,i;b=a.aaSortingFixed;c=h.isPlainObject(b);var n=[];f=function(a){a.length&&!h.isArray(a[0])?n.push(a):h.merge(n,a)};h.isArray(b)&&f(b);c&&b.pre&&f(b.pre);f(a.aaSorting);c&&b.post&&f(b.post);for(a=0;a<n.length;a++){i=n[a][0];f=e[i].aDataSort;b=0;for(c=f.length;b<c;b++)g=f[b],j=e[g].sType||\n\"string\",n[a]._idx===k&&(n[a]._idx=h.inArray(n[a][1],e[g].asSorting)),d.push({src:i,col:g,dir:n[a][1],index:n[a]._idx,type:j,formatter:m.ext.type.order[j+\"-pre\"]})}return d}function mb(a){var b,c,d=[],e=m.ext.type.order,f=a.aoData,g=0,j,i=a.aiDisplayMaster,h;Ga(a);h=V(a);b=0;for(c=h.length;b<c;b++)j=h[b],j.formatter&&g++,Ib(a,j.col);if(\"ssp\"!=y(a)&&0!==h.length){b=0;for(c=i.length;b<c;b++)d[i[b]]=b;g===h.length?i.sort(function(a,b){var c,e,g,j,i=h.length,k=f[a]._aSortData,m=f[b]._aSortData;for(g=\n0;g<i;g++)if(j=h[g],c=k[j.col],e=m[j.col],c=c<e?-1:c>e?1:0,0!==c)return\"asc\"===j.dir?c:-c;c=d[a];e=d[b];return c<e?-1:c>e?1:0}):i.sort(function(a,b){var c,g,j,i,k=h.length,m=f[a]._aSortData,p=f[b]._aSortData;for(j=0;j<k;j++)if(i=h[j],c=m[i.col],g=p[i.col],i=e[i.type+\"-\"+i.dir]||e[\"string-\"+i.dir],c=i(c,g),0!==c)return c;c=d[a];g=d[b];return c<g?-1:c>g?1:0})}a.bSorted=!0}function Jb(a){for(var b,c,d=a.aoColumns,e=V(a),a=a.oLanguage.oAria,f=0,g=d.length;f<g;f++){c=d[f];var j=c.asSorting;b=c.sTitle.replace(/<.*?>/g,\n\"\");var i=c.nTh;i.removeAttribute(\"aria-sort\");c.bSortable&&(0<e.length&&e[0].col==f?(i.setAttribute(\"aria-sort\",\"asc\"==e[0].dir?\"ascending\":\"descending\"),c=j[e[0].index+1]||j[0]):c=j[0],b+=\"asc\"===c?a.sSortAscending:a.sSortDescending);i.setAttribute(\"aria-label\",b)}}function Va(a,b,c,d){var e=a.aaSorting,f=a.aoColumns[b].asSorting,g=function(a,b){var c=a._idx;c===k&&(c=h.inArray(a[1],f));return c+1<f.length?c+1:b?null:0};\"number\"===typeof e[0]&&(e=a.aaSorting=[e]);c&&a.oFeatures.bSortMulti?(c=h.inArray(b,\nG(e,\"0\")),-1!==c?(b=g(e[c],!0),null===b&&1===e.length&&(b=0),null===b?e.splice(c,1):(e[c][1]=f[b],e[c]._idx=b)):(e.push([b,f[0],0]),e[e.length-1]._idx=0)):e.length&&e[0][0]==b?(b=g(e[0]),e.length=1,e[0][1]=f[b],e[0]._idx=b):(e.length=0,e.push([b,f[0]]),e[0]._idx=0);T(a);\"function\"==typeof d&&d(a)}function Ma(a,b,c,d){var e=a.aoColumns[c];Wa(b,{},function(b){!1!==e.bSortable&&(a.oFeatures.bProcessing?(C(a,!0),setTimeout(function(){Va(a,c,b.shiftKey,d);\"ssp\"!==y(a)&&C(a,!1)},0)):Va(a,c,b.shiftKey,d))})}\nfunction va(a){var b=a.aLastSort,c=a.oClasses.sSortColumn,d=V(a),e=a.oFeatures,f,g;if(e.bSort&&e.bSortClasses){e=0;for(f=b.length;e<f;e++)g=b[e].src,h(G(a.aoData,\"anCells\",g)).removeClass(c+(2>e?e+1:3));e=0;for(f=d.length;e<f;e++)g=d[e].src,h(G(a.aoData,\"anCells\",g)).addClass(c+(2>e?e+1:3))}a.aLastSort=d}function Ib(a,b){var c=a.aoColumns[b],d=m.ext.order[c.sSortDataType],e;d&&(e=d.call(a.oInstance,a,b,$(a,b)));for(var f,g=m.ext.type.order[c.sType+\"-pre\"],j=0,i=a.aoData.length;j<i;j++)if(c=a.aoData[j],\nc._aSortData||(c._aSortData=[]),!c._aSortData[b]||d)f=d?e[j]:B(a,j,b,\"sort\"),c._aSortData[b]=g?g(f):f}function wa(a){if(a.oFeatures.bStateSave&&!a.bDestroying){var b={time:+new Date,start:a._iDisplayStart,length:a._iDisplayLength,order:h.extend(!0,[],a.aaSorting),search:Ab(a.oPreviousSearch),columns:h.map(a.aoColumns,function(b,d){return{visible:b.bVisible,search:Ab(a.aoPreSearchCols[d])}})};u(a,\"aoStateSaveParams\",\"stateSaveParams\",[a,b]);a.oSavedState=b;a.fnStateSaveCallback.call(a.oInstance,a,\nb)}}function Kb(a){var b,c,d=a.aoColumns;if(a.oFeatures.bStateSave){var e=a.fnStateLoadCallback.call(a.oInstance,a);if(e&&e.time&&(b=u(a,\"aoStateLoadParams\",\"stateLoadParams\",[a,e]),-1===h.inArray(!1,b)&&(b=a.iStateDuration,!(0<b&&e.time<+new Date-1E3*b)&&d.length===e.columns.length))){a.oLoadedState=h.extend(!0,{},e);e.start!==k&&(a._iDisplayStart=e.start,a.iInitDisplayStart=e.start);e.length!==k&&(a._iDisplayLength=e.length);e.order!==k&&(a.aaSorting=[],h.each(e.order,function(b,c){a.aaSorting.push(c[0]>=\nd.length?[0,c[1]]:c)}));e.search!==k&&h.extend(a.oPreviousSearch,Bb(e.search));b=0;for(c=e.columns.length;b<c;b++){var f=e.columns[b];f.visible!==k&&(d[b].bVisible=f.visible);f.search!==k&&h.extend(a.aoPreSearchCols[b],Bb(f.search))}u(a,\"aoStateLoaded\",\"stateLoaded\",[a,e])}}}function xa(a){var b=m.settings,a=h.inArray(a,G(b,\"nTable\"));return-1!==a?b[a]:null}function L(a,b,c,d){c=\"DataTables warning: \"+(a?\"table id=\"+a.sTableId+\" - \":\"\")+c;d&&(c+=\". For more information about this error, please see http://datatables.net/tn/\"+\nd);if(b)D.console&&console.log&&console.log(c);else if(b=m.ext,b=b.sErrMode||b.errMode,a&&u(a,null,\"error\",[a,d,c]),\"alert\"==b)alert(c);else{if(\"throw\"==b)throw Error(c);\"function\"==typeof b&&b(a,d,c)}}function E(a,b,c,d){h.isArray(c)?h.each(c,function(c,d){h.isArray(d)?E(a,b,d[0],d[1]):E(a,b,d)}):(d===k&&(d=c),b[c]!==k&&(a[d]=b[c]))}function Lb(a,b,c){var d,e;for(e in b)b.hasOwnProperty(e)&&(d=b[e],h.isPlainObject(d)?(h.isPlainObject(a[e])||(a[e]={}),h.extend(!0,a[e],d)):a[e]=c&&\"data\"!==e&&\"aaData\"!==\ne&&h.isArray(d)?d.slice():d);return a}function Wa(a,b,c){h(a).bind(\"click.DT\",b,function(b){a.blur();c(b)}).bind(\"keypress.DT\",b,function(a){13===a.which&&(a.preventDefault(),c(a))}).bind(\"selectstart.DT\",function(){return!1})}function z(a,b,c,d){c&&a[b].push({fn:c,sName:d})}function u(a,b,c,d){var e=[];b&&(e=h.map(a[b].slice().reverse(),function(b){return b.fn.apply(a.oInstance,d)}));null!==c&&(b=h.Event(c+\".dt\"),h(a.nTable).trigger(b,d),e.push(b.result));return e}function Sa(a){var b=a._iDisplayStart,\nc=a.fnDisplayEnd(),d=a._iDisplayLength;b>=c&&(b=c-d);b-=b%d;if(-1===d||0>b)b=0;a._iDisplayStart=b}function Na(a,b){var c=a.renderer,d=m.ext.renderer[b];return h.isPlainObject(c)&&c[b]?d[c[b]]||d._:\"string\"===typeof c?d[c]||d._:d._}function y(a){return a.oFeatures.bServerSide?\"ssp\":a.ajax||a.sAjaxSource?\"ajax\":\"dom\"}function ya(a,b){var c=[],c=Mb.numbers_length,d=Math.floor(c/2);b<=c?c=W(0,b):a<=d?(c=W(0,c-2),c.push(\"ellipsis\"),c.push(b-1)):(a>=b-1-d?c=W(b-(c-2),b):(c=W(a-d+2,a+d-1),c.push(\"ellipsis\"),\nc.push(b-1)),c.splice(0,0,\"ellipsis\"),c.splice(0,0,0));c.DT_el=\"span\";return c}function db(a){h.each({num:function(b){return za(b,a)},\"num-fmt\":function(b){return za(b,a,Xa)},\"html-num\":function(b){return za(b,a,Aa)},\"html-num-fmt\":function(b){return za(b,a,Aa,Xa)}},function(b,c){v.type.order[b+a+\"-pre\"]=c;b.match(/^html\\-/)&&(v.type.search[b+a]=v.type.search.html)})}function Nb(a){return function(){var b=[xa(this[m.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return m.ext.internal[a].apply(this,\nb)}}var m=function(a){this.$=function(a,b){return this.api(!0).$(a,b)};this._=function(a,b){return this.api(!0).rows(a,b).data()};this.api=function(a){return a?new r(xa(this[v.iApiIndex])):new r(this)};this.fnAddData=function(a,b){var c=this.api(!0),d=h.isArray(a)&&(h.isArray(a[0])||h.isPlainObject(a[0]))?c.rows.add(a):c.row.add(a);(b===k||b)&&c.draw();return d.flatten().toArray()};this.fnAdjustColumnSizing=function(a){var b=this.api(!0).columns.adjust(),c=b.settings()[0],d=c.oScroll;a===k||a?b.draw(!1):\n(\"\"!==d.sX||\"\"!==d.sY)&&ka(c)};this.fnClearTable=function(a){var b=this.api(!0).clear();(a===k||a)&&b.draw()};this.fnClose=function(a){this.api(!0).row(a).child.hide()};this.fnDeleteRow=function(a,b,c){var d=this.api(!0),a=d.rows(a),e=a.settings()[0],h=e.aoData[a[0][0]];a.remove();b&&b.call(this,e,h);(c===k||c)&&d.draw();return h};this.fnDestroy=function(a){this.api(!0).destroy(a)};this.fnDraw=function(a){this.api(!0).draw(a)};this.fnFilter=function(a,b,c,d,e,h){e=this.api(!0);null===b||b===k?e.search(a,\nc,d,h):e.column(b).search(a,c,d,h);e.draw()};this.fnGetData=function(a,b){var c=this.api(!0);if(a!==k){var d=a.nodeName?a.nodeName.toLowerCase():\"\";return b!==k||\"td\"==d||\"th\"==d?c.cell(a,b).data():c.row(a).data()||null}return c.data().toArray()};this.fnGetNodes=function(a){var b=this.api(!0);return a!==k?b.row(a).node():b.rows().nodes().flatten().toArray()};this.fnGetPosition=function(a){var b=this.api(!0),c=a.nodeName.toUpperCase();return\"TR\"==c?b.row(a).index():\"TD\"==c||\"TH\"==c?(a=b.cell(a).index(),\n[a.row,a.columnVisible,a.column]):null};this.fnIsOpen=function(a){return this.api(!0).row(a).child.isShown()};this.fnOpen=function(a,b,c){return this.api(!0).row(a).child(b,c).show().child()[0]};this.fnPageChange=function(a,b){var c=this.api(!0).page(a);(b===k||b)&&c.draw(!1)};this.fnSetColumnVis=function(a,b,c){a=this.api(!0).column(a).visible(b);(c===k||c)&&a.columns.adjust().draw()};this.fnSettings=function(){return xa(this[v.iApiIndex])};this.fnSort=function(a){this.api(!0).order(a).draw()};this.fnSortListener=\nfunction(a,b,c){this.api(!0).order.listener(a,b,c)};this.fnUpdate=function(a,b,c,d,e){var h=this.api(!0);c===k||null===c?h.row(b).data(a):h.cell(b,c).data(a);(e===k||e)&&h.columns.adjust();(d===k||d)&&h.draw();return 0};this.fnVersionCheck=v.fnVersionCheck;var b=this,c=a===k,d=this.length;c&&(a={});this.oApi=this.internal=v.internal;for(var e in m.ext.internal)e&&(this[e]=Nb(e));this.each(function(){var e={},e=1<d?Lb(e,a,!0):a,g=0,j,i=this.getAttribute(\"id\"),n=!1,l=m.defaults,q=h(this);if(\"table\"!=\nthis.nodeName.toLowerCase())L(null,0,\"Non-table node initialisation (\"+this.nodeName+\")\",2);else{eb(l);fb(l.column);K(l,l,!0);K(l.column,l.column,!0);K(l,h.extend(e,q.data()));var t=m.settings,g=0;for(j=t.length;g<j;g++){var p=t[g];if(p.nTable==this||p.nTHead.parentNode==this||p.nTFoot&&p.nTFoot.parentNode==this){g=e.bRetrieve!==k?e.bRetrieve:l.bRetrieve;if(c||g)return p.oInstance;if(e.bDestroy!==k?e.bDestroy:l.bDestroy){p.oInstance.fnDestroy();break}else{L(p,0,\"Cannot reinitialise DataTable\",3);\nreturn}}if(p.sTableId==this.id){t.splice(g,1);break}}if(null===i||\"\"===i)this.id=i=\"DataTables_Table_\"+m.ext._unique++;var o=h.extend(!0,{},m.models.oSettings,{sDestroyWidth:q[0].style.width,sInstance:i,sTableId:i});o.nTable=this;o.oApi=b.internal;o.oInit=e;t.push(o);o.oInstance=1===b.length?b:q.dataTable();eb(e);e.oLanguage&&Da(e.oLanguage);e.aLengthMenu&&!e.iDisplayLength&&(e.iDisplayLength=h.isArray(e.aLengthMenu[0])?e.aLengthMenu[0][0]:e.aLengthMenu[0]);e=Lb(h.extend(!0,{},l),e);E(o.oFeatures,\ne,\"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender\".split(\" \"));E(o,e,[\"asStripeClasses\",\"ajax\",\"fnServerData\",\"fnFormatNumber\",\"sServerMethod\",\"aaSorting\",\"aaSortingFixed\",\"aLengthMenu\",\"sPaginationType\",\"sAjaxSource\",\"sAjaxDataProp\",\"iStateDuration\",\"sDom\",\"bSortCellsTop\",\"iTabIndex\",\"fnStateLoadCallback\",\"fnStateSaveCallback\",\"renderer\",\"searchDelay\",\"rowId\",[\"iCookieDuration\",\"iStateDuration\"],[\"oSearch\",\"oPreviousSearch\"],[\"aoSearchCols\",\n\"aoPreSearchCols\"],[\"iDisplayLength\",\"_iDisplayLength\"],[\"bJQueryUI\",\"bJUI\"]]);E(o.oScroll,e,[[\"sScrollX\",\"sX\"],[\"sScrollXInner\",\"sXInner\"],[\"sScrollY\",\"sY\"],[\"bScrollCollapse\",\"bCollapse\"]]);E(o.oLanguage,e,\"fnInfoCallback\");z(o,\"aoDrawCallback\",e.fnDrawCallback,\"user\");z(o,\"aoServerParams\",e.fnServerParams,\"user\");z(o,\"aoStateSaveParams\",e.fnStateSaveParams,\"user\");z(o,\"aoStateLoadParams\",e.fnStateLoadParams,\"user\");z(o,\"aoStateLoaded\",e.fnStateLoaded,\"user\");z(o,\"aoRowCallback\",e.fnRowCallback,\n\"user\");z(o,\"aoRowCreatedCallback\",e.fnCreatedRow,\"user\");z(o,\"aoHeaderCallback\",e.fnHeaderCallback,\"user\");z(o,\"aoFooterCallback\",e.fnFooterCallback,\"user\");z(o,\"aoInitComplete\",e.fnInitComplete,\"user\");z(o,\"aoPreDrawCallback\",e.fnPreDrawCallback,\"user\");o.rowIdFn=Q(e.rowId);gb(o);i=o.oClasses;e.bJQueryUI?(h.extend(i,m.ext.oJUIClasses,e.oClasses),e.sDom===l.sDom&&\"lfrtip\"===l.sDom&&(o.sDom='<\"H\"lfr>t<\"F\"ip>'),o.renderer)?h.isPlainObject(o.renderer)&&!o.renderer.header&&(o.renderer.header=\"jqueryui\"):\no.renderer=\"jqueryui\":h.extend(i,m.ext.classes,e.oClasses);q.addClass(i.sTable);o.iInitDisplayStart===k&&(o.iInitDisplayStart=e.iDisplayStart,o._iDisplayStart=e.iDisplayStart);null!==e.iDeferLoading&&(o.bDeferLoading=!0,g=h.isArray(e.iDeferLoading),o._iRecordsDisplay=g?e.iDeferLoading[0]:e.iDeferLoading,o._iRecordsTotal=g?e.iDeferLoading[1]:e.iDeferLoading);var r=o.oLanguage;h.extend(!0,r,e.oLanguage);\"\"!==r.sUrl&&(h.ajax({dataType:\"json\",url:r.sUrl,success:function(a){Da(a);K(l.oLanguage,a);h.extend(true,\nr,a);ga(o)},error:function(){ga(o)}}),n=!0);null===e.asStripeClasses&&(o.asStripeClasses=[i.sStripeOdd,i.sStripeEven]);var g=o.asStripeClasses,v=q.children(\"tbody\").find(\"tr\").eq(0);-1!==h.inArray(!0,h.map(g,function(a){return v.hasClass(a)}))&&(h(\"tbody tr\",this).removeClass(g.join(\" \")),o.asDestroyStripes=g.slice());t=[];g=this.getElementsByTagName(\"thead\");0!==g.length&&(da(o.aoHeader,g[0]),t=qa(o));if(null===e.aoColumns){p=[];g=0;for(j=t.length;g<j;g++)p.push(null)}else p=e.aoColumns;g=0;for(j=\np.length;g<j;g++)Ea(o,t?t[g]:null);ib(o,e.aoColumnDefs,p,function(a,b){ja(o,a,b)});if(v.length){var s=function(a,b){return a.getAttribute(\"data-\"+b)!==null?b:null};h(v[0]).children(\"th, td\").each(function(a,b){var c=o.aoColumns[a];if(c.mData===a){var d=s(b,\"sort\")||s(b,\"order\"),e=s(b,\"filter\")||s(b,\"search\");if(d!==null||e!==null){c.mData={_:a+\".display\",sort:d!==null?a+\".@data-\"+d:k,type:d!==null?a+\".@data-\"+d:k,filter:e!==null?a+\".@data-\"+e:k};ja(o,a)}}})}var w=o.oFeatures;e.bStateSave&&(w.bStateSave=\n!0,Kb(o,e),z(o,\"aoDrawCallback\",wa,\"state_save\"));if(e.aaSorting===k){t=o.aaSorting;g=0;for(j=t.length;g<j;g++)t[g][1]=o.aoColumns[g].asSorting[0]}va(o);w.bSort&&z(o,\"aoDrawCallback\",function(){if(o.bSorted){var a=V(o),b={};h.each(a,function(a,c){b[c.src]=c.dir});u(o,null,\"order\",[o,a,b]);Jb(o)}});z(o,\"aoDrawCallback\",function(){(o.bSorted||y(o)===\"ssp\"||w.bDeferRender)&&va(o)},\"sc\");g=q.children(\"caption\").each(function(){this._captionSide=q.css(\"caption-side\")});j=q.children(\"thead\");0===j.length&&\n(j=h(\"<thead/>\").appendTo(this));o.nTHead=j[0];j=q.children(\"tbody\");0===j.length&&(j=h(\"<tbody/>\").appendTo(this));o.nTBody=j[0];j=q.children(\"tfoot\");if(0===j.length&&0<g.length&&(\"\"!==o.oScroll.sX||\"\"!==o.oScroll.sY))j=h(\"<tfoot/>\").appendTo(this);0===j.length||0===j.children().length?q.addClass(i.sNoFooter):0<j.length&&(o.nTFoot=j[0],da(o.aoFooter,o.nTFoot));if(e.aaData)for(g=0;g<e.aaData.length;g++)N(o,e.aaData[g]);else(o.bDeferLoading||\"dom\"==y(o))&&ma(o,h(o.nTBody).children(\"tr\"));o.aiDisplay=\no.aiDisplayMaster.slice();o.bInitialised=!0;!1===n&&ga(o)}});b=null;return this},v,r,p,s,Ya={},Ob=/[\\r\\n]/g,Aa=/<.*?>/g,ac=/^[\\w\\+\\-]/,bc=/[\\w\\+\\-]$/,cc=RegExp(\"(\\\\/|\\\\.|\\\\*|\\\\+|\\\\?|\\\\||\\\\(|\\\\)|\\\\[|\\\\]|\\\\{|\\\\}|\\\\\\\\|\\\\$|\\\\^|\\\\-)\",\"g\"),Xa=/[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi,M=function(a){return!a||!0===a||\"-\"===a?!0:!1},Pb=function(a){var b=parseInt(a,10);return!isNaN(b)&&isFinite(a)?b:null},Qb=function(a,b){Ya[b]||(Ya[b]=RegExp(Qa(b),\"g\"));return\"string\"===typeof a&&\".\"!==b?a.replace(/\\./g,\n\"\").replace(Ya[b],\".\"):a},Za=function(a,b,c){var d=\"string\"===typeof a;if(M(a))return!0;b&&d&&(a=Qb(a,b));c&&d&&(a=a.replace(Xa,\"\"));return!isNaN(parseFloat(a))&&isFinite(a)},Rb=function(a,b,c){return M(a)?!0:!(M(a)||\"string\"===typeof a)?null:Za(a.replace(Aa,\"\"),b,c)?!0:null},G=function(a,b,c){var d=[],e=0,f=a.length;if(c!==k)for(;e<f;e++)a[e]&&a[e][b]&&d.push(a[e][b][c]);else for(;e<f;e++)a[e]&&d.push(a[e][b]);return d},ha=function(a,b,c,d){var e=[],f=0,g=b.length;if(d!==k)for(;f<g;f++)a[b[f]][c]&&\ne.push(a[b[f]][c][d]);else for(;f<g;f++)e.push(a[b[f]][c]);return e},W=function(a,b){var c=[],d;b===k?(b=0,d=a):(d=b,b=a);for(var e=b;e<d;e++)c.push(e);return c},Sb=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},pa=function(a){var b=[],c,d,e=a.length,f,g=0;d=0;a:for(;d<e;d++){c=a[d];for(f=0;f<g;f++)if(b[f]===c)continue a;b.push(c);g++}return b};m.util={throttle:function(a,b){var c=b!==k?b:200,d,e;return function(){var b=this,g=+new Date,h=arguments;d&&g<d+c?(clearTimeout(e),\ne=setTimeout(function(){d=k;a.apply(b,h)},c)):(d=g,a.apply(b,h))}},escapeRegex:function(a){return a.replace(cc,\"\\\\$1\")}};var A=function(a,b,c){a[b]!==k&&(a[c]=a[b])},ba=/\\[.*?\\]$/,U=/\\(\\)$/,Qa=m.util.escapeRegex,ua=h(\"<div>\")[0],Zb=ua.textContent!==k,$b=/<.*?>/g,Oa=m.util.throttle,Tb=[],w=Array.prototype,dc=function(a){var b,c,d=m.settings,e=h.map(d,function(a){return a.nTable});if(a){if(a.nTable&&a.oApi)return[a];if(a.nodeName&&\"table\"===a.nodeName.toLowerCase())return b=h.inArray(a,e),-1!==b?[d[b]]:\nnull;if(a&&\"function\"===typeof a.settings)return a.settings().toArray();\"string\"===typeof a?c=h(a):a instanceof h&&(c=a)}else return[];if(c)return c.map(function(){b=h.inArray(this,e);return-1!==b?d[b]:null}).toArray()};r=function(a,b){if(!(this instanceof r))return new r(a,b);var c=[],d=function(a){(a=dc(a))&&(c=c.concat(a))};if(h.isArray(a))for(var e=0,f=a.length;e<f;e++)d(a[e]);else d(a);this.context=pa(c);b&&h.merge(this,b);this.selector={rows:null,cols:null,opts:null};r.extend(this,this,Tb)};\nm.Api=r;h.extend(r.prototype,{any:function(){return 0!==this.count()},concat:w.concat,context:[],count:function(){return this.flatten().length},each:function(a){for(var b=0,c=this.length;b<c;b++)a.call(this,this[b],b,this);return this},eq:function(a){var b=this.context;return b.length>a?new r(b[a],this[a]):null},filter:function(a){var b=[];if(w.filter)b=w.filter.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)a.call(this,this[c],c,this)&&b.push(this[c]);return new r(this.context,b)},flatten:function(){var a=\n[];return new r(this.context,a.concat.apply(a,this.toArray()))},join:w.join,indexOf:w.indexOf||function(a,b){for(var c=b||0,d=this.length;c<d;c++)if(this[c]===a)return c;return-1},iterator:function(a,b,c,d){var e=[],f,g,h,i,n,l=this.context,m,t,p=this.selector;\"string\"===typeof a&&(d=c,c=b,b=a,a=!1);g=0;for(h=l.length;g<h;g++){var o=new r(l[g]);if(\"table\"===b)f=c.call(o,l[g],g),f!==k&&e.push(f);else if(\"columns\"===b||\"rows\"===b)f=c.call(o,l[g],this[g],g),f!==k&&e.push(f);else if(\"column\"===b||\"column-rows\"===\nb||\"row\"===b||\"cell\"===b){t=this[g];\"column-rows\"===b&&(m=Ba(l[g],p.opts));i=0;for(n=t.length;i<n;i++)f=t[i],f=\"cell\"===b?c.call(o,l[g],f.row,f.column,g,i):c.call(o,l[g],f,g,i,m),f!==k&&e.push(f)}}return e.length||d?(a=new r(l,a?e.concat.apply([],e):e),b=a.selector,b.rows=p.rows,b.cols=p.cols,b.opts=p.opts,a):this},lastIndexOf:w.lastIndexOf||function(a,b){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(a){var b=[];if(w.map)b=w.map.call(this,a,this);else for(var c=\n0,d=this.length;c<d;c++)b.push(a.call(this,this[c],c));return new r(this.context,b)},pluck:function(a){return this.map(function(b){return b[a]})},pop:w.pop,push:w.push,reduce:w.reduce||function(a,b){return hb(this,a,b,0,this.length,1)},reduceRight:w.reduceRight||function(a,b){return hb(this,a,b,this.length-1,-1,-1)},reverse:w.reverse,selector:null,shift:w.shift,sort:w.sort,splice:w.splice,toArray:function(){return w.slice.call(this)},to$:function(){return h(this)},toJQuery:function(){return h(this)},\nunique:function(){return new r(this.context,pa(this))},unshift:w.unshift});r.extend=function(a,b,c){if(c.length&&b&&(b instanceof r||b.__dt_wrapper)){var d,e,f,g=function(a,b,c){return function(){var d=b.apply(a,arguments);r.extend(d,d,c.methodExt);return d}};d=0;for(e=c.length;d<e;d++)f=c[d],b[f.name]=\"function\"===typeof f.val?g(a,f.val,f):h.isPlainObject(f.val)?{}:f.val,b[f.name].__dt_wrapper=!0,r.extend(a,b[f.name],f.propExt)}};r.register=p=function(a,b){if(h.isArray(a))for(var c=0,d=a.length;c<\nd;c++)r.register(a[c],b);else for(var e=a.split(\".\"),f=Tb,g,j,c=0,d=e.length;c<d;c++){g=(j=-1!==e[c].indexOf(\"()\"))?e[c].replace(\"()\",\"\"):e[c];var i;a:{i=0;for(var n=f.length;i<n;i++)if(f[i].name===g){i=f[i];break a}i=null}i||(i={name:g,val:{},methodExt:[],propExt:[]},f.push(i));c===d-1?i.val=b:f=j?i.methodExt:i.propExt}};r.registerPlural=s=function(a,b,c){r.register(a,c);r.register(b,function(){var a=c.apply(this,arguments);return a===this?this:a instanceof r?a.length?h.isArray(a[0])?new r(a.context,\na[0]):a[0]:k:a})};p(\"tables()\",function(a){var b;if(a){b=r;var c=this.context;if(\"number\"===typeof a)a=[c[a]];else var d=h.map(c,function(a){return a.nTable}),a=h(d).filter(a).map(function(){var a=h.inArray(this,d);return c[a]}).toArray();b=new b(a)}else b=this;return b});p(\"table()\",function(a){var a=this.tables(a),b=a.context;return b.length?new r(b[0]):a});s(\"tables().nodes()\",\"table().node()\",function(){return this.iterator(\"table\",function(a){return a.nTable},1)});s(\"tables().body()\",\"table().body()\",\nfunction(){return this.iterator(\"table\",function(a){return a.nTBody},1)});s(\"tables().header()\",\"table().header()\",function(){return this.iterator(\"table\",function(a){return a.nTHead},1)});s(\"tables().footer()\",\"table().footer()\",function(){return this.iterator(\"table\",function(a){return a.nTFoot},1)});s(\"tables().containers()\",\"table().container()\",function(){return this.iterator(\"table\",function(a){return a.nTableWrapper},1)});p(\"draw()\",function(a){return this.iterator(\"table\",function(b){\"page\"===\na?O(b):(\"string\"===typeof a&&(a=\"full-hold\"===a?!1:!0),T(b,!1===a))})});p(\"page()\",function(a){return a===k?this.page.info().page:this.iterator(\"table\",function(b){Ta(b,a)})});p(\"page.info()\",function(){if(0===this.context.length)return k;var a=this.context[0],b=a._iDisplayStart,c=a.oFeatures.bPaginate?a._iDisplayLength:-1,d=a.fnRecordsDisplay(),e=-1===c;return{page:e?0:Math.floor(b/c),pages:e?1:Math.ceil(d/c),start:b,end:a.fnDisplayEnd(),length:c,recordsTotal:a.fnRecordsTotal(),recordsDisplay:d,\nserverSide:\"ssp\"===y(a)}});p(\"page.len()\",function(a){return a===k?0!==this.context.length?this.context[0]._iDisplayLength:k:this.iterator(\"table\",function(b){Ra(b,a)})});var Ub=function(a,b,c){if(c){var d=new r(a);d.one(\"draw\",function(){c(d.ajax.json())})}if(\"ssp\"==y(a))T(a,b);else{C(a,!0);var e=a.jqXHR;e&&4!==e.readyState&&e.abort();ra(a,[],function(c){na(a);for(var c=sa(a,c),d=0,e=c.length;d<e;d++)N(a,c[d]);T(a,b);C(a,!1)})}};p(\"ajax.json()\",function(){var a=this.context;if(0<a.length)return a[0].json});\np(\"ajax.params()\",function(){var a=this.context;if(0<a.length)return a[0].oAjaxData});p(\"ajax.reload()\",function(a,b){return this.iterator(\"table\",function(c){Ub(c,!1===b,a)})});p(\"ajax.url()\",function(a){var b=this.context;if(a===k){if(0===b.length)return k;b=b[0];return b.ajax?h.isPlainObject(b.ajax)?b.ajax.url:b.ajax:b.sAjaxSource}return this.iterator(\"table\",function(b){h.isPlainObject(b.ajax)?b.ajax.url=a:b.ajax=a})});p(\"ajax.url().load()\",function(a,b){return this.iterator(\"table\",function(c){Ub(c,\n!1===b,a)})});var $a=function(a,b,c,d,e){var f=[],g,j,i,n,l,m;i=typeof b;if(!b||\"string\"===i||\"function\"===i||b.length===k)b=[b];i=0;for(n=b.length;i<n;i++){j=b[i]&&b[i].split?b[i].split(\",\"):[b[i]];l=0;for(m=j.length;l<m;l++)(g=c(\"string\"===typeof j[l]?h.trim(j[l]):j[l]))&&g.length&&(f=f.concat(g))}a=v.selector[a];if(a.length){i=0;for(n=a.length;i<n;i++)f=a[i](d,e,f)}return pa(f)},ab=function(a){a||(a={});a.filter&&a.search===k&&(a.search=a.filter);return h.extend({search:\"none\",order:\"current\",\npage:\"all\"},a)},bb=function(a){for(var b=0,c=a.length;b<c;b++)if(0<a[b].length)return a[0]=a[b],a[0].length=1,a.length=1,a.context=[a.context[b]],a;a.length=0;return a},Ba=function(a,b){var c,d,e,f=[],g=a.aiDisplay;c=a.aiDisplayMaster;var j=b.search;d=b.order;e=b.page;if(\"ssp\"==y(a))return\"removed\"===j?[]:W(0,c.length);if(\"current\"==e){c=a._iDisplayStart;for(d=a.fnDisplayEnd();c<d;c++)f.push(g[c])}else if(\"current\"==d||\"applied\"==d)f=\"none\"==j?c.slice():\"applied\"==j?g.slice():h.map(c,function(a){return-1===\nh.inArray(a,g)?a:null});else if(\"index\"==d||\"original\"==d){c=0;for(d=a.aoData.length;c<d;c++)\"none\"==j?f.push(c):(e=h.inArray(c,g),(-1===e&&\"removed\"==j||0<=e&&\"applied\"==j)&&f.push(c))}return f};p(\"rows()\",function(a,b){a===k?a=\"\":h.isPlainObject(a)&&(b=a,a=\"\");var b=ab(b),c=this.iterator(\"table\",function(c){var e=b;return $a(\"row\",a,function(a){var b=Pb(a);if(b!==null&&!e)return[b];var j=Ba(c,e);if(b!==null&&h.inArray(b,j)!==-1)return[b];if(!a)return j;if(typeof a===\"function\")return h.map(j,function(b){var e=\nc.aoData[b];return a(b,e._aData,e.nTr)?b:null});b=Sb(ha(c.aoData,j,\"nTr\"));if(a.nodeName){if(a._DT_RowIndex!==k)return[a._DT_RowIndex];if(a._DT_CellIndex)return[a._DT_CellIndex.row];b=h(a).closest(\"*[data-dt-row]\");return b.length?[b.data(\"dt-row\")]:[]}if(typeof a===\"string\"&&a.charAt(0)===\"#\"){j=c.aIds[a.replace(/^#/,\"\")];if(j!==k)return[j.idx]}return h(b).filter(a).map(function(){return this._DT_RowIndex}).toArray()},c,e)},1);c.selector.rows=a;c.selector.opts=b;return c});p(\"rows().nodes()\",function(){return this.iterator(\"row\",\nfunction(a,b){return a.aoData[b].nTr||k},1)});p(\"rows().data()\",function(){return this.iterator(!0,\"rows\",function(a,b){return ha(a.aoData,b,\"_aData\")},1)});s(\"rows().cache()\",\"row().cache()\",function(a){return this.iterator(\"row\",function(b,c){var d=b.aoData[c];return\"search\"===a?d._aFilterData:d._aSortData},1)});s(\"rows().invalidate()\",\"row().invalidate()\",function(a){return this.iterator(\"row\",function(b,c){ca(b,c,a)})});s(\"rows().indexes()\",\"row().index()\",function(){return this.iterator(\"row\",\nfunction(a,b){return b},1)});s(\"rows().ids()\",\"row().id()\",function(a){for(var b=[],c=this.context,d=0,e=c.length;d<e;d++)for(var f=0,g=this[d].length;f<g;f++){var h=c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);b.push((!0===a?\"#\":\"\")+h)}return new r(c,b)});s(\"rows().remove()\",\"row().remove()\",function(){var a=this;this.iterator(\"row\",function(b,c,d){var e=b.aoData,f=e[c],g,h,i,n,l;e.splice(c,1);g=0;for(h=e.length;g<h;g++)if(i=e[g],l=i.anCells,null!==i.nTr&&(i.nTr._DT_RowIndex=g),null!==l){i=0;for(n=\nl.length;i<n;i++)l[i]._DT_CellIndex.row=g}oa(b.aiDisplayMaster,c);oa(b.aiDisplay,c);oa(a[d],c,!1);Sa(b);c=b.rowIdFn(f._aData);c!==k&&delete b.aIds[c]});this.iterator(\"table\",function(a){for(var c=0,d=a.aoData.length;c<d;c++)a.aoData[c].idx=c});return this});p(\"rows.add()\",function(a){var b=this.iterator(\"table\",function(b){var c,f,g,h=[];f=0;for(g=a.length;f<g;f++)c=a[f],c.nodeName&&\"TR\"===c.nodeName.toUpperCase()?h.push(ma(b,c)[0]):h.push(N(b,c));return h},1),c=this.rows(-1);c.pop();h.merge(c,b);\nreturn c});p(\"row()\",function(a,b){return bb(this.rows(a,b))});p(\"row().data()\",function(a){var b=this.context;if(a===k)return b.length&&this.length?b[0].aoData[this[0]]._aData:k;b[0].aoData[this[0]]._aData=a;ca(b[0],this[0],\"data\");return this});p(\"row().node()\",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]].nTr||null:null});p(\"row.add()\",function(a){a instanceof h&&a.length&&(a=a[0]);var b=this.iterator(\"table\",function(b){return a.nodeName&&\"TR\"===a.nodeName.toUpperCase()?\nma(b,a)[0]:N(b,a)});return this.row(b[0])});var cb=function(a,b){var c=a.context;if(c.length&&(c=c[0].aoData[b!==k?b:a[0]])&&c._details)c._details.remove(),c._detailsShow=k,c._details=k},Vb=function(a,b){var c=a.context;if(c.length&&a.length){var d=c[0].aoData[a[0]];if(d._details){(d._detailsShow=b)?d._details.insertAfter(d.nTr):d._details.detach();var e=c[0],f=new r(e),g=e.aoData;f.off(\"draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details\");0<G(g,\"_details\").length&&(f.on(\"draw.dt.DT_details\",\nfunction(a,b){e===b&&f.rows({page:\"current\"}).eq(0).each(function(a){a=g[a];a._detailsShow&&a._details.insertAfter(a.nTr)})}),f.on(\"column-visibility.dt.DT_details\",function(a,b){if(e===b)for(var c,d=aa(b),f=0,h=g.length;f<h;f++)c=g[f],c._details&&c._details.children(\"td[colspan]\").attr(\"colspan\",d)}),f.on(\"destroy.dt.DT_details\",function(a,b){if(e===b)for(var c=0,d=g.length;c<d;c++)g[c]._details&&cb(f,c)}))}}};p(\"row().child()\",function(a,b){var c=this.context;if(a===k)return c.length&&this.length?\nc[0].aoData[this[0]]._details:k;if(!0===a)this.child.show();else if(!1===a)cb(this);else if(c.length&&this.length){var d=c[0],c=c[0].aoData[this[0]],e=[],f=function(a,b){if(h.isArray(a)||a instanceof h)for(var c=0,k=a.length;c<k;c++)f(a[c],b);else a.nodeName&&\"tr\"===a.nodeName.toLowerCase()?e.push(a):(c=h(\"<tr><td/></tr>\").addClass(b),h(\"td\",c).addClass(b).html(a)[0].colSpan=aa(d),e.push(c[0]))};f(a,b);c._details&&c._details.remove();c._details=h(e);c._detailsShow&&c._details.insertAfter(c.nTr)}return this});\np([\"row().child.show()\",\"row().child().show()\"],function(){Vb(this,!0);return this});p([\"row().child.hide()\",\"row().child().hide()\"],function(){Vb(this,!1);return this});p([\"row().child.remove()\",\"row().child().remove()\"],function(){cb(this);return this});p(\"row().child.isShown()\",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]]._detailsShow||!1:!1});var ec=/^(.+):(name|visIdx|visible)$/,Wb=function(a,b,c,d,e){for(var c=[],d=0,f=e.length;d<f;d++)c.push(B(a,e[d],b));\nreturn c};p(\"columns()\",function(a,b){a===k?a=\"\":h.isPlainObject(a)&&(b=a,a=\"\");var b=ab(b),c=this.iterator(\"table\",function(c){var e=a,f=b,g=c.aoColumns,j=G(g,\"sName\"),i=G(g,\"nTh\");return $a(\"column\",e,function(a){var b=Pb(a);if(a===\"\")return W(g.length);if(b!==null)return[b>=0?b:g.length+b];if(typeof a===\"function\"){var e=Ba(c,f);return h.map(g,function(b,f){return a(f,Wb(c,f,0,0,e),i[f])?f:null})}var k=typeof a===\"string\"?a.match(ec):\"\";if(k)switch(k[2]){case \"visIdx\":case \"visible\":b=parseInt(k[1],\n10);if(b<0){var m=h.map(g,function(a,b){return a.bVisible?b:null});return[m[m.length+b]]}return[Z(c,b)];case \"name\":return h.map(j,function(a,b){return a===k[1]?b:null});default:return[]}if(a.nodeName&&a._DT_CellIndex)return[a._DT_CellIndex.column];b=h(i).filter(a).map(function(){return h.inArray(this,i)}).toArray();if(b.length||!a.nodeName)return b;b=h(a).closest(\"*[data-dt-column]\");return b.length?[b.data(\"dt-column\")]:[]},c,f)},1);c.selector.cols=a;c.selector.opts=b;return c});s(\"columns().header()\",\n\"column().header()\",function(){return this.iterator(\"column\",function(a,b){return a.aoColumns[b].nTh},1)});s(\"columns().footer()\",\"column().footer()\",function(){return this.iterator(\"column\",function(a,b){return a.aoColumns[b].nTf},1)});s(\"columns().data()\",\"column().data()\",function(){return this.iterator(\"column-rows\",Wb,1)});s(\"columns().dataSrc()\",\"column().dataSrc()\",function(){return this.iterator(\"column\",function(a,b){return a.aoColumns[b].mData},1)});s(\"columns().cache()\",\"column().cache()\",\nfunction(a){return this.iterator(\"column-rows\",function(b,c,d,e,f){return ha(b.aoData,f,\"search\"===a?\"_aFilterData\":\"_aSortData\",c)},1)});s(\"columns().nodes()\",\"column().nodes()\",function(){return this.iterator(\"column-rows\",function(a,b,c,d,e){return ha(a.aoData,e,\"anCells\",b)},1)});s(\"columns().visible()\",\"column().visible()\",function(a,b){var c=this.iterator(\"column\",function(b,c){if(a===k)return b.aoColumns[c].bVisible;var f=b.aoColumns,g=f[c],j=b.aoData,i,n,l;if(a!==k&&g.bVisible!==a){if(a){var m=\nh.inArray(!0,G(f,\"bVisible\"),c+1);i=0;for(n=j.length;i<n;i++)l=j[i].nTr,f=j[i].anCells,l&&l.insertBefore(f[c],f[m]||null)}else h(G(b.aoData,\"anCells\",c)).detach();g.bVisible=a;ea(b,b.aoHeader);ea(b,b.aoFooter);wa(b)}});a!==k&&(this.iterator(\"column\",function(c,e){u(c,null,\"column-visibility\",[c,e,a,b])}),(b===k||b)&&this.columns.adjust());return c});s(\"columns().indexes()\",\"column().index()\",function(a){return this.iterator(\"column\",function(b,c){return\"visible\"===a?$(b,c):c},1)});p(\"columns.adjust()\",\nfunction(){return this.iterator(\"table\",function(a){Y(a)},1)});p(\"column.index()\",function(a,b){if(0!==this.context.length){var c=this.context[0];if(\"fromVisible\"===a||\"toData\"===a)return Z(c,b);if(\"fromData\"===a||\"toVisible\"===a)return $(c,b)}});p(\"column()\",function(a,b){return bb(this.columns(a,b))});p(\"cells()\",function(a,b,c){h.isPlainObject(a)&&(a.row===k?(c=a,a=null):(c=b,b=null));h.isPlainObject(b)&&(c=b,b=null);if(null===b||b===k)return this.iterator(\"table\",function(b){var d=a,e=ab(c),f=\nb.aoData,g=Ba(b,e),j=Sb(ha(f,g,\"anCells\")),i=h([].concat.apply([],j)),l,n=b.aoColumns.length,m,p,r,u,v,s;return $a(\"cell\",d,function(a){var c=typeof a===\"function\";if(a===null||a===k||c){m=[];p=0;for(r=g.length;p<r;p++){l=g[p];for(u=0;u<n;u++){v={row:l,column:u};if(c){s=f[l];a(v,B(b,l,u),s.anCells?s.anCells[u]:null)&&m.push(v)}else m.push(v)}}return m}if(h.isPlainObject(a))return[a];c=i.filter(a).map(function(a,b){return{row:b._DT_CellIndex.row,column:b._DT_CellIndex.column}}).toArray();if(c.length||\n!a.nodeName)return c;s=h(a).closest(\"*[data-dt-row]\");return s.length?[{row:s.data(\"dt-row\"),column:s.data(\"dt-column\")}]:[]},b,e)});var d=this.columns(b,c),e=this.rows(a,c),f,g,j,i,n,l=this.iterator(\"table\",function(a,b){f=[];g=0;for(j=e[b].length;g<j;g++){i=0;for(n=d[b].length;i<n;i++)f.push({row:e[b][g],column:d[b][i]})}return f},1);h.extend(l.selector,{cols:b,rows:a,opts:c});return l});s(\"cells().nodes()\",\"cell().node()\",function(){return this.iterator(\"cell\",function(a,b,c){return(a=a.aoData[b])&&\na.anCells?a.anCells[c]:k},1)});p(\"cells().data()\",function(){return this.iterator(\"cell\",function(a,b,c){return B(a,b,c)},1)});s(\"cells().cache()\",\"cell().cache()\",function(a){a=\"search\"===a?\"_aFilterData\":\"_aSortData\";return this.iterator(\"cell\",function(b,c,d){return b.aoData[c][a][d]},1)});s(\"cells().render()\",\"cell().render()\",function(a){return this.iterator(\"cell\",function(b,c,d){return B(b,c,d,a)},1)});s(\"cells().indexes()\",\"cell().index()\",function(){return this.iterator(\"cell\",function(a,\nb,c){return{row:b,column:c,columnVisible:$(a,c)}},1)});s(\"cells().invalidate()\",\"cell().invalidate()\",function(a){return this.iterator(\"cell\",function(b,c,d){ca(b,c,a,d)})});p(\"cell()\",function(a,b,c){return bb(this.cells(a,b,c))});p(\"cell().data()\",function(a){var b=this.context,c=this[0];if(a===k)return b.length&&c.length?B(b[0],c[0].row,c[0].column):k;jb(b[0],c[0].row,c[0].column,a);ca(b[0],c[0].row,\"data\",c[0].column);return this});p(\"order()\",function(a,b){var c=this.context;if(a===k)return 0!==\nc.length?c[0].aaSorting:k;\"number\"===typeof a?a=[[a,b]]:a.length&&!h.isArray(a[0])&&(a=Array.prototype.slice.call(arguments));return this.iterator(\"table\",function(b){b.aaSorting=a.slice()})});p(\"order.listener()\",function(a,b,c){return this.iterator(\"table\",function(d){Ma(d,a,b,c)})});p(\"order.fixed()\",function(a){if(!a){var b=this.context,b=b.length?b[0].aaSortingFixed:k;return h.isArray(b)?{pre:b}:b}return this.iterator(\"table\",function(b){b.aaSortingFixed=h.extend(!0,{},a)})});p([\"columns().order()\",\n\"column().order()\"],function(a){var b=this;return this.iterator(\"table\",function(c,d){var e=[];h.each(b[d],function(b,c){e.push([c,a])});c.aaSorting=e})});p(\"search()\",function(a,b,c,d){var e=this.context;return a===k?0!==e.length?e[0].oPreviousSearch.sSearch:k:this.iterator(\"table\",function(e){e.oFeatures.bFilter&&fa(e,h.extend({},e.oPreviousSearch,{sSearch:a+\"\",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),1)})});s(\"columns().search()\",\"column().search()\",function(a,\nb,c,d){return this.iterator(\"column\",function(e,f){var g=e.aoPreSearchCols;if(a===k)return g[f].sSearch;e.oFeatures.bFilter&&(h.extend(g[f],{sSearch:a+\"\",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),fa(e,e.oPreviousSearch,1))})});p(\"state()\",function(){return this.context.length?this.context[0].oSavedState:null});p(\"state.clear()\",function(){return this.iterator(\"table\",function(a){a.fnStateSaveCallback.call(a.oInstance,a,{})})});p(\"state.loaded()\",function(){return this.context.length?\nthis.context[0].oLoadedState:null});p(\"state.save()\",function(){return this.iterator(\"table\",function(a){wa(a)})});m.versionCheck=m.fnVersionCheck=function(a){for(var b=m.version.split(\".\"),a=a.split(\".\"),c,d,e=0,f=a.length;e<f;e++)if(c=parseInt(b[e],10)||0,d=parseInt(a[e],10)||0,c!==d)return c>d;return!0};m.isDataTable=m.fnIsDataTable=function(a){var b=h(a).get(0),c=!1;h.each(m.settings,function(a,e){var f=e.nScrollHead?h(\"table\",e.nScrollHead)[0]:null,g=e.nScrollFoot?h(\"table\",e.nScrollFoot)[0]:\nnull;if(e.nTable===b||f===b||g===b)c=!0});return c};m.tables=m.fnTables=function(a){var b=!1;h.isPlainObject(a)&&(b=a.api,a=a.visible);var c=h.map(m.settings,function(b){if(!a||a&&h(b.nTable).is(\":visible\"))return b.nTable});return b?new r(c):c};m.camelToHungarian=K;p(\"$()\",function(a,b){var c=this.rows(b).nodes(),c=h(c);return h([].concat(c.filter(a).toArray(),c.find(a).toArray()))});h.each([\"on\",\"one\",\"off\"],function(a,b){p(b+\"()\",function(){var a=Array.prototype.slice.call(arguments);a[0].match(/\\.dt\\b/)||\n(a[0]+=\".dt\");var d=h(this.tables().nodes());d[b].apply(d,a);return this})});p(\"clear()\",function(){return this.iterator(\"table\",function(a){na(a)})});p(\"settings()\",function(){return new r(this.context,this.context)});p(\"init()\",function(){var a=this.context;return a.length?a[0].oInit:null});p(\"data()\",function(){return this.iterator(\"table\",function(a){return G(a.aoData,\"_aData\")}).flatten()});p(\"destroy()\",function(a){a=a||!1;return this.iterator(\"table\",function(b){var c=b.nTableWrapper.parentNode,\nd=b.oClasses,e=b.nTable,f=b.nTBody,g=b.nTHead,j=b.nTFoot,i=h(e),f=h(f),k=h(b.nTableWrapper),l=h.map(b.aoData,function(a){return a.nTr}),p;b.bDestroying=!0;u(b,\"aoDestroyCallback\",\"destroy\",[b]);a||(new r(b)).columns().visible(!0);k.unbind(\".DT\").find(\":not(tbody *)\").unbind(\".DT\");h(D).unbind(\".DT-\"+b.sInstance);e!=g.parentNode&&(i.children(\"thead\").detach(),i.append(g));j&&e!=j.parentNode&&(i.children(\"tfoot\").detach(),i.append(j));b.aaSorting=[];b.aaSortingFixed=[];va(b);h(l).removeClass(b.asStripeClasses.join(\" \"));\nh(\"th, td\",g).removeClass(d.sSortable+\" \"+d.sSortableAsc+\" \"+d.sSortableDesc+\" \"+d.sSortableNone);b.bJUI&&(h(\"th span.\"+d.sSortIcon+\", td span.\"+d.sSortIcon,g).detach(),h(\"th, td\",g).each(function(){var a=h(\"div.\"+d.sSortJUIWrapper,this);h(this).append(a.contents());a.detach()}));f.children().detach();f.append(l);g=a?\"remove\":\"detach\";i[g]();k[g]();!a&&c&&(c.insertBefore(e,b.nTableReinsertBefore),i.css(\"width\",b.sDestroyWidth).removeClass(d.sTable),(p=b.asDestroyStripes.length)&&f.children().each(function(a){h(this).addClass(b.asDestroyStripes[a%\np])}));c=h.inArray(b,m.settings);-1!==c&&m.settings.splice(c,1)})});h.each([\"column\",\"row\",\"cell\"],function(a,b){p(b+\"s().every()\",function(a){var d=this.selector.opts,e=this;return this.iterator(b,function(f,g,h,i,n){a.call(e[b](g,\"cell\"===b?h:d,\"cell\"===b?d:k),g,h,i,n)})})});p(\"i18n()\",function(a,b,c){var d=this.context[0],a=Q(a)(d.oLanguage);a===k&&(a=b);c!==k&&h.isPlainObject(a)&&(a=a[c]!==k?a[c]:a._);return a.replace(\"%d\",c)});m.version=\"1.10.12\";m.settings=[];m.models={};m.models.oSearch={bCaseInsensitive:!0,\nsSearch:\"\",bRegex:!1,bSmart:!0};m.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:\"\",src:null,idx:-1};m.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:\"std\",sSortingClass:null,sSortingClassJUI:null,\nsTitle:null,sType:null,sWidth:null,sWidthOrig:null};m.defaults={aaData:null,aaSorting:[[0,\"asc\"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bJQueryUI:!1,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,\nfnFormatNumber:function(a){return a.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(a){try{return JSON.parse((-1===a.iStateDuration?sessionStorage:localStorage).getItem(\"DataTables_\"+a.sInstance+\"_\"+location.pathname))}catch(b){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(a,b){try{(-1===\na.iStateDuration?sessionStorage:localStorage).setItem(\"DataTables_\"+a.sInstance+\"_\"+location.pathname,JSON.stringify(b))}catch(c){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:\": activate to sort column ascending\",sSortDescending:\": activate to sort column descending\"},oPaginate:{sFirst:\"First\",sLast:\"Last\",sNext:\"Next\",sPrevious:\"Previous\"},sEmptyTable:\"No data available in table\",sInfo:\"Showing _START_ to _END_ of _TOTAL_ entries\",\nsInfoEmpty:\"Showing 0 to 0 of 0 entries\",sInfoFiltered:\"(filtered from _MAX_ total entries)\",sInfoPostFix:\"\",sDecimal:\"\",sThousands:\",\",sLengthMenu:\"Show _MENU_ entries\",sLoadingRecords:\"Loading...\",sProcessing:\"Processing...\",sSearch:\"Search:\",sSearchPlaceholder:\"\",sUrl:\"\",sZeroRecords:\"No matching records found\"},oSearch:h.extend({},m.models.oSearch),sAjaxDataProp:\"data\",sAjaxSource:null,sDom:\"lfrtip\",searchDelay:null,sPaginationType:\"simple_numbers\",sScrollX:\"\",sScrollXInner:\"\",sScrollY:\"\",sServerMethod:\"GET\",\nrenderer:null,rowId:\"DT_RowId\"};X(m.defaults);m.defaults.column={aDataSort:null,iDataSort:-1,asSorting:[\"asc\",\"desc\"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:\"td\",sClass:\"\",sContentPadding:\"\",sDefaultContent:null,sName:\"\",sSortDataType:\"std\",sTitle:null,sType:null,sWidth:null};X(m.defaults.column);m.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,\nbSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1,bBounding:!1,barWidth:0},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aIds:{},aoColumns:[],aoHeader:[],aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],\naoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:\"\",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:\"two_button\",iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:k,oAjaxData:k,\nfnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,bJUI:null,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return\"ssp\"==y(this)?1*this._iRecordsTotal:this.aiDisplayMaster.length},fnRecordsDisplay:function(){return\"ssp\"==y(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var a=\nthis._iDisplayLength,b=this._iDisplayStart,c=b+a,d=this.aiDisplay.length,e=this.oFeatures,f=e.bPaginate;return e.bServerSide?!1===f||-1===a?b+d:Math.min(b+a,this._iRecordsDisplay):!f||c>d||-1===a?d:c},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{},rowIdFn:null,rowId:null};m.ext=v={buttons:{},classes:{},builder:\"-source-\",errMode:\"alert\",feature:[],search:[],selector:{cell:[],column:[],row:[]},internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},\nheader:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:m.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:m.version};h.extend(v,{afnFiltering:v.search,aTypes:v.type.detect,ofnSearch:v.type.search,oSort:v.type.order,afnSortData:v.order,aoFeatures:v.feature,oApi:v.internal,oStdClasses:v.classes,oPagination:v.pager});h.extend(m.ext.classes,{sTable:\"dataTable\",sNoFooter:\"no-footer\",sPageButton:\"paginate_button\",sPageButtonActive:\"current\",sPageButtonDisabled:\"disabled\",sStripeOdd:\"odd\",\nsStripeEven:\"even\",sRowEmpty:\"dataTables_empty\",sWrapper:\"dataTables_wrapper\",sFilter:\"dataTables_filter\",sInfo:\"dataTables_info\",sPaging:\"dataTables_paginate paging_\",sLength:\"dataTables_length\",sProcessing:\"dataTables_processing\",sSortAsc:\"sorting_asc\",sSortDesc:\"sorting_desc\",sSortable:\"sorting\",sSortableAsc:\"sorting_asc_disabled\",sSortableDesc:\"sorting_desc_disabled\",sSortableNone:\"sorting_disabled\",sSortColumn:\"sorting_\",sFilterInput:\"\",sLengthSelect:\"\",sScrollWrapper:\"dataTables_scroll\",sScrollHead:\"dataTables_scrollHead\",\nsScrollHeadInner:\"dataTables_scrollHeadInner\",sScrollBody:\"dataTables_scrollBody\",sScrollFoot:\"dataTables_scrollFoot\",sScrollFootInner:\"dataTables_scrollFootInner\",sHeaderTH:\"\",sFooterTH:\"\",sSortJUIAsc:\"\",sSortJUIDesc:\"\",sSortJUI:\"\",sSortJUIAscAllowed:\"\",sSortJUIDescAllowed:\"\",sSortJUIWrapper:\"\",sSortIcon:\"\",sJUIHeader:\"\",sJUIFooter:\"\"});var Ca=\"\",Ca=\"\",H=Ca+\"ui-state-default\",ia=Ca+\"css_right ui-icon ui-icon-\",Xb=Ca+\"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix\";h.extend(m.ext.oJUIClasses,\nm.ext.classes,{sPageButton:\"fg-button ui-button \"+H,sPageButtonActive:\"ui-state-disabled\",sPageButtonDisabled:\"ui-state-disabled\",sPaging:\"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_\",sSortAsc:H+\" sorting_asc\",sSortDesc:H+\" sorting_desc\",sSortable:H+\" sorting\",sSortableAsc:H+\" sorting_asc_disabled\",sSortableDesc:H+\" sorting_desc_disabled\",sSortableNone:H+\" sorting_disabled\",sSortJUIAsc:ia+\"triangle-1-n\",sSortJUIDesc:ia+\"triangle-1-s\",sSortJUI:ia+\"carat-2-n-s\",\nsSortJUIAscAllowed:ia+\"carat-1-n\",sSortJUIDescAllowed:ia+\"carat-1-s\",sSortJUIWrapper:\"DataTables_sort_wrapper\",sSortIcon:\"DataTables_sort_icon\",sScrollHead:\"dataTables_scrollHead \"+H,sScrollFoot:\"dataTables_scrollFoot \"+H,sHeaderTH:H,sFooterTH:H,sJUIHeader:Xb+\" ui-corner-tl ui-corner-tr\",sJUIFooter:Xb+\" ui-corner-bl ui-corner-br\"});var Mb=m.ext.pager;h.extend(Mb,{simple:function(){return[\"previous\",\"next\"]},full:function(){return[\"first\",\"previous\",\"next\",\"last\"]},numbers:function(a,b){return[ya(a,\nb)]},simple_numbers:function(a,b){return[\"previous\",ya(a,b),\"next\"]},full_numbers:function(a,b){return[\"first\",\"previous\",ya(a,b),\"next\",\"last\"]},_numbers:ya,numbers_length:7});h.extend(!0,m.ext.renderer,{pageButton:{_:function(a,b,c,d,e,f){var g=a.oClasses,j=a.oLanguage.oPaginate,i=a.oLanguage.oAria.paginate||{},k,l,m=0,p=function(b,d){var o,r,u,s,v=function(b){Ta(a,b.data.action,true)};o=0;for(r=d.length;o<r;o++){s=d[o];if(h.isArray(s)){u=h(\"<\"+(s.DT_el||\"div\")+\"/>\").appendTo(b);p(u,s)}else{k=null;\nl=\"\";switch(s){case \"ellipsis\":b.append('<span class=\"ellipsis\">&#x2026;</span>');break;case \"first\":k=j.sFirst;l=s+(e>0?\"\":\" \"+g.sPageButtonDisabled);break;case \"previous\":k=j.sPrevious;l=s+(e>0?\"\":\" \"+g.sPageButtonDisabled);break;case \"next\":k=j.sNext;l=s+(e<f-1?\"\":\" \"+g.sPageButtonDisabled);break;case \"last\":k=j.sLast;l=s+(e<f-1?\"\":\" \"+g.sPageButtonDisabled);break;default:k=s+1;l=e===s?g.sPageButtonActive:\"\"}if(k!==null){u=h(\"<a>\",{\"class\":g.sPageButton+\" \"+l,\"aria-controls\":a.sTableId,\"aria-label\":i[s],\n\"data-dt-idx\":m,tabindex:a.iTabIndex,id:c===0&&typeof s===\"string\"?a.sTableId+\"_\"+s:null}).html(k).appendTo(b);Wa(u,{action:s},v);m++}}}},r;try{r=h(b).find(I.activeElement).data(\"dt-idx\")}catch(o){}p(h(b).empty(),d);r&&h(b).find(\"[data-dt-idx=\"+r+\"]\").focus()}}});h.extend(m.ext.type.detect,[function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c)?\"num\"+c:null},function(a){if(a&&!(a instanceof Date)&&(!ac.test(a)||!bc.test(a)))return null;var b=Date.parse(a);return null!==b&&!isNaN(b)||M(a)?\"date\":\nnull},function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c,!0)?\"num-fmt\"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c)?\"html-num\"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c,!0)?\"html-num-fmt\"+c:null},function(a){return M(a)||\"string\"===typeof a&&-1!==a.indexOf(\"<\")?\"html\":null}]);h.extend(m.ext.type.search,{html:function(a){return M(a)?a:\"string\"===typeof a?a.replace(Ob,\" \").replace(Aa,\"\"):\"\"},string:function(a){return M(a)?a:\"string\"===typeof a?a.replace(Ob,\n\" \"):a}});var za=function(a,b,c,d){if(0!==a&&(!a||\"-\"===a))return-Infinity;b&&(a=Qb(a,b));a.replace&&(c&&(a=a.replace(c,\"\")),d&&(a=a.replace(d,\"\")));return 1*a};h.extend(v.type.order,{\"date-pre\":function(a){return Date.parse(a)||0},\"html-pre\":function(a){return M(a)?\"\":a.replace?a.replace(/<.*?>/g,\"\").toLowerCase():a+\"\"},\"string-pre\":function(a){return M(a)?\"\":\"string\"===typeof a?a.toLowerCase():!a.toString?\"\":a.toString()},\"string-asc\":function(a,b){return a<b?-1:a>b?1:0},\"string-desc\":function(a,\nb){return a<b?1:a>b?-1:0}});db(\"\");h.extend(!0,m.ext.renderer,{header:{_:function(a,b,c,d){h(a.nTable).on(\"order.dt.DT\",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(c.sSortingClass+\" \"+d.sSortAsc+\" \"+d.sSortDesc).addClass(h[e]==\"asc\"?d.sSortAsc:h[e]==\"desc\"?d.sSortDesc:c.sSortingClass)}})},jqueryui:function(a,b,c,d){h(\"<div/>\").addClass(d.sSortJUIWrapper).append(b.contents()).append(h(\"<span/>\").addClass(d.sSortIcon+\" \"+c.sSortingClassJUI)).appendTo(b);h(a.nTable).on(\"order.dt.DT\",function(e,\nf,g,h){if(a===f){e=c.idx;b.removeClass(d.sSortAsc+\" \"+d.sSortDesc).addClass(h[e]==\"asc\"?d.sSortAsc:h[e]==\"desc\"?d.sSortDesc:c.sSortingClass);b.find(\"span.\"+d.sSortIcon).removeClass(d.sSortJUIAsc+\" \"+d.sSortJUIDesc+\" \"+d.sSortJUI+\" \"+d.sSortJUIAscAllowed+\" \"+d.sSortJUIDescAllowed).addClass(h[e]==\"asc\"?d.sSortJUIAsc:h[e]==\"desc\"?d.sSortJUIDesc:c.sSortingClassJUI)}})}}});var Yb=function(a){return\"string\"===typeof a?a.replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\"):a};m.render={number:function(a,\nb,c,d,e){return{display:function(f){if(\"number\"!==typeof f&&\"string\"!==typeof f)return f;var g=0>f?\"-\":\"\",h=parseFloat(f);if(isNaN(h))return Yb(f);f=Math.abs(h);h=parseInt(f,10);f=c?b+(f-h).toFixed(c).substring(2):\"\";return g+(d||\"\")+h.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,a)+f+(e||\"\")}}},text:function(){return{display:Yb}}};h.extend(m.ext.internal,{_fnExternApiFunc:Nb,_fnBuildAjax:ra,_fnAjaxUpdate:lb,_fnAjaxParameters:ub,_fnAjaxUpdateDraw:vb,_fnAjaxDataSrc:sa,_fnAddColumn:Ea,_fnColumnOptions:ja,\n_fnAdjustColumnSizing:Y,_fnVisibleToColumnIndex:Z,_fnColumnIndexToVisible:$,_fnVisbleColumns:aa,_fnGetColumns:la,_fnColumnTypes:Ga,_fnApplyColumnDefs:ib,_fnHungarianMap:X,_fnCamelToHungarian:K,_fnLanguageCompat:Da,_fnBrowserDetect:gb,_fnAddData:N,_fnAddTr:ma,_fnNodeToDataIndex:function(a,b){return b._DT_RowIndex!==k?b._DT_RowIndex:null},_fnNodeToColumnIndex:function(a,b,c){return h.inArray(c,a.aoData[b].anCells)},_fnGetCellData:B,_fnSetCellData:jb,_fnSplitObjNotation:Ja,_fnGetObjectDataFn:Q,_fnSetObjectDataFn:R,\n_fnGetDataMaster:Ka,_fnClearTable:na,_fnDeleteIndex:oa,_fnInvalidate:ca,_fnGetRowElements:Ia,_fnCreateTr:Ha,_fnBuildHead:kb,_fnDrawHead:ea,_fnDraw:O,_fnReDraw:T,_fnAddOptionsHtml:nb,_fnDetectHeader:da,_fnGetUniqueThs:qa,_fnFeatureHtmlFilter:pb,_fnFilterComplete:fa,_fnFilterCustom:yb,_fnFilterColumn:xb,_fnFilter:wb,_fnFilterCreateSearch:Pa,_fnEscapeRegex:Qa,_fnFilterData:zb,_fnFeatureHtmlInfo:sb,_fnUpdateInfo:Cb,_fnInfoMacros:Db,_fnInitialise:ga,_fnInitComplete:ta,_fnLengthChange:Ra,_fnFeatureHtmlLength:ob,\n_fnFeatureHtmlPaginate:tb,_fnPageChange:Ta,_fnFeatureHtmlProcessing:qb,_fnProcessingDisplay:C,_fnFeatureHtmlTable:rb,_fnScrollDraw:ka,_fnApplyToChildren:J,_fnCalculateColumnWidths:Fa,_fnThrottle:Oa,_fnConvertToWidth:Fb,_fnGetWidestNode:Gb,_fnGetMaxLenString:Hb,_fnStringToCss:x,_fnSortFlatten:V,_fnSort:mb,_fnSortAria:Jb,_fnSortListener:Va,_fnSortAttachListener:Ma,_fnSortingClasses:va,_fnSortData:Ib,_fnSaveState:wa,_fnLoadState:Kb,_fnSettingsFromNode:xa,_fnLog:L,_fnMap:E,_fnBindAction:Wa,_fnCallbackReg:z,\n_fnCallbackFire:u,_fnLengthOverflow:Sa,_fnRenderer:Na,_fnDataSource:y,_fnRowAttributes:La,_fnCalculateEnd:function(){}});h.fn.dataTable=m;m.$=h;h.fn.dataTableSettings=m.settings;h.fn.dataTableExt=m.ext;h.fn.DataTable=function(a){return h(this).dataTable(a).api()};h.each(m,function(a,b){h.fn.DataTable[a]=b});return h.fn.dataTable});\n\n",
    "/*!\n Buttons for DataTables 1.2.1\n ©2016 SpryMedia Ltd - datatables.net/license\n*/\n(function(d){\"function\"===typeof define&&define.amd?define('datatables.net-buttons',[\"jquery\",\"datatables.net\"],function(o){return d(o,window,document)}):\"object\"===typeof exports?module.exports=function(o,n){o||(o=window);if(!n||!n.fn.dataTable)n=require(\"datatables.net\")(o,n).$;return d(n,o,o.document)}:d(jQuery,window,document)})(function(d,o,n,l){var i=d.fn.dataTable,u=0,v=0,k=i.ext.buttons,m=function(a,b){!0===b&&(b={});d.isArray(b)&&(b={buttons:b});this.c=d.extend(!0,{},m.defaults,b);b.buttons&&(this.c.buttons=b.buttons);\nthis.s={dt:new i.Api(a),buttons:[],listenKeys:\"\",namespace:\"dtb\"+u++};this.dom={container:d(\"<\"+this.c.dom.container.tag+\"/>\").addClass(this.c.dom.container.className)};this._constructor()};d.extend(m.prototype,{action:function(a,b){var c=this._nodeToButton(a);if(b===l)return c.conf.action;c.conf.action=b;return this},active:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.button.active,c=d(c.node);if(b===l)return c.hasClass(e);c.toggleClass(e,b===l?!0:b);return this},add:function(a,b){var c=\nthis.s.buttons;if(\"string\"===typeof b){for(var e=b.split(\"-\"),c=this.s,d=0,h=e.length-1;d<h;d++)c=c.buttons[1*e[d]];c=c.buttons;b=1*e[e.length-1]}this._expandButton(c,a,!1,b);this._draw();return this},container:function(){return this.dom.container},disable:function(a){a=this._nodeToButton(a);d(a.node).addClass(this.c.dom.button.disabled);return this},destroy:function(){d(\"body\").off(\"keyup.\"+this.s.namespace);var a=this.s.buttons.slice(),b,c;b=0;for(c=a.length;b<c;b++)this.remove(a[b].node);this.dom.container.remove();\na=this.s.dt.settings()[0];b=0;for(c=a.length;b<c;b++)if(a.inst===this){a.splice(b,1);break}return this},enable:function(a,b){if(!1===b)return this.disable(a);var c=this._nodeToButton(a);d(c.node).removeClass(this.c.dom.button.disabled);return this},name:function(){return this.c.name},node:function(a){a=this._nodeToButton(a);return d(a.node)},remove:function(a){var b=this._nodeToButton(a),c=this._nodeToHost(a),e=this.s.dt;if(b.buttons.length)for(var g=b.buttons.length-1;0<=g;g--)this.remove(b.buttons[g].node);\nb.conf.destroy&&b.conf.destroy.call(e.button(a),e,d(a),b.conf);this._removeKey(b.conf);d(b.node).remove();a=d.inArray(b,c);c.splice(a,1);return this},text:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.collection.buttonLiner,e=c.inCollection&&e&&e.tag?e.tag:this.c.dom.buttonLiner.tag,g=this.s.dt,h=d(c.node),f=function(a){return\"function\"===typeof a?a(g,h,c.conf):a};if(b===l)return f(c.conf.text);c.conf.text=b;e?h.children(e).html(f(b)):h.html(f(b));return this},_constructor:function(){var a=\nthis,b=this.s.dt,c=b.settings()[0],e=this.c.buttons;c._buttons||(c._buttons=[]);c._buttons.push({inst:this,name:this.c.name});for(var c=0,g=e.length;c<g;c++)this.add(e[c]);b.on(\"destroy\",function(){a.destroy()});d(\"body\").on(\"keyup.\"+this.s.namespace,function(b){if(!n.activeElement||n.activeElement===n.body){var c=String.fromCharCode(b.keyCode).toLowerCase();a.s.listenKeys.toLowerCase().indexOf(c)!==-1&&a._keypress(c,b)}})},_addKey:function(a){a.key&&(this.s.listenKeys+=d.isPlainObject(a.key)?a.key.key:\na.key)},_draw:function(a,b){a||(a=this.dom.container,b=this.s.buttons);a.children().detach();for(var c=0,d=b.length;c<d;c++)a.append(b[c].inserter),b[c].buttons&&b[c].buttons.length&&this._draw(b[c].collection,b[c].buttons)},_expandButton:function(a,b,c,e){for(var g=this.s.dt,h=0,b=!d.isArray(b)?[b]:b,f=0,q=b.length;f<q;f++){var j=this._resolveExtends(b[f]);if(j)if(d.isArray(j))this._expandButton(a,j,c,e);else{var p=this._buildButton(j,c);if(p){e!==l?(a.splice(e,0,p),e++):a.push(p);if(p.conf.buttons){var s=\nthis.c.dom.collection;p.collection=d(\"<\"+s.tag+\"/>\").addClass(s.className);p.conf._collection=p.collection;this._expandButton(p.buttons,p.conf.buttons,!0,e)}j.init&&j.init.call(g.button(p.node),g,d(p.node),j);h++}}}},_buildButton:function(a,b){var c=this.c.dom.button,e=this.c.dom.buttonLiner,g=this.c.dom.collection,h=this.s.dt,f=function(b){return\"function\"===typeof b?b(h,j,a):b};b&&g.button&&(c=g.button);b&&g.buttonLiner&&(e=g.buttonLiner);if(a.available&&!a.available(h,a))return!1;var q=function(a,\nb,c,e){e.action.call(b.button(c),a,b,c,e);d(b.table().node()).triggerHandler(\"buttons-action.dt\",[b.button(c),b,c,e])},j=d(\"<\"+c.tag+\"/>\").addClass(c.className).attr(\"tabindex\",this.s.dt.settings()[0].iTabIndex).attr(\"aria-controls\",this.s.dt.table().node().id).on(\"click.dtb\",function(b){b.preventDefault();!j.hasClass(c.disabled)&&a.action&&q(b,h,j,a);j.blur()}).on(\"keyup.dtb\",function(b){b.keyCode===13&&!j.hasClass(c.disabled)&&a.action&&q(b,h,j,a)});\"a\"===c.tag.toLowerCase()&&j.attr(\"href\",\"#\");\ne.tag?(g=d(\"<\"+e.tag+\"/>\").html(f(a.text)).addClass(e.className),\"a\"===e.tag.toLowerCase()&&g.attr(\"href\",\"#\"),j.append(g)):j.html(f(a.text));!1===a.enabled&&j.addClass(c.disabled);a.className&&j.addClass(a.className);a.titleAttr&&j.attr(\"title\",a.titleAttr);a.namespace||(a.namespace=\".dt-button-\"+v++);e=(e=this.c.dom.buttonContainer)&&e.tag?d(\"<\"+e.tag+\"/>\").addClass(e.className).append(j):j;this._addKey(a);return{conf:a,node:j.get(0),inserter:e,buttons:[],inCollection:b,collection:null}},_nodeToButton:function(a,\nb){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b[c];if(b[c].buttons.length){var g=this._nodeToButton(a,b[c].buttons);if(g)return g}}},_nodeToHost:function(a,b){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b;if(b[c].buttons.length){var g=this._nodeToHost(a,b[c].buttons);if(g)return g}}},_keypress:function(a,b){var c=function(e){for(var g=0,h=e.length;g<h;g++){var f=e[g].conf,q=e[g].node;if(f.key)if(f.key===a)d(q).click();else if(d.isPlainObject(f.key)&&\nf.key.key===a&&(!f.key.shiftKey||b.shiftKey))if(!f.key.altKey||b.altKey)if(!f.key.ctrlKey||b.ctrlKey)(!f.key.metaKey||b.metaKey)&&d(q).click();e[g].buttons.length&&c(e[g].buttons)}};c(this.s.buttons)},_removeKey:function(a){if(a.key){var b=d.isPlainObject(a.key)?a.key.key:a.key,a=this.s.listenKeys.split(\"\"),b=d.inArray(b,a);a.splice(b,1);this.s.listenKeys=a.join(\"\")}},_resolveExtends:function(a){for(var b=this.s.dt,c,e,g=function(c){for(var e=0;!d.isPlainObject(c)&&!d.isArray(c);){if(c===l)return;\nif(\"function\"===typeof c){if(c=c(b,a),!c)return!1}else if(\"string\"===typeof c){if(!k[c])throw\"Unknown button type: \"+c;c=k[c]}e++;if(30<e)throw\"Buttons: Too many iterations\";}return d.isArray(c)?c:d.extend({},c)},a=g(a);a&&a.extend;){if(!k[a.extend])throw\"Cannot extend unknown button type: \"+a.extend;var h=g(k[a.extend]);if(d.isArray(h))return h;if(!h)return!1;c=h.className;a=d.extend({},h,a);c&&a.className!==c&&(a.className=c+\" \"+a.className);var f=a.postfixButtons;if(f){a.buttons||(a.buttons=[]);\nc=0;for(e=f.length;c<e;c++)a.buttons.push(f[c]);a.postfixButtons=null}if(f=a.prefixButtons){a.buttons||(a.buttons=[]);c=0;for(e=f.length;c<e;c++)a.buttons.splice(c,0,f[c]);a.prefixButtons=null}a.extend=h.extend}return a}});m.background=function(a,b,c){c===l&&(c=400);a?d(\"<div/>\").addClass(b).css(\"display\",\"none\").appendTo(\"body\").fadeIn(c):d(\"body > div.\"+b).fadeOut(c,function(){d(this).remove()})};m.instanceSelector=function(a,b){if(!a)return d.map(b,function(a){return a.inst});var c=[],e=d.map(b,\nfunction(a){return a.name}),g=function(a){if(d.isArray(a))for(var f=0,q=a.length;f<q;f++)g(a[f]);else\"string\"===typeof a?-1!==a.indexOf(\",\")?g(a.split(\",\")):(a=d.inArray(d.trim(a),e),-1!==a&&c.push(b[a].inst)):\"number\"===typeof a&&c.push(b[a].inst)};g(a);return c};m.buttonSelector=function(a,b){for(var c=[],e=function(a,b,c){for(var d,g,f=0,h=b.length;f<h;f++)if(d=b[f])g=c!==l?c+f:f+\"\",a.push({node:d.node,name:d.conf.name,idx:g}),d.buttons&&e(a,d.buttons,g+\"-\")},g=function(a,b){var f,h,i=[];e(i,b.s.buttons);\nf=d.map(i,function(a){return a.node});if(d.isArray(a)||a instanceof d){f=0;for(h=a.length;f<h;f++)g(a[f],b)}else if(null===a||a===l||\"*\"===a){f=0;for(h=i.length;f<h;f++)c.push({inst:b,node:i[f].node})}else if(\"number\"===typeof a)c.push({inst:b,node:b.s.buttons[a].node});else if(\"string\"===typeof a)if(-1!==a.indexOf(\",\")){i=a.split(\",\");f=0;for(h=i.length;f<h;f++)g(d.trim(i[f]),b)}else if(a.match(/^\\d+(\\-\\d+)*$/))f=d.map(i,function(a){return a.idx}),c.push({inst:b,node:i[d.inArray(a,f)].node});else if(-1!==\na.indexOf(\":name\")){var k=a.replace(\":name\",\"\");f=0;for(h=i.length;f<h;f++)i[f].name===k&&c.push({inst:b,node:i[f].node})}else d(f).filter(a).each(function(){c.push({inst:b,node:this})});else\"object\"===typeof a&&a.nodeName&&(i=d.inArray(a,f),-1!==i&&c.push({inst:b,node:f[i]}))},h=0,f=a.length;h<f;h++)g(b,a[h]);return c};m.defaults={buttons:[\"copy\",\"excel\",\"csv\",\"pdf\",\"print\"],name:\"main\",tabIndex:0,dom:{container:{tag:\"div\",className:\"dt-buttons\"},collection:{tag:\"div\",className:\"dt-button-collection\"},\nbutton:{tag:\"a\",className:\"dt-button\",active:\"active\",disabled:\"disabled\"},buttonLiner:{tag:\"span\",className:\"\"}}};m.version=\"1.2.1\";d.extend(k,{collection:{text:function(a){return a.i18n(\"buttons.collection\",\"Collection\")},className:\"buttons-collection\",action:function(a,b,c,e){var a=c.offset(),g=d(b.table().container()),h=!1;d(\"div.dt-button-background\").length&&(h=d(\"div.dt-button-collection\").offset(),d(\"body\").trigger(\"click.dtb-collection\"));e._collection.addClass(e.collectionLayout).css(\"display\",\n\"none\").appendTo(\"body\").fadeIn(e.fade);var f=e._collection.css(\"position\");h&&\"absolute\"===f?e._collection.css({top:h.top+5,left:h.left+5}):\"absolute\"===f?(e._collection.css({top:a.top+c.outerHeight(),left:a.left}),c=a.left+e._collection.outerWidth(),g=g.offset().left+g.width(),c>g&&e._collection.css(\"left\",a.left-(c-g))):(a=e._collection.height()/2,a>d(o).height()/2&&(a=d(o).height()/2),e._collection.css(\"marginTop\",-1*a));e.background&&m.background(!0,e.backgroundClassName,e.fade);setTimeout(function(){d(\"div.dt-button-background\").on(\"click.dtb-collection\",\nfunction(){});d(\"body\").on(\"click.dtb-collection\",function(a){if(!d(a.target).parents().andSelf().filter(e._collection).length){e._collection.fadeOut(e.fade,function(){e._collection.detach()});d(\"div.dt-button-background\").off(\"click.dtb-collection\");m.background(false,e.backgroundClassName,e.fade);d(\"body\").off(\"click.dtb-collection\");b.off(\"buttons-action.b-internal\")}})},10);if(e.autoClose)b.on(\"buttons-action.b-internal\",function(){d(\"div.dt-button-background\").click()})},background:!0,collectionLayout:\"\",\nbackgroundClassName:\"dt-button-background\",autoClose:!1,fade:400},copy:function(a,b){if(k.copyHtml5)return\"copyHtml5\";if(k.copyFlash&&k.copyFlash.available(a,b))return\"copyFlash\"},csv:function(a,b){if(k.csvHtml5&&k.csvHtml5.available(a,b))return\"csvHtml5\";if(k.csvFlash&&k.csvFlash.available(a,b))return\"csvFlash\"},excel:function(a,b){if(k.excelHtml5&&k.excelHtml5.available(a,b))return\"excelHtml5\";if(k.excelFlash&&k.excelFlash.available(a,b))return\"excelFlash\"},pdf:function(a,b){if(k.pdfHtml5&&k.pdfHtml5.available(a,\nb))return\"pdfHtml5\";if(k.pdfFlash&&k.pdfFlash.available(a,b))return\"pdfFlash\"},pageLength:function(a){var a=a.settings()[0].aLengthMenu,b=d.isArray(a[0])?a[0]:a,c=d.isArray(a[0])?a[1]:a,e=function(a){return a.i18n(\"buttons.pageLength\",{\"-1\":\"Show all rows\",_:\"Show %d rows\"},a.page.len())};return{extend:\"collection\",text:e,className:\"buttons-page-length\",autoClose:!0,buttons:d.map(b,function(a,b){return{text:c[b],action:function(b,c){c.page.len(a).draw()},init:function(b,c,d){var e=this,c=function(){e.active(b.page.len()===\na)};b.on(\"length.dt\"+d.namespace,c);c()},destroy:function(a,b,c){a.off(\"length.dt\"+c.namespace)}}}),init:function(a,b,c){var d=this;a.on(\"length.dt\"+c.namespace,function(){d.text(e(a))})},destroy:function(a,b,c){a.off(\"length.dt\"+c.namespace)}}}});i.Api.register(\"buttons()\",function(a,b){b===l&&(b=a,a=l);return this.iterator(!0,\"table\",function(c){if(c._buttons)return m.buttonSelector(m.instanceSelector(a,c._buttons),b)},!0)});i.Api.register(\"button()\",function(a,b){var c=this.buttons(a,b);1<c.length&&\nc.splice(1,c.length);return c});i.Api.registerPlural(\"buttons().active()\",\"button().active()\",function(a){return a===l?this.map(function(a){return a.inst.active(a.node)}):this.each(function(b){b.inst.active(b.node,a)})});i.Api.registerPlural(\"buttons().action()\",\"button().action()\",function(a){return a===l?this.map(function(a){return a.inst.action(a.node)}):this.each(function(b){b.inst.action(b.node,a)})});i.Api.register([\"buttons().enable()\",\"button().enable()\"],function(a){return this.each(function(b){b.inst.enable(b.node,\na)})});i.Api.register([\"buttons().disable()\",\"button().disable()\"],function(){return this.each(function(a){a.inst.disable(a.node)})});i.Api.registerPlural(\"buttons().nodes()\",\"button().node()\",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.node(b.node))}));return a});i.Api.registerPlural(\"buttons().text()\",\"button().text()\",function(a){return a===l?this.map(function(a){return a.inst.text(a.node)}):this.each(function(b){b.inst.text(b.node,a)})});i.Api.registerPlural(\"buttons().trigger()\",\n\"button().trigger()\",function(){return this.each(function(a){a.inst.node(a.node).trigger(\"click\")})});i.Api.registerPlural(\"buttons().containers()\",\"buttons().container()\",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.container())}));return a});i.Api.register(\"button().add()\",function(a,b){1===this.length&&this[0].inst.add(b,a);return this.button(a)});i.Api.register(\"buttons().destroy()\",function(){this.pluck(\"inst\").unique().each(function(a){a.destroy()});return this});i.Api.registerPlural(\"buttons().remove()\",\n\"buttons().remove()\",function(){this.each(function(a){a.inst.remove(a.node)});return this});var r;i.Api.register(\"buttons.info()\",function(a,b,c){var e=this;if(!1===a)return d(\"#datatables_buttons_info\").fadeOut(function(){d(this).remove()}),clearTimeout(r),r=null,this;r&&clearTimeout(r);d(\"#datatables_buttons_info\").length&&d(\"#datatables_buttons_info\").remove();d('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>').html(a?\"<h2>\"+a+\"</h2>\":\"\").append(d(\"<div/>\")[\"string\"===typeof b?\"html\":\n\"append\"](b)).css(\"display\",\"none\").appendTo(\"body\").fadeIn();c!==l&&0!==c&&(r=setTimeout(function(){e.buttons.info(!1)},c));return this});i.Api.register(\"buttons.exportData()\",function(a){if(this.context.length){for(var b=new i.Api(this.context[0]),c=d.extend(!0,{},{rows:null,columns:\"\",modifier:{search:\"applied\",order:\"applied\"},orthogonal:\"display\",stripHtml:!0,stripNewlines:!0,decodeEntities:!0,trim:!0,format:{header:function(a){return e(a)},footer:function(a){return e(a)},body:function(a){return e(a)}}},\na),e=function(a){if(\"string\"!==typeof a)return a;c.stripHtml&&(a=a.replace(/<[^>]*>/g,\"\"));c.trim&&(a=a.replace(/^\\s+|\\s+$/g,\"\"));c.stripNewlines&&(a=a.replace(/\\n/g,\" \"));c.decodeEntities&&(t.innerHTML=a,a=t.value);return a},a=b.columns(c.columns).indexes().map(function(a){return c.format.header(b.column(a).header().innerHTML,a)}).toArray(),g=b.table().footer()?b.columns(c.columns).indexes().map(function(a){var d=b.column(a).footer();return c.format.footer(d?d.innerHTML:\"\",a)}).toArray():null,h=\nb.rows(c.rows,c.modifier).indexes().toArray(),h=b.cells(h,c.columns).render(c.orthogonal).toArray(),f=a.length,k=0<f?h.length/f:0,j=Array(k),m=0,l=0;l<k;l++){for(var o=Array(f),n=0;n<f;n++)o[n]=c.format.body(h[m],n,l),m++;j[l]=o}return{header:a,footer:g,body:j}}});var t=d(\"<textarea/>\")[0];d.fn.dataTable.Buttons=m;d.fn.DataTable.Buttons=m;d(n).on(\"init.dt plugin-init.dt\",function(a,b){if(\"dt\"===a.namespace){var c=b.oInit.buttons||i.defaults.buttons;c&&!b._buttons&&(new m(b,c)).container()}});i.ext.feature.push({fnInit:function(a){var a=\nnew i.Api(a),b=a.init().buttons||i.defaults.buttons;return(new m(a,b)).container()},cFeature:\"B\"});return m});\n\n",
    "(function(g){\"function\"===typeof define&&define.amd?define('datatables.net-buttons-html',[\"jquery\",\"datatables.net\",\"datatables.net-buttons\"],function(j){return g(j,window,document)}):\"object\"===typeof exports?module.exports=function(j,i,q,r){j||(j=window);if(!i||!i.fn.dataTable)i=require(\"datatables.net\")(j,i).$;i.fn.dataTable.Buttons||require(\"datatables.net-buttons\")(j,i);return g(i,j,j.document,q,r)}:g(jQuery,window,document)})(function(g,j,i,q,r,m){function E(a,b){v===m&&(v=-1===y.serializeToString(g.parseXML(F[\"xl/worksheets/sheet1.xml\"])).indexOf(\"xmlns:r\"));\ng.each(b,function(b,c){if(g.isPlainObject(c)){var e=a.folder(b);E(e,c)}else{if(v){var e=c.childNodes[0],f,h,n=[];for(f=e.attributes.length-1;0<=f;f--){h=e.attributes[f].nodeName;var k=e.attributes[f].nodeValue;-1!==h.indexOf(\":\")&&(n.push({name:h,value:k}),e.removeAttribute(h))}f=0;for(h=n.length;f<h;f++)k=c.createAttribute(n[f].name.replace(\":\",\"_dt_b_namespace_token_\")),k.value=n[f].value,e.setAttributeNode(k)}e=y.serializeToString(c);v&&(-1===e.indexOf(\"<?xml\")&&(e='<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>'+\ne),e=e.replace(/_dt_b_namespace_token_/g,\":\"));e=e.replace(/<row xmlns=\"\" /g,\"<row \").replace(/<cols xmlns=\"\">/g,\"<cols>\");a.file(b,e)}})}function o(a,b,d){var c=a.createElement(b);d&&(d.attr&&g(c).attr(d.attr),d.children&&g.each(d.children,function(a,b){c.appendChild(b)}),d.text&&c.appendChild(a.createTextNode(d.text)));return c}function N(a,b){var d=a.header[b].length,c;a.footer&&a.footer[b].length>d&&(d=a.footer[b].length);for(var e=0,f=a.body.length;e<f&&!(c=a.body[e][b].toString().length,c>d&&\n(d=c),40<d);e++);return 5<d?d:5}var s=g.fn.dataTable;q===m&&(q=j.JSZip);r===m&&(r=j.pdfMake);var p;var h=\"undefined\"!==typeof self&&self||\"undefined\"!==typeof j&&j||this.content;if(\"undefined\"!==typeof navigator&&/MSIE [1-9]\\./.test(navigator.userAgent))p=void 0;else{var w=h.document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"a\"),O=\"download\"in w,G=/Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent),z=h.webkitRequestFileSystem,H=h.requestFileSystem||z||h.mozRequestFileSystem,P=function(a){(h.setImmediate||\nh.setTimeout)(function(){throw a;},0)},A=0,B=function(a){setTimeout(function(){typeof a===\"string\"?(h.URL||h.webkitURL||h).revokeObjectURL(a):a.remove()},4E4)},C=function(a,b,d){for(var b=[].concat(b),c=b.length;c--;){var e=a[\"on\"+b[c]];if(typeof e===\"function\")try{e.call(a,d||a)}catch(f){P(f)}}},I=function(a){return/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"﻿\",a],{type:a.type}):a},J=function(a,b,d){d||(a=I(a));var c=this,d=a.type,e=false,\nf,g,n=function(){C(c,[\"writestart\",\"progress\",\"write\",\"writeend\"])},k=function(){if(g&&G&&typeof FileReader!==\"undefined\"){var b=new FileReader;b.onloadend=function(){var a=b.result;g.location.href=\"data:attachment/file\"+a.slice(a.search(/[,;]/));c.readyState=c.DONE;n()};b.readAsDataURL(a);c.readyState=c.INIT}else{if(e||!f)f=(h.URL||h.webkitURL||h).createObjectURL(a);if(g)g.location.href=f;else if(h.open(f,\"_blank\")===m&&G)h.location.href=f;c.readyState=c.DONE;n();B(f)}},t=function(a){return function(){if(c.readyState!==\nc.DONE)return a.apply(this,arguments)}},j={create:true,exclusive:false},u;c.readyState=c.INIT;b||(b=\"download\");if(O){f=(h.URL||h.webkitURL||h).createObjectURL(a);setTimeout(function(){w.href=f;w.download=b;var a=new MouseEvent(\"click\");w.dispatchEvent(a);n();B(f);c.readyState=c.DONE})}else{if(h.chrome&&d&&d!==\"application/octet-stream\"){u=a.slice||a.webkitSlice;a=u.call(a,0,a.size,\"application/octet-stream\");e=true}z&&b!==\"download\"&&(b=b+\".download\");if(d===\"application/octet-stream\"||z)g=h;if(H){A=\nA+a.size;H(h.TEMPORARY,A,t(function(d){d.root.getDirectory(\"saved\",j,t(function(d){var f=function(){d.getFile(b,j,t(function(b){b.createWriter(t(function(d){d.onwriteend=function(a){g.location.href=b.toURL();c.readyState=c.DONE;C(c,\"writeend\",a);B(b)};d.onerror=function(){var a=d.error;a.code!==a.ABORT_ERR&&k()};[\"writestart\",\"progress\",\"write\",\"abort\"].forEach(function(a){d[\"on\"+a]=c[\"on\"+a]});d.write(a);c.abort=function(){d.abort();c.readyState=c.DONE};c.readyState=c.WRITING}),k)}),k)};d.getFile(b,\n{create:false},t(function(a){a.remove();f()}),t(function(a){a.code===a.NOT_FOUND_ERR?f():k()}))}),k)}),k)}else k()}},l=J.prototype;\"undefined\"!==typeof navigator&&navigator.msSaveOrOpenBlob?p=function(a,b,d){d||(a=I(a));return navigator.msSaveOrOpenBlob(a,b||\"download\")}:(l.abort=function(){this.readyState=this.DONE;C(this,\"abort\")},l.readyState=l.INIT=0,l.WRITING=1,l.DONE=2,l.error=l.onwritestart=l.onprogress=l.onwrite=l.onabort=l.onerror=l.onwriteend=null,p=function(a,b,d){return new J(a,b,d)})}s.fileSave=\np;var x=function(a,b){var d=a.filename===\"*\"&&a.title!==\"*\"&&a.title!==m?a.title:a.filename;typeof d===\"function\"&&(d=d());d.indexOf(\"*\")!==-1&&(d=g.trim(d.replace(\"*\",g(\"title\").text())));d=d.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g,\"\");return b===m||b===true?d+a.extension:d},Q=function(a){var b=\"Sheet1\";a.sheetName&&(b=a.sheetName.replace(/[\\[\\]\\*\\/\\\\\\?\\:]/g,\"\"));return b},R=function(a){a=a.title;typeof a===\"function\"&&(a=a());return a.indexOf(\"*\")!==-1?a.replace(\"*\",g(\"title\").text()||\n\"Exported data\"):a},K=function(a){return a.newline?a.newline:navigator.userAgent.match(/Windows/)?\"\\r\\n\":\"\\n\"},L=function(a,b){for(var d=K(b),c=a.buttons.exportData(b.exportOptions),e=b.fieldBoundary,f=b.fieldSeparator,g=RegExp(e,\"g\"),h=b.escapeChar!==m?b.escapeChar:\"\\\\\",k=function(a){for(var b=\"\",c=0,d=a.length;c<d;c++){c>0&&(b=b+f);b=b+(e?e+(\"\"+a[c]).replace(g,h+e)+e:a[c])}return b},j=b.header?k(c.header)+d:\"\",i=b.footer&&c.footer?d+k(c.footer):\"\",u=[],D=0,l=c.body.length;D<l;D++)u.push(k(c.body[D]));\nreturn{str:j+u.join(d)+i,rows:u.length}},M=function(){return navigator.userAgent.indexOf(\"Safari\")!==-1&&navigator.userAgent.indexOf(\"Chrome\")===-1&&navigator.userAgent.indexOf(\"Opera\")===-1};try{var y=new XMLSerializer,v}catch(S){}var F={\"_rels/.rels\":'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\"/></Relationships>',\n\"xl/_rels/workbook.xml.rels\":'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet1.xml\"/><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\"/></Relationships>',\"[Content_Types].xml\":'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Default Extension=\"jpeg\" ContentType=\"image/jpeg\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/xl/worksheets/sheet1.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /></Types>',\n\"xl/workbook.xml\":'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><workbook xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"><fileVersion appName=\"xl\" lastEdited=\"5\" lowestEdited=\"5\" rupBuild=\"24816\"/><workbookPr showInkAnnotation=\"0\" autoCompressPictures=\"0\"/><bookViews><workbookView xWindow=\"0\" yWindow=\"0\" windowWidth=\"25600\" windowHeight=\"19020\" tabRatio=\"500\"/></bookViews><sheets><sheet name=\"\" sheetId=\"1\" r:id=\"rId1\"/></sheets></workbook>',\n\"xl/worksheets/sheet1.xml\":'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\"><sheetData/></worksheet>',\"xl/styles.xml\":'<?xml version=\"1.0\" encoding=\"UTF-8\"?><styleSheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\"><fonts count=\"5\" x14ac:knownFonts=\"1\"><font><sz val=\"11\" /><name val=\"Calibri\" /></font><font><sz val=\"11\" /><name val=\"Calibri\" /><color rgb=\"FFFFFFFF\" /></font><font><sz val=\"11\" /><name val=\"Calibri\" /><b /></font><font><sz val=\"11\" /><name val=\"Calibri\" /><i /></font><font><sz val=\"11\" /><name val=\"Calibri\" /><u /></font></fonts><fills count=\"6\"><fill><patternFill patternType=\"none\" /></fill><fill/><fill><patternFill patternType=\"solid\"><fgColor rgb=\"FFD9D9D9\" /><bgColor indexed=\"64\" /></patternFill></fill><fill><patternFill patternType=\"solid\"><fgColor rgb=\"FFD99795\" /><bgColor indexed=\"64\" /></patternFill></fill><fill><patternFill patternType=\"solid\"><fgColor rgb=\"ffc6efce\" /><bgColor indexed=\"64\" /></patternFill></fill><fill><patternFill patternType=\"solid\"><fgColor rgb=\"ffc6cfef\" /><bgColor indexed=\"64\" /></patternFill></fill></fills><borders count=\"2\"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp=\"false\" diagonalDown=\"false\"><left style=\"thin\"><color auto=\"1\" /></left><right style=\"thin\"><color auto=\"1\" /></right><top style=\"thin\"><color auto=\"1\" /></top><bottom style=\"thin\"><color auto=\"1\" /></bottom><diagonal /></border></borders><cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" /></cellStyleXfs><cellXfs count=\"2\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"0\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"0\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"0\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"0\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"2\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"2\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"2\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"2\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"2\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"4\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"5\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"5\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"5\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"5\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"5\" borderId=\"0\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"0\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"0\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"0\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"0\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"2\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"2\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"2\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"2\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"2\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"3\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"3\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"3\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"3\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"3\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"4\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"4\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"4\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"4\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"4\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"0\" fillId=\"5\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"1\" fillId=\"5\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"2\" fillId=\"5\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"3\" fillId=\"5\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/><xf numFmtId=\"0\" fontId=\"4\" fillId=\"5\" borderId=\"1\" applyFont=\"1\" applyFill=\"1\" applyBorder=\"1\"/></cellXfs><cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\" /></cellStyles><dxfs count=\"0\" /><tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\" /></styleSheet>'};\ns.ext.buttons.copyHtml5={className:\"buttons-copy buttons-html5\",text:function(a){return a.i18n(\"buttons.copy\",\"Copy\")},action:function(a,b,d,c){var a=L(b,c),e=a.str,d=g(\"<div/>\").css({height:1,width:1,overflow:\"hidden\",position:\"fixed\",top:0,left:0});c.customize&&(e=c.customize(e,c));c=g(\"<textarea readonly/>\").val(e).appendTo(d);if(i.queryCommandSupported(\"copy\")){d.appendTo(b.table().container());c[0].focus();c[0].select();try{i.execCommand(\"copy\");d.remove();b.buttons.info(b.i18n(\"buttons.copyTitle\",\n\"Copy to clipboard\"),b.i18n(\"buttons.copySuccess\",{1:\"Copied one row to clipboard\",_:\"Copied %d rows to clipboard\"},a.rows),2E3);return}catch(f){}}a=g(\"<span>\"+b.i18n(\"buttons.copyKeys\",\"Press <i>ctrl</i> or <i>⌘</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape.\")+\"</span>\").append(d);b.buttons.info(b.i18n(\"buttons.copyTitle\",\"Copy to clipboard\"),a,0);c[0].focus();c[0].select();var h=g(a).closest(\".dt-button-info\"),j=function(){h.off(\"click.buttons-copy\");\ng(i).off(\".buttons-copy\");b.buttons.info(false)};h.on(\"click.buttons-copy\",j);g(i).on(\"keydown.buttons-copy\",function(a){a.keyCode===27&&j()}).on(\"copy.buttons-copy cut.buttons-copy\",function(){j()})},exportOptions:{},fieldSeparator:\"\\t\",fieldBoundary:\"\",header:!0,footer:!1};s.ext.buttons.csvHtml5={className:\"buttons-csv buttons-html5\",available:function(){return j.FileReader!==m&&j.Blob},text:function(a){return a.i18n(\"buttons.csv\",\"CSV\")},action:function(a,b,d,c){a=L(b,c).str;b=c.charset;c.customize&&\n(a=c.customize(a,c));if(b!==false){b||(b=i.characterSet||i.charset);b&&(b=\";charset=\"+b)}else b=\"\";p(new Blob([a],{type:\"text/csv\"+b}),x(c))},filename:\"*\",extension:\".csv\",exportOptions:{},fieldSeparator:\",\",fieldBoundary:'\"',escapeChar:'\"',charset:null,header:!0,footer:!1};s.ext.buttons.excelHtml5={className:\"buttons-excel buttons-html5\",available:function(){return j.FileReader!==m&&q!==m&&!M()&&y},text:function(a){return a.i18n(\"buttons.excel\",\"Excel\")},action:function(a,b,d,c){var e=0,a=function(a){return g.parseXML(F[a])},\nf=a(\"xl/worksheets/sheet1.xml\"),h=f.getElementsByTagName(\"sheetData\")[0],a={_rels:{\".rels\":a(\"_rels/.rels\")},xl:{_rels:{\"workbook.xml.rels\":a(\"xl/_rels/workbook.xml.rels\")},\"workbook.xml\":a(\"xl/workbook.xml\"),\"styles.xml\":a(\"xl/styles.xml\"),worksheets:{\"sheet1.xml\":f}},\"[Content_Types].xml\":a(\"[Content_Types].xml\")},b=b.buttons.exportData(c.exportOptions),j,k,d=function(a){j=e+1;k=o(f,\"row\",{attr:{r:j}});for(var b=0,c=a.length;b<c;b++){for(var d=b,i=\"\";d>=0;){i=String.fromCharCode(d%26+65)+i;d=Math.floor(d/\n26)-1}d=i+\"\"+j;if(a[b]===null||a[b]===m)a[b]=\"\";if(typeof a[b]===\"number\"||a[b].match&&g.trim(a[b]).match(/^-?\\d+(\\.\\d+)?$/)&&!g.trim(a[b]).match(/^0\\d+/))d=o(f,\"c\",{attr:{t:\"n\",r:d},children:[o(f,\"v\",{text:a[b]})]});else{i=!a[b].replace?a[b]:a[b].replace(/&(?!amp;)/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/[\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F]/g,\"\");d=o(f,\"c\",{attr:{t:\"inlineStr\",r:d},children:{row:o(f,\"is\",{children:{row:o(f,\"t\",{text:i})}})}})}k.appendChild(d)}h.appendChild(k);\ne++};g(\"sheets sheet\",a.xl[\"workbook.xml\"]).attr(\"name\",Q(c));c.customizeData&&c.customizeData(b);if(c.header){d(b.header,e);g(\"row c\",f).attr(\"s\",\"2\")}for(var i=0,l=b.body.length;i<l;i++)d(b.body[i],e);if(c.footer&&b.footer){d(b.footer,e);g(\"row:last c\",f).attr(\"s\",\"2\")}d=o(f,\"cols\");g(\"worksheet\",f).prepend(d);i=0;for(l=b.header.length;i<l;i++)d.appendChild(o(f,\"col\",{attr:{min:i+1,max:i+1,width:N(b,i),customWidth:1}}));c.customize&&c.customize(a);b=new q;d={type:\"blob\",mimeType:\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"};\nE(b,a);b.generateAsync?b.generateAsync(d).then(function(a){p(a,x(c))}):p(b.generate(d),x(c))},filename:\"*\",extension:\".xlsx\",exportOptions:{},header:!0,footer:!1};s.ext.buttons.pdfHtml5={className:\"buttons-pdf buttons-html5\",available:function(){return j.FileReader!==m&&r},text:function(a){return a.i18n(\"buttons.pdf\",\"PDF\")},action:function(a,b,d,c){K(c);a=b.buttons.exportData(c.exportOptions);b=[];c.header&&b.push(g.map(a.header,function(a){return{text:typeof a===\"string\"?a:a+\"\",style:\"tableHeader\"}}));\nfor(var e=0,d=a.body.length;e<d;e++)b.push(g.map(a.body[e],function(a){return{text:typeof a===\"string\"?a:a+\"\",style:e%2?\"tableBodyEven\":\"tableBodyOdd\"}}));c.footer&&a.footer&&b.push(g.map(a.footer,function(a){return{text:typeof a===\"string\"?a:a+\"\",style:\"tableFooter\"}}));a={pageSize:c.pageSize,pageOrientation:c.orientation,content:[{table:{headerRows:1,body:b},layout:\"noBorders\"}],styles:{tableHeader:{bold:true,fontSize:11,color:\"white\",fillColor:\"#2d4154\",alignment:\"center\"},tableBodyEven:{},tableBodyOdd:{fillColor:\"#f3f3f3\"},\ntableFooter:{bold:true,fontSize:11,color:\"white\",fillColor:\"#2d4154\"},title:{alignment:\"center\",fontSize:15},message:{}},defaultStyle:{fontSize:10}};c.message&&a.content.unshift({text:c.message,style:\"message\",margin:[0,0,0,12]});c.title&&a.content.unshift({text:R(c,false),style:\"title\",margin:[0,0,0,12]});c.customize&&c.customize(a,c);a=r.createPdf(a);c.download===\"open\"&&!M()?a.open():a.getBuffer(function(a){a=new Blob([a],{type:\"application/pdf\"});p(a,x(c))})},title:\"*\",filename:\"*\",extension:\".pdf\",\nexportOptions:{},orientation:\"portrait\",pageSize:\"A4\",header:!0,footer:!1,message:null,customize:null,download:\"download\"};return s.Buttons});\n\n",
    "/*!\n Responsive 2.1.0\n 2014-2016 SpryMedia Ltd - datatables.net/license\n*/\n(function(c){\"function\"===typeof define&&define.amd?define('datatables.net-responsive',[\"jquery\",\"datatables.net\"],function(l){return c(l,window,document)}):\"object\"===typeof exports?module.exports=function(l,k){l||(l=window);if(!k||!k.fn.dataTable)k=require(\"datatables.net\")(l,k).$;return c(k,l,l.document)}:c(jQuery,window,document)})(function(c,l,k,p){var m=c.fn.dataTable,j=function(a,b){if(!m.versionCheck||!m.versionCheck(\"1.10.3\"))throw\"DataTables Responsive requires DataTables 1.10.3 or newer\";this.s={dt:new m.Api(a),columns:[],\ncurrent:[]};this.s.dt.settings()[0].responsive||(b&&\"string\"===typeof b.details?b.details={type:b.details}:b&&!1===b.details?b.details={type:!1}:b&&!0===b.details&&(b.details={type:\"inline\"}),this.c=c.extend(!0,{},j.defaults,m.defaults.responsive,b),a.responsive=this,this._constructor())};c.extend(j.prototype,{_constructor:function(){var a=this,b=this.s.dt,d=b.settings()[0],e=c(l).width();b.settings()[0]._responsive=this;c(l).on(\"resize.dtr orientationchange.dtr\",m.util.throttle(function(){var b=\nc(l).width();b!==e&&(a._resize(),e=b)}));d.oApi._fnCallbackReg(d,\"aoRowCreatedCallback\",function(e){-1!==c.inArray(!1,a.s.current)&&c(\"td, th\",e).each(function(e){e=b.column.index(\"toData\",e);!1===a.s.current[e]&&c(this).css(\"display\",\"none\")})});b.on(\"destroy.dtr\",function(){b.off(\".dtr\");c(b.table().body()).off(\".dtr\");c(l).off(\"resize.dtr orientationchange.dtr\");c.each(a.s.current,function(b,e){!1===e&&a._setColumnVis(b,!0)})});this.c.breakpoints.sort(function(a,b){return a.width<b.width?1:a.width>\nb.width?-1:0});this._classLogic();this._resizeAuto();d=this.c.details;!1!==d.type&&(a._detailsInit(),b.on(\"column-visibility.dtr\",function(){a._classLogic();a._resizeAuto();a._resize()}),b.on(\"draw.dtr\",function(){a._redrawChildren()}),c(b.table().node()).addClass(\"dtr-\"+d.type));b.on(\"column-reorder.dtr\",function(){a._classLogic();a._resizeAuto();a._resize()});b.on(\"column-sizing.dtr\",function(){a._resizeAuto();a._resize()});b.on(\"init.dtr\",function(){a._resizeAuto();a._resize();c.inArray(false,\na.s.current)&&b.columns.adjust()});this._resize()},_columnsVisiblity:function(a){var b=this.s.dt,d=this.s.columns,e,f,g=d.map(function(a,b){return{columnIdx:b,priority:a.priority}}).sort(function(a,b){return a.priority!==b.priority?a.priority-b.priority:a.columnIdx-b.columnIdx}),h=c.map(d,function(b){return b.auto&&null===b.minWidth?!1:!0===b.auto?\"-\":-1!==c.inArray(a,b.includeIn)}),n=0;e=0;for(f=h.length;e<f;e++)!0===h[e]&&(n+=d[e].minWidth);e=b.settings()[0].oScroll;e=e.sY||e.sX?e.iBarWidth:0;b=\nb.table().container().offsetWidth-e-n;e=0;for(f=h.length;e<f;e++)d[e].control&&(b-=d[e].minWidth);n=!1;e=0;for(f=g.length;e<f;e++){var i=g[e].columnIdx;\"-\"===h[i]&&(!d[i].control&&d[i].minWidth)&&(n||0>b-d[i].minWidth?(n=!0,h[i]=!1):h[i]=!0,b-=d[i].minWidth)}g=!1;e=0;for(f=d.length;e<f;e++)if(!d[e].control&&!d[e].never&&!h[e]){g=!0;break}e=0;for(f=d.length;e<f;e++)d[e].control&&(h[e]=g);-1===c.inArray(!0,h)&&(h[0]=!0);return h},_classLogic:function(){var a=this,b=this.c.breakpoints,d=this.s.dt,e=\nd.columns().eq(0).map(function(a){var b=this.column(a),e=b.header().className,a=d.settings()[0].aoColumns[a].responsivePriority;a===p&&(b=c(b.header()).data(\"priority\"),a=b!==p?1*b:1E4);return{className:e,includeIn:[],auto:!1,control:!1,never:e.match(/\\bnever\\b/)?!0:!1,priority:a}}),f=function(a,b){var d=e[a].includeIn;-1===c.inArray(b,d)&&d.push(b)},g=function(c,d,i,g){if(i)if(\"max-\"===i){g=a._find(d).width;d=0;for(i=b.length;d<i;d++)b[d].width<=g&&f(c,b[d].name)}else if(\"min-\"===i){g=a._find(d).width;\nd=0;for(i=b.length;d<i;d++)b[d].width>=g&&f(c,b[d].name)}else{if(\"not-\"===i){d=0;for(i=b.length;d<i;d++)-1===b[d].name.indexOf(g)&&f(c,b[d].name)}}else e[c].includeIn.push(d)};e.each(function(a,e){for(var d=a.className.split(\" \"),f=!1,j=0,l=d.length;j<l;j++){var k=c.trim(d[j]);if(\"all\"===k){f=!0;a.includeIn=c.map(b,function(a){return a.name});return}if(\"none\"===k||a.never){f=!0;return}if(\"control\"===k){f=!0;a.control=!0;return}c.each(b,function(a,b){var d=b.name.split(\"-\"),c=k.match(RegExp(\"(min\\\\-|max\\\\-|not\\\\-)?(\"+\nd[0]+\")(\\\\-[_a-zA-Z0-9])?\"));c&&(f=!0,c[2]===d[0]&&c[3]===\"-\"+d[1]?g(e,b.name,c[1],c[2]+c[3]):c[2]===d[0]&&!c[3]&&g(e,b.name,c[1],c[2]))})}f||(a.auto=!0)});this.s.columns=e},_detailsDisplay:function(a,b){var d=this,e=this.s.dt,f=this.c.details;if(f&&!1!==f.type){var g=f.display(a,b,function(){return f.renderer(e,a[0],d._detailsObj(a[0]))});(!0===g||!1===g)&&c(e.table().node()).triggerHandler(\"responsive-display.dt\",[e,a,g,b])}},_detailsInit:function(){var a=this,b=this.s.dt,d=this.c.details;\"inline\"===\nd.type&&(d.target=\"td:first-child, th:first-child\");b.on(\"draw.dtr\",function(){a._tabIndexes()});a._tabIndexes();c(b.table().body()).on(\"keyup.dtr\",\"td, th\",function(a){a.keyCode===13&&c(this).data(\"dtr-keyboard\")&&c(this).click()});var e=d.target;c(b.table().body()).on(\"click.dtr mousedown.dtr mouseup.dtr\",\"string\"===typeof e?e:\"td, th\",function(d){if(c(b.table().node()).hasClass(\"collapsed\")&&b.row(c(this).closest(\"tr\")).length){if(typeof e===\"number\"){var g=e<0?b.columns().eq(0).length+e:e;if(b.cell(this).index().column!==\ng)return}g=b.row(c(this).closest(\"tr\"));d.type===\"click\"?a._detailsDisplay(g,false):d.type===\"mousedown\"?c(this).css(\"outline\",\"none\"):d.type===\"mouseup\"&&c(this).blur().css(\"outline\",\"\")}})},_detailsObj:function(a){var b=this,d=this.s.dt;return c.map(this.s.columns,function(e,c){if(!e.never&&!e.control)return{title:d.settings()[0].aoColumns[c].sTitle,data:d.cell(a,c).render(b.c.orthogonal),hidden:d.column(c).visible()&&!b.s.current[c],columnIndex:c,rowIndex:a}})},_find:function(a){for(var b=this.c.breakpoints,\nd=0,c=b.length;d<c;d++)if(b[d].name===a)return b[d]},_redrawChildren:function(){var a=this,b=this.s.dt;b.rows({page:\"current\"}).iterator(\"row\",function(c,e){b.row(e);a._detailsDisplay(b.row(e),!0)})},_resize:function(){var a=this,b=this.s.dt,d=c(l).width(),e=this.c.breakpoints,f=e[0].name,g=this.s.columns,h,j=this.s.current.slice();for(h=e.length-1;0<=h;h--)if(d<=e[h].width){f=e[h].name;break}var i=this._columnsVisiblity(f);this.s.current=i;e=!1;h=0;for(d=g.length;h<d;h++)if(!1===i[h]&&!g[h].never&&\n!g[h].control){e=!0;break}c(b.table().node()).toggleClass(\"collapsed\",e);var k=!1;b.columns().eq(0).each(function(b,c){i[c]!==j[c]&&(k=!0,a._setColumnVis(b,i[c]))});k&&(this._redrawChildren(),c(b.table().node()).trigger(\"responsive-resize.dt\",[b,this.s.current]))},_resizeAuto:function(){var a=this.s.dt,b=this.s.columns;if(this.c.auto&&-1!==c.inArray(!0,c.map(b,function(a){return a.auto}))){a.table().node();var d=a.table().node().cloneNode(!1),e=c(a.table().header().cloneNode(!1)).appendTo(d),f=c(a.table().body()).clone(!1,\n!1).empty().appendTo(d),g=a.columns().header().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css(\"display\",\"table-cell\");c(f).append(c(a.rows({page:\"current\"}).nodes()).clone(!1)).find(\"th, td\").css(\"display\",\"\");if(f=a.table().footer()){var f=c(f.cloneNode(!1)).appendTo(d),h=a.columns().footer().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css(\"display\",\"table-cell\");c(\"<tr/>\").append(h).appendTo(f)}c(\"<tr/>\").append(g).appendTo(e);\"inline\"===this.c.details.type&&\nc(d).addClass(\"dtr-inline collapsed\");c(d).find(\"[name]\").removeAttr(\"name\");d=c(\"<div/>\").css({width:1,height:1,overflow:\"hidden\"}).append(d);d.insertBefore(a.table().node());g.each(function(c){c=a.column.index(\"fromVisible\",c);b[c].minWidth=this.offsetWidth||0});d.remove()}},_setColumnVis:function(a,b){var d=this.s.dt,e=b?\"\":\"none\";c(d.column(a).header()).css(\"display\",e);c(d.column(a).footer()).css(\"display\",e);d.column(a).nodes().to$().css(\"display\",e)},_tabIndexes:function(){var a=this.s.dt,\nb=a.cells({page:\"current\"}).nodes().to$(),d=a.settings()[0],e=this.c.details.target;b.filter(\"[data-dtr-keyboard]\").removeData(\"[data-dtr-keyboard]\");c(\"number\"===typeof e?\":eq(\"+e+\")\":e,a.rows({page:\"current\"}).nodes()).attr(\"tabIndex\",d.iTabIndex).data(\"dtr-keyboard\",1)}});j.breakpoints=[{name:\"desktop\",width:Infinity},{name:\"tablet-l\",width:1024},{name:\"tablet-p\",width:768},{name:\"mobile-l\",width:480},{name:\"mobile-p\",width:320}];j.display={childRow:function(a,b,d){if(b){if(c(a.node()).hasClass(\"parent\"))return a.child(d(),\n\"child\").show(),!0}else{if(a.child.isShown())return a.child(!1),c(a.node()).removeClass(\"parent\"),!1;a.child(d(),\"child\").show();c(a.node()).addClass(\"parent\");return!0}},childRowImmediate:function(a,b,d){if(!b&&a.child.isShown()||!a.responsive.hasHidden())return a.child(!1),c(a.node()).removeClass(\"parent\"),!1;a.child(d(),\"child\").show();c(a.node()).addClass(\"parent\");return!0},modal:function(a){return function(b,d,e){if(d)c(\"div.dtr-modal-content\").empty().append(e());else{var f=function(){g.remove();\nc(k).off(\"keypress.dtr\")},g=c('<div class=\"dtr-modal\"/>').append(c('<div class=\"dtr-modal-display\"/>').append(c('<div class=\"dtr-modal-content\"/>').append(e())).append(c('<div class=\"dtr-modal-close\">&times;</div>').click(function(){f()}))).append(c('<div class=\"dtr-modal-background\"/>').click(function(){f()})).appendTo(\"body\");c(k).on(\"keyup.dtr\",function(a){27===a.keyCode&&(a.stopPropagation(),f())})}a&&a.header&&c(\"div.dtr-modal-content\").prepend(\"<h2>\"+a.header(b)+\"</h2>\")}}};j.renderer={listHidden:function(){return function(a,\nb,d){return(a=c.map(d,function(a){return a.hidden?'<li data-dtr-index=\"'+a.columnIndex+'\" data-dt-row=\"'+a.rowIndex+'\" data-dt-column=\"'+a.columnIndex+'\"><span class=\"dtr-title\">'+a.title+'</span> <span class=\"dtr-data\">'+a.data+\"</span></li>\":\"\"}).join(\"\"))?c('<ul data-dtr-index=\"'+b+'\"/>').append(a):!1}},tableAll:function(a){a=c.extend({tableClass:\"\"},a);return function(b,d,e){b=c.map(e,function(a){return'<tr data-dt-row=\"'+a.rowIndex+'\" data-dt-column=\"'+a.columnIndex+'\"><td>'+a.title+\":</td> <td>\"+\na.data+\"</td></tr>\"}).join(\"\");return c('<table class=\"'+a.tableClass+'\" width=\"100%\"/>').append(b)}}};j.defaults={breakpoints:j.breakpoints,auto:!0,details:{display:j.display.childRow,renderer:j.renderer.listHidden(),target:0,type:\"inline\"},orthogonal:\"display\"};var o=c.fn.dataTable.Api;o.register(\"responsive()\",function(){return this});o.register(\"responsive.index()\",function(a){a=c(a);return{column:a.data(\"dtr-index\"),row:a.parent().data(\"dtr-index\")}});o.register(\"responsive.rebuild()\",function(){return this.iterator(\"table\",\nfunction(a){a._responsive&&a._responsive._classLogic()})});o.register(\"responsive.recalc()\",function(){return this.iterator(\"table\",function(a){a._responsive&&(a._responsive._resizeAuto(),a._responsive._resize())})});o.register(\"responsive.hasHidden()\",function(){var a=this.context[0];return a._responsive?-1!==c.inArray(!1,a._responsive.s.current):!1});j.version=\"2.1.0\";c.fn.dataTable.Responsive=j;c.fn.DataTable.Responsive=j;c(k).on(\"preInit.dt.dtr\",function(a,b){if(\"dt\"===a.namespace&&(c(b.nTable).hasClass(\"responsive\")||\nc(b.nTable).hasClass(\"dt-responsive\")||b.oInit.responsive||m.defaults.responsive)){var d=b.oInit.responsive;!1!==d&&new j(b,c.isPlainObject(d)?d:{})}});return j});\n\n",
    "/*!\n Select for DataTables 1.2.0\n 2015-2016 SpryMedia Ltd - datatables.net/license/mit\n*/\n(function(e){\"function\"===typeof define&&define.amd?define('datatables.net-select',[\"jquery\",\"datatables.net\"],function(i){return e(i,window,document)}):\"object\"===typeof exports?module.exports=function(i,l){i||(i=window);if(!l||!l.fn.dataTable)l=require(\"datatables.net\")(i,l).$;return e(l,i,i.document)}:e(jQuery,window,document)})(function(e,i,l,h){function t(b,a,c){var d;d=function(c,a){if(c>a)var d=a,a=c,c=d;var f=!1;return b.columns(\":visible\").indexes().filter(function(b){b===c&&(f=!0);return b===a?(f=!1,!0):f})};var f=\nfunction(c,a){var d=b.rows({search:\"applied\"}).indexes();if(d.indexOf(c)>d.indexOf(a))var f=a,a=c,c=f;var e=!1;return d.filter(function(b){b===c&&(e=!0);return b===a?(e=!1,!0):e})};!b.cells({selected:!0}).any()&&!c?(d=d(0,a.column),c=f(0,a.row)):(d=d(c.column,a.column),c=f(c.row,a.row));c=b.cells(c,d).flatten();b.cells(a,{selected:!0}).any()?b.cells(c).deselect():b.cells(c).select()}function r(b){var a=b.settings()[0]._select.selector;e(b.table().body()).off(\"mousedown.dtSelect\",a).off(\"mouseup.dtSelect\",\na).off(\"click.dtSelect\",a);e(\"body\").off(\"click.dtSelect\")}function v(b){var a=e(b.table().body()),c=b.settings()[0],d=c._select.selector;a.on(\"mousedown.dtSelect\",d,function(c){if(c.shiftKey||c.metaKey||c.ctrlKey)a.css(\"-moz-user-select\",\"none\").one(\"selectstart.dtSelect\",d,function(){return!1})}).on(\"mouseup.dtSelect\",d,function(){a.css(\"-moz-user-select\",\"\")}).on(\"click.dtSelect\",d,function(c){var a=b.select.items();if(!i.getSelection||!i.getSelection().toString()){var d=b.settings()[0];if(e(c.target).closest(\"div.dataTables_wrapper\")[0]==\nb.table().container()){var g=b.cell(e(c.target).closest(\"td, th\"));if(g.any()){var h=e.Event(\"user-select.dt\");k(b,h,[a,g,c]);h.isDefaultPrevented()||(h=g.index(),\"row\"===a?(a=h.row,s(c,b,d,\"row\",a)):\"column\"===a?(a=g.index().column,s(c,b,d,\"column\",a)):\"cell\"===a&&(a=g.index(),s(c,b,d,\"cell\",a)),d._select_lastCell=h)}}}});e(\"body\").on(\"click.dtSelect\",function(a){c._select.blurable&&!e(a.target).parents().filter(b.table().container()).length&&(e(a.target).parents(\"div.DTE\").length||p(c,!0))})}function k(b,\na,c,d){if(!d||b.flatten().length)\"string\"===typeof a&&(a+=\".dt\"),c.unshift(b),e(b.table().node()).triggerHandler(a,c)}function w(b){var a=b.settings()[0];if(a._select.info&&a.aanFeatures.i){var c=e('<span class=\"select-info\"/>'),d=function(a,d){c.append(e('<span class=\"select-item\"/>').append(b.i18n(\"select.\"+a+\"s\",{_:\"%d \"+a+\"s selected\",\"0\":\"\",1:\"1 \"+a+\" selected\"},d)))};d(\"row\",b.rows({selected:!0}).flatten().length);d(\"column\",b.columns({selected:!0}).flatten().length);d(\"cell\",b.cells({selected:!0}).flatten().length);\ne.each(a.aanFeatures.i,function(a,b){var b=e(b),d=b.children(\"span.select-info\");d.length&&d.remove();\"\"!==c.text()&&b.append(c)})}}function x(b,a,c,d){var f=b[a+\"s\"]({search:\"applied\"}).indexes(),d=e.inArray(d,f),m=e.inArray(c,f);if(!b[a+\"s\"]({selected:!0}).any()&&-1===d)f.splice(e.inArray(c,f)+1,f.length);else{if(d>m)var j=m,m=d,d=j;f.splice(m+1,f.length);f.splice(0,d)}b[a](c,{selected:!0}).any()?(f.splice(e.inArray(c,f),1),b[a+\"s\"](f).deselect()):b[a+\"s\"](f).select()}function p(b,a){if(a||\"single\"===\nb._select.style){var c=new g.Api(b);c.rows({selected:!0}).deselect();c.columns({selected:!0}).deselect();c.cells({selected:!0}).deselect()}}function s(b,a,c,d,f){var e=a.select.style(),j=a[d](f,{selected:!0}).any();\"os\"===e?b.ctrlKey||b.metaKey?a[d](f).select(!j):b.shiftKey?\"cell\"===d?t(a,f,c._select_lastCell||null):x(a,d,f,c._select_lastCell?c._select_lastCell[d]:null):(b=a[d+\"s\"]({selected:!0}),j&&1===b.flatten().length?a[d](f).deselect():(b.deselect(),a[d](f).select())):\"multi+shift\"==e?b.shiftKey?\n\"cell\"===d?t(a,f,c._select_lastCell||null):x(a,d,f,c._select_lastCell?c._select_lastCell[d]:null):a[d](f).select(!j):a[d](f).select(!j)}function q(b,a){return function(c){return c.i18n(\"buttons.\"+b,a)}}var g=e.fn.dataTable;g.select={};g.select.version=\"1.2.0\";g.select.init=function(b){var a=b.settings()[0],c=a.oInit.select,d=g.defaults.select,c=c===h?d:c,d=\"row\",f=\"api\",m=!1,j=!0,u=\"td, th\",i=\"selected\";a._select={};if(!0===c)f=\"os\";else if(\"string\"===typeof c)f=c;else if(e.isPlainObject(c)&&(c.blurable!==\nh&&(m=c.blurable),c.info!==h&&(j=c.info),c.items!==h&&(d=c.items),c.style!==h&&(f=c.style),c.selector!==h&&(u=c.selector),c.className!==h))i=c.className;b.select.selector(u);b.select.items(d);b.select.style(f);b.select.blurable(m);b.select.info(j);a._select.className=i;e.fn.dataTable.ext.order[\"select-checkbox\"]=function(a,c){return this.api().column(c,{order:\"index\"}).nodes().map(function(c){return\"row\"===a._select.items?e(c).parent().hasClass(a._select.className):\"cell\"===a._select.items?e(c).hasClass(a._select.className):\n!1})};e(b.table().node()).hasClass(\"selectable\")&&b.select.style(\"os\")};e.each([{type:\"row\",prop:\"aoData\"},{type:\"column\",prop:\"aoColumns\"}],function(b,a){g.ext.selector[a.type].push(function(c,b,f){var b=b.selected,e,j=[];if(b===h)return f;for(var g=0,i=f.length;g<i;g++)e=c[a.prop][f[g]],(!0===b&&!0===e._select_selected||!1===b&&!e._select_selected)&&j.push(f[g]);return j})});g.ext.selector.cell.push(function(b,a,c){var a=a.selected,d,f=[];if(a===h)return c;for(var e=0,g=c.length;e<g;e++)d=b.aoData[c[e].row],\n(!0===a&&d._selected_cells&&!0===d._selected_cells[c[e].column]||!1===a&&(!d._selected_cells||!d._selected_cells[c[e].column]))&&f.push(c[e]);return f});var n=g.Api.register,o=g.Api.registerPlural;n(\"select()\",function(){return this.iterator(\"table\",function(b){g.select.init(new g.Api(b))})});n(\"select.blurable()\",function(b){return b===h?this.context[0]._select.blurable:this.iterator(\"table\",function(a){a._select.blurable=b})});n(\"select.info()\",function(b){return w===h?this.context[0]._select.info:\nthis.iterator(\"table\",function(a){a._select.info=b})});n(\"select.items()\",function(b){return b===h?this.context[0]._select.items:this.iterator(\"table\",function(a){a._select.items=b;k(new g.Api(a),\"selectItems\",[b])})});n(\"select.style()\",function(b){return b===h?this.context[0]._select.style:this.iterator(\"table\",function(a){a._select.style=b;if(!a._select_init){var c=new g.Api(a);a.aoRowCreatedCallback.push({fn:function(c,b,d){b=a.aoData[d];b._select_selected&&e(c).addClass(a._select.className);\nc=0;for(d=a.aoColumns.length;c<d;c++)(a.aoColumns[c]._select_selected||b._selected_cells&&b._selected_cells[c])&&e(b.anCells[c]).addClass(a._select.className)},sName:\"select-deferRender\"});c.on(\"preXhr.dt.dtSelect\",function(){var a=c.rows({selected:!0}).ids(!0).filter(function(c){return c!==h}),b=c.cells({selected:!0}).eq(0).map(function(a){var b=c.row(a.row).id(!0);return b?{row:b,column:a.column}:h}).filter(function(c){return c!==h});c.one(\"draw.dt.dtSelect\",function(){c.rows(a).select();b.any()&&\nb.each(function(a){c.cells(a.row,a.column).select()})})});c.on(\"draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt\",function(){w(c)});c.on(\"destroy.dtSelect\",function(){r(c);c.off(\".dtSelect\")})}var d=new g.Api(a);r(d);\"api\"!==b&&v(d);k(new g.Api(a),\"selectStyle\",[b])})});n(\"select.selector()\",function(b){return b===h?this.context[0]._select.selector:this.iterator(\"table\",function(a){r(new g.Api(a));a._select.selector=b;\"api\"!==a._select.style&&v(new g.Api(a))})});o(\"rows().select()\",\n\"row().select()\",function(b){var a=this;if(!1===b)return this.deselect();this.iterator(\"row\",function(c,a){p(c);c.aoData[a]._select_selected=!0;e(c.aoData[a].nTr).addClass(c._select.className)});this.iterator(\"table\",function(c,b){k(a,\"select\",[\"row\",a[b]],!0)});return this});o(\"columns().select()\",\"column().select()\",function(b){var a=this;if(!1===b)return this.deselect();this.iterator(\"column\",function(a,b){p(a);a.aoColumns[b]._select_selected=!0;var f=(new g.Api(a)).column(b);e(f.header()).addClass(a._select.className);\ne(f.footer()).addClass(a._select.className);f.nodes().to$().addClass(a._select.className)});this.iterator(\"table\",function(c,b){k(a,\"select\",[\"column\",a[b]],!0)});return this});o(\"cells().select()\",\"cell().select()\",function(b){var a=this;if(!1===b)return this.deselect();this.iterator(\"cell\",function(a,b,f){p(a);b=a.aoData[b];b._selected_cells===h&&(b._selected_cells=[]);b._selected_cells[f]=!0;b.anCells&&e(b.anCells[f]).addClass(a._select.className)});this.iterator(\"table\",function(b,d){k(a,\"select\",\n[\"cell\",a[d]],!0)});return this});o(\"rows().deselect()\",\"row().deselect()\",function(){var b=this;this.iterator(\"row\",function(a,b){a.aoData[b]._select_selected=!1;e(a.aoData[b].nTr).removeClass(a._select.className)});this.iterator(\"table\",function(a,c){k(b,\"deselect\",[\"row\",b[c]],!0)});return this});o(\"columns().deselect()\",\"column().deselect()\",function(){var b=this;this.iterator(\"column\",function(a,b){a.aoColumns[b]._select_selected=!1;var d=new g.Api(a),f=d.column(b);e(f.header()).removeClass(a._select.className);\ne(f.footer()).removeClass(a._select.className);d.cells(null,b).indexes().each(function(b){var c=a.aoData[b.row],d=c._selected_cells;c.anCells&&(!d||!d[b.column])&&e(c.anCells[b.column]).removeClass(a._select.className)})});this.iterator(\"table\",function(a,c){k(b,\"deselect\",[\"column\",b[c]],!0)});return this});o(\"cells().deselect()\",\"cell().deselect()\",function(){var b=this;this.iterator(\"cell\",function(a,b,d){b=a.aoData[b];b._selected_cells[d]=!1;b.anCells&&!a.aoColumns[d]._select_selected&&e(b.anCells[d]).removeClass(a._select.className)});\nthis.iterator(\"table\",function(a,c){k(b,\"deselect\",[\"cell\",b[c]],!0)});return this});e.extend(g.ext.buttons,{selected:{text:q(\"selected\",\"Selected\"),className:\"buttons-selected\",init:function(b){var a=this;b.on(\"draw.dt.DT select.dt.DT deselect.dt.DT\",function(){var b=a.rows({selected:!0}).any()||a.columns({selected:!0}).any()||a.cells({selected:!0}).any();a.enable(b)});this.disable()}},selectedSingle:{text:q(\"selectedSingle\",\"Selected single\"),className:\"buttons-selected-single\",init:function(b){var a=\nthis;b.on(\"draw.dt.DT select.dt.DT deselect.dt.DT\",function(){var c=b.rows({selected:!0}).flatten().length+b.columns({selected:!0}).flatten().length+b.cells({selected:!0}).flatten().length;a.enable(1===c)});this.disable()}},selectAll:{text:q(\"selectAll\",\"Select all\"),className:\"buttons-select-all\",action:function(){this[this.select.items()+\"s\"]().select()}},selectNone:{text:q(\"selectNone\",\"Deselect all\"),className:\"buttons-select-none\",action:function(){p(this.settings()[0],!0)},init:function(b){var a=\nthis;b.on(\"draw.dt.DT select.dt.DT deselect.dt.DT\",function(){var c=b.rows({selected:!0}).flatten().length+b.columns({selected:!0}).flatten().length+b.cells({selected:!0}).flatten().length;a.enable(0<c)});this.disable()}}});e.each([\"Row\",\"Column\",\"Cell\"],function(b,a){var c=a.toLowerCase();g.ext.buttons[\"select\"+a+\"s\"]={text:q(\"select\"+a+\"s\",\"Select \"+c+\"s\"),className:\"buttons-select-\"+c+\"s\",action:function(){this.select.items(c)},init:function(a){var b=this;a.on(\"selectItems.dt.DT\",function(a,d,\ne){b.active(e===c)})}}});e(l).on(\"preInit.dt.dtSelect\",function(b,a){\"dt\"===b.namespace&&g.select.init(new g.Api(a))});return g.select});\n\n",
    "define('app/module_map',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/map/map',\n    'app/map/util',\n    'app/counter',\n    'app/ui/system_info',\n    'app/ui/system_graph',\n    'app/ui/system_signature',\n    'app/ui/system_route',\n    'app/ui/system_killboard',\n    'datatables.net',\n    'datatables.net-buttons',\n    'datatables.net-buttons-html',\n    'datatables.net-responsive',\n    'datatables.net-select'\n], function($, Init, Util, Map, MapUtil) {\n\n    'use strict';\n\n    let config = {\n        dynamicElementWrapperId: 'pf-dialog-wrapper',                           // parent Element for dynamic content (dialogs,..)\n        mapTabElementId: 'pf-map-tab-element',                                  // id for map tab element (tabs + content)\n        mapTabBarId: 'pf-map-tabs',                                             // id for map tab bar\n        mapTabIdPrefix: 'pf-map-tab-',                                          // id prefix for a map tab\n        mapTabClass: 'pf-map-tab',                                              // class for a map tab\n        mapTabLinkTextClass: 'nav-tabs-link',                                   // class for span elements in a tab\n        mapTabIconClass: 'pf-map-tab-icon',                                     // class for map icon\n        mapTabSharedIconClass: 'pf-map-tab-shared-icon',                        // class for map shared icon\n        mapTabContentClass: 'pf-map-tab-content',                               // class for tab content container\n        mapTabContentSystemInfoClass: 'pf-map-tab-content-system',\n        mapWrapperClass: 'pf-map-wrapper',                                      // scrollable\n        mapClass: 'pf-map',                                                     // class for each map\n\n        // TabContentStructure\n        mapTabContentRow: 'pf-map-content-row',                                 // main row for Tab content (grid)\n        mapTabContentCell: 'pf-map-content-col',                                // column\n        mapTabContentCellFirst: 'pf-map-content-col-first',                     // first column\n        mapTabContentCellSecond: 'pf-map-content-col-second',                   // second column\n\n        // module\n        moduleClass: 'pf-module',                                               // class for a module\n        moduleClosedClass: 'pf-module-closed'                                   // class for a closed module\n\n    };\n\n    let mapTabChangeBlocked = false;                                            // flag for preventing map tab switch\n\n    /**\n     * get all maps for a maps module\n     * @returns {*}\n     */\n    $.fn.getMaps = function(){\n        return $(this).find('.' + config.mapClass);\n    };\n\n    /**\n     * get the current active mapElement\n     * @returns {JQuery|*|T|{}|jQuery}\n     */\n    $.fn.getActiveMap = function(){\n        let map = $(this).find('.active.' + config.mapTabContentClass + ' .' + config.mapClass);\n        if(!map.length){\n            map = false;\n        }\n        return map;\n    };\n\n    /**\n     * set Tab Observer, events are triggered within map.js\n     */\n    $.fn.setTabContentObserver = function(){\n        return this.each(function(){\n            // update Tab Content with system data information\n            $(this).on('pf:drawSystemModules', function(e){\n                drawSystemModules($( e.target ));\n            });\n\n            $(this).on('pf:removeSystemModules', function(e){\n                removeSystemModules($( e.target ));\n            });\n        });\n    };\n\n    /**\n     * clear all system info modules and remove them\n     * @param tabContentElement\n     * @param callback\n     */\n    let removeSystemModules = function(tabContentElement, callback){\n        tabContentElement.find('.' + config.moduleClass).velocity('transition.slideDownOut', {\n            duration: Init.animationSpeed.mapModule,\n            complete: function(tempElement){\n                $(tempElement).remove();\n\n                if(callback){\n                    callback();\n                }\n            }\n        });\n    };\n\n    /**\n     * clears and updates the system info element (signature table, system info,...)\n     * @param tabContentElement\n     */\n    let drawSystemModules = function(tabContentElement){\n        let currentSystemData = Util.getCurrentSystemData();\n\n        // get Table cell for system Info\n        let firstCell = $(tabContentElement).find('.' + config.mapTabContentCellFirst);\n        let secondCell = $(tabContentElement).find('.' + config.mapTabContentCellSecond);\n\n        // draw system info module\n        firstCell.drawSystemInfoModule(currentSystemData.mapId, currentSystemData.systemData);\n\n        // draw system graph module\n        firstCell.drawSystemGraphModule(currentSystemData.systemData);\n\n        // draw signature table module\n        firstCell.drawSignatureTableModule(currentSystemData.mapId, currentSystemData.systemData);\n\n        // draw system routes module\n        secondCell.drawSystemRouteModule(currentSystemData.mapId, currentSystemData.systemData);\n\n        // draw system killboard module\n        secondCell.drawSystemKillboardModule(currentSystemData.systemData);\n\n        // set Module Observer\n        setModuleObserver();\n    };\n\n    /**\n     * set observer for each module\n     */\n    let setModuleObserver = function(){\n\n        // toggle height for a module\n        $(document).off('click.toggleModuleHeight').on('click.toggleModuleHeight', '.' + config.moduleClass, function(e){\n            let moduleElement = $(this);\n            // get click position\n            let posX = moduleElement.offset().left;\n            let posY = moduleElement.offset().top;\n            let clickX = e.pageX - posX;\n            let clickY = e.pageY - posY;\n\n            // check for top-left click\n            if(clickX <= 8 && clickY <= 8){\n\n                // remember height\n                if(! moduleElement.data('origHeight')){\n\n                    moduleElement.data('origHeight', moduleElement.outerHeight());\n                }\n\n                if(moduleElement.hasClass( config.moduleClosedClass )){\n                    let moduleHeight = moduleElement.data('origHeight');\n                    moduleElement.velocity('finish').velocity({\n                        height: [ moduleHeight + 'px', [ 400, 15 ] ]\n                    },{\n                        duration: 400,\n                        easing: 'easeOutSine',\n                        complete: function(){\n                            moduleElement.removeClass( config.moduleClosedClass );\n                            moduleElement.removeData();\n                        }\n                    });\n                }else{\n                    moduleElement.velocity('finish').velocity({\n                        height: [ '35px', [ 400, 15 ] ]\n                    },{\n                        duration: 400,\n                        easing: 'easeOutSine',\n                        complete: function(){\n                            moduleElement.addClass( config.moduleClosedClass );\n                        }\n                    });\n                }\n            }\n        });\n    };\n\n\n    /**\n     * updates only visible/active map module\n     * @returns {boolean}\n     */\n    $.fn.updateMapModuleData = function(){\n        let mapModule = $(this);\n\n        // performance logging (time measurement)\n        let logKeyClientUserData = Init.performanceLogging.keyClientUserData;\n        Util.timeStart(logKeyClientUserData);\n\n        // get all active map elements for module\n        let mapElement = mapModule.getActiveMap();\n\n        if(mapElement !== false){\n            let mapId = mapElement.data('id');\n\n            let currentMapUserData = Util.getCurrentMapUserData(mapId);\n\n\n            if(currentMapUserData){\n                // trigger \"update local\" for this map => async\n                mapElement.trigger('pf:updateLocal', currentMapUserData);\n\n                // update map with current user data\n                mapElement.updateUserData(currentMapUserData);\n            }\n        }\n\n        // log client user data update time\n        let duration = Util.timeStop(logKeyClientUserData);\n        Util.log(logKeyClientUserData, {duration: duration, type: 'client', description:'update users'});\n\n        return true;\n    };\n\n    /**\n     * update system info panels (below map)\n     * @param systemData\n     */\n    $.fn.updateSystemModuleData = function(systemData){\n        let mapModule = $(this);\n\n        if(systemData){\n            // check if current open system is still the requested info system\n            let currentSystemData = Util.getCurrentSystemData();\n\n            if(currentSystemData){\n                if(systemData.id === currentSystemData.systemData.id){\n                    // trigger system update events\n                    $(document).triggerHandler('pf:updateSystemInfoModule', [systemData]);\n                    $(document).triggerHandler('pf:updateSystemSignatureModule', [systemData]);\n                }\n            }\n        }\n    };\n\n    /**\n     * load all structure elements into a TabsContent div (tab body)\n     */\n    $.fn.initContentStructure = function(){\n        return this.each(function(){\n            // init bootstrap Grid\n            let contentStructure = $('<div>', {\n                class: ['row', config.mapTabContentRow].join(' ')\n            }).append(\n                    $('<div>', {\n                        class: ['col-xs-12', 'col-md-8', config.mapTabContentCellFirst, config.mapTabContentCell].join(' ')\n                    })\n                ).append(\n                    $('<div>', {\n                        class: ['col-xs-12', 'col-md-4', config.mapTabContentCellSecond, config.mapTabContentCell].join(' ')\n                    })\n                );\n\n            // append grid structure\n            $(this).append(contentStructure);\n        });\n    };\n\n    /**\n     * get a fresh tab element\n     * @param options\n     * @returns {*|jQuery|HTMLElement}\n     */\n    let getTabElement = function(options){\n        let tabElement = $('<div>', {\n            id: config.mapTabElementId\n        });\n\n        let tabBar = $('<ul>', {\n            class: ['nav', 'nav-tabs'].join(' '),\n            id: options.barId\n        }).attr('role', 'tablist');\n\n        let tabContent = $('<div>', {\n            class: 'tab-content'\n        }).attr('data-map-tabs', options.barId);\n\n        tabElement.append(tabBar);\n        tabElement.append(tabContent);\n\n        return tabElement;\n    };\n\n    /**\n     * set data for a map tab, or update an existing map tab with new data\n     * @param options\n     */\n    $.fn.updateTabData = function(options){\n        let tabElement = $(this);\n\n        // set \"main\" data\n        tabElement.data('map-id', options.id).data('updated', options.updated);\n\n        // change \"tab\" link\n        tabElement.attr('href', '#' + config.mapTabIdPrefix + options.id);\n\n        // change \"map\" icon\n        let mapIconElement = tabElement.find('.' + config.mapTabIconClass);\n        mapIconElement.removeClass().addClass([config.mapTabIconClass, 'fa', 'fa-fw', options.icon].join(' '));\n\n        // change \"shared\" icon\n        let mapSharedIconElement = tabElement.find('.' + config.mapTabSharedIconClass);\n        mapSharedIconElement.hide();\n\n        // check if the map is a \"shared\" map\n        if(options.access){\n            if(\n                options.access.character.length > 1 ||\n                options.access.corporation.length > 1 ||\n                options.access.alliance.length > 1\n            ){\n                mapSharedIconElement.show();\n            }\n        }\n\n        // change map name label\n        let tabLinkTextElement = tabElement.find('.' + config.mapTabLinkTextClass);\n        tabLinkTextElement.text(options.name);\n\n        // change tabClass\n        let listElement = tabElement.parent();\n\n        // new tab classes\n        let tabClasses = [config.mapTabClass, options.type.classTab ];\n\n        // check if tab was \"active\" before\n        if( listElement.hasClass('active') ){\n            tabClasses.push('active');\n        }\n        listElement.removeClass().addClass( tabClasses.join(' ') );\n\n        // set title for tooltip\n        if(options.type.name !== undefined){\n            tabLinkTextElement.attr('title', options.type.name + ' map');\n        }\n\n        let mapTooltipOptions = {\n            placement: 'bottom',\n            container: 'body',\n            trigger: 'hover',\n            delay: 150\n        };\n\n        listElement.find('[title]').tooltip(mapTooltipOptions).tooltip('fixTitle');\n\n        if(options.right === true){\n            listElement.addClass('pull-right');\n        }\n    };\n\n\n    /**\n     * add a new tab to tab-map-module end returns the new objects\n     * @param options\n     * @returns {{listElement: (*|void), contentElement: (*|HTMLElement)}}\n     */\n    $.fn.addTab = function(options){\n        let tabElement = $(this);\n        let tabBar = tabElement.find('ul.nav-tabs');\n        let tabContent = tabElement.find('div.tab-content');\n\n        let listElement = $('<li>').attr('role', 'presentation');\n\n        if(options.right === true){\n            listElement.addClass('pull-right');\n        }\n\n        // link element\n        let linkElement = $('<a>').attr('role', 'tab');\n\n        // map icon element\n        let mapIconElement = $('<i>', {\n            class: config.mapTabIconClass\n        });\n\n        // map shared icon element\n        let mapSharedIconElement = $('<i>', {\n            class: [config.mapTabSharedIconClass, 'fa', 'fa-fw', 'fa-share-alt'].join(' '),\n            title: 'shared map'\n        });\n\n        // text element\n        let textElement = $('<span>', {\n            class: config.mapTabLinkTextClass\n        });\n\n        let newListElement = listElement.append(\n            linkElement.append(mapIconElement).append(textElement).append(mapSharedIconElement)\n        );\n\n        tabBar.append( newListElement );\n\n        // update Tab element -> set data\n        linkElement.updateTabData(options);\n\n        // tabs content =======================================================\n        let contentElement = $('<div>', {\n            id: config.mapTabIdPrefix + parseInt( options.id ),\n            class: [config.mapTabContentClass].join(' ')\n        });\n\n        contentElement.addClass('tab-pane');\n\n        tabContent.append(contentElement);\n\n        // init tab ===========================================================\n        linkElement.on('click', function(e){\n            e.preventDefault();\n\n            // callback function after tab switch\n            function switchTabCallback(mapElement, tabLinkElement){\n                tabLinkElement.tab('show');\n                // unfreeze map\n                mapElement.data('frozen', false);\n                return false;\n            }\n\n            if(mapTabChangeBlocked === false){\n                let tabLinkElement = $(this);\n                let mapId = tabLinkElement.data('map-id');\n\n                // ignore \"add\" tab. no need for map change\n                if(mapId > 0){\n                    let mapElement = $('#' + config.mapTabElementId).getActiveMap();\n\n                    if(mapId !== mapElement.data('id')){\n                        // block tabs until switch is done\n                        mapTabChangeBlocked = true;\n\n                        // freeze active map -> no user data update while map switch\n                        mapElement.data('frozen', true);\n\n                        // hide current map with animation\n                        mapElement.visualizeMap('hide', function(){\n                            // un-block map tabs\n                            mapTabChangeBlocked = switchTabCallback(mapElement, tabLinkElement);\n                        });\n                    }\n                }else{\n                    tabLinkElement.tab('show');\n                }\n            }\n        });\n\n        return {\n            listElement: newListElement,\n            contentElement: contentElement\n        };\n    };\n\n    /**\n     * deletes a map tab for a given map id\n     * @param mapId\n     */\n    $.fn.deleteTab = function(mapId){\n        let tabElement = $(this);\n        let linkElement = tabElement.find('a[href=\"#' + config.mapTabIdPrefix + mapId + '\"]');\n        let deletedTabName = '';\n\n        if(linkElement.length > 0){\n            deletedTabName = linkElement.find('.' + config.mapTabLinkTextClass).text();\n\n            let liElement = linkElement.parent();\n            let contentElement = tabElement.find('div[id=\"' + config.mapTabIdPrefix + mapId + '\"]');\n\n            let findNewActiveTab = false;\n            // check if liElement was active\n            if(liElement.hasClass('active')){\n                // search any remaining li element and set active\n                findNewActiveTab = true;\n            }\n\n            liElement.remove();\n            contentElement.remove();\n\n            // remove map instance from local cache\n            Map.clearMapInstance(mapId);\n\n            if(findNewActiveTab === true){\n                tabElement.find('.' + config.mapTabClass + ':not(.pull-right):first a').tab('show');\n            }\n        }\n\n        return deletedTabName;\n    };\n\n    /**\n     * clear all active maps\n     */\n    $.fn.clearMapModule = function(){\n        let mapModuleElement = $(this);\n        let tabMapElement = $('#' + config.mapTabElementId);\n\n        if(tabMapElement.length > 0){\n            let tabElements = mapModuleElement.getMapTabElements();\n\n            for(let i = 0; i < tabElements.length; i++){\n                let tabElement = $(tabElements[i]);\n                let mapId = tabElement.data('map-id');\n\n                if(mapId > 0){\n                    tabMapElement.deleteTab(mapId);\n                }\n            }\n        }\n    };\n\n    /**\n     * load/update map module into element (all maps)\n     * @returns {boolean}\n     */\n    $.fn.updateMapModule = function(){\n        let mapModuleElement = $(this);\n\n        // store current map data global (cache)\n        // temp store current map data to prevent data-change while function execution!\n        let tempMapData = Util.getCurrentMapData();\n\n        if(tempMapData.length === 0){\n            // clear all existing maps\n            mapModuleElement.clearMapModule();\n\n            // no map data available -> show \"new map\" dialog\n            $(document).trigger('pf:menuShowMapSettings', {tab: 'new'});\n\n            return true;\n        }\n\n        // performance logging (time measurement)\n        let logKeyClientMapData = Init.performanceLogging.keyClientMapData;\n        Util.timeStart(logKeyClientMapData);\n\n        // check if tabs module is already loaded\n        let tabMapElement = $('#' + config.mapTabElementId);\n\n        // check if tabs have changed\n        let tabsChanged = false;\n\n        if(tabMapElement.length > 0){\n            // tab element already exists\n            let tabElements = mapModuleElement.getMapTabElements();\n\n            // map ID that is currently active\n            let activeMapId = 0;\n\n            // mapIds that are currently active\n            let activeMapIds = [];\n\n            // check whether a tab/map is still active\n            for(let i = 0; i < tabElements.length; i++){\n                let tabElement = $(tabElements[i]);\n                let mapId = tabElement.data('map-id');\n\n                if(mapId > 0){\n                    let tabMapData = Util.getCurrentMapData(mapId);\n\n                    if(tabMapData !== false){\n                        // map data available ->\n                        activeMapIds.push(mapId);\n\n                        // check for map data change and update tab\n                        if(tabMapData.config.updated > tabElement.data('updated')){\n                            tabElement.updateTabData(tabMapData.config);\n                        }\n                    }else{\n                        // map data not available -> remove tab\n                        let deletedTabName = tabMapElement.deleteTab(mapId);\n\n                        tabsChanged = true;\n\n                        if(deletedTabName.length > 0){\n                            Util.showNotify({title: 'Map removed', text: deletedTabName + ' deleted', type: 'warning'});\n                        }\n                    }\n                }\n            }\n\n            // add new tabs for new maps\n            $.each(tempMapData, function(i, data){\n                if( activeMapIds.indexOf( data.config.id ) === -1 ){\n                    // add new map tab\n\n                    let newTabElements = tabMapElement.addTab(data.config);\n\n                    // check if there is any active map yet (this is not the case\n                    // when ALL maps are removed AND new maps are added in one call\n                    // e.g. character switch)\n                    if(tabMapElement.find('.' + config.mapTabClass + '.active:not(.pull-right)').length === 0){\n                        tabMapElement.find('.' + config.mapTabClass + ':not(.pull-right):first a').tab('show');\n\n                        activeMapId = data.config.id;\n                    }\n\n                    // set observer for manually triggered map events\n                    newTabElements.contentElement.setTabContentObserver();\n\n                    // load all the structure elements for the new tab\n                    newTabElements.contentElement.initContentStructure();\n\n                    tabsChanged = true;\n\n                    Util.showNotify({title: 'Map added', text: data.config.name + ' added', type: 'success'});\n                }\n            });\n\n            // get current active map\n            if(activeMapId === 0){\n                activeMapId = Util.getMapModule().getActiveMap().data('id');\n            }\n            let activeMapData = Util.getCurrentMapData(activeMapId);\n\n            if(activeMapData !== false){\n                // update active map with new mapData\n                let currentTabContentElement = $('#' + config.mapTabIdPrefix + activeMapId);\n\n                $( currentTabContentElement).loadMap( activeMapData, {} );\n            }\n        }else{\n            // create Tab Element\n            tabsChanged = true;\n\n            let options = {\n                barId: config.mapTabBarId\n            };\n\n            tabMapElement = getTabElement(options);\n\n            // add new tab for each map\n            for(let j = 0; j < tempMapData.length; j++){\n                let data = tempMapData[j];\n                tabMapElement.addTab(data.config);\n            }\n\n            // add \"add\" button\n            let tabAddOptions = {\n                id: 0,\n                type: {\n                    classTab: MapUtil.getInfoForMap( 'standard', 'classTab')\n                },\n                icon: 'fa-plus',\n                name: 'add',\n                right: true\n            };\n\n            tabMapElement.addTab(tabAddOptions);\n\n            mapModuleElement.prepend(tabMapElement);\n\n            let currentUserData = Util.getCurrentUserData();\n            let promiseStore = MapUtil.getLocaleData('character', currentUserData.character.id);\n\n            promiseStore.then(function(data) {\n                // array key where map data is available (0 == first map found)\n                let mapDataIndex = 0;\n                // tab dom selector\n                let mapKeyTabSelector = 'first';\n\n                if(\n                    data &&\n                    data.defaultMapId\n                ){\n                    mapDataIndex = Util.getCurrentMapDataIndex(data.defaultMapId);\n                    mapKeyTabSelector = 'nth-child(' + ( mapDataIndex + 1 ) + ')';\n                }\n\n                // ==============================================================\n\n                // this new created module\n                let tabContentElements = tabMapElement.find('.' + config.mapTabContentClass);\n\n                // set observer for manually triggered map events\n                tabContentElements.setTabContentObserver();\n\n                // load all the structure elements for ALL Tab Content Body\n                tabContentElements.initContentStructure();\n\n                // set first Tab active\n                tabMapElement.find('.' + config.mapTabClass + ':' + mapKeyTabSelector + ' a').tab('show');\n            });\n\n        }\n\n        if(tabsChanged === true){\n\n            // remove previous event handlers\n            let allTabElements = mapModuleElement.getMapTabElements();\n            allTabElements.off('show.bs.tab');\n            allTabElements.off('shown.bs.tab');\n            allTabElements.off('hide.bs.tab');\n\n\n            // check for \"new map\" action before tap-change\n            allTabElements.on('show.bs.tab', function (e) {\n                let mapId = $(e.target).data('map-id');\n\n                if(mapId > 0){\n                    // save mapId as new \"default\" (local storage)\n                    let userData = MapUtil.storeDefaultMapId(mapId);\n                }else{\n                    // add new Tab selected\n                    $(document).trigger('pf:menuShowMapSettings', {tab: 'new'});\n                    e.preventDefault();\n                }\n            });\n\n            // load new map right after tab-change\n            allTabElements.on('shown.bs.tab', function (e) {\n                let mapId = $(e.target).data('map-id');\n                let tabMapData = Util.getCurrentMapData(mapId);\n\n                if(tabMapData !== false){\n                    // load map\n                    let currentTabContentElement = $('#' + config.mapTabIdPrefix + mapId);\n\n                    $( currentTabContentElement).loadMap( tabMapData, {showAnimation: true} );\n\n                    // \"wake up\" scrollbar for map and get previous state back\n                    let scrollableElement = currentTabContentElement.find('.' + config.mapWrapperClass);\n                    $(scrollableElement).mCustomScrollbar( 'update');\n                }else{\n                    // no map data found -> remove tab\n                    tabMapElement.deleteTab(mapId);\n                }\n            });\n\n            allTabElements.on('hide.bs.tab', function (e) {\n                let newMapId = $(e.relatedTarget).data('map-id');\n                let oldMapId = $(e.target).data('map-id');\n\n                // skip \"add button\"\n                if(newMapId > 0){\n                    let currentTabContentElement = $('#' + config.mapTabIdPrefix + oldMapId);\n\n                    // disable scrollbar for map that will be hidden. \"freeze\" current state\n                    let scrollableElement = currentTabContentElement.find('.' + config.mapWrapperClass);\n                    $(scrollableElement).mCustomScrollbar( 'disable' );\n                }\n            });\n        }\n\n        // log client map update time\n        let duration = Util.timeStop(logKeyClientMapData);\n        Util.log(logKeyClientMapData, {duration: duration, type: 'client', description: 'update map'});\n\n        return true;\n    };\n\n    /**\n     * collect all data (systems/connections) for export/save from each active map in the map module\n     * if no change detected -> do not attach map data to return array\n     * @returns {Array}\n     */\n    $.fn.getMapModuleDataForUpdate = function(){\n        // get all active map elements for module\n        let mapElements = $(this).getMaps();\n\n        let data = [];\n        for(let i = 0; i < mapElements.length; i++){\n            // get all changed (system / connection) data from this map\n            let mapData = $(mapElements[i]).getMapDataFromClient({forceData: false, checkForChange: true});\n\n            if(mapData !== false){\n\n                if(\n                    mapData.data.systems.length > 0 ||\n                    mapData.data.connections.length > 0\n                ){\n                    data.push(mapData);\n                }\n            }\n        }\n\n        return data;\n    };\n\n});\n",
    "/**\n * page structure\n */\n\ndefine('app/page',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/logging',\n    'mustache',\n    'app/map/util',\n    'text!img/logo.svg!strip',\n    'text!templates/modules/header.html',\n    'text!templates/modules/footer.html',\n    'dialog/notification',\n    'dialog/stats',\n    'dialog/map_info',\n    'dialog/account_settings',\n    'dialog/manual',\n    'dialog/shortcuts',\n    'dialog/map_settings',\n    'dialog/system_effects',\n    'dialog/jump_info',\n    'dialog/delete_account',\n    'dialog/credit',\n    'xEditable',\n    'slidebars',\n    'app/module_map'\n], function($, Init, Util, Logging, Mustache, MapUtil, TplLogo, TplHead, TplFooter) {\n\n    'use strict';\n\n    let config = {\n        // page structure slidebars-menu classes\n        pageId: 'sb-site',\n        pageSlidebarClass: 'sb-slidebar',\n        pageSlidebarLeftClass: 'sb-left',                                       // class for left menu\n        pageSlidebarRightClass: 'sb-right',                                     // class for right menu\n        pageSlideLeftWidth: '150px',                                            // slide distance left menu\n        pageSlideRightWidth: '150px',                                           // slide distance right menu\n        fullScreenClass: 'pf-fullscreen',                                       // class for the \"full screen\" element\n\n        // page structure\n        pageClass: 'pf-site',\n\n        // header\n        pageHeaderId: 'pf-head',                                                // id for page head\n        headClass: 'pf-head',                                                   // class for page head\n        headMenuClass: 'pf-head-menu',                                          // class for page head menu button (left)\n        headMapClass: 'pf-head-map',                                            // class for page head map button (right)\n        headUserCharacterClass: 'pf-head-user-character',                       // class for \"user settings\" link\n        userCharacterImageClass: 'pf-head-user-character-image',                // class for \"current user image\"\n\n        headUserShipClass: 'pf-head-user-ship',                                 // class for \"user settings\" link\n        userShipImageClass: 'pf-head-user-ship-image',                          // class for \"current user ship image\"\n        headActiveUserClass: 'pf-head-active-user',                             // class for \"active user\" link\n        headProgramStatusClass: 'pf-head-program-status',                       // class for \"program status\" notification\n\n        // footer\n        pageFooterId: 'pf-footer',                                              // id for page footer\n        footerLicenceLinkClass: 'pf-footer-licence',                            // class for \"licence\" link\n        globalInfoPanelId: 'pf-global-info',                                    // id for \"global info panel\"\n\n        // menu\n        menuHeadMenuLogoClass: 'pf-head-menu-logo',                             // class for main menu logo\n\n        // helper element\n        dynamicElementWrapperId: 'pf-dialog-wrapper',\n\n        // system signature module\n        systemSigModuleClass: 'pf-sig-table-module',                            // module wrapper (signatures)\n    };\n\n    let programStatusCounter = 0;                                               // current count down in s until next status change is possible\n    let programStatusInterval = false;                                          // interval timer until next status change is possible\n\n\n    /**\n     * load main page structure elements and navigation container into body\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.fn.loadPageStructure = function(){\n        return this.each((i, body) => {\n            body = $(body);\n\n            // menu left\n            body.prepend(\n                $('<div>', {\n                    class: [config.pageSlidebarClass, config.pageSlidebarLeftClass, 'sb-style-push', 'sb-width-custom'].join(' ')\n                }).attr('data-sb-width', config.pageSlideLeftWidth)\n            );\n\n            // menu right\n            body.prepend(\n                $('<div>', {\n                    class: [config.pageSlidebarClass, config.pageSlidebarRightClass, 'sb-style-push', 'sb-width-custom'].join(' ')\n                }).attr('data-sb-width', config.pageSlideRightWidth)\n            );\n\n            // main page\n            body.prepend(\n                $('<div>', {\n                    id: config.pageId,\n                    class: config.pageClass\n                }).append(\n                    Util.getMapModule()\n                ).append(\n                    $('<div>', {\n                        id: config.dynamicElementWrapperId\n                    })\n                )\n            );\n\n            // load footer\n            $('.' + config.pageClass).loadHeader().loadFooter();\n\n            // load left menu\n            $('.' + config.pageSlidebarLeftClass).loadLeftMenu();\n\n            // load right menu\n            $('.' + config.pageSlidebarRightClass).loadRightMenu();\n\n            // set document observer for global events\n            setDocumentObserver();\n        });\n    };\n\n    /**\n     * set global shortcuts to <body> element\n     */\n    $.fn.setGlobalShortcuts = function(){\n        return this.each((i, body) => {\n            body = $(body);\n\n            body.watchKey('tabReload', (body) => {\n                location.reload();\n            });\n\n            body.watchKey('signaturePaste', (e) => {\n                // just send event to the current active map\n                let activeMap = Util.getMapModule().getActiveMap();\n                if(activeMap){\n                    // look for active signature module (active system)\n                    let signatureModuleElement = MapUtil.getTabContentElementByMapElement(activeMap).find('.' + config.systemSigModuleClass);\n                    if(signatureModuleElement.length){\n                        e = e.originalEvent;\n                        let targetElement = $(e.target);\n                        // do not read clipboard if pasting into form elements\n                        if(\n                            targetElement.prop('tagName').toLowerCase() !== 'input' &&\n                            targetElement.prop('tagName').toLowerCase() !== 'textarea' || (\n                                targetElement.is('input[type=\"search\"]')                   // Datatables \"search\" field bubbles `paste.DT` event :(\n                            )\n                        ){\n                            let clipboard = (e.originalEvent || e).clipboardData.getData('text/plain');\n                            signatureModuleElement.trigger('pf:updateSystemSignatureModuleByClipboard', [clipboard]);\n                        }\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * get main menu title element\n     * @param title\n     * @returns {JQuery|*|jQuery}\n     */\n    let getMenuHeadline = function(title){\n        return $('<div>', {\n            class: 'panel-heading'\n        }).prepend(\n            $('<h2>',{\n                class: 'panel-title',\n                text: title\n            })\n        );\n    };\n\n    /**\n     * load left menu content options\n     */\n    $.fn.loadLeftMenu = function(){\n\n        $(this).append(\n            $('<div>', {\n                class: 'list-group'\n            }).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    href: '/'\n                }).html('&nbsp;&nbsp;Home').prepend(\n                    $('<i>',{\n                        class: 'fa fa-home fa-fw'\n                    })\n                )\n            ).append(\n                getMenuHeadline('Information')\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-info',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Statistics').prepend(\n                    $('<i>',{\n                        class: 'fa fa-line-chart fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('ShowStatsDialog');\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-info',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Effect info').prepend(\n                    $('<i>',{\n                        class: 'fa fa-crosshairs fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('ShowSystemEffectInfo');\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-info',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Jump info').prepend(\n                    $('<i>',{\n                        class: 'fa fa-space-shuttle fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('ShowJumpInfo');\n                })\n            ).append(\n                getMenuHeadline('Settings')\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Account').prepend(\n                    $('<i>',{\n                        class: 'fa fa-user fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('ShowSettingsDialog');\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item hide',                      // trigger by js\n                    id: Util.config.menuButtonFullScreenId,\n                    href: '#'\n                }).html('&nbsp;&nbsp;Full screen').prepend(\n                    $('<i>',{\n                        class: 'glyphicon glyphicon-fullscreen',\n                        css: {width: '1.23em'}\n                    })\n                ).on('click', function(){\n                    let fullScreenElement = $('body');\n                    requirejs(['jquery', 'fullScreen'], function($) {\n\n                        if($.fullscreen.isFullScreen()){\n                            $.fullscreen.exit();\n                        }else{\n                            fullScreenElement.fullscreen({overflow: 'scroll', toggleClass: config.fullScreenClass});\n                        }\n                    });\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Notification test').prepend(\n                    $('<i>',{\n                        class: 'fa fa-volume-up fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('NotificationTest');\n                })\n            ).append(\n                getMenuHeadline('Danger zone')\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-danger',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Delete account').prepend(\n                    $('<i>',{\n                        class: 'fa fa-user-times fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('DeleteAccount');\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-warning',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Logout').prepend(\n                    $('<i>',{\n                        class: 'fa fa-sign-in fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('Logout', {clearCookies: 1});\n                })\n            )\n        );\n\n        requirejs(['fullScreen'], function() {\n            if($.fullscreen.isNativelySupported() === true){\n                $('#' + Util.config.menuButtonFullScreenId).removeClass('hide');\n            }\n        });\n    };\n\n    /**\n     * load right content options\n     */\n    $.fn.loadRightMenu = function(){\n        $(this).append(\n            $('<div>', {\n                class: 'list-group'\n            }).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Information').prepend(\n                    $('<i>',{\n                        class: 'fa fa-street-view fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('ShowMapInfo', {tab: 'information'});\n                })\n            ).append(\n                getMenuHeadline('Settings')\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Configuration').prepend(\n                    $('<i>',{\n                        class: 'fa fa-gears fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('ShowMapSettings', {tab: 'settings'});\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    id: Util.config.menuButtonGridId,\n                    href: '#'\n                }).html('&nbsp;&nbsp;&nbsp;Grid snapping').prepend(\n                    $('<i>',{\n                        class: 'glyphicon glyphicon-th'\n                    })\n                ).on('click', function(){\n                    Util.getMapModule().getActiveMap().triggerMenuEvent('MapOption', {\n                        option: 'mapSnapToGrid',\n                        toggle: true\n                    });\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    id: Util.config.menuButtonMagnetizerId,\n                    href: '#'\n                }).html('&nbsp;&nbsp;&nbsp;Magnetizing').prepend(\n                    $('<i>',{\n                        class: 'fa fa-magnet fa-fw'\n                    })\n                ).on('click', function(){\n                    Util.getMapModule().getActiveMap().triggerMenuEvent('MapOption', {\n                        option: 'mapMagnetizer',\n                        toggle: true\n                    });\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item',\n                    id: Util.config.menuButtonEndpointId,\n                    href: '#'\n                }).html('&nbsp;&nbsp;&nbsp;Signatures').prepend(\n                    $('<i>',{\n                        class: 'fa fa-link fa-fw'\n                    })\n                ).on('click', function(){\n                    Util.getMapModule().getActiveMap().triggerMenuEvent('MapOption', {\n                        option: 'mapEndpoint',\n                        toggle: true\n                    });\n                })\n            ).append(\n                getMenuHeadline('Help')\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-info',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Manual').prepend(\n                    $('<i>',{\n                        class: 'fa fa-book fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('Manual');\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-info',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Shortcuts').prepend(\n                    $('<i>',{\n                        class: 'fa fa-keyboard-o fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('Shortcuts');\n                })\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-info',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Task-Manager').prepend(\n                    $('<i>',{\n                        class: 'fa fa-tasks fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('ShowTaskManager');\n                })\n            ).append(\n                getMenuHeadline('Danger zone')\n            ).append(\n                $('<a>', {\n                    class: 'list-group-item list-group-item-danger',\n                    href: '#'\n                }).html('&nbsp;&nbsp;Delete map').prepend(\n                    $('<i>',{\n                        class: 'fa fa-trash fa-fw'\n                    })\n                ).on('click', function(){\n                    $(document).triggerMenuEvent('DeleteMap');\n                })\n            )\n        );\n    };\n\n    /**\n     * trigger menu event\n     * @param event\n     * @param data\n     */\n    $.fn.triggerMenuEvent = function(event, data){\n        if(data === undefined){\n            data = {};\n        }\n\n        $(this).trigger('pf:menu' + event, [data]);\n    };\n\n    /**\n     * load page header\n     */\n    $.fn.loadHeader = function(){\n        let pageElement = $(this);\n\n        let moduleData = {\n            id: config.pageHeaderId,\n            logo: function(){\n                // render svg logo\n                return Mustache.render(TplLogo, {});\n            },\n            brandLogo: config.menuHeadMenuLogoClass,\n            popoverTriggerClass: Util.config.popoverTriggerClass,\n            userCharacterClass: config.headUserCharacterClass,\n            userCharacterImageClass: config.userCharacterImageClass,\n            userShipClass: config.headUserShipClass,\n            userShipImageClass: config.userShipImageClass,\n            mapTrackingId: Util.config.headMapTrackingId\n        };\n\n        let headRendered = Mustache.render(TplHead, moduleData);\n\n        pageElement.prepend(headRendered);\n\n        // init header =====================================================================\n\n        // init slide menus\n        let slideMenu = new $.slidebars({\n            scrollLock: false\n        });\n\n        // main menus\n        $('.' + config.headMenuClass).on('click', function() {\n            slideMenu.slidebars.toggle('left');\n        });\n\n        $('.' + config.headMapClass).on('click', function() {\n            slideMenu.slidebars.toggle('right');\n        });\n\n        // active pilots\n        $('.' + config.headActiveUserClass).find('a').on('click', function(){\n            $(document).triggerMenuEvent('ShowMapInfo', {tab: 'activity'});\n        });\n\n        // current location\n        $('#' + Util.config.headCurrentLocationId).find('a').on('click', function(){\n            Util.getMapModule().getActiveMap().triggerMenuEvent('SelectSystem', {systemId: $(this).data('systemId') });\n        });\n\n        // program status\n        $('.' + config.headProgramStatusClass).on('click', function(){\n            $(document).triggerMenuEvent('ShowTaskManager');\n        });\n\n        // close menu\n        $(document).on('pf:closeMenu', function(e){\n            // close all menus\n            slideMenu.slidebars.close();\n        });\n\n        // tracking toggle\n        let mapTrackingCheckbox = $('#' + Util.config.headMapTrackingId);\n        mapTrackingCheckbox.bootstrapToggle({\n            size: 'mini',\n            on: 'on',\n            off: 'off',\n            onstyle: 'success',\n            offstyle: 'default',\n            width: 38,\n            height: 19\n        });\n\n        // set default values for map tracking checkbox\n        // -> always \"enable\"\n        mapTrackingCheckbox.bootstrapToggle('on');\n\n        mapTrackingCheckbox.on('change', function(e) {\n            let value = $(this).is(':checked');\n            let tracking = 'off';\n            let trackingText = 'Your current location will not actually be added';\n            let trackingType = 'info';\n            if(value){\n                tracking = 'on';\n                trackingText = 'New connections will actually be added';\n                trackingType = 'success';\n            }\n\n            Util.showNotify({title: 'Map tracking: ' + tracking, text: trackingText, type: trackingType}, false);\n        });\n\n\n        // init all tooltips\n        let tooltipElements = $('#' + config.pageHeaderId).find('[title]');\n        tooltipElements.tooltip({\n            placement: 'bottom',\n            delay: {\n                show: 500,\n                hide: 0\n            }\n        });\n\n        return this;\n    };\n\n    /**\n     * load page footer\n     */\n    $.fn.loadFooter = function(){\n        let pageElement = $(this);\n\n        let moduleData = {\n            id: config.pageFooterId,\n            footerLicenceLinkClass: config.footerLicenceLinkClass,\n            currentYear: new Date().getFullYear()\n        };\n\n        let footerElement = Mustache.render(TplFooter, moduleData);\n\n        pageElement.prepend(footerElement);\n\n        // init footer ==================================================\n        pageElement.find('.' + config.footerLicenceLinkClass).on('click', function(){\n            //show credits info dialog\n            $.fn.showCreditsDialog();\n        });\n\n        return this;\n    };\n\n    /**\n     * catch all global document events\n     */\n    let setDocumentObserver = function(){\n\n        // on \"full-screen\" change event\n        $(document).on('fscreenchange', function(e, state, elem){\n\n            let menuButton = $('#' + Util.config.menuButtonFullScreenId);\n\n            if(state === true){\n                // full screen active\n\n                // close all menus\n                $(this).trigger('pf:closeMenu', [{}]);\n\n                menuButton.addClass('active');\n            }else{\n                menuButton.removeClass('active');\n            }\n        });\n\n        $(document).on('pf:menuShowStatsDialog', function(e){\n            // show user activity stats dialog\n            $.fn.showStatsDialog();\n            return false;\n        });\n\n        $(document).on('pf:menuShowSystemEffectInfo', function(e){\n            // show system effects dialog\n            $.fn.showSystemEffectInfoDialog();\n            return false;\n        });\n\n        $(document).on('pf:menuShowJumpInfo', function(e){\n            // show system effects info box\n            $.fn.showJumpInfoDialog();\n            return false;\n        });\n\n        $(document).on('pf:menuNotificationTest', function(e){\n            // show system effects info box\n            notificationTest();\n            return false;\n        });\n\n        $(document).on('pf:menuDeleteAccount', function(e){\n            // show \"delete account\" dialog\n            $.fn.showDeleteAccountDialog();\n            return false;\n        });\n\n        $(document).on('pf:menuManual', function(e){\n            // show map manual\n            $.fn.showMapManual();\n            return false;\n        });\n\n        $(document).on('pf:menuShowTaskManager', function(e, data){\n            // show log dialog\n            Logging.showDialog();\n            return false;\n        });\n\n        $(document).on('pf:menuShortcuts', function(e, data){\n            // show shortcuts dialog\n            $.fn.showShortcutsDialog();\n            return false;\n        });\n\n        $(document).on('pf:menuShowSettingsDialog', function(e){\n            // show character select dialog\n            $.fn.showSettingsDialog();\n            return false;\n        });\n\n        $(document).on('pf:menuShowMapInfo', function(e, data){\n            // show map information dialog\n            $.fn.showMapInfoDialog(data);\n            return false;\n        });\n\n        $(document).on('pf:menuShowMapSettings', function(e, data){\n            // show map edit dialog or edit map\n            let mapData = false;\n\n            let activeMap = Util.getMapModule().getActiveMap();\n\n            if(activeMap){\n                mapData = Util.getCurrentMapData( activeMap.data('id') );\n            }\n\n            $.fn.showMapSettingsDialog(mapData, data);\n            return false;\n        });\n\n        $(document).on('pf:menuDeleteMap', function(e){\n            // delete current active map\n            let mapData = false;\n\n            let activeMap = Util.getMapModule().getActiveMap();\n\n            if(activeMap){\n                mapData = activeMap.getMapDataFromClient({forceData: true});\n            }\n\n            $.fn.showDeleteMapDialog(mapData);\n            return false;\n        });\n\n        $(document).on('pf:menuLogout', function(e, data){\n\n            let clearCookies = false;\n            if(\n                typeof data === 'object' &&\n                data.hasOwnProperty('clearCookies')\n            ){\n                clearCookies = data.clearCookies;\n            }\n\n            // logout\n            Util.logout({\n                ajaxData: {\n                    clearCookies: clearCookies\n                }\n            });\n            return false;\n        });\n\n        // END menu events =============================================================================\n\n\n        // update header links with current map data\n        $(document).on('pf:updateHeaderMapData', function(e, data){\n            let activeMap = Util.getMapModule().getActiveMap();\n\n            let userCount = 0;\n            let currentLocationData = {};\n\n            // show active user just for the current active map\n            if(\n                activeMap &&\n                activeMap.data('id') === data.mapId\n            ){\n                userCount = data.userCount;\n                currentLocationData = data;\n            }\n            updateHeaderActiveUserCount(userCount);\n            updateHeaderCurrentLocation(currentLocationData);\n        });\n\n        // shutdown the program -> show dialog\n        $(document).on('pf:shutdown', function(e, data){\n            // show shutdown dialog\n            let options = {\n                buttons: {\n                    logout: {\n                        label: '<i class=\"fa fa-fw fa-refresh\"></i> restart',\n                        className: ['btn-primary'].join(' '),\n                        callback: function(){\n                            // check if error was 5xx -> reload page\n                            // -> else try to logout -> ajax request\n                            if(data.status >= 500 && data.status < 600){\n                                // redirect to login\n                                window.location = '../';\n                            }else{\n                                $(document).trigger('pf:menuLogout');\n                            }\n                        }\n                    }\n                },\n                content: {\n                    icon: 'fa-bolt',\n                    class: 'txt-color-danger',\n                    title: 'Application error',\n                    headline: 'Logged out',\n                    text: [\n                        data.reason\n                    ],\n                    textSmaller: []\n                }\n            };\n\n            // add error information (if available)\n            if(\n                data.error &&\n                data.error.length\n            ){\n                for(let i = 0; i < data.error.length; i++){\n                    options.content.textSmaller.push(data.error[i].message);\n                }\n            }\n\n            $.fn.showNotificationDialog(options);\n\n            $(document).setProgramStatus('offline');\n\n            Util.showNotify({title: 'Logged out', text: data.reason, type: 'error'}, false);\n\n            // remove map -------------------------------------------------------\n            Util.getMapModule().velocity('fadeOut', {\n                duration: 300,\n                complete: function(){\n                    $(this).remove();\n                }\n            });\n\n            return false;\n        });\n\n    };\n\n    /**\n     * updates the header with current user data\n     */\n    $.fn.updateHeaderUserData = function(){\n        let userData = Util.getCurrentUserData();\n\n        let userInfoElement = $('.' + config.headUserCharacterClass);\n        let currentCharacterId = userInfoElement.data('characterId');\n        let currentCharactersOptionIds = userInfoElement.data('characterOptionIds') ? userInfoElement.data('characterOptionIds') : [];\n        let newCharacterId = 0;\n        let newCharacterName = '';\n\n        let userShipElement = $('.' + config.headUserShipClass);\n        let currentShipId = userShipElement.data('shipId');\n        let newShipId = 0;\n        let newShipName = '';\n\n        // function for header element toggle animation\n        let animateHeaderElement = function(element, callback, triggerShow){\n\n            element.show().velocity('stop').velocity({\n                opacity: 0\n            },{\n                visibility : 'hidden',\n                duration: 500,\n                complete: function(){\n                    // callback\n                    callback();\n\n                    // show element\n                    if(triggerShow === true){\n                        element.velocity({\n                            opacity: 1\n                        }, {\n                            visibility : 'visible',\n                            duration: 500\n                        });\n                    }else{\n                        // hide element\n                        element.hide();\n                    }\n\n                }\n            });\n\n        };\n\n        // check for character/ship changes ---------------------------------------------\n        if(\n            userData &&\n            userData.character\n        ){\n            newCharacterId = userData.character.id;\n            newCharacterName = userData.character.name;\n\n            if(userData.character.log){\n                newShipId = userData.character.log.ship.typeId;\n                newShipName = userData.character.log.ship.typeName;\n            }\n\n            // en/disable \"map tracking\" toggle\n            updateMapTrackingToggle(userData.character.logLocation);\n        }\n\n        let newCharactersOptionIds = userData.characters.map(function(data){\n            return data.id;\n        });\n\n        // update user character data ---------------------------------------------------\n        if(currentCharactersOptionIds.toString() !== newCharactersOptionIds.toString()){\n\n            let  currentCharacterChanged = false;\n            if(currentCharacterId !== newCharacterId){\n                currentCharacterChanged = true;\n            }\n\n            // toggle element\n            animateHeaderElement(userInfoElement, function(){\n                if(currentCharacterChanged){\n                    userInfoElement.find('span').text( newCharacterName );\n                    userInfoElement.find('img').attr('src', Init.url.ccpImageServer + 'Character/' + newCharacterId + '_32.jpg' );\n                }\n                // init \"character switch\" popover\n                userInfoElement.initCharacterSwitchPopover(userData);\n            }, true);\n\n            // store new id(s) for next check\n            userInfoElement.data('characterId', newCharacterId);\n            userInfoElement.data('characterOptionIds', newCharactersOptionIds);\n        }\n\n        // update user ship data --------------------------------------------------------\n        if(currentShipId !== newShipId){\n\n            let showShipElement = true;\n            if(newShipId === 0){\n                showShipElement = false;\n            }\n\n            // toggle element\n            animateHeaderElement(userShipElement, function(){\n                userShipElement.find('span').text( newShipName );\n                userShipElement.find('img').attr('src', Init.url.ccpImageServer + 'Render/' + newShipId + '_32.png' );\n            }, showShipElement);\n\n            // set new id for next check\n            userShipElement.data('shipId', newShipId);\n        }\n    };\n\n    /**\n     * update \"map tracking\" toggle in header\n     * @param status\n     */\n    let updateMapTrackingToggle = function(status){\n        let mapTrackingCheckbox = $('#' + Util.config.headMapTrackingId);\n        if(status === true){\n            mapTrackingCheckbox.bootstrapToggle('enable');\n        }else{\n            mapTrackingCheckbox.bootstrapToggle('off').bootstrapToggle('disable');\n        }\n    };\n\n    /**\n     * delete active character log for the current user\n     */\n    let deleteLog = function(){\n\n        $.ajax({\n            type: 'POST',\n            url: Init.path.deleteLog,\n            data: {},\n            dataType: 'json'\n        }).done(function(data){\n\n        });\n    };\n\n    /**\n     * update the \"active user\" badge in header\n     * @param userCount\n     */\n    let updateHeaderActiveUserCount = function(userCount){\n        let activeUserElement = $('.' + config.headActiveUserClass);\n        let badge = activeUserElement.find('.badge');\n\n        if(badge.data('userCount') !== userCount){\n            badge.data('userCount', userCount);\n\n            badge.text(userCount);\n\n            badge.toggleClass('txt-color-greenLight', (userCount > 0) );\n            badge.toggleClass('txt-color-red', (userCount === 0) );\n\n            if(! activeUserElement.is(':visible')){\n                activeUserElement.velocity('fadeIn', {duration: Init.animationSpeed.headerLink});\n            }\n        }\n    };\n\n    /**\n     * update the \"current location\" element in head\n     * @param locationData\n     */\n    let updateHeaderCurrentLocation = function(locationData){\n        let currentLocationElement = $('#' + Util.config.headCurrentLocationId);\n        let linkElement = currentLocationElement.find('a');\n        let textElement = linkElement.find('span');\n\n        let tempSystemName = (locationData.currentSystemName) ? locationData.currentSystemName : false;\n        let tempSystemId = (locationData.currentSystemId) ? locationData.currentSystemId : 0;\n\n        if(\n            linkElement.data('systemName') !== tempSystemName ||\n            linkElement.data('systemId') !== tempSystemId\n        ){\n            linkElement.data('systemName', tempSystemName);\n            linkElement.data('systemId', tempSystemId);\n            linkElement.toggleClass('disabled', !tempSystemId);\n\n            if(tempSystemName !== false){\n                textElement.text(locationData.currentSystemName);\n                currentLocationElement.velocity('fadeIn', {duration: Init.animationSpeed.headerLink});\n            }else{\n                if(currentLocationElement.is(':visible')){\n                    currentLocationElement.velocity('fadeOut', {duration: Init.animationSpeed.headerLink});\n                }\n            }\n        }\n    };\n\n\n    /**\n     * shows a test notification for desktop messages\n     */\n    let notificationTest = function(){\n        Util.showNotify({\n                title: 'Test Notification',\n                text: 'Accept browser security question'},\n            {\n                desktop: true,\n                stack: 'barBottom'\n            }\n        );\n    };\n\n    /**\n     *  set event listener if the program tab is active or not\n     *  this is used to lower the update ping cycle to reduce server load\n     */\n    let initTabChangeObserver = function(){\n\n        // increase the timer if a user is inactive\n        let increaseTimer = 10000;\n\n        // timer keys\n        let mapUpdateKey = 'UPDATE_SERVER_MAP';\n        let mapUserUpdateKey = 'UPDATE_SERVER_USER_DATA';\n\n        // Set the name of the hidden property and the change event for visibility\n        let hidden, visibilityChange;\n        if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\n            hidden = 'hidden';\n            visibilityChange = 'visibilitychange';\n        } else if (typeof document.mozHidden !== 'undefined') {\n            hidden = 'mozHidden';\n            visibilityChange = 'mozvisibilitychange';\n        } else if (typeof document.msHidden !== 'undefined') {\n            hidden = 'msHidden';\n            visibilityChange = 'msvisibilitychange';\n        } else if (typeof document.webkitHidden !== 'undefined') {\n            hidden = 'webkitHidden';\n            visibilityChange = 'webkitvisibilitychange';\n        }\n\n        // function is called if the tab becomes active/inactive\n        function handleVisibilityChange() {\n            if (document[hidden]) {\n                // tab is invisible\n                // globally store current visibility status\n                window.isVisible = false;\n\n                Util.getCurrentTriggerDelay( mapUpdateKey, increaseTimer );\n                Util.getCurrentTriggerDelay( mapUserUpdateKey, increaseTimer );\n            } else {\n                // tab is visible\n                // globally store current visibility status\n                window.isVisible = true;\n\n                Util.getCurrentTriggerDelay( mapUpdateKey, -increaseTimer );\n                Util.getCurrentTriggerDelay( mapUserUpdateKey, -increaseTimer );\n\n                // stop blinking tab from previous notifications\n                Util.stopTabBlink();\n            }\n        }\n\n        if (\n            typeof document.addEventListener !== 'undefined' &&\n            typeof document[hidden] !== 'undefined'\n        ){\n            // the current browser supports this feature\n            // Handle page visibility change\n\n            // check once initial -> in case the tab is hidden on page load\n            handleVisibilityChange();\n\n            document.addEventListener(visibilityChange, handleVisibilityChange, false);\n        }\n\n    };\n\n    /**\n     * trigger \"program status\" in head\n     * @param status\n     */\n    $.fn.setProgramStatus = function(status){\n        let statusElement = $('.' + config.headProgramStatusClass);\n        let icon = statusElement.find('i');\n        let textElement = statusElement.find('span');\n\n        let iconClass = false;\n        let textClass = false;\n\n        switch(status){\n            case 'online':\n                iconClass = 'fa-wifi';\n                textClass = 'txt-color-green';\n                break;\n            case 'slow connection':\n            case 'problem':\n                iconClass = 'fa-warning';\n                textClass = 'txt-color-orange';\n                break;\n            case 'offline':\n                iconClass = 'fa-bolt';\n                textClass = 'txt-color-red';\n                break;\n        }\n\n        // \"warnings\" and \"errors\" always have priority -> ignore/clear interval\n        if(\n            textClass === 'txt-color-orange' ||\n            textClass === 'txt-color-red'\n        ){\n            clearInterval(programStatusInterval);\n            programStatusInterval = false;\n        }\n\n        if( statusElement.data('status') !== status ){\n            // status has changed\n            if(! programStatusInterval){\n\n                let timer = function(){\n                    // change status on first timer iteration\n                    if(programStatusCounter === Init.timer.PROGRAM_STATUS_VISIBLE){\n\n                        statusElement.velocity('stop').velocity('fadeOut', {\n                            duration: Init.animationSpeed.headerLink,\n                            complete: function(){\n                                // store current status\n                                statusElement.data('status', status);\n                                statusElement.removeClass('txt-color-green txt-color-orange txt-color-red');\n                                icon.removeClass('fa-wifi fa-warning fa-bolt');\n                                statusElement.addClass(textClass);\n                                icon.addClass(iconClass);\n                                textElement.text(status);\n                            }\n                        }).velocity('fadeIn', {\n                            duration: Init.animationSpeed.headerLink\n                        });\n                    }\n\n                    // decrement counter\n                    programStatusCounter -= 1000;\n\n                    if(programStatusCounter <= 0){\n                        clearInterval(programStatusInterval);\n                        programStatusInterval = false;\n                    }\n                };\n\n                if(! programStatusInterval){\n                    programStatusCounter = Init.timer.PROGRAM_STATUS_VISIBLE;\n                    programStatusInterval = setInterval(timer, 1000);\n                }\n            }\n        }\n    };\n\n    /**\n     * show information panel to active users (on bottom)\n     * @returns {*|jQuery|HTMLElement}\n     */\n    $.fn.showGlobalInfoPanel = function (){\n        let body = $(this);\n        let infoTemplate = 'text!templates/ui/info_panel.html';\n\n        requirejs([infoTemplate, 'mustache'], function(template, Mustache) {\n            let data = {\n                id: config.globalInfoPanelId\n            };\n            let content = $( Mustache.render(template, data) );\n            content.insertBefore( '#' + config.pageFooterId );\n        });\n\n        return body;\n    };\n\n    /**\n     * get all form Values as object\n     * this includes all xEditable fields\n     * @returns {{}}\n     */\n    $.fn.getFormValues = function(){\n        let form = $(this);\n        let formData = {};\n        let values = form.serializeArray();\n\n        // add \"unchecked\" checkboxes as well\n        values = values.concat(\n            form.find('input[type=checkbox]:not(:checked)').map(\n                function() {\n                    return {name: this.name, value: 0};\n                }).get()\n        );\n\n        for(let field of values){\n            // check for numeric values -> convert to Int\n            let value = ( /^\\d+$/.test(field.value) ) ? parseInt(field.value) : field.value;\n\n            if(field.name.indexOf('[]') !== -1){\n                // array field\n                let key = field.name.replace('[]', '');\n                if( !$.isArray(formData[key]) ){\n                    formData[key] = [];\n                }\n\n                formData[key].push( value);\n            }else{\n                formData[field.name] = value;\n            }\n        }\n\n        // get xEditable values\n        let editableValues = form.find('.' + Util.config.formEditableFieldClass).editable('getValue');\n\n        // merge values\n        formData = $.extend(formData, editableValues);\n\n        return formData;\n    };\n\n    return {\n        initTabChangeObserver: initTabChangeObserver\n    };\n\n\n});\n",
    "/**\n * SharedWorker config for map\n */\n\ndefine('app/map/worker',[\n    'app/util'\n], function(Util) {\n    'use strict';\n\n    let config = {\n\n    };\n\n    let sharedWorker    = null;\n    let MsgWorker       = null;\n    let characterId     = null;\n\n    /**\n     * get WebSocket URL for SharedWorker script\n     * @returns {string}\n     */\n    let getWebSocketURL = () => {\n        let domain = location.host;\n        let workerProtocol = (window.location.protocol === 'https:') ? 'wss:' : 'ws:';\n        return workerProtocol + '//' + domain + '/ws/map/update';\n    };\n\n    /**\n     * get SharedWorker Script path\n     * @returns {string}\n     */\n    let getWorkerScript = () => {\n        return '/public/js/' + Util.getVersion() + '/app/worker/map.js';\n    };\n\n    /**\n     * get path to message object\n     * @returns {string}\n     */\n    let getMessageWorkerObjectPath = () => {\n        return '/public/js/' + Util.getVersion() + '/app/worker/message.js';\n    };\n\n    /**\n     * init (connect) WebSocket within SharedWorker\n     */\n    let initSocket = () => {\n        let MsgWorkerInit = new MsgWorker('ws:init');\n        MsgWorkerInit.data({\n            uri: getWebSocketURL(),\n            characterId: characterId,\n        });\n\n        sharedWorker.port.postMessage(MsgWorkerInit);\n    };\n\n    /**\n     * init (start/connect) to \"SharedWorker\"\n     * -> set worker events\n     */\n    let init = (config) => {\n        // set characterId that is connected with this SharedWorker PORT\n        characterId = parseInt(config.characterId);\n\n        // get  message Class for App <=> SharedWorker MessageEvent communication\n        requirejs([getMessageWorkerObjectPath()], () => {\n            MsgWorker = window.MsgWorker;\n\n            // start/connect to \"SharedWorker\"\n            sharedWorker = new SharedWorker( getWorkerScript(), getMessageWorkerObjectPath() );\n\n            sharedWorker.port.addEventListener('message', (e) => {\n                let MsgWorkerMessage = e.data;\n                Object.setPrototypeOf(MsgWorkerMessage, MsgWorker.prototype);\n\n                switch(MsgWorkerMessage.command){\n                    case 'ws:open':\n                        config.callbacks.onOpen(MsgWorkerMessage);\n                        break;\n                    case 'ws:send':\n                        config.callbacks.onGet(MsgWorkerMessage);\n                        break;\n                    case 'ws:closed':\n                        config.callbacks.onClosed(MsgWorkerMessage);\n                        break;\n                    case 'ws:error':\n                        config.callbacks.onError(MsgWorkerMessage);\n                        break;\n\n                }\n            }, false);\n\n            sharedWorker.onerror = (e) => {\n                // could not connect to SharedWorker script -> send error back\n                let MsgWorkerError = new MsgWorker('sw:error');\n                MsgWorkerError.meta({\n                    reason: 'Could not connect to SharedWorker: ' + getWorkerScript()\n                });\n\n                config.callbacks.onError(MsgWorkerError);\n            };\n\n            sharedWorker.port.start();\n\n            // SharedWorker initialized\n            let MsgWorkerInit = new MsgWorker('sw:init');\n            config.callbacks.onInit(MsgWorkerInit);\n\n            // startWebSocket\n            initSocket();\n        });\n    };\n\n    let send = (task, data) => {\n        let MsgWorkerSend = new MsgWorker('ws:send');\n        MsgWorkerSend.task(task);\n        MsgWorkerSend.data(data);\n\n        sharedWorker.port.postMessage(MsgWorkerSend);\n    };\n\n    return {\n        getWebSocketURL: getWebSocketURL,\n        init: init,\n        send: send\n    };\n});\n",
    "/**\n * form elements\n */\n\ndefine('app/ui/form_element',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/map/util'\n], function($, Init, Util, MapUtil) {\n\n    'use strict';\n\n    /**\n     * init a select element as \"select2\" for map selection\n     */\n    $.fn.initMapSelect = function(){\n        let selectElement = $(this);\n\n        $.when(\n            selectElement.select2({\n                dropdownParent: selectElement.parents('.modal-body'),\n                theme: 'pathfinder',\n                maximumSelectionLength: 5\n            })\n        );\n    };\n\n    /**\n     * init a select element as an ajax based \"select2\" object for system search\n     * @param options\n     */\n    $.fn.initSystemSelect = function(options){\n        let selectElement = $(this);\n\n        let config = {\n            maxSelectionLength: 1\n        };\n        options = $.extend({}, config, options);\n\n        // format result data\n        function formatResultData (data) {\n\n            if (data.loading){\n                return data.text;\n            }\n\n            // show effect info just for wormholes\n            let hideEffectClass = '';\n            if(data.effect === ''){\n                hideEffectClass = 'hide';\n            }\n\n            let markup = '<div class=\"clearfix\">';\n            markup += '<div class=\"col-sm-5 pf-select-item-anchor\">' + data.text + '</div>';\n            markup += '<div class=\"col-sm-2 text-right ' + data.effectClass + '\">';\n            markup += '<i class=\"fa fa-fw fa-square ' + hideEffectClass + '\"></i>';\n            markup += '</div>';\n            markup += '<div class=\"col-sm-2 text-right ' + data.secClass + '\">' + data.security + '</div>';\n            markup += '<div class=\"col-sm-3 text-right ' + data.trueSecClass + '\">' + data.trueSec + '</div></div>';\n\n            return markup;\n        }\n\n        $.when(\n            selectElement.select2({\n                ajax: {\n                    url: function(params){\n                        // add params to URL\n                        return   Init.path.searchSystem + '/' + params.term.trim();\n                    },\n                    dataType: 'json',\n                    delay: 250,\n                    timeout: 5000,\n                    cache: true,\n                    data: function(params) {\n                        // no url params here\n                        return;\n                    },\n                    processResults: function(data) {\n                        // parse the results into the format expected by Select2.\n                        return {\n                            results: data.map( function(item){\n\n                                // \"systemId\" or \"name\"\n                                let id = item[options.key];\n                                let disabled = false;\n                                let trueSec = parseFloat(item.trueSec);\n                                let secClass = Util.getSecurityClassForSystem(item.security);\n                                let trueSecClass = Util.getTrueSecClassForSystem( trueSec );\n                                let effectClass = MapUtil.getEffectInfoForSystem(item.effect, 'class');\n\n                                // check if system is dialed\n                                if(\n                                    options.disabledOptions &&\n                                    options.disabledOptions.indexOf(parseInt(id, 10)) !== -1\n                                ){\n                                    disabled = true;\n                                }\n\n                                // \"fix\" security level\n                                if(\n                                    trueSec > 0 &&\n                                    trueSec < 0.1\n                                ){\n                                    trueSec = 0.1;\n                                }else{\n                                    trueSec = Math.round(trueSec * 10) / 10;\n                                }\n\n                                return {\n                                    id: id,\n                                    text: item.name,\n                                    systemId: parseInt(item.systemId),\n                                    security: item.security,\n                                    secClass: secClass,\n                                    trueSec: trueSec.toFixed(1),\n                                    trueSecClass: trueSecClass,\n                                    effect: item.effect,\n                                    effectClass: effectClass,\n                                    disabled: disabled\n                                };\n                            })\n                        };\n                    },\n                    error: function (jqXHR, status, error) {\n                        if( !Util.isXHRAborted(jqXHR) ){\n\n                            let reason = status + ' ' + jqXHR.status + ': ' + error;\n                            Util.showNotify({title: 'System select warning', text: reason + ' deleted', type: 'warning'});\n                        }\n\n                    }\n                },\n                dropdownParent: selectElement.parents('.modal-body'),\n                theme: 'pathfinder',\n                minimumInputLength: 2,\n                templateResult: formatResultData,\n                placeholder: 'System name',\n                allowClear: true,\n                maximumSelectionLength: options.maxSelectionLength,\n                escapeMarkup: function(markup){\n                    // let our custom formatter work\n                    return markup;\n                }\n            }).on('change', function(e){\n                // select changed\n            }).on('select2:open', function(){\n                // clear selected system (e.g. default system)\n                // => improves usability (not necessary). There is a small \"x\" whe it could be cleared manually\n                if(\n                    options.maxSelectionLength === 1 &&\n                    $(this).val() !== null\n                ){\n                    $(this).val('').trigger('change');\n                }\n            })\n        ).done(function(a,b){\n            // open select if not already pre-selected\n            if($(this).val() === null){\n                selectElement.select2('open');\n            }\n        });\n    };\n\n    /**\n     * init a select element as an ajax based \"select2\" object for Access resources\n     * character (private map), corporation (corp map), alliance (ally map)\n     * @param options\n     */\n    $.fn.initAccessSelect = function(options){\n\n        return this.each(function(){\n\n            let selectElement = $(this);\n\n            // format result data\n            function formatResultData (data) {\n\n                if (data.loading){\n                    return data.text;\n                }\n\n                // check if an option is already selected\n                // do not show the same result twice\n                let currentValues = selectElement.val();\n\n                if(\n                    currentValues &&\n                    currentValues.indexOf( data.id.toString() ) !== -1\n                ){\n                    return ;\n                }\n\n                let imagePath = '';\n                let previewContent = '';\n\n                switch(options.type){\n                    case 'character':\n                        imagePath = Init.url.ccpImageServer + 'Character/' + data.id + '_32.jpg';\n                        previewContent = '<img src=\"' + imagePath + '\" style=\"max-width: 100%\" />';\n                        break;\n                    case 'corporation':\n                        imagePath = Init.url.ccpImageServer + 'Corporation/' + data.id + '_32.png';\n                        previewContent = '<img src=\"' + imagePath + '\" style=\"max-width: 100%\" />';\n                        break;\n                    case 'alliance':\n                        imagePath = Init.url.ccpImageServer + 'Alliance/' + data.id + '_32.png';\n                        previewContent = '<img src=\"' + imagePath + '\" style=\"max-width: 100%\" />';\n                        break;\n                }\n\n                let markup = '<div class=\"clearfix\">';\n                markup += '<div class=\"col-sm-2\">' + previewContent + '</div>';\n                markup += '<div class=\"col-sm-10\">' + data.text + '</div></div>';\n\n                return markup;\n            }\n\n            // format selection data\n            function formatSelectionData (data){\n\n                if (data.loading){\n                    return data.text;\n                }\n\n                let markup = '<div class=\"clearfix\">';\n                markup += '<div class=\"col-sm-10\">' + data.text + '</div></div>';\n\n                return markup;\n            }\n\n            $.when(\n                selectElement.select2({\n                    ajax: {\n                        url: function(params){\n                            // add params to URL\n                            return Init.path.searchAccess + '/' + options.type + '/' + params.term;\n                        },\n                        dataType: 'json',\n                        delay: 250,\n                        timeout: 5000,\n                        cache: true,\n                        data: function(params) {\n                            // no url params here\n                            return;\n                        },\n                        processResults: function(data, page) {\n                            // parse the results into the format expected by Select2.\n                            return {\n                                results: data.map( function(item){\n                                    return {\n                                        id: item.id,\n                                        text: item.name\n                                    };\n                                })\n                            };\n                        },\n                        error: function (jqXHR, status, error) {\n                            if( !Util.isXHRAborted(jqXHR) ){\n\n                                let reason = status + ' ' + jqXHR.status + ': ' + error;\n                                Util.showNotify({title: 'Access select warning', text: reason + ' deleted', type: 'warning'});\n                            }\n\n                        }\n                    },\n                    dropdownParent: selectElement.parents('.modal-body'),\n                    theme: 'pathfinder',\n                    minimumInputLength: 3,\n                    placeholder: options.type + ' names',\n                    allowClear: false,\n                    maximumSelectionLength: options.maxSelectionLength,\n                    templateResult: formatResultData,\n                    templateSelection: formatSelectionData,\n                    escapeMarkup: function(markup){\n                        // let our custom formatter work\n                        return markup;\n                    }\n                }).on('change', function(e){\n                    // select changed\n\n                })\n            ).done(function(){\n                // after init finish\n            });\n        });\n\n    };\n\n});\n\n",
    "/**\n * Main map application\n */\n\ndefine('mappage',[\n    'jquery',\n    'app/init',\n    'app/util',\n    'app/render',\n    'app/logging',\n    'app/page',\n    'app/map/worker',\n    'app/key',\n    'app/ui/form_element',\n    'app/module_map'\n], ($, Init, Util, Render, Logging, Page, MapWorker) => {\n\n    'use strict';\n\n    /**\n     * main init \"map\" page\n     */\n    $(() => {\n        Util.initPrototypes();\n\n        // set default AJAX config\n        Util.ajaxSetup();\n\n        // set default dialog config\n        Util.initDefaultBootboxConfig();\n\n        // load page\n        // load info (maintenance) info panel (if scheduled)\n        $('body').loadPageStructure().setGlobalShortcuts();\n\n        // show app information in browser console\n        Util.showVersionInfo();\n\n        // init logging\n        Logging.init();\n\n        let mapModule = $('#' + Util.config.mapModuleId);\n\n        // map init load static data =======================================================\n        $.getJSON( Init.path.initMap, (initData) => {\n\n\n            if( initData.error.length > 0 ){\n                for(let i = 0; i < initData.error.length; i++){\n                    Util.showNotify({\n                        title: initData.error[i].title,\n                        text: initData.error[i].message,\n                        type: initData.error[i].type\n                    });\n                }\n            }\n\n            Init.timer              = initData.timer;\n            Init.mapTypes           = initData.mapTypes;\n            Init.mapScopes          = initData.mapScopes;\n            Init.connectionScopes   = initData.connectionScopes;\n            Init.systemStatus       = initData.systemStatus;\n            Init.systemType         = initData.systemType;\n            Init.characterStatus    = initData.characterStatus;\n            Init.routes             = initData.routes;\n            Init.notificationStatus = initData.notificationStatus;\n            Init.routeSearch        = initData.routeSearch;\n            Init.programMode        = initData.programMode;\n\n            // init tab change observer, Once the timers are available\n            Page.initTabChangeObserver();\n\n            // init map module\n            mapModule.initMapModule();\n\n            // load info (maintenance) info panel (if scheduled)\n            if(Init.programMode.maintenance){\n                $('body').showGlobalInfoPanel();\n            }\n\n        }).fail(( jqXHR, status, error) => {\n            let reason = status + ' ' + jqXHR.status + ': ' + error;\n\n            $(document).trigger('pf:shutdown', {status: jqXHR.status, reason: reason});\n        });\n\n        /**\n         * request all map access data (tokens) -> required wor WebSocket subscription\n         */\n        let getMapAccessData = () => {\n            $.getJSON( Init.path.getAccessData, ( response ) => {\n                if(response.status === 'OK'){\n                    // init SharedWorker for maps\n                    MapWorker.init({\n                        characterId:  response.data.id,\n                        callbacks: {\n                            onInit: (MsgWorkerMessage) => {\n                                Util.setSyncStatus(MsgWorkerMessage.command);\n                            },\n                            onOpen: (MsgWorkerMessage) => {\n                                Util.setSyncStatus(MsgWorkerMessage.command, MsgWorkerMessage.meta());\n\n                                MapWorker.send( 'subscribe', response.data);\n                            },\n                            onGet: (MsgWorkerMessage) => {\n                                switch(MsgWorkerMessage.task()){\n                                    case 'mapUpdate':\n                                        Util.updateCurrentMapData( MsgWorkerMessage.data() );\n                                        mapModule.updateMapModule();\n                                        break;\n                                    case 'mapAccess':\n                                    case 'mapDeleted':\n                                        Util.deleteCurrentMapData( MsgWorkerMessage.data() );\n                                        mapModule.updateMapModule();\n                                        break;\n                                }\n\n                                Util.setSyncStatus('ws:get');\n                            },\n                            onClosed: (MsgWorkerMessage) => {\n                                Util.setSyncStatus(MsgWorkerMessage.command, MsgWorkerMessage.meta());\n                            },\n                            onError: (MsgWorkerMessage) => {\n                                Util.setSyncStatus(MsgWorkerMessage.command, MsgWorkerMessage.meta());\n                            }\n                        }\n                    });\n                }\n            });\n        };\n\n        getMapAccessData();\n\n        /**\n         * main function for init all map relevant trigger calls\n         */\n        $.fn.initMapModule = function(){\n\n            let mapModule = $(this);\n\n            // log keys ------------------------------------------------------------------------\n            let logKeyServerMapData = Init.performanceLogging.keyServerMapData;\n            let logKeyServerUserData = Init.performanceLogging.keyServerUserData;\n\n            // main update intervals/trigger (heartbeat)\n            let updateTimeouts = {\n                mapUpdate: 0,\n                userUpdate: 0\n            };\n\n            let locationToggle = $('#' + Util.config.headMapTrackingId);\n\n            /**\n             * Ajax error response handler function for main-ping functions\n             * @param jqXHR\n             * @param status\n             * @param error\n             */\n            let handleAjaxErrorResponse = (jqXHR, status, error) => {\n                // clear both main update request trigger timer\n                clearUpdateTimeouts();\n\n                let reason = status + ' ' + jqXHR.status + ': ' + error;\n                let errorData = [];\n\n                if(jqXHR.responseJSON){\n                    // handle JSON\n                    let errorObj = $.parseJSON(jqXHR.responseText);\n\n                    if(\n                        errorObj.error &&\n                        errorObj.error.length > 0\n                    ){\n                        errorData = errorObj.error;\n                    }\n                }else{\n                    // handle HTML\n                    errorData.push({\n                        type: 'error',\n                        message: 'Please restart and reload this page'\n                    });\n                }\n\n                $(document).trigger('pf:shutdown', {status: jqXHR.status, reason: reason, error: errorData});\n\n            };\n\n            /**\n             * init (schedule) next MapUpdate Ping\n             */\n            let initMapUpdatePing = (forceUpdateMapData) => {\n                // get the current update delay (this can change if a user is inactive)\n                let delay = Util.getCurrentTriggerDelay( logKeyServerMapData, 0 );\n\n                updateTimeouts.mapUpdate = setTimeout((forceUpdateMapData) => {\n                    triggerMapUpdatePing(forceUpdateMapData);\n                }, delay, forceUpdateMapData);\n            };\n\n            // ping for main map update ========================================================\n            /**\n             * @param forceUpdateMapData // force request to be send\n             */\n            let triggerMapUpdatePing = (forceUpdateMapData) => {\n\n                // check each interval if map module  is still available\n                let check = $('#' + mapModule.attr('id')).length;\n\n                if(check === 0){\n                    // program crash stop any update\n                    return;\n                }\n\n                // get updated map data\n                let updatedMapData = {\n                    mapData: mapModule.getMapModuleDataForUpdate(),\n                    getUserData: ( Util.getCurrentUserData() ) ? 0 : 1\n                };\n\n                // check if mapUpdate trigger should be send\n                // -> if \"syncType\" === \"ajax\" -> send always\n                // -> if \"syncType\" === \"webSocket\" -> send initial AND on map changes\n                if(\n                    forceUpdateMapData ||\n                    Util.getSyncType() === 'ajax' ||\n                    (\n                        Util.getSyncType() === 'webSocket' &&\n                        updatedMapData.mapData.length\n                    )\n                ){\n                    // start log\n                    Util.timeStart(logKeyServerMapData);\n\n                    // store updatedMapData\n                    $.ajax({\n                        type: 'POST',\n                        url: Init.path.updateMapData,\n                        data: updatedMapData,\n                        dataType: 'json'\n                    }).done((data) => {\n                        // log request time\n                        let duration = Util.timeStop(logKeyServerMapData);\n                        Util.log(logKeyServerMapData, {duration: duration, type: 'server', description: 'request map data'});\n\n                        Util.setSyncStatus('ajax:get');\n\n                        if(\n                            data.error &&\n                            data.error.length > 0\n                        ){\n                            // any error in the main trigger functions result in a user log-off\n                            $(document).trigger('pf:menuLogout');\n                        }else{\n                            $(document).setProgramStatus('online');\n\n                            if(data.userData !== undefined) {\n                                // store current user data global (cache)\n                                Util.setCurrentUserData(data.userData);\n                            }\n\n                            // map data found\n                            Util.setCurrentMapData(data.mapData);\n\n                            // load/update main map module\n                            mapModule.updateMapModule();\n\n                            // get the current update delay (this can change if a user is inactive)\n                            let mapUpdateDelay = Util.getCurrentTriggerDelay( logKeyServerMapData, 0 );\n\n                            // init new trigger\n                            initMapUpdatePing(false);\n\n                            // initial start for the userUpdate trigger\n                            // this should only be called at the first time!\n                            if(updateTimeouts.userUpdate === 0){\n                                // start user update trigger after map loaded\n                                updateTimeouts.userUpdate = setTimeout(() => {\n                                    triggerUserUpdatePing();\n                                }, 1000);\n                            }\n                        }\n\n                    }).fail(handleAjaxErrorResponse);\n                }else{\n                    // skip this mapUpdate trigger and init next one\n                    initMapUpdatePing(false);\n                }\n\n            };\n\n            // ping for user data update =======================================================\n            let triggerUserUpdatePing = () => {\n\n                // IMPORTANT: Get user data for ONE map that is currently visible\n                // On later releases this can be easy changed to \"full update\" all maps for a user\n                //\n                let mapIds = [];\n                let activeMap = Util.getMapModule().getActiveMap();\n                if(activeMap){\n                    mapIds = [ activeMap.data('id') ];\n                }\n\n                let updatedUserData = {\n                    mapIds: mapIds,\n                    systemData: Util.getCurrentSystemData(),\n                    characterMapData: {\n                        mapTracking: (locationToggle.is(':checked') ? 1 : 0) // location tracking\n                    }\n                };\n\n                Util.timeStart(logKeyServerUserData);\n\n                $.ajax({\n                    type: 'POST',\n                    url: Init.path.updateUserData,\n                    data: updatedUserData,\n                    dataType: 'json'\n                }).done((data) => {\n\n                    // log request time\n                    let duration = Util.timeStop(logKeyServerUserData);\n                    Util.log(logKeyServerUserData, {duration: duration, type: 'server', description:'request user data'});\n\n                    if(data.error.length > 0){\n                        // any error in the main trigger functions result in a user log-off\n                        $(document).trigger('pf:menuLogout');\n                    }else{\n\n                        $(document).setProgramStatus('online');\n\n                        if(data.userData !== undefined){\n                            // store current user data global (cache)\n                            let userData = Util.setCurrentUserData(data.userData);\n\n                            // store current map user data (cache)\n                            if(data.mapUserData !== undefined){\n                                Util.setCurrentMapUserData(data.mapUserData);\n                            }\n\n                            // active character data found\n                            mapModule.updateMapModuleData();\n\n                            // update system info panels\n                            if(data.system){\n                                mapModule.updateSystemModuleData(data.system);\n                            }\n\n                            // get the current update delay (this can change if a user is inactive)\n                            let mapUserUpdateDelay = Util.getCurrentTriggerDelay( logKeyServerUserData, 0 );\n\n                            // init new trigger\n                            updateTimeouts.userUpdate = setTimeout(() => {\n                                triggerUserUpdatePing();\n                            }, mapUserUpdateDelay);\n\n                        }\n                    }\n\n                }).fail(handleAjaxErrorResponse);\n\n            };\n\n\n            /**\n             * clear both main update timeouts\n             * -> stop program from working -> shutdown\n             */\n            let clearUpdateTimeouts = () => {\n                for(let intervalKey in updateTimeouts) {\n\n                    if(updateTimeouts.hasOwnProperty(intervalKey)){\n                        clearTimeout( updateTimeouts[intervalKey] );\n                    }\n                }\n            };\n\n            // initial start of the  map update function\n            triggerMapUpdatePing(true);\n\n        };\n\n    });\n\n});\n"
  ]
}